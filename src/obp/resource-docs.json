{
  "resource_docs": [
    {
      "operation_id": "OBPv4.0.0-createAuthenticationTypeValidation",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "createAuthenticationTypeValidation"
      },
      "request_verb": "POST",
      "request_url": "/obp/v4.0.0/management/authentication-type-validations/OPERATION_ID",
      "summary": "Create an Authentication Type Validation",
      "description": "<p>Create an Authentication Type Validation.</p>\n<p>Please supply allowed authentication types.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#\">OPERATION_ID</a>: OBPv4.0.0-getBanks</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><strong>JSON response body fields:</strong></p>\n",
      "description_markdown": "Create an Authentication Type Validation.\n\nPlease supply allowed authentication types.\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[OPERATION_ID](/glossary#): OBPv4.0.0-getBanks\n\n\n\n\n\n**JSON request body fields:**\n\n\n\n\n\n**JSON response body fields:**\n\n\n",
      "example_request_body": [
        "DirectLogin",
        "OAuth1.0a",
        "GatewayLogin",
        "DAuth",
        "OAuth2_OIDC",
        "OAuth2_OIDC_FAPI"
      ],
      "success_response_body": {
        "operation_id": "OBPv4.0.0-updateXxx",
        "allowed_authentication_types": [
          "DirectLogin",
          "OAuth1.0a",
          "GatewayLogin",
          "DAuth",
          "OAuth2_OIDC",
          "OAuth2_OIDC_FAPI"
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Authentication-Type-Validation", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "tl": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {}
            }
          },
          "head": {
            "type": "string",
            "enum": [
              "DirectLogin",
              "OAuth1.0a",
              "GatewayLogin",
              "DAuth",
              "OAuth2_OIDC",
              "OAuth2_OIDC_FAPI",
              "Anonymous"
            ]
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "authTypes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {}
            }
          },
          "operationId": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateAuthenticationTypeValidation",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/authentication-type-validations/OPERATION_ID",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv4.0.0-getBalancingTransaction",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getBalancingTransaction"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/transactions/TRANSACTION_ID/balancing-transaction",
      "summary": "Get Balancing Transaction",
      "description": "<p>Get Balancing Transaction</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#transaction_ids\">TRANSACTION_ID</a>: 2fg8a7e4-6d02-40e3-a129-0b2bf89de8ub</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>account_id</strong></a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#\"><strong>credit_transaction</strong></a>: credit_transaction</p>\n<p><a href=\"/glossary#\"><strong>debit_transaction</strong></a>: debit_transaction</p>\n<p><a href=\"/glossary#\"><strong>transaction_id</strong></a>: 2fg8a7e4-6d02-40e3-a129-0b2bf89de8ub</p>\n<p><a href=\"/glossary#\"><strong>transaction_request</strong></a>: transaction_request</p>\n<p><a href=\"/glossary#\"><strong>transaction_request_id</strong></a>: 8138a7e4-6d02-40e3-a129-0b2bf89de9f1</p>\n",
      "description_markdown": "Get Balancing Transaction\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[TRANSACTION_ID](/glossary#transaction_ids): 2fg8a7e4-6d02-40e3-a129-0b2bf89de8ub\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**account_id**](/glossary#): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**credit_transaction**](/glossary#): credit_transaction\n\n\n\n[**debit_transaction**](/glossary#): debit_transaction\n\n\n\n[**transaction_id**](/glossary#): 2fg8a7e4-6d02-40e3-a129-0b2bf89de8ub\n\n\n\n[**transaction_request**](/glossary#): transaction_request\n\n\n\n[**transaction_request_id**](/glossary#): 8138a7e4-6d02-40e3-a129-0b2bf89de9f1\n\n\n",
      "success_response_body": {
        "transaction_request": {
          "bank_id": "gh.29.uk",
          "account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0",
          "transaction_request_id": "8138a7e4-6d02-40e3-a129-0b2bf89de9f1"
        },
        "debit_transaction": {
          "bank_id": "gh.29.uk",
          "account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0",
          "transaction_id": "2fg8a7e4-6d02-40e3-a129-0b2bf89de8ub"
        },
        "credit_transaction": {
          "bank_id": "gh.29.uk",
          "account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0",
          "transaction_id": "2fg8a7e4-6d02-40e3-a129-0b2bf89de8ub"
        }
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Transaction", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "debit_transaction": {
            "type": "object",
            "properties": {
              "bank_id": {
                "type": "string"
              },
              "transaction_id": {
                "type": "string"
              },
              "account_id": {
                "type": "string"
              }
            }
          },
          "credit_transaction": {
            "type": "object",
            "properties": {
              "bank_id": {
                "type": "string"
              },
              "transaction_id": {
                "type": "string"
              },
              "account_id": {
                "type": "string"
              }
            }
          },
          "transaction_request": {
            "type": "object",
            "properties": {
              "bank_id": {
                "type": "string"
              },
              "transaction_request_id": {
                "type": "string"
              },
              "account_id": {
                "type": "string"
              }
            }
          }
        }
      },
      "roles": [],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/transactions/TRANSACTION_ID/balancing-transaction",
      "connector_methods": ["obp.getBalancingTransaction"]
    },
    {
      "operation_id": "OBPv1.2.1-deleteCounterpartyMoreInfo",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "deleteCounterpartyMoreInfo"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/metadata/more_info",
      "summary": "Delete more info of other bank account",
      "description": "<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#other_account_id\">OTHER_ACCOUNT_ID</a>:</p>\n<p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p>\n<p><strong>JSON response body fields:</strong></p>\n",
      "description_markdown": "Authentication is Mandatory\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[OTHER_ACCOUNT_ID](/glossary#other_account_id): \n\n\n\n[VIEW_ID](/glossary#this_view_id): owner\n\n\n\n\n\n**JSON response body fields:**\n\n\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "jsonString": "{}"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "the view does not allow metadata access",
        "the view does not allow deleting more info",
        "More Info cannot be deleted",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Counterparty-Metadata", "Counterparty", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/metadata/more_info",
      "connector_methods": [
        "obp.checkBankAccountExists",
        "obp.getBank",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv2.1.0-getEntitlementsByBankAndUser",
      "implemented_by": {
        "version": "OBPv2.1.0",
        "function": "getEntitlementsByBankAndUser"
      },
      "request_verb": "GET",
      "request_url": "/obp/v2.1.0/banks/BANK_ID/users/USER_ID/entitlements",
      "summary": "Get Entitlements for User at Bank",
      "description": "<p>Get Entitlements specified by BANK_ID and USER_ID</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#User.user_id\">USER_ID</a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#entitlement_id\"><strong>entitlement_id</strong></a>:</p>\n<p><a href=\"/glossary#list\"><strong>list</strong></a>:</p>\n<p><a href=\"/glossary#role_name\"><strong>role_name</strong></a>:</p>\n",
      "description_markdown": "Get Entitlements specified by BANK_ID and USER_ID\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[USER_ID](/glossary#User.user_id): 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**entitlement_id**](/glossary#entitlement_id): \n\n\n\n[**list**](/glossary#list): \n\n\n\n[**role_name**](/glossary#role_name): \n\n\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "list": [
          {
            "entitlement_id": "6fb17583-1e49-4435-bb74-a14fe0996723",
            "role_name": "CanQueryOtherUser",
            "bank_id": "gh.29.uk"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Role", "Entitlement", "User", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "role_name": {
                  "type": "string"
                },
                "bank_id": {
                  "type": "string"
                },
                "entitlement_id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetEntitlementsForAnyUserAtOneBank",
          "requires_bank_id": true
        },
        {
          "role": "CanGetEntitlementsForAnyUserAtAnyBank",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/users/USER_ID/entitlements",
      "connector_methods": ["obp.getBank", "obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv3.1.0-answerConsentChallenge",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "answerConsentChallenge"
      },
      "request_verb": "POST",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/consents/CONSENT_ID/challenge",
      "summary": "Answer Consent Challenge",
      "description": "<p>An OBP Consent allows the holder of the Consent to call one or more endpoints.</p>\n<p>Consents must be created and authorisied using SCA (Strong Customer Authentication).</p>\n<p>That is, Consents can be created by an authorised User via the OBP REST API but they must be confirmed via an out of band (OOB) mechanism such as a code sent to a mobile phone.</p>\n<p>Each Consent has one of the following states: INITIATED, ACCEPTED, REJECTED, REVOKED, RECEIVED, VALID, REVOKEDBYPSU, EXPIRED, TERMINATEDBYTPP, AUTHORISED, AWAITINGAUTHORISATION.</p>\n<p>Each Consent is bound to a consumer i.e. you need to identify yourself over request header value Consumer-Key.<br />\nFor example:<br />\nGET /obp/v4.0.0/users/current HTTP/1.1<br />\nHost: 127.0.0.1:8080<br />\nConsent-JWT: eyJhbGciOiJIUzI1NiJ9.eyJlbnRpdGxlbWVudHMiOlt7InJvbGVfbmFtZSI6IkNhbkdldEFueVVzZXIiLCJiYW5rX2lkIjoiIn<br />\n1dLCJjcmVhdGVkQnlVc2VySWQiOiJhYjY1MzlhOS1iMTA1LTQ0ODktYTg4My0wYWQ4ZDZjNjE2NTciLCJzdWIiOiIzNDc1MDEzZi03YmY5LTQyNj<br />\nEtOWUxYy0xZTdlNWZjZTJlN2UiLCJhdWQiOiI4MTVhMGVmMS00YjZhLTQyMDUtYjExMi1lNDVmZDZmNGQzYWQiLCJuYmYiOjE1ODA3NDE2NjcsIml<br />\nzcyI6Imh0dHA6XC9cLzEyNy4wLjAuMTo4MDgwIiwiZXhwIjoxNTgwNzQ1MjY3LCJpYXQiOjE1ODA3NDE2NjcsImp0aSI6ImJkYzVjZTk5LTE2ZTY<br />\ntNDM4Yi1hNjllLTU3MTAzN2RhMTg3OCIsInZpZXdzIjpbXX0.L3fEEEhdCVr3qnmyRKBBUaIQ7dk1VjiFaEBW8hUNjfg</p>\n<p>Consumer-Key: ejznk505d132ryomnhbx1qmtohurbsbb0kijajsk<br />\ncache-control: no-cache</p>\n<p>Maximum time to live of the token is specified over props value consents.max_time_to_live. In case isn't defined default value is 3600 seconds.</p>\n<p>Example of POST JSON:<br />\n{<br />\n&quot;everything&quot;: false,<br />\n&quot;views&quot;: [<br />\n{<br />\n&quot;bank_id&quot;: &quot;GENODEM1GLS&quot;,<br />\n&quot;account_id&quot;: &quot;8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0&quot;,<br />\n&quot;view_id&quot;: &quot;owner&quot;<br />\n}<br />\n],<br />\n&quot;entitlements&quot;: [<br />\n{<br />\n&quot;bank_id&quot;: &quot;GENODEM1GLS&quot;,<br />\n&quot;role_name&quot;: &quot;CanGetCustomer&quot;<br />\n}<br />\n],<br />\n&quot;consumer_id&quot;: &quot;7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh&quot;,<br />\n&quot;email&quot;: &quot;<a href=\"&#109;&#x61;&#105;&#x6c;&#116;o&#x3a;&#x65;&#118;&#x65;&#108;ine&#64;&#x65;&#x78;&#97;mp&#108;&#x65;&#46;&#x63;&#111;&#x6d;\">&#101;&#x76;&#x65;&#x6c;&#x69;&#x6e;&#101;&#x40;&#x65;&#x78;&#x61;&#x6d;&#x70;&#108;&#x65;&#x2e;c&#x6f;&#109;</a>&quot;,<br />\n&quot;valid_from&quot;: &quot;2020-02-07T08:43:34Z&quot;,<br />\n&quot;time_to_live&quot;: 3600<br />\n}<br />\nPlease note that only optional fields are: consumer_id, valid_from and time_to_live.<br />\nIn case you omit they the default values are used:<br />\nconsumer_id = consumer of current user<br />\nvalid_from = current time<br />\ntime_to_live = consents.max_time_to_live</p>\n<p>This endpoint is used to confirm a Consent previously created.</p>\n<p>The User must supply a code that was sent out of band (OOB) for example via an SMS.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#consent_id\">CONSENT_ID</a>:</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#answer\"><strong>answer</strong></a>:</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#consent_id\"><strong>consent_id</strong></a>:</p>\n<p><a href=\"/glossary#jwt\"><strong>jwt</strong></a>:</p>\n<p><a href=\"/glossary#status\"><strong>status</strong></a>:</p>\n",
      "description_markdown": "An OBP Consent allows the holder of the Consent to call one or more endpoints.\n\nConsents must be created and authorisied using SCA (Strong Customer Authentication).\n\nThat is, Consents can be created by an authorised User via the OBP REST API but they must be confirmed via an out of band (OOB) mechanism such as a code sent to a mobile phone.\n\nEach Consent has one of the following states: INITIATED, ACCEPTED, REJECTED, REVOKED, RECEIVED, VALID, REVOKEDBYPSU, EXPIRED, TERMINATEDBYTPP, AUTHORISED, AWAITINGAUTHORISATION.\n\nEach Consent is bound to a consumer i.e. you need to identify yourself over request header value Consumer-Key. \nFor example:\nGET /obp/v4.0.0/users/current HTTP/1.1\nHost: 127.0.0.1:8080\nConsent-JWT: eyJhbGciOiJIUzI1NiJ9.eyJlbnRpdGxlbWVudHMiOlt7InJvbGVfbmFtZSI6IkNhbkdldEFueVVzZXIiLCJiYW5rX2lkIjoiIn\n1dLCJjcmVhdGVkQnlVc2VySWQiOiJhYjY1MzlhOS1iMTA1LTQ0ODktYTg4My0wYWQ4ZDZjNjE2NTciLCJzdWIiOiIzNDc1MDEzZi03YmY5LTQyNj\nEtOWUxYy0xZTdlNWZjZTJlN2UiLCJhdWQiOiI4MTVhMGVmMS00YjZhLTQyMDUtYjExMi1lNDVmZDZmNGQzYWQiLCJuYmYiOjE1ODA3NDE2NjcsIml\nzcyI6Imh0dHA6XC9cLzEyNy4wLjAuMTo4MDgwIiwiZXhwIjoxNTgwNzQ1MjY3LCJpYXQiOjE1ODA3NDE2NjcsImp0aSI6ImJkYzVjZTk5LTE2ZTY\ntNDM4Yi1hNjllLTU3MTAzN2RhMTg3OCIsInZpZXdzIjpbXX0.L3fEEEhdCVr3qnmyRKBBUaIQ7dk1VjiFaEBW8hUNjfg\n\nConsumer-Key: ejznk505d132ryomnhbx1qmtohurbsbb0kijajsk\ncache-control: no-cache\n\nMaximum time to live of the token is specified over props value consents.max_time_to_live. In case isn't defined default value is 3600 seconds.\n\nExample of POST JSON:\n{\n  \"everything\": false,\n  \"views\": [\n    {\n      \"bank_id\": \"GENODEM1GLS\",\n      \"account_id\": \"8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\",\n      \"view_id\": \"owner\"\n    }\n  ],\n  \"entitlements\": [\n    {\n      \"bank_id\": \"GENODEM1GLS\",\n      \"role_name\": \"CanGetCustomer\"\n    }\n  ],\n  \"consumer_id\": \"7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\",\n  \"email\": \"eveline@example.com\",\n  \"valid_from\": \"2020-02-07T08:43:34Z\",\n  \"time_to_live\": 3600\n}\nPlease note that only optional fields are: consumer_id, valid_from and time_to_live. \nIn case you omit they the default values are used:\nconsumer_id = consumer of current user\nvalid_from = current time\ntime_to_live = consents.max_time_to_live\n\n      \n\n\nThis endpoint is used to confirm a Consent previously created.\n\nThe User must supply a code that was sent out of band (OOB) for example via an SMS.\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[CONSENT_ID](/glossary#consent_id): \n\n\n\n\n\n**JSON request body fields:**\n\n\n\n[**answer**](/glossary#answer): \n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**consent_id**](/glossary#consent_id): \n\n\n\n[**jwt**](/glossary#jwt): \n\n\n\n[**status**](/glossary#status): \n\n\n",
      "example_request_body": {
        "answer": "12345678"
      },
      "success_response_body": {
        "consent_id": "9d429899-24f5-42c8-8565-943ffa6a7945",
        "jwt": "eyJhbGciOiJIUzI1NiJ9.eyJlbnRpdGxlbWVudHMiOltdLCJjcmVhdGVkQnlVc2VySWQiOiJhYjY1MzlhOS1iMTA1LTQ0ODktYTg4My0wYWQ4ZDZjNjE2NTciLCJzdWIiOiIyMWUxYzhjYy1mOTE4LTRlYWMtYjhlMy01ZTVlZWM2YjNiNGIiLCJhdWQiOiJlanpuazUwNWQxMzJyeW9tbmhieDFxbXRvaHVyYnNiYjBraWphanNrIiwibmJmIjoxNTUzNTU0ODk5LCJpc3MiOiJodHRwczpcL1wvd3d3Lm9wZW5iYW5rcHJvamVjdC5jb20iLCJleHAiOjE1NTM1NTg0OTksImlhdCI6MTU1MzU1NDg5OSwianRpIjoiMDlmODhkNWYtZWNlNi00Mzk4LThlOTktNjYxMWZhMWNkYmQ1Iiwidmlld3MiOlt7ImFjY291bnRfaWQiOiJtYXJrb19wcml2aXRlXzAxIiwiYmFua19pZCI6ImdoLjI5LnVrLngiLCJ2aWV3X2lkIjoib3duZXIifSx7ImFjY291bnRfaWQiOiJtYXJrb19wcml2aXRlXzAyIiwiYmFua19pZCI6ImdoLjI5LnVrLngiLCJ2aWV3X2lkIjoib3duZXIifV19.8cc7cBEf2NyQvJoukBCmDLT7LXYcuzTcSYLqSpbxLp4",
        "status": "INITIATED"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-10001: Incorrect json format.",
        "OBP-50200: Connector cannot return the data we requested.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Consent", "Account Information Service (AIS)", "PSD2", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "answer": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "consent_id": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "jwt": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/consents/CONSENT_ID/challenge",
      "connector_methods": ["obp.getBank", "obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv1.2.1-deleteTagForViewOnTransaction",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "deleteTagForViewOnTransaction"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transactions/TRANSACTION_ID/metadata/tags/TAG_ID",
      "summary": "Delete a Transaction Tag",
      "description": "<p>Deletes the tag TAG_ID about the transaction TRANSACTION_ID made on <a href=\"#1_2_1-getViewsForBankAccount\">view</a>.<br />\nAuthentication via OAuth is required. The user must either have owner privileges for this account,<br />\nor must be the user that posted the tag.</p>\n<p>Authentication is Optional</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#tag_id\">TAG_ID</a>:</p>\n<p><a href=\"/glossary#transaction_ids\">TRANSACTION_ID</a>: 2fg8a7e4-6d02-40e3-a129-0b2bf89de8ub</p>\n<p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p>\n<p><strong>JSON response body fields:</strong></p>\n",
      "description_markdown": "Deletes the tag TAG_ID about the transaction TRANSACTION_ID made on [view](#1_2_1-getViewsForBankAccount).\nAuthentication via OAuth is required. The user must either have owner privileges for this account, \nor must be the user that posted the tag.\n\n\nAuthentication is Optional\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[TAG_ID](/glossary#tag_id): \n\n\n\n[TRANSACTION_ID](/glossary#transaction_ids): 2fg8a7e4-6d02-40e3-a129-0b2bf89de8ub\n\n\n\n[VIEW_ID](/glossary#this_view_id): owner\n\n\n\n\n\n**JSON response body fields:**\n\n\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "jsonString": "{}"
      },
      "error_response_bodies": [
        "OBP-30022: The current view does not have the permission:",
        "OBP-30005: View not found for Account. Please specify a valid value for VIEW_ID",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Transaction-Metadata", "Transaction", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transactions/TRANSACTION_ID/metadata/tags/TAG_ID",
      "connector_methods": ["obp.checkBankAccountExists", "obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv2.1.0-createTransactionRequestSandboxTan",
      "implemented_by": {
        "version": "OBPv2.1.0",
        "function": "createTransactionRequestSandboxTan"
      },
      "request_verb": "POST",
      "request_url": "/obp/v2.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transaction-request-types/SANDBOX_TAN/transaction-requests",
      "summary": "Create Transaction Request (SANDBOX_TAN)",
      "description": "<p>When using SANDBOX_TAN, the payee is set in the request body.</p>\n<p>Money goes into the BANK_ID and ACCOUNT_ID specified in the request body.</p>\n<p>Initiate a Payment via creating a Transaction Request.</p>\n<p>In OBP, a <code>transaction request</code> may or may not result in a <code>transaction</code>. However, a <code>transaction</code> only has one possible state: completed.</p>\n<p>A <code>Transaction Request</code> can have one of several states.</p>\n<p><code>Transactions</code> are modeled on items in a bank statement that represent the movement of money.</p>\n<p><code>Transaction Requests</code> are requests to move money which may or may not succeeed and thus result in a <code>Transaction</code>.</p>\n<p>A <code>Transaction Request</code> might create a security challenge that needs to be answered before the <code>Transaction Request</code> proceeds.</p>\n<p>Transaction Requests contain charge information giving the client the opportunity to proceed or not (as long as the challenge level is appropriate).</p>\n<p>Transaction Requests can have one of several Transaction Request Types which expect different bodies. The escaped body is returned in the details key of the GET response.<br />\nThis provides some commonality and one URL for many different payment or transfer types with enough flexibility to validate them differently.</p>\n<p>The payer is set in the URL. Money comes out of the BANK_ID and ACCOUNT_ID specified in the URL.</p>\n<p>In sandbox mode, TRANSACTION_REQUEST_TYPE is commonly set to SANDBOX_TAN. See getTransactionRequestTypesSupportedByBank for all supported types.</p>\n<p>In sandbox mode, if the amount is less than 1000 EUR (any currency, unless it is set differently on this server), the transaction request will create a transaction without a challenge, else the Transaction Request will be set to INITIALISED and a challenge will need to be answered.</p>\n<p>If a challenge is created you must answer it using Answer Transaction Request Challenge before the Transaction is created.</p>\n<p>You can transfer between different currency accounts. (new in 2.0.0). The currency in body must match the sending account.</p>\n<p>The following static FX rates are available in sandbox mode:</p>\n<p>{<br />\n&quot;XAF&quot;:{<br />\n&quot;XAF&quot;:1.0,<br />\n&quot;HKD&quot;:0.0135503,<br />\n&quot;AUD&quot;:0.00228226,<br />\n&quot;KRW&quot;:1.87975,<br />\n&quot;JOD&quot;:0.00127784,<br />\n&quot;GBP&quot;:0.00131092,<br />\n&quot;MXN&quot;:0.0396,<br />\n&quot;AED&quot;:0.00601555,<br />\n&quot;INR&quot;:0.110241,<br />\n&quot;XBT&quot;:2.9074795E-8,<br />\n&quot;JPY&quot;:0.185328,<br />\n&quot;USD&quot;:0.00163773,<br />\n&quot;ILS&quot;:0.00641333,<br />\n&quot;EUR&quot;:0.00152449<br />\n},<br />\n&quot;HKD&quot;:{<br />\n&quot;XAF&quot;:73.8049,<br />\n&quot;HKD&quot;:1.0,<br />\n&quot;AUD&quot;:0.178137,<br />\n&quot;KRW&quot;:143.424,<br />\n&quot;JOD&quot;:0.0903452,<br />\n&quot;GBP&quot;:0.0985443,<br />\n&quot;MXN&quot;:2.8067,<br />\n&quot;AED&quot;:0.467977,<br />\n&quot;INR&quot;:9.09325,<br />\n&quot;XBT&quot;:2.164242461E-6,<br />\n&quot;JPY&quot;:14.0867,<br />\n&quot;USD&quot;:0.127427,<br />\n&quot;ILS&quot;:0.460862,<br />\n&quot;EUR&quot;:0.112495<br />\n},<br />\n&quot;AUD&quot;:{<br />\n&quot;XAF&quot;:438.162,<br />\n&quot;HKD&quot;:5.61346,<br />\n&quot;AUD&quot;:1.0,<br />\n&quot;KRW&quot;:895.304,<br />\n&quot;JOD&quot;:0.556152,<br />\n&quot;GBP&quot;:0.609788,<br />\n&quot;MXN&quot;:16.0826,<br />\n&quot;AED&quot;:2.88368,<br />\n&quot;INR&quot;:50.4238,<br />\n&quot;XBT&quot;:1.2284055924E-5,<br />\n&quot;JPY&quot;:87.0936,<br />\n&quot;USD&quot;:0.785256,<br />\n&quot;ILS&quot;:2.83558,<br />\n&quot;EUR&quot;:0.667969<br />\n},<br />\n&quot;KRW&quot;:{<br />\n&quot;XAF&quot;:0.531986,<br />\n&quot;HKD&quot;:0.00697233,<br />\n&quot;AUD&quot;:0.00111694,<br />\n&quot;KRW&quot;:1.0,<br />\n&quot;JOD&quot;:6.30634E-4,<br />\n&quot;GBP&quot;:6.97389E-4,<br />\n&quot;MXN&quot;:0.0183,<br />\n&quot;AED&quot;:0.00320019,<br />\n&quot;INR&quot;:0.0586469,<br />\n&quot;XBT&quot;:1.4234725E-8,<br />\n&quot;JPY&quot;:0.0985917,<br />\n&quot;USD&quot;:8.7125E-4,<br />\n&quot;ILS&quot;:0.00316552,<br />\n&quot;EUR&quot;:8.11008E-4<br />\n},<br />\n&quot;JOD&quot;:{<br />\n&quot;XAF&quot;:782.572,<br />\n&quot;HKD&quot;:11.0687,<br />\n&quot;AUD&quot;:1.63992,<br />\n&quot;KRW&quot;:1585.68,<br />\n&quot;JOD&quot;:1.0,<br />\n&quot;GBP&quot;:1.06757,<br />\n&quot;MXN&quot;:30.8336,<br />\n&quot;AED&quot;:5.18231,<br />\n&quot;INR&quot;:90.1236,<br />\n&quot;XBT&quot;:2.3803244006E-5,<br />\n&quot;JPY&quot;:156.304,<br />\n&quot;USD&quot;:1.41112,<br />\n&quot;ILS&quot;:5.02018,<br />\n&quot;EUR&quot;:0.237707<br />\n},<br />\n&quot;GBP&quot;:{<br />\n&quot;XAF&quot;:762.826,<br />\n&quot;HKD&quot;:10.1468,<br />\n&quot;AUD&quot;:1.63992,<br />\n&quot;KRW&quot;:1433.92,<br />\n&quot;JOD&quot;:0.936707,<br />\n&quot;GBP&quot;:1.0,<br />\n&quot;MXN&quot;:29.242,<br />\n&quot;AED&quot;:4.58882,<br />\n&quot;INR&quot;:84.095,<br />\n&quot;XBT&quot;:2.2756409956E-5,<br />\n&quot;JPY&quot;:141.373,<br />\n&quot;USD&quot;:1.2493,<br />\n&quot;ILS&quot;:4.7002,<br />\n&quot;EUR&quot;:1.16278<br />\n},<br />\n&quot;MXN&quot;:{<br />\n&quot;XAF&quot;:25.189,<br />\n&quot;HKD&quot;:0.3562,<br />\n&quot;AUD&quot;:0.0621,<br />\n&quot;KRW&quot;:54.4512,<br />\n&quot;JOD&quot;:0.0324,<br />\n&quot;GBP&quot;:0.0341,<br />\n&quot;MXN&quot;:1.0,<br />\n&quot;AED&quot;:0.1688,<br />\n&quot;INR&quot;:3.3513,<br />\n&quot;XBT&quot;:8.1112586E-7,<br />\n&quot;JPY&quot;:4.8687,<br />\n&quot;USD&quot;:0.0459,<br />\n&quot;ILS&quot;:0.1541,<br />\n&quot;EUR&quot;:0.0384<br />\n},<br />\n&quot;AED&quot;:{<br />\n&quot;XAF&quot;:166.236,<br />\n&quot;HKD&quot;:2.13685,<br />\n&quot;AUD&quot;:0.346779,<br />\n&quot;KRW&quot;:312.482,<br />\n&quot;JOD&quot;:0.1930565,<br />\n&quot;GBP&quot;:0.217921,<br />\n&quot;MXN&quot;:5.9217,<br />\n&quot;AED&quot;:1.0,<br />\n&quot;INR&quot;:18.3255,<br />\n&quot;XBT&quot;:4.603349217E-6,<br />\n&quot;JPY&quot;:30.8081,<br />\n&quot;USD&quot;:0.27225,<br />\n&quot;ILS&quot;:0.968033,<br />\n&quot;EUR&quot;:0.253425<br />\n},<br />\n&quot;INR&quot;:{<br />\n&quot;XAF&quot;:9.07101,<br />\n&quot;HKD&quot;:0.109972,<br />\n&quot;AUD&quot;:0.0198319,<br />\n&quot;KRW&quot;:17.0512,<br />\n&quot;JOD&quot;:0.0110959,<br />\n&quot;GBP&quot;:0.0118913,<br />\n&quot;MXN&quot;:0.2983,<br />\n&quot;AED&quot;:0.0545671,<br />\n&quot;INR&quot;:1.0,<br />\n&quot;XBT&quot;:2.2689396E-7,<br />\n&quot;JPY&quot;:1.68111,<br />\n&quot;USD&quot;:0.0148559,<br />\n&quot;ILS&quot;:0.0556764,<br />\n&quot;EUR&quot;:0.0138287<br />\n},<br />\n&quot;XBT&quot;:{<br />\n&quot;XAF&quot;:3.4353824E7,<br />\n&quot;HKD&quot;:460448.9,<br />\n&quot;AUD&quot;:81168.603,<br />\n&quot;KRW&quot;:7.0131575E7,<br />\n&quot;JOD&quot;:41960.111,<br />\n&quot;GBP&quot;:44188.118,<br />\n&quot;MXN&quot;:1230503.3,<br />\n&quot;AED&quot;:217414.47,<br />\n&quot;INR&quot;:4407607.74,<br />\n&quot;XBT&quot;:1.0,<br />\n&quot;JPY&quot;:6805170.8,<br />\n&quot;USD&quot;:59245.918,<br />\n&quot;ILS&quot;:182981.21,<br />\n&quot;EUR&quot;:52436.431<br />\n},<br />\n&quot;JPY&quot;:{<br />\n&quot;XAF&quot;:5.39585,<br />\n&quot;HKD&quot;:0.0709891,<br />\n&quot;AUD&quot;:0.0114819,<br />\n&quot;KRW&quot;:10.1428,<br />\n&quot;JOD&quot;:0.00639777,<br />\n&quot;GBP&quot;:0.0070735,<br />\n&quot;MXN&quot;:0.2053,<br />\n&quot;AED&quot;:0.032459,<br />\n&quot;INR&quot;:0.594846,<br />\n&quot;XBT&quot;:1.47171931E-7,<br />\n&quot;JPY&quot;:1.0,<br />\n&quot;USD&quot;:0.00883695,<br />\n&quot;ILS&quot;:0.0320926,<br />\n&quot;EUR&quot;:0.00822592<br />\n},<br />\n&quot;USD&quot;:{<br />\n&quot;XAF&quot;:610.601,<br />\n&quot;HKD&quot;:7.84766,<br />\n&quot;AUD&quot;:1.27347,<br />\n&quot;KRW&quot;:1147.78,<br />\n&quot;JOD&quot;:0.708659,<br />\n&quot;GBP&quot;:0.800446,<br />\n&quot;MXN&quot;:21.748,<br />\n&quot;AED&quot;:3.6731,<br />\n&quot;INR&quot;:67.3135,<br />\n&quot;XBT&quot;:1.69154E-5,<br />\n&quot;JPY&quot;:113.161,<br />\n&quot;USD&quot;:1.0,<br />\n&quot;ILS&quot;:3.55495,<br />\n&quot;EUR&quot;:0.930886<br />\n},<br />\n&quot;ILS&quot;:{<br />\n&quot;XAF&quot;:155.925,<br />\n&quot;HKD&quot;:2.16985,<br />\n&quot;AUD&quot;:0.352661,<br />\n&quot;KRW&quot;:315.903,<br />\n&quot;JOD&quot;:0.199196,<br />\n&quot;GBP&quot;:0.212763,<br />\n&quot;MXN&quot;:6.4871,<br />\n&quot;AED&quot;:1.03302,<br />\n&quot;INR&quot;:17.9609,<br />\n&quot;XBT&quot;:5.452272147E-6,<br />\n&quot;JPY&quot;:31.1599,<br />\n&quot;USD&quot;:0.281298,<br />\n&quot;ILS&quot;:1.0,<br />\n&quot;EUR&quot;:1.19318<br />\n},<br />\n&quot;EUR&quot;:{<br />\n&quot;XAF&quot;:655.957,<br />\n&quot;HKD&quot;:8.88926,<br />\n&quot;AUD&quot;:1.49707,<br />\n&quot;KRW&quot;:1233.03,<br />\n&quot;JOD&quot;:0.838098,<br />\n&quot;GBP&quot;:0.860011,<br />\n&quot;MXN&quot;:26.0359,<br />\n&quot;AED&quot;:3.94594,<br />\n&quot;INR&quot;:72.3136,<br />\n&quot;XBT&quot;:1.9087905636E-5,<br />\n&quot;JPY&quot;:121.567,<br />\n&quot;USD&quot;:1.07428,<br />\n&quot;ILS&quot;:4.20494,<br />\n&quot;EUR&quot;:1.0<br />\n}<br />\n}</p>\n<p>Transaction Requests satisfy PSD2 requirements thus:</p>\n<p>1) A transaction can be initiated by a third party application.</p>\n<p>2) The customer is informed of the charge that will incurred.</p>\n<p>3) The call supports delegated authentication (OAuth)</p>\n<p>See <a href=\"https://github.com/OpenBankProject/Hello-OBP-DirectLogin-Python/blob/master/hello_payments.py\">this python code</a> for a complete example of this flow.</p>\n<p>There is further documentation <a href=\"https://github.com/OpenBankProject/OBP-API/wiki/Transaction-Requests\">here</a></p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#sandbox_tan\">SANDBOX_TAN</a>:</p>\n<p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>account_id</strong></a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#to\"><strong>to</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#Account\"><strong>account</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>account_id</strong></a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#allowed_attempts\"><strong>allowed_attempts</strong></a>: 5</p>\n<p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p>\n<p><a href=\"/glossary#bank_code\"><strong>bank_code</strong></a>: CGHZ</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#branch_number\"><strong>branch_number</strong></a>:</p>\n<p><a href=\"/glossary#challenge\"><strong>challenge</strong></a>:</p>\n<p><a href=\"/glossary#challenge_type\"><strong>challenge_type</strong></a>:</p>\n<p><a href=\"/glossary#charge\"><strong>charge</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>counterparty_id</strong></a>: 9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#creditoraccount\"><strong>creditorAccount</strong></a>:</p>\n<p><a href=\"/glossary#creditorname\"><strong>creditorName</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#\"><strong>date_of_birth</strong></a>: 2018-03-09</p>\n<p><a href=\"/glossary#debtoraccount\"><strong>debtorAccount</strong></a>:</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#details\"><strong>details</strong></a>:</p>\n<p><a href=\"/glossary#end_date\"><strong>end_date</strong></a>:</p>\n<p><a href=\"/glossary#from\"><strong>from</strong></a>:</p>\n<p><a href=\"/glossary#future_date\"><strong>future_date</strong></a>: 20200127</p>\n<p><a href=\"/glossary#\"><strong>iban</strong></a>: DE91 1000 0000 0123 4567 89</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#instructedamount\"><strong>instructedAmount</strong></a>: 100</p>\n<p><a href=\"/glossary#kyc_document\"><strong>kyc_document</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>legal_name</strong></a>: Eveline Tripman</p>\n<p><a href=\"/glossary#message\"><strong>message</strong></a>: 123456</p>\n<p><a href=\"/glossary#mobile_phone_number\"><strong>mobile_phone_number</strong></a>: +49 30 901820</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#nickname\"><strong>nickname</strong></a>:</p>\n<p><a href=\"/glossary#number\"><strong>number</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>start_date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#status\"><strong>status</strong></a>:</p>\n<p><a href=\"/glossary#summary\"><strong>summary</strong></a>:</p>\n<p><a href=\"/glossary#to\"><strong>to</strong></a>:</p>\n<p><a href=\"/glossary#transaction_ids\"><strong>transaction_ids</strong></a>:</p>\n<p><a href=\"/glossary#transfer_type\"><strong>transfer_type</strong></a>:</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n<p><a href=\"/glossary#to_counterparty\">to_counterparty</a>:</p>\n<p><a href=\"/glossary#to_sandbox_tan\">to_sandbox_tan</a>:</p>\n<p><a href=\"/glossary#to_sepa\">to_sepa</a>:</p>\n<p><a href=\"/glossary#to_sepa_credit_transfers\">to_sepa_credit_transfers</a>:</p>\n<p><a href=\"/glossary#\">to_simple</a>: to_simple</p>\n<p><a href=\"/glossary#to_transfer_to_account\">to_transfer_to_account</a>:</p>\n<p><a href=\"/glossary#to_transfer_to_atm\">to_transfer_to_atm</a>:</p>\n<p><a href=\"/glossary#to_transfer_to_phone\">to_transfer_to_phone</a>:</p>\n",
      "description_markdown": "When using SANDBOX_TAN, the payee is set in the request body.\n\nMoney goes into the BANK_ID and ACCOUNT_ID specified in the request body.\n\nInitiate a Payment via creating a Transaction Request.\n\nIn OBP, a `transaction request` may or may not result in a `transaction`. However, a `transaction` only has one possible state: completed.\n\nA `Transaction Request` can have one of several states.\n\n`Transactions` are modeled on items in a bank statement that represent the movement of money.\n\n`Transaction Requests` are requests to move money which may or may not succeeed and thus result in a `Transaction`.\n\nA `Transaction Request` might create a security challenge that needs to be answered before the `Transaction Request` proceeds.\n\nTransaction Requests contain charge information giving the client the opportunity to proceed or not (as long as the challenge level is appropriate).\n\nTransaction Requests can have one of several Transaction Request Types which expect different bodies. The escaped body is returned in the details key of the GET response.\nThis provides some commonality and one URL for many different payment or transfer types with enough flexibility to validate them differently.\n\nThe payer is set in the URL. Money comes out of the BANK_ID and ACCOUNT_ID specified in the URL.\n\nIn sandbox mode, TRANSACTION_REQUEST_TYPE is commonly set to SANDBOX_TAN. See getTransactionRequestTypesSupportedByBank for all supported types.\n\nIn sandbox mode, if the amount is less than 1000 EUR (any currency, unless it is set differently on this server), the transaction request will create a transaction without a challenge, else the Transaction Request will be set to INITIALISED and a challenge will need to be answered.\n\nIf a challenge is created you must answer it using Answer Transaction Request Challenge before the Transaction is created.\n\nYou can transfer between different currency accounts. (new in 2.0.0). The currency in body must match the sending account.\n\nThe following static FX rates are available in sandbox mode:\n\n{\n  \"XAF\":{\n    \"XAF\":1.0,\n    \"HKD\":0.0135503,\n    \"AUD\":0.00228226,\n    \"KRW\":1.87975,\n    \"JOD\":0.00127784,\n    \"GBP\":0.00131092,\n    \"MXN\":0.0396,\n    \"AED\":0.00601555,\n    \"INR\":0.110241,\n    \"XBT\":2.9074795E-8,\n    \"JPY\":0.185328,\n    \"USD\":0.00163773,\n    \"ILS\":0.00641333,\n    \"EUR\":0.00152449\n  },\n  \"HKD\":{\n    \"XAF\":73.8049,\n    \"HKD\":1.0,\n    \"AUD\":0.178137,\n    \"KRW\":143.424,\n    \"JOD\":0.0903452,\n    \"GBP\":0.0985443,\n    \"MXN\":2.8067,\n    \"AED\":0.467977,\n    \"INR\":9.09325,\n    \"XBT\":2.164242461E-6,\n    \"JPY\":14.0867,\n    \"USD\":0.127427,\n    \"ILS\":0.460862,\n    \"EUR\":0.112495\n  },\n  \"AUD\":{\n    \"XAF\":438.162,\n    \"HKD\":5.61346,\n    \"AUD\":1.0,\n    \"KRW\":895.304,\n    \"JOD\":0.556152,\n    \"GBP\":0.609788,\n    \"MXN\":16.0826,\n    \"AED\":2.88368,\n    \"INR\":50.4238,\n    \"XBT\":1.2284055924E-5,\n    \"JPY\":87.0936,\n    \"USD\":0.785256,\n    \"ILS\":2.83558,\n    \"EUR\":0.667969\n  },\n  \"KRW\":{\n    \"XAF\":0.531986,\n    \"HKD\":0.00697233,\n    \"AUD\":0.00111694,\n    \"KRW\":1.0,\n    \"JOD\":6.30634E-4,\n    \"GBP\":6.97389E-4,\n    \"MXN\":0.0183,\n    \"AED\":0.00320019,\n    \"INR\":0.0586469,\n    \"XBT\":1.4234725E-8,\n    \"JPY\":0.0985917,\n    \"USD\":8.7125E-4,\n    \"ILS\":0.00316552,\n    \"EUR\":8.11008E-4\n  },\n  \"JOD\":{\n    \"XAF\":782.572,\n    \"HKD\":11.0687,\n    \"AUD\":1.63992,\n    \"KRW\":1585.68,\n    \"JOD\":1.0,\n    \"GBP\":1.06757,\n    \"MXN\":30.8336,\n    \"AED\":5.18231,\n    \"INR\":90.1236,\n    \"XBT\":2.3803244006E-5,\n    \"JPY\":156.304,\n    \"USD\":1.41112,\n    \"ILS\":5.02018,\n    \"EUR\":0.237707\n  },\n  \"GBP\":{\n    \"XAF\":762.826,\n    \"HKD\":10.1468,\n    \"AUD\":1.63992,\n    \"KRW\":1433.92,\n    \"JOD\":0.936707,\n    \"GBP\":1.0,\n    \"MXN\":29.242,\n    \"AED\":4.58882,\n    \"INR\":84.095,\n    \"XBT\":2.2756409956E-5,\n    \"JPY\":141.373,\n    \"USD\":1.2493,\n    \"ILS\":4.7002,\n    \"EUR\":1.16278\n  },\n  \"MXN\":{\n    \"XAF\":25.189,\n    \"HKD\":0.3562,\n    \"AUD\":0.0621,\n    \"KRW\":54.4512,\n    \"JOD\":0.0324,\n    \"GBP\":0.0341,\n    \"MXN\":1.0,\n    \"AED\":0.1688,\n    \"INR\":3.3513,\n    \"XBT\":8.1112586E-7,\n    \"JPY\":4.8687,\n    \"USD\":0.0459,\n    \"ILS\":0.1541,\n    \"EUR\":0.0384\n  },\n  \"AED\":{\n    \"XAF\":166.236,\n    \"HKD\":2.13685,\n    \"AUD\":0.346779,\n    \"KRW\":312.482,\n    \"JOD\":0.1930565,\n    \"GBP\":0.217921,\n    \"MXN\":5.9217,\n    \"AED\":1.0,\n    \"INR\":18.3255,\n    \"XBT\":4.603349217E-6,\n    \"JPY\":30.8081,\n    \"USD\":0.27225,\n    \"ILS\":0.968033,\n    \"EUR\":0.253425\n  },\n  \"INR\":{\n    \"XAF\":9.07101,\n    \"HKD\":0.109972,\n    \"AUD\":0.0198319,\n    \"KRW\":17.0512,\n    \"JOD\":0.0110959,\n    \"GBP\":0.0118913,\n    \"MXN\":0.2983,\n    \"AED\":0.0545671,\n    \"INR\":1.0,\n    \"XBT\":2.2689396E-7,\n    \"JPY\":1.68111,\n    \"USD\":0.0148559,\n    \"ILS\":0.0556764,\n    \"EUR\":0.0138287\n  },\n  \"XBT\":{\n    \"XAF\":3.4353824E7,\n    \"HKD\":460448.9,\n    \"AUD\":81168.603,\n    \"KRW\":7.0131575E7,\n    \"JOD\":41960.111,\n    \"GBP\":44188.118,\n    \"MXN\":1230503.3,\n    \"AED\":217414.47,\n    \"INR\":4407607.74,\n    \"XBT\":1.0,\n    \"JPY\":6805170.8,\n    \"USD\":59245.918,\n    \"ILS\":182981.21,\n    \"EUR\":52436.431\n  },\n  \"JPY\":{\n    \"XAF\":5.39585,\n    \"HKD\":0.0709891,\n    \"AUD\":0.0114819,\n    \"KRW\":10.1428,\n    \"JOD\":0.00639777,\n    \"GBP\":0.0070735,\n    \"MXN\":0.2053,\n    \"AED\":0.032459,\n    \"INR\":0.594846,\n    \"XBT\":1.47171931E-7,\n    \"JPY\":1.0,\n    \"USD\":0.00883695,\n    \"ILS\":0.0320926,\n    \"EUR\":0.00822592\n  },\n  \"USD\":{\n    \"XAF\":610.601,\n    \"HKD\":7.84766,\n    \"AUD\":1.27347,\n    \"KRW\":1147.78,\n    \"JOD\":0.708659,\n    \"GBP\":0.800446,\n    \"MXN\":21.748,\n    \"AED\":3.6731,\n    \"INR\":67.3135,\n    \"XBT\":1.69154E-5,\n    \"JPY\":113.161,\n    \"USD\":1.0,\n    \"ILS\":3.55495,\n    \"EUR\":0.930886\n  },\n  \"ILS\":{\n    \"XAF\":155.925,\n    \"HKD\":2.16985,\n    \"AUD\":0.352661,\n    \"KRW\":315.903,\n    \"JOD\":0.199196,\n    \"GBP\":0.212763,\n    \"MXN\":6.4871,\n    \"AED\":1.03302,\n    \"INR\":17.9609,\n    \"XBT\":5.452272147E-6,\n    \"JPY\":31.1599,\n    \"USD\":0.281298,\n    \"ILS\":1.0,\n    \"EUR\":1.19318\n  },\n  \"EUR\":{\n    \"XAF\":655.957,\n    \"HKD\":8.88926,\n    \"AUD\":1.49707,\n    \"KRW\":1233.03,\n    \"JOD\":0.838098,\n    \"GBP\":0.860011,\n    \"MXN\":26.0359,\n    \"AED\":3.94594,\n    \"INR\":72.3136,\n    \"XBT\":1.9087905636E-5,\n    \"JPY\":121.567,\n    \"USD\":1.07428,\n    \"ILS\":4.20494,\n    \"EUR\":1.0\n  }\n}\n\n\nTransaction Requests satisfy PSD2 requirements thus:\n\n1) A transaction can be initiated by a third party application.\n\n2) The customer is informed of the charge that will incurred.\n\n3) The call supports delegated authentication (OAuth)\n\nSee [this python code](https://github.com/OpenBankProject/Hello-OBP-DirectLogin-Python/blob/master/hello_payments.py) for a complete example of this flow.\n\nThere is further documentation [here](https://github.com/OpenBankProject/OBP-API/wiki/Transaction-Requests)\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[SANDBOX_TAN](/glossary#sandbox_tan): \n\n\n\n[VIEW_ID](/glossary#this_view_id): owner\n\n\n\n\n\n**JSON request body fields:**\n\n\n\n[**account_id**](/glossary#): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[**amount**](/glossary#): 10.12\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**to**](/glossary#to): \n\n\n\n[**value**](/glossary#): 5987953\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**account**](/glossary#Account): \n\n\n\n[**account_id**](/glossary#): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[**allowed_attempts**](/glossary#allowed_attempts): 5\n\n\n\n[**amount**](/glossary#): 10.12\n\n\n\n[**bank_code**](/glossary#bank_code): CGHZ\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**branch_number**](/glossary#branch_number): \n\n\n\n[**challenge**](/glossary#challenge): \n\n\n\n[**challenge_type**](/glossary#challenge_type): \n\n\n\n[**charge**](/glossary#charge): \n\n\n\n[**counterparty_id**](/glossary#): 9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**creditorAccount**](/glossary#creditoraccount): \n\n\n\n[**creditorName**](/glossary#creditorname): \n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**date_of_birth**](/glossary#): 2018-03-09\n\n\n\n[**debtorAccount**](/glossary#debtoraccount): \n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**details**](/glossary#details): \n\n\n\n[**end_date**](/glossary#end_date): \n\n\n\n[**from**](/glossary#from): \n\n\n\n[**future_date**](/glossary#future_date): 20200127\n\n\n\n[**iban**](/glossary#): DE91 1000 0000 0123 4567 89\n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**instructedAmount**](/glossary#instructedamount): 100\n\n\n\n[**kyc_document**](/glossary#kyc_document): \n\n\n\n[**legal_name**](/glossary#): Eveline Tripman\n\n\n\n[**message**](/glossary#message): 123456\n\n\n\n[**mobile_phone_number**](/glossary#mobile_phone_number): +49 30 901820\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**nickname**](/glossary#nickname): \n\n\n\n[**number**](/glossary#number): \n\n\n\n[**start_date**](/glossary#): 2020-01-27\n\n\n\n[**status**](/glossary#status): \n\n\n\n[**summary**](/glossary#summary): \n\n\n\n[**to**](/glossary#to): \n\n\n\n[**transaction_ids**](/glossary#transaction_ids): \n\n\n\n[**transfer_type**](/glossary#transfer_type): \n\n\n\n[**type**](/glossary#type): \n\n\n\n[**value**](/glossary#): 5987953\n\n\n\n[to_counterparty](/glossary#to_counterparty): \n\n\n\n[to_sandbox_tan](/glossary#to_sandbox_tan): \n\n\n\n[to_sepa](/glossary#to_sepa): \n\n\n\n[to_sepa_credit_transfers](/glossary#to_sepa_credit_transfers): \n\n\n\n[to_simple](/glossary#): to_simple\n\n\n\n[to_transfer_to_account](/glossary#to_transfer_to_account): \n\n\n\n[to_transfer_to_atm](/glossary#to_transfer_to_atm): \n\n\n\n[to_transfer_to_phone](/glossary#to_transfer_to_phone): \n\n\n",
      "example_request_body": {
        "to": {
          "bank_id": "gh.29.uk",
          "account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
        },
        "value": {
          "currency": "EUR",
          "amount": "0"
        },
        "description": "this is for work"
      },
      "success_response_body": {
        "id": "4050046c-63b3-4868-8a22-14b4181d33a6",
        "type": "SANDBOX_TAN",
        "from": {
          "bank_id": "gh.29.uk",
          "account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
        },
        "details": {
          "to_sandbox_tan": {
            "bank_id": "String",
            "account_id": "String"
          },
          "to_sepa": {
            "iban": "String"
          },
          "to_counterparty": {
            "counterparty_id": "9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh"
          },
          "to_transfer_to_phone": {
            "value": {
              "currency": "EUR",
              "amount": "0"
            },
            "description": "String",
            "message": "String",
            "from": {
              "mobile_phone_number": "+44 07972 444 876",
              "nickname": "String"
            },
            "to": {
              "mobile_phone_number": "+44 07972 444 876"
            }
          },
          "to_transfer_to_atm": {
            "value": {
              "currency": "EUR",
              "amount": "0"
            },
            "description": "String",
            "message": "String",
            "from": {
              "mobile_phone_number": "+44 07972 444 876",
              "nickname": "String"
            },
            "to": {
              "legal_name": "Eveline Tripman",
              "date_of_birth": "20181230",
              "mobile_phone_number": "+44 07972 444 876",
              "kyc_document": {
                "type": "String",
                "number": "String"
              }
            }
          },
          "to_transfer_to_account": {
            "value": {
              "currency": "EUR",
              "amount": "0"
            },
            "description": "String",
            "transfer_type": "String",
            "future_date": "20181230",
            "to": {
              "name": "String",
              "bank_code": "String",
              "branch_number": "String",
              "account": {
                "number": "String",
                "iban": "String"
              }
            }
          },
          "to_sepa_credit_transfers": {
            "debtorAccount": {
              "iban": "12345"
            },
            "instructedAmount": {
              "currency": "EUR",
              "amount": "0"
            },
            "creditorAccount": {
              "iban": "54321"
            },
            "creditorName": "John Miles"
          },
          "value": {
            "currency": "EUR",
            "amount": "100"
          },
          "description": "String"
        },
        "transaction_ids": ["902ba3bb-dedd-45e7-9319-2fd3f2cd98a1"],
        "status": "COMPLETED",
        "start_date": "1100-01-01T00:00:00Z",
        "end_date": "1100-01-01T00:00:00Z",
        "challenge": {
          "id": "be1a183d-b301-4b83-b855-5eeffdd3526f",
          "allowed_attempts": 3,
          "challenge_type": "SANDBOX_TAN"
        },
        "charge": {
          "summary": "Rent the flat",
          "value": {
            "currency": "EUR",
            "amount": "0"
          }
        }
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30111: Invalid Bank Id. The BANK_ID should only contain 0-9/a-z/A-Z/'-'/'.'/'_', the length should be smaller than 255.",
        "OBP-30110: Invalid Account Id. The ACCOUNT_ID should only contain 0-9/a-z/A-Z/'-'/'.'/'_', the length should be smaller than 255.",
        "OBP-10001: Incorrect json format.",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30003: Account not found. Please specify a valid value for ACCOUNT_ID.",
        "OBP-30005: View not found for Account. Please specify a valid value for VIEW_ID",
        "OBP-40002: Insufficient authorisation to create TransactionRequest. The Transaction Request could not be created because the login user doesn't have access to the view of the from account or the view don't have the `canAddTransactionRequestToAnyAccount` permission or your consumer doesn't not have the access to the view of the from account or you don't have the role CanCreateAnyTransactionRequest.",
        "OBP-20017: Current user does not have access to the view. Please specify a valid value for VIEW_ID.",
        "OBP-40001: Invalid value for TRANSACTION_REQUEST_TYPE",
        "OBP-10001: Incorrect json format.",
        "OBP-10002: Invalid Number. Could not convert value to a number.",
        "OBP-40008: Can't send a payment with a value of 0 or less.",
        "OBP-40003: Transaction Request Currency must be the same as From Account Currency.",
        "OBP-00003: Transaction Requests is disabled in this API instance.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Transaction-Request", "Payment Initiation Service (PIS)", "PSD2"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "to": {
            "type": "object",
            "properties": {
              "bank_id": {
                "type": "string"
              },
              "account_id": {
                "type": "string"
              }
            }
          },
          "description": {
            "type": "string"
          },
          "value": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string"
              },
              "amount": {
                "type": "string"
              }
            }
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "challenge": {
            "type": "object",
            "properties": {
              "challenge_type": {
                "type": "string"
              },
              "allowed_attempts": {
                "type": "integer"
              },
              "id": {
                "type": "string"
              }
            }
          },
          "status": {
            "type": "string"
          },
          "end_date": {
            "type": "string",
            "format": "date-time"
          },
          "charge": {
            "type": "object",
            "properties": {
              "summary": {
                "type": "string"
              },
              "value": {
                "type": "object",
                "properties": {
                  "currency": {
                    "type": "string"
                  },
                  "amount": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "transaction_ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "from": {
            "type": "object",
            "properties": {
              "bank_id": {
                "type": "string"
              },
              "account_id": {
                "type": "string"
              }
            }
          },
          "details": {
            "type": "object",
            "properties": {
              "to_sandbox_tan": {
                "type": "object",
                "properties": {
                  "account_id": {
                    "type": "string"
                  },
                  "bank_id": {
                    "type": "string"
                  }
                }
              },
              "value": {
                "type": "object",
                "properties": {
                  "currency": {
                    "type": "string"
                  },
                  "amount": {
                    "type": "string"
                  }
                }
              },
              "to_transfer_to_phone": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  },
                  "from": {
                    "type": "object",
                    "properties": {
                      "nickname": {
                        "type": "string"
                      },
                      "mobile_phone_number": {
                        "type": "string"
                      }
                    }
                  },
                  "to": {
                    "type": "object",
                    "properties": {
                      "mobile_phone_number": {
                        "type": "string"
                      }
                    }
                  },
                  "value": {
                    "type": "object",
                    "properties": {
                      "currency": {
                        "type": "string"
                      },
                      "amount": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "to_sepa": {
                "type": "object",
                "properties": {
                  "iban": {
                    "type": "string"
                  }
                }
              },
              "description": {
                "type": "string"
              },
              "to_counterparty": {
                "type": "object",
                "properties": {
                  "counterparty_id": {
                    "type": "string"
                  }
                }
              },
              "to_transfer_to_account": {
                "type": "object",
                "properties": {
                  "to": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "account": {
                        "type": "object",
                        "properties": {
                          "number": {
                            "type": "string"
                          },
                          "iban": {
                            "type": "string"
                          }
                        }
                      },
                      "bank_code": {
                        "type": "string"
                      },
                      "branch_number": {
                        "type": "string"
                      }
                    }
                  },
                  "transfer_type": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "future_date": {
                    "type": "string"
                  },
                  "value": {
                    "type": "object",
                    "properties": {
                      "currency": {
                        "type": "string"
                      },
                      "amount": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "to_sepa_credit_transfers": {
                "type": "object",
                "properties": {
                  "instructedAmount": {
                    "type": "object",
                    "properties": {
                      "currency": {
                        "type": "string"
                      },
                      "amount": {
                        "type": "string"
                      }
                    }
                  },
                  "debtorAccount": {
                    "type": "object",
                    "properties": {
                      "iban": {
                        "type": "string"
                      }
                    }
                  },
                  "creditorAccount": {
                    "type": "object",
                    "properties": {
                      "iban": {
                        "type": "string"
                      }
                    }
                  },
                  "creditorName": {
                    "type": "string"
                  }
                }
              },
              "to_transfer_to_atm": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  },
                  "from": {
                    "type": "object",
                    "properties": {
                      "nickname": {
                        "type": "string"
                      },
                      "mobile_phone_number": {
                        "type": "string"
                      }
                    }
                  },
                  "value": {
                    "type": "object",
                    "properties": {
                      "currency": {
                        "type": "string"
                      },
                      "amount": {
                        "type": "string"
                      }
                    }
                  },
                  "to": {
                    "type": "object",
                    "properties": {
                      "date_of_birth": {
                        "type": "string"
                      },
                      "kyc_document": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string"
                          },
                          "number": {
                            "type": "string"
                          }
                        }
                      },
                      "legal_name": {
                        "type": "string"
                      },
                      "mobile_phone_number": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "start_date": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transaction-request-types/SANDBOX_TAN/transaction-requests",
      "connector_methods": [
        "obp.createTransactionRequestv210",
        "obp.checkBankAccountExists",
        "obp.getCounterpartyByCounterpartyId",
        "obp.getCounterpartyByIban",
        "obp.getBank",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv3.1.0-deleteUserAuthContextById",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "deleteUserAuthContextById"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v3.1.0/users/USER_ID/auth-context/USER_AUTH_CONTEXT_ID",
      "summary": "Delete User Auth Context",
      "description": "<p>Delete a User AuthContext of the User specified by USER_AUTH_CONTEXT_ID.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#user_auth_context_id\">USER_AUTH_CONTEXT_ID</a>:</p>\n<p><a href=\"/glossary#User.user_id\">USER_ID</a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p>\n<p><strong>JSON response body fields:</strong></p>\n",
      "description_markdown": "Delete a User AuthContext of the User specified by USER_AUTH_CONTEXT_ID.\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[USER_AUTH_CONTEXT_ID](/glossary#user_auth_context_id): \n\n\n\n[USER_ID](/glossary#User.user_id): 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\n\n\n\n\n\n**JSON response body fields:**\n\n\n",
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["User", "New-Style"],
      "roles": [
        {
          "role": "CanDeleteUserAuthContext",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/users/USER_ID/auth-context/USER_AUTH_CONTEXT_ID",
      "connector_methods": ["obp.deleteUserAuthContextById", "obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv1.2.1-addCommentForViewOnTransaction",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "addCommentForViewOnTransaction"
      },
      "request_verb": "POST",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transactions/TRANSACTION_ID/metadata/comments",
      "summary": "Add a Transaction Comment",
      "description": "<p>Posts a comment about a transaction TRANSACTION_ID on a <a href=\"#1_2_1-getViewsForBankAccount\">view</a> VIEW_ID.</p>\n<p>${authenticationRequiredMessage(false)}</p>\n<p>Authentication is required since the comment is linked with the user.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#transaction_ids\">TRANSACTION_ID</a>: 2fg8a7e4-6d02-40e3-a129-0b2bf89de8ub</p>\n<p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#display_name\"><strong>display_name</strong></a>:</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p>\n<p><a href=\"/glossary#User\"><strong>user</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n",
      "description_markdown": "Posts a comment about a transaction TRANSACTION_ID on a [view](#1_2_1-getViewsForBankAccount) VIEW_ID.\n\n${authenticationRequiredMessage(false)}\n\nAuthentication is required since the comment is linked with the user.\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[TRANSACTION_ID](/glossary#transaction_ids): 2fg8a7e4-6d02-40e3-a129-0b2bf89de8ub\n\n\n\n[VIEW_ID](/glossary#this_view_id): owner\n\n\n\n\n\n**JSON request body fields:**\n\n\n\n[**value**](/glossary#): 5987953\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**date**](/glossary#): 2020-01-27\n\n\n\n[**display_name**](/glossary#display_name): \n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**provider**](/glossary#provider): ETHEREUM\n\n\n\n[**user**](/glossary#User): \n\n\n\n[**value**](/glossary#): 5987953\n\n\n",
      "example_request_body": {
        "value": "String"
      },
      "success_response_body": {
        "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
        "value": "OBP",
        "date": "1100-01-01T00:00:00Z",
        "user": {
          "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
          "provider": "http://127.0.0.1:8080",
          "display_name": "OBP"
        }
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-10001: Incorrect json format.",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-30022: The current view does not have the permission:",
        "OBP-30005: View not found for Account. Please specify a valid value for VIEW_ID",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Transaction-Metadata", "Transaction", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "user": {
            "type": "object",
            "properties": {
              "provider": {
                "type": "string"
              },
              "display_name": {
                "type": "string"
              },
              "id": {
                "type": "string"
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transactions/TRANSACTION_ID/metadata/comments",
      "connector_methods": ["obp.checkBankAccountExists", "obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv1.2.1-addCounterpartyMoreInfo",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "addCounterpartyMoreInfo"
      },
      "request_verb": "POST",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/metadata/more_info",
      "summary": "Add Counterparty More Info",
      "description": "<p>Add a description of the counter party from the perpestive of the account e.g. My dentist</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#other_account_id\">OTHER_ACCOUNT_ID</a>:</p>\n<p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#more_info\"><strong>more_info</strong></a>: More information about this fee</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#success\"><strong>success</strong></a>:</p>\n",
      "description_markdown": "Add a description of the counter party from the perpestive of the account e.g. My dentist\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[OTHER_ACCOUNT_ID](/glossary#other_account_id): \n\n\n\n[VIEW_ID](/glossary#this_view_id): owner\n\n\n\n\n\n**JSON request body fields:**\n\n\n\n[**more_info**](/glossary#more_info): More information about this fee\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**success**](/glossary#success): \n\n\n",
      "example_request_body": {
        "more_info": "String"
      },
      "success_response_body": {
        "success": "Success"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-10001: Incorrect json format.",
        "OBP-30022: The current view does not have the permission:",
        "the view ownerdoes not allow adding more info",
        "More Info cannot be added",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Counterparty-Metadata", "Counterparty", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "more_info": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "success": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/metadata/more_info",
      "connector_methods": [
        "obp.checkBankAccountExists",
        "obp.getBank",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv4.0.0-createTransactionRequestCounterparty",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "createTransactionRequestCounterparty"
      },
      "request_verb": "POST",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transaction-request-types/COUNTERPARTY/transaction-requests",
      "summary": "Create Transaction Request (COUNTERPARTY)",
      "description": "<p>Special instructions for COUNTERPARTY:</p>\n<p>When using a COUNTERPARTY to create a Transaction Request, specificy the counterparty_id in the body of the request.<br />\nThe routing details of the counterparty will be forwarded for the transfer.</p>\n<p>Initiate a Payment via creating a Transaction Request.</p>\n<p>In OBP, a <code>transaction request</code> may or may not result in a <code>transaction</code>. However, a <code>transaction</code> only has one possible state: completed.</p>\n<p>A <code>Transaction Request</code> can have one of several states: INITIATED, NEXT_CHALLENGE_PENDING etc.</p>\n<p><code>Transactions</code> are modeled on items in a bank statement that represent the movement of money.</p>\n<p><code>Transaction Requests</code> are requests to move money which may or may not succeed and thus result in a <code>Transaction</code>.</p>\n<p>A <code>Transaction Request</code> might create a security challenge that needs to be answered before the <code>Transaction Request</code> proceeds.<br />\nIn case 1 person needs to answer security challenge we have next flow of state of an <code>transaction request</code>:<br />\nINITIATED =&gt; COMPLETED<br />\nIn case n persons needs to answer security challenge we have next flow of state of an <code>transaction request</code>:<br />\nINITIATED =&gt; NEXT_CHALLENGE_PENDING =&gt; ... =&gt; NEXT_CHALLENGE_PENDING =&gt; COMPLETED</p>\n<p>The security challenge is bound to a user i.e. in case of right answer and the user is different than expected one the challenge will fail.</p>\n<p>Rule for calculating number of security challenges:<br />\nIf product Account attribute REQUIRED_CHALLENGE_ANSWERS=N then create N challenges<br />\n(one for every user that has a View where permission &quot;can_add_transaction_request_to_any_account&quot;=true)<br />\nIn case REQUIRED_CHALLENGE_ANSWERS is not defined as an account attribute default value is 1.</p>\n<p>Transaction Requests contain charge information giving the client the opportunity to proceed or not (as long as the challenge level is appropriate).</p>\n<p>Transaction Requests can have one of several Transaction Request Types which expect different bodies. The escaped body is returned in the details key of the GET response.<br />\nThis provides some commonality and one URL for many different payment or transfer types with enough flexibility to validate them differently.</p>\n<p>The payer is set in the URL. Money comes out of the BANK_ID and ACCOUNT_ID specified in the URL.</p>\n<p>In sandbox mode, TRANSACTION_REQUEST_TYPE is commonly set to ACCOUNT. See getTransactionRequestTypesSupportedByBank for all supported types.</p>\n<p>In sandbox mode, if the amount is less than 1000 EUR (any currency, unless it is set differently on this server), the transaction request will create a transaction without a challenge, else the Transaction Request will be set to INITIALISED and a challenge will need to be answered.</p>\n<p>If a challenge is created you must answer it using Answer Transaction Request Challenge before the Transaction is created.</p>\n<p>You can transfer between different currency accounts. (new in 2.0.0). The currency in body must match the sending account.</p>\n<p>The following static FX rates are available in sandbox mode:</p>\n<p><a href=\"https://obp-apiexplorer.joinfincubator.com/more?version=OBPv4.0.0&amp;list-all-banks=false&amp;core=&amp;psd2=&amp;obwg=#OBPv2_2_0-getCurrentFxRate\">https://obp-apiexplorer.joinfincubator.com/more?version=OBPv4.0.0&amp;list-all-banks=false&amp;core=&amp;psd2=&amp;obwg=#OBPv2_2_0-getCurrentFxRate</a></p>\n<p>Transaction Requests satisfy PSD2 requirements thus:</p>\n<p>1) A transaction can be initiated by a third party application.</p>\n<p>2) The customer is informed of the charge that will incurred.</p>\n<p>3) The call supports delegated authentication (OAuth)</p>\n<p>See <a href=\"https://github.com/OpenBankProject/Hello-OBP-DirectLogin-Python/blob/master/hello_payments.py\">this python code</a> for a complete example of this flow.</p>\n<p>There is further documentation <a href=\"https://github.com/OpenBankProject/OBP-API/wiki/Transaction-Requests\">here</a></p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#counterparty\">COUNTERPARTY</a>:</p>\n<p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p>\n<p><a href=\"/glossary#\"><strong>charge_policy</strong></a>: SHARED</p>\n<p><a href=\"/glossary#\"><strong>counterparty_id</strong></a>: 9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#to\"><strong>to</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n<p><a href=\"/glossary#future_date\">future_date</a>: 20200127</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#Account\"><strong>account</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>account_id</strong></a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#allowed_attempts\"><strong>allowed_attempts</strong></a>: 5</p>\n<p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p>\n<p><a href=\"/glossary#bank_code\"><strong>bank_code</strong></a>: CGHZ</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#branch_number\"><strong>branch_number</strong></a>:</p>\n<p><a href=\"/glossary#challenge_type\"><strong>challenge_type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>challenges</strong></a>: challenges</p>\n<p><a href=\"/glossary#charge\"><strong>charge</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>counterparty_id</strong></a>: 9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#creditoraccount\"><strong>creditorAccount</strong></a>:</p>\n<p><a href=\"/glossary#creditorname\"><strong>creditorName</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#\"><strong>date_of_birth</strong></a>: 2018-03-09</p>\n<p><a href=\"/glossary#debtoraccount\"><strong>debtorAccount</strong></a>:</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#details\"><strong>details</strong></a>:</p>\n<p><a href=\"/glossary#end_date\"><strong>end_date</strong></a>:</p>\n<p><a href=\"/glossary#from\"><strong>from</strong></a>:</p>\n<p><a href=\"/glossary#future_date\"><strong>future_date</strong></a>: 20200127</p>\n<p><a href=\"/glossary#\"><strong>iban</strong></a>: DE91 1000 0000 0123 4567 89</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#instructedamount\"><strong>instructedAmount</strong></a>: 100</p>\n<p><a href=\"/glossary#kyc_document\"><strong>kyc_document</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>legal_name</strong></a>: Eveline Tripman</p>\n<p><a href=\"/glossary#link\"><strong>link</strong></a>:</p>\n<p><a href=\"/glossary#message\"><strong>message</strong></a>: 123456</p>\n<p><a href=\"/glossary#mobile_phone_number\"><strong>mobile_phone_number</strong></a>: +49 30 901820</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#nickname\"><strong>nickname</strong></a>:</p>\n<p><a href=\"/glossary#number\"><strong>number</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>start_date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#status\"><strong>status</strong></a>:</p>\n<p><a href=\"/glossary#summary\"><strong>summary</strong></a>:</p>\n<p><a href=\"/glossary#to\"><strong>to</strong></a>:</p>\n<p><a href=\"/glossary#transaction_ids\"><strong>transaction_ids</strong></a>:</p>\n<p><a href=\"/glossary#transfer_type\"><strong>transfer_type</strong></a>:</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n<p><a href=\"/glossary#to_counterparty\">to_counterparty</a>:</p>\n<p><a href=\"/glossary#to_sandbox_tan\">to_sandbox_tan</a>:</p>\n<p><a href=\"/glossary#to_sepa\">to_sepa</a>:</p>\n<p><a href=\"/glossary#to_sepa_credit_transfers\">to_sepa_credit_transfers</a>:</p>\n<p><a href=\"/glossary#\">to_simple</a>: to_simple</p>\n<p><a href=\"/glossary#to_transfer_to_account\">to_transfer_to_account</a>:</p>\n<p><a href=\"/glossary#to_transfer_to_atm\">to_transfer_to_atm</a>:</p>\n<p><a href=\"/glossary#to_transfer_to_phone\">to_transfer_to_phone</a>:</p>\n",
      "description_markdown": "Special instructions for COUNTERPARTY:\n\nWhen using a COUNTERPARTY to create a Transaction Request, specificy the counterparty_id in the body of the request.\nThe routing details of the counterparty will be forwarded for the transfer.\n\nInitiate a Payment via creating a Transaction Request.\n\nIn OBP, a `transaction request` may or may not result in a `transaction`. However, a `transaction` only has one possible state: completed.\n\nA `Transaction Request` can have one of several states: INITIATED, NEXT_CHALLENGE_PENDING etc.\n\n`Transactions` are modeled on items in a bank statement that represent the movement of money.\n\n`Transaction Requests` are requests to move money which may or may not succeed and thus result in a `Transaction`.\n\nA `Transaction Request` might create a security challenge that needs to be answered before the `Transaction Request` proceeds.\nIn case 1 person needs to answer security challenge we have next flow of state of an `transaction request`:\n  INITIATED => COMPLETED\nIn case n persons needs to answer security challenge we have next flow of state of an `transaction request`:\n  INITIATED => NEXT_CHALLENGE_PENDING => ... => NEXT_CHALLENGE_PENDING => COMPLETED\n\nThe security challenge is bound to a user i.e. in case of right answer and the user is different than expected one the challenge will fail.\n\nRule for calculating number of security challenges:\nIf product Account attribute REQUIRED_CHALLENGE_ANSWERS=N then create N challenges\n(one for every user that has a View where permission \"can_add_transaction_request_to_any_account\"=true)\nIn case REQUIRED_CHALLENGE_ANSWERS is not defined as an account attribute default value is 1.\n\nTransaction Requests contain charge information giving the client the opportunity to proceed or not (as long as the challenge level is appropriate).\n\nTransaction Requests can have one of several Transaction Request Types which expect different bodies. The escaped body is returned in the details key of the GET response.\nThis provides some commonality and one URL for many different payment or transfer types with enough flexibility to validate them differently.\n\nThe payer is set in the URL. Money comes out of the BANK_ID and ACCOUNT_ID specified in the URL.\n\nIn sandbox mode, TRANSACTION_REQUEST_TYPE is commonly set to ACCOUNT. See getTransactionRequestTypesSupportedByBank for all supported types.\n\nIn sandbox mode, if the amount is less than 1000 EUR (any currency, unless it is set differently on this server), the transaction request will create a transaction without a challenge, else the Transaction Request will be set to INITIALISED and a challenge will need to be answered.\n\nIf a challenge is created you must answer it using Answer Transaction Request Challenge before the Transaction is created.\n\nYou can transfer between different currency accounts. (new in 2.0.0). The currency in body must match the sending account.\n\nThe following static FX rates are available in sandbox mode:\n\nhttps://obp-apiexplorer.joinfincubator.com/more?version=OBPv4.0.0&list-all-banks=false&core=&psd2=&obwg=#OBPv2_2_0-getCurrentFxRate\n\n\nTransaction Requests satisfy PSD2 requirements thus:\n\n1) A transaction can be initiated by a third party application.\n\n2) The customer is informed of the charge that will incurred.\n\n3) The call supports delegated authentication (OAuth)\n\nSee [this python code](https://github.com/OpenBankProject/Hello-OBP-DirectLogin-Python/blob/master/hello_payments.py) for a complete example of this flow.\n\nThere is further documentation [here](https://github.com/OpenBankProject/OBP-API/wiki/Transaction-Requests)\n\n\n\n       \n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[COUNTERPARTY](/glossary#counterparty): \n\n\n\n[VIEW_ID](/glossary#this_view_id): owner\n\n\n\n\n\n**JSON request body fields:**\n\n\n\n[**amount**](/glossary#): 10.12\n\n\n\n[**charge_policy**](/glossary#): SHARED\n\n\n\n[**counterparty_id**](/glossary#): 9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**to**](/glossary#to): \n\n\n\n[**value**](/glossary#): 5987953\n\n\n\n[future_date](/glossary#future_date): 20200127\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**account**](/glossary#Account): \n\n\n\n[**account_id**](/glossary#): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[**allowed_attempts**](/glossary#allowed_attempts): 5\n\n\n\n[**amount**](/glossary#): 10.12\n\n\n\n[**bank_code**](/glossary#bank_code): CGHZ\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**branch_number**](/glossary#branch_number): \n\n\n\n[**challenge_type**](/glossary#challenge_type): \n\n\n\n[**challenges**](/glossary#): challenges\n\n\n\n[**charge**](/glossary#charge): \n\n\n\n[**counterparty_id**](/glossary#): 9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**creditorAccount**](/glossary#creditoraccount): \n\n\n\n[**creditorName**](/glossary#creditorname): \n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**date_of_birth**](/glossary#): 2018-03-09\n\n\n\n[**debtorAccount**](/glossary#debtoraccount): \n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**details**](/glossary#details): \n\n\n\n[**end_date**](/glossary#end_date): \n\n\n\n[**from**](/glossary#from): \n\n\n\n[**future_date**](/glossary#future_date): 20200127\n\n\n\n[**iban**](/glossary#): DE91 1000 0000 0123 4567 89\n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**instructedAmount**](/glossary#instructedamount): 100\n\n\n\n[**kyc_document**](/glossary#kyc_document): \n\n\n\n[**legal_name**](/glossary#): Eveline Tripman\n\n\n\n[**link**](/glossary#link): \n\n\n\n[**message**](/glossary#message): 123456\n\n\n\n[**mobile_phone_number**](/glossary#mobile_phone_number): +49 30 901820\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**nickname**](/glossary#nickname): \n\n\n\n[**number**](/glossary#number): \n\n\n\n[**start_date**](/glossary#): 2020-01-27\n\n\n\n[**status**](/glossary#status): \n\n\n\n[**summary**](/glossary#summary): \n\n\n\n[**to**](/glossary#to): \n\n\n\n[**transaction_ids**](/glossary#transaction_ids): \n\n\n\n[**transfer_type**](/glossary#transfer_type): \n\n\n\n[**type**](/glossary#type): \n\n\n\n[**user_id**](/glossary#): 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\n\n\n\n[**value**](/glossary#): 5987953\n\n\n\n[to_counterparty](/glossary#to_counterparty): \n\n\n\n[to_sandbox_tan](/glossary#to_sandbox_tan): \n\n\n\n[to_sepa](/glossary#to_sepa): \n\n\n\n[to_sepa_credit_transfers](/glossary#to_sepa_credit_transfers): \n\n\n\n[to_simple](/glossary#): to_simple\n\n\n\n[to_transfer_to_account](/glossary#to_transfer_to_account): \n\n\n\n[to_transfer_to_atm](/glossary#to_transfer_to_atm): \n\n\n\n[to_transfer_to_phone](/glossary#to_transfer_to_phone): \n\n\n",
      "example_request_body": {
        "to": {
          "counterparty_id": "9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh"
        },
        "value": {
          "currency": "EUR",
          "amount": "0"
        },
        "description": "A description for the transaction to the counterparty",
        "charge_policy": "SHARED",
        "future_date": "20200127"
      },
      "success_response_body": {
        "id": "4050046c-63b3-4868-8a22-14b4181d33a6",
        "type": "SANDBOX_TAN",
        "from": {
          "bank_id": "gh.29.uk",
          "account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
        },
        "details": {
          "to_sandbox_tan": {
            "bank_id": "String",
            "account_id": "String"
          },
          "to_sepa": {
            "iban": "String"
          },
          "to_counterparty": {
            "counterparty_id": "9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh"
          },
          "to_transfer_to_phone": {
            "value": {
              "currency": "EUR",
              "amount": "0"
            },
            "description": "String",
            "message": "String",
            "from": {
              "mobile_phone_number": "+44 07972 444 876",
              "nickname": "String"
            },
            "to": {
              "mobile_phone_number": "+44 07972 444 876"
            }
          },
          "to_transfer_to_atm": {
            "value": {
              "currency": "EUR",
              "amount": "0"
            },
            "description": "String",
            "message": "String",
            "from": {
              "mobile_phone_number": "+44 07972 444 876",
              "nickname": "String"
            },
            "to": {
              "legal_name": "Eveline Tripman",
              "date_of_birth": "20181230",
              "mobile_phone_number": "+44 07972 444 876",
              "kyc_document": {
                "type": "String",
                "number": "String"
              }
            }
          },
          "to_transfer_to_account": {
            "value": {
              "currency": "EUR",
              "amount": "0"
            },
            "description": "String",
            "transfer_type": "String",
            "future_date": "20181230",
            "to": {
              "name": "String",
              "bank_code": "String",
              "branch_number": "String",
              "account": {
                "number": "String",
                "iban": "String"
              }
            }
          },
          "to_sepa_credit_transfers": {
            "debtorAccount": {
              "iban": "12345"
            },
            "instructedAmount": {
              "currency": "EUR",
              "amount": "0"
            },
            "creditorAccount": {
              "iban": "54321"
            },
            "creditorName": "John Miles"
          },
          "value": {
            "currency": "EUR",
            "amount": "100"
          },
          "description": "String"
        },
        "transaction_ids": ["902ba3bb-dedd-45e7-9319-2fd3f2cd98a1"],
        "status": "COMPLETED",
        "start_date": "1100-01-01T00:00:00Z",
        "end_date": "1100-01-01T00:00:00Z",
        "challenges": [
          {
            "id": "2fg8a7e4-6d02-40e3-a129-0b2bf89de8ub",
            "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
            "allowed_attempts": 3,
            "challenge_type": "OBP_TRANSACTION_REQUEST_CHALLENGE",
            "link": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transaction-request-types/TRANSACTION_REQUEST_TYPE/transaction-requests/TRANSACTION_REQUEST_ID/challenge"
          }
        ],
        "charge": {
          "summary": "Rent the flat",
          "value": {
            "currency": "EUR",
            "amount": "0"
          }
        }
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30111: Invalid Bank Id. The BANK_ID should only contain 0-9/a-z/A-Z/'-'/'.'/'_', the length should be smaller than 255.",
        "OBP-30110: Invalid Account Id. The ACCOUNT_ID should only contain 0-9/a-z/A-Z/'-'/'.'/'_', the length should be smaller than 255.",
        "OBP-10001: Incorrect json format.",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30003: Account not found. Please specify a valid value for ACCOUNT_ID.",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-40002: Insufficient authorisation to create TransactionRequest. The Transaction Request could not be created because the login user doesn't have access to the view of the from account or the view don't have the `canAddTransactionRequestToAnyAccount` permission or your consumer doesn't not have the access to the view of the from account or you don't have the role CanCreateAnyTransactionRequest.",
        "OBP-40001: Invalid value for TRANSACTION_REQUEST_TYPE",
        "OBP-10001: Incorrect json format.",
        "OBP-10002: Invalid Number. Could not convert value to a number.",
        "OBP-40008: Can't send a payment with a value of 0 or less.",
        "OBP-40003: Transaction Request Currency must be the same as From Account Currency.",
        "OBP-00003: Transaction Requests is disabled in this API instance.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Transaction-Request", "Payment Initiation Service (PIS)", "PSD2", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "future_date": {
            "type": "string"
          },
          "value": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string"
              },
              "amount": {
                "type": "string"
              }
            }
          },
          "charge_policy": {
            "type": "string"
          },
          "to": {
            "type": "object",
            "properties": {
              "counterparty_id": {
                "type": "string"
              }
            }
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "challenges": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "challenge_type": {
                  "type": "string"
                },
                "link": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "allowed_attempts": {
                  "type": "integer"
                },
                "user_id": {
                  "type": "string"
                }
              }
            }
          },
          "status": {
            "type": "string"
          },
          "end_date": {
            "type": "string",
            "format": "date-time"
          },
          "charge": {
            "type": "object",
            "properties": {
              "summary": {
                "type": "string"
              },
              "value": {
                "type": "object",
                "properties": {
                  "currency": {
                    "type": "string"
                  },
                  "amount": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "transaction_ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "from": {
            "type": "object",
            "properties": {
              "bank_id": {
                "type": "string"
              },
              "account_id": {
                "type": "string"
              }
            }
          },
          "details": {
            "type": "object",
            "properties": {
              "to_sandbox_tan": {
                "type": "object",
                "properties": {
                  "account_id": {
                    "type": "string"
                  },
                  "bank_id": {
                    "type": "string"
                  }
                }
              },
              "value": {
                "type": "object",
                "properties": {
                  "currency": {
                    "type": "string"
                  },
                  "amount": {
                    "type": "string"
                  }
                }
              },
              "to_transfer_to_phone": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  },
                  "from": {
                    "type": "object",
                    "properties": {
                      "nickname": {
                        "type": "string"
                      },
                      "mobile_phone_number": {
                        "type": "string"
                      }
                    }
                  },
                  "to": {
                    "type": "object",
                    "properties": {
                      "mobile_phone_number": {
                        "type": "string"
                      }
                    }
                  },
                  "value": {
                    "type": "object",
                    "properties": {
                      "currency": {
                        "type": "string"
                      },
                      "amount": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "to_sepa": {
                "type": "object",
                "properties": {
                  "iban": {
                    "type": "string"
                  }
                }
              },
              "description": {
                "type": "string"
              },
              "to_counterparty": {
                "type": "object",
                "properties": {
                  "counterparty_id": {
                    "type": "string"
                  }
                }
              },
              "to_transfer_to_account": {
                "type": "object",
                "properties": {
                  "to": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "account": {
                        "type": "object",
                        "properties": {
                          "number": {
                            "type": "string"
                          },
                          "iban": {
                            "type": "string"
                          }
                        }
                      },
                      "bank_code": {
                        "type": "string"
                      },
                      "branch_number": {
                        "type": "string"
                      }
                    }
                  },
                  "transfer_type": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "future_date": {
                    "type": "string"
                  },
                  "value": {
                    "type": "object",
                    "properties": {
                      "currency": {
                        "type": "string"
                      },
                      "amount": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "to_sepa_credit_transfers": {
                "type": "object",
                "properties": {
                  "instructedAmount": {
                    "type": "object",
                    "properties": {
                      "currency": {
                        "type": "string"
                      },
                      "amount": {
                        "type": "string"
                      }
                    }
                  },
                  "debtorAccount": {
                    "type": "object",
                    "properties": {
                      "iban": {
                        "type": "string"
                      }
                    }
                  },
                  "creditorAccount": {
                    "type": "object",
                    "properties": {
                      "iban": {
                        "type": "string"
                      }
                    }
                  },
                  "creditorName": {
                    "type": "string"
                  }
                }
              },
              "to_transfer_to_atm": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  },
                  "from": {
                    "type": "object",
                    "properties": {
                      "nickname": {
                        "type": "string"
                      },
                      "mobile_phone_number": {
                        "type": "string"
                      }
                    }
                  },
                  "value": {
                    "type": "object",
                    "properties": {
                      "currency": {
                        "type": "string"
                      },
                      "amount": {
                        "type": "string"
                      }
                    }
                  },
                  "to": {
                    "type": "object",
                    "properties": {
                      "date_of_birth": {
                        "type": "string"
                      },
                      "kyc_document": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string"
                          },
                          "number": {
                            "type": "string"
                          }
                        }
                      },
                      "legal_name": {
                        "type": "string"
                      },
                      "mobile_phone_number": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "start_date": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transaction-request-types/COUNTERPARTY/transaction-requests",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv3.0.0-dataWarehouseStatistics",
      "implemented_by": {
        "version": "OBPv3.0.0",
        "function": "dataWarehouseStatistics"
      },
      "request_verb": "POST",
      "request_url": "/obp/v3.0.0/search/warehouse/statistics/INDEX/FIELD",
      "summary": "Data Warehouse Statistics",
      "description": "<p>Search the data warehouse and get statistical aggregations over a warehouse field</p>\n<p>Does a stats aggregation over some numeric field:</p>\n<p><a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-metrics-stats-aggregation.html\">https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-metrics-stats-aggregation.html</a></p>\n<p>Authentication is Mandatory</p>\n<p>CanSearchWarehouseStats Role is required. You can request this below.</p>\n<p>Elastic (search) is used in the background. See links below for syntax.</p>\n<p>Examples of usage:</p>\n<p>POST /search/warehouse/statistics/INDEX/FIELD</p>\n<p>POST /search/warehouse/statistics/ALL/FIELD</p>\n<p>{ Any valid elasticsearch query DSL in the body }</p>\n<p><a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl.html\">Elasticsearch query DSL</a></p>\n<p><a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/6.2/search-request-body.html\">Elastic simple query</a></p>\n<p><a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/6.2/search-aggregations.html\">Elastic aggregations</a></p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#field\">FIELD</a>:</p>\n<p><a href=\"/glossary#index\">INDEX</a>:</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#match_all\"><strong>match_all</strong></a>:</p>\n<p><a href=\"/glossary#query\"><strong>query</strong></a>:</p>\n<p><a href=\"/glossary#none\">none</a>:</p>\n<p><strong>JSON response body fields:</strong></p>\n",
      "description_markdown": "Search the data warehouse and get statistical aggregations over a warehouse field\n\nDoes a stats aggregation over some numeric field:\n\nhttps://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-metrics-stats-aggregation.html\n\nAuthentication is Mandatory\n\nCanSearchWarehouseStats Role is required. You can request this below.\n\nElastic (search) is used in the background. See links below for syntax.\n\nExamples of usage:\n\nPOST /search/warehouse/statistics/INDEX/FIELD\n\nPOST /search/warehouse/statistics/ALL/FIELD\n\n{ Any valid elasticsearch query DSL in the body }\n\n\n[Elasticsearch query DSL](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl.html)\n\n[Elastic simple query](https://www.elastic.co/guide/en/elasticsearch/reference/6.2/search-request-body.html)\n\n[Elastic aggregations](https://www.elastic.co/guide/en/elasticsearch/reference/6.2/search-aggregations.html)\n\n\n**URL Parameters:**\n\n[FIELD](/glossary#field): \n\n\n\n[INDEX](/glossary#index): \n\n\n\n\n\n**JSON request body fields:**\n\n\n\n[**match_all**](/glossary#match_all): \n\n\n\n[**query**](/glossary#query): \n\n\n\n[none](/glossary#none): \n\n\n\n\n\n**JSON response body fields:**\n\n\n",
      "example_request_body": {
        "query": {
          "match_all": {}
        }
      },
      "success_response_body": {
        "jsonString": "{}"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Data-Warehouse", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "query": {
            "type": "object",
            "properties": {
              "match_all": {
                "type": "object",
                "properties": {}
              }
            }
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanSearchWarehouseStatistics",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/search/warehouse/statistics/INDEX/FIELD",
      "connector_methods": ["obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv4.0.0-addTagForViewOnAccount",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "addTagForViewOnAccount"
      },
      "request_verb": "POST",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/metadata/tags",
      "summary": "Create a tag on account",
      "description": "<p>Posts a tag about an account ACCOUNT_ID on a <a href=\"#1_2_1-getViewsForBankAccount\">view</a> VIEW_ID.</p>\n<p>Authentication is Mandatory</p>\n<p>Authentication is required as the tag is linked with the user.</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#display_name\"><strong>display_name</strong></a>:</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p>\n<p><a href=\"/glossary#User\"><strong>user</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n",
      "description_markdown": "Posts a tag about an account ACCOUNT_ID on a [view](#1_2_1-getViewsForBankAccount) VIEW_ID.\n\nAuthentication is Mandatory\n\nAuthentication is required as the tag is linked with the user.\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[VIEW_ID](/glossary#this_view_id): owner\n\n\n\n\n\n**JSON request body fields:**\n\n\n\n[**value**](/glossary#): 5987953\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**date**](/glossary#): 2020-01-27\n\n\n\n[**display_name**](/glossary#display_name): \n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**provider**](/glossary#provider): ETHEREUM\n\n\n\n[**user**](/glossary#User): \n\n\n\n[**value**](/glossary#): 5987953\n\n\n",
      "example_request_body": {
        "value": "String"
      },
      "success_response_body": {
        "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
        "value": "OBP",
        "date": "1100-01-01T00:00:00Z",
        "user": {
          "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
          "provider": "http://127.0.0.1:8080",
          "display_name": "OBP"
        }
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-20017: Current user does not have access to the view. Please specify a valid value for VIEW_ID.",
        "OBP-10001: Incorrect json format.",
        "OBP-30022: The current view does not have the permission:",
        "OBP-20017: Current user does not have access to the view. Please specify a valid value for VIEW_ID.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Account-Metadata", "Account", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "user": {
            "type": "object",
            "properties": {
              "provider": {
                "type": "string"
              },
              "display_name": {
                "type": "string"
              },
              "id": {
                "type": "string"
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/metadata/tags",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv4.0.0-createConsumer",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "createConsumer"
      },
      "request_verb": "POST",
      "request_url": "/obp/v4.0.0/management/consumers",
      "summary": "Post a Consumer",
      "description": "<p>Create a Consumer (Authenticated access).</p>\n<p>Authentication is Mandatory</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#app_name\"><strong>app_name</strong></a>:</p>\n<p><a href=\"/glossary#app_type\"><strong>app_type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>clientCertificate</strong></a>: clientCertificate</p>\n<p><a href=\"/glossary#created\"><strong>created</strong></a>:</p>\n<p><a href=\"/glossary#created_by_user_id\"><strong>created_by_user_id</strong></a>:</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#developer_email\"><strong>developer_email</strong></a>:</p>\n<p><a href=\"/glossary#enabled\"><strong>enabled</strong></a>: true</p>\n<p><a href=\"/glossary#redirect_url\"><strong>redirect_url</strong></a>:</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#app_name\"><strong>app_name</strong></a>:</p>\n<p><a href=\"/glossary#app_type\"><strong>app_type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>client_certificate</strong></a>: client_certificate</p>\n<p><a href=\"/glossary#\"><strong>consumer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#created\"><strong>created</strong></a>:</p>\n<p><a href=\"/glossary#created_by_user\"><strong>created_by_user</strong></a>:</p>\n<p><a href=\"/glossary#created_by_user_id\"><strong>created_by_user_id</strong></a>:</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#developer_email\"><strong>developer_email</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"&#109;&#97;&#105;&#x6c;&#x74;&#x6f;&#x3a;&#x66;&#x65;li&#120;&#115;&#109;&#105;th&#64;&#101;&#120;&#x61;&#109;&#112;l&#x65;&#46;c&#111;m\">&#102;e&#108;&#x69;&#120;s&#x6d;&#x69;&#x74;&#104;&#64;&#x65;&#120;&#x61;&#109;&#x70;&#108;&#101;&#46;&#x63;&#x6f;&#109;</a></p>\n<p><a href=\"/glossary#enabled\"><strong>enabled</strong></a>: true</p>\n<p><a href=\"/glossary#\"><strong>key</strong></a>: CustomerNumber</p>\n<p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p>\n<p><a href=\"/glossary#provider_id\"><strong>provider_id</strong></a>:</p>\n<p><a href=\"/glossary#redirect_url\"><strong>redirect_url</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>secret</strong></a>: secret</p>\n<p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p>\n<p><a href=\"/glossary#\"><strong>username</strong></a>: felixsmith</p>\n",
      "description_markdown": "Create a Consumer (Authenticated access).\n\n\n\nAuthentication is Mandatory\n\n\n**JSON request body fields:**\n\n\n\n[**app_name**](/glossary#app_name): \n\n\n\n[**app_type**](/glossary#app_type): \n\n\n\n[**clientCertificate**](/glossary#): clientCertificate\n\n\n\n[**created**](/glossary#created): \n\n\n\n[**created_by_user_id**](/glossary#created_by_user_id): \n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**developer_email**](/glossary#developer_email): \n\n\n\n[**enabled**](/glossary#enabled): true\n\n\n\n[**redirect_url**](/glossary#redirect_url): \n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**app_name**](/glossary#app_name): \n\n\n\n[**app_type**](/glossary#app_type): \n\n\n\n[**client_certificate**](/glossary#): client_certificate\n\n\n\n[**consumer_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**created**](/glossary#created): \n\n\n\n[**created_by_user**](/glossary#created_by_user): \n\n\n\n[**created_by_user_id**](/glossary#created_by_user_id): \n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**developer_email**](/glossary#developer_email): \n\n\n\n[**email**](/glossary#): felixsmith@example.com\n\n\n\n[**enabled**](/glossary#enabled): true\n\n\n\n[**key**](/glossary#): CustomerNumber\n\n\n\n[**provider**](/glossary#provider): ETHEREUM\n\n\n\n[**provider_id**](/glossary#provider_id): \n\n\n\n[**redirect_url**](/glossary#redirect_url): \n\n\n\n[**secret**](/glossary#): secret\n\n\n\n[**user_id**](/glossary#): 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\n\n\n\n[**username**](/glossary#): felixsmith\n\n\n",
      "example_request_body": {
        "app_name": "Test",
        "app_type": "Test",
        "description": "Description",
        "developer_email": "some@email.com",
        "redirect_url": "redirecturl",
        "created_by_user_id": "createdby",
        "enabled": true,
        "created": "2023-04-13T04:30:12Z",
        "clientCertificate": "-----BEGIN CERTIFICATE-----\nclient_certificate_content\n-----END CERTIFICATE-----"
      },
      "success_response_body": {
        "consumer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "key": "xwdgylv3vau0n2gkxu1aize4glapftfldp5y1bic",
        "secret": "bwf0ykmwoirip1yjxcn15wnhuyxcziwgtcoaildq",
        "app_name": "SOFI",
        "app_type": "Web",
        "description": "Account Management",
        "client_certificate": "-----BEGIN CERTIFICATE-----\nclient_certificate_content\n-----END CERTIFICATE-----",
        "developer_email": "felixsmith@example.com",
        "redirect_url": "www.openbankproject.com",
        "created_by_user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
        "created_by_user": {
          "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
          "email": "felixsmith@example.com",
          "provider_id": "Chris",
          "provider": "http://127.0.0.1:8080",
          "username": "felixsmith"
        },
        "enabled": true,
        "created": "1100-01-01T00:00:00Z"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Consumer", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "description": {
            "type": "string"
          },
          "app_name": {
            "type": "string"
          },
          "clientCertificate": {
            "type": "string"
          },
          "developer_email": {
            "type": "string"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "redirect_url": {
            "type": "string"
          },
          "app_type": {
            "type": "string"
          },
          "created_by_user_id": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "app_name": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "created_by_user_id": {
            "type": "string"
          },
          "created_by_user": {
            "type": "object",
            "properties": {
              "provider": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "provider_id": {
                "type": "string"
              },
              "username": {
                "type": "string"
              },
              "user_id": {
                "type": "string"
              }
            }
          },
          "description": {
            "type": "string"
          },
          "developer_email": {
            "type": "string"
          },
          "consumer_id": {
            "type": "string"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "client_certificate": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "redirect_url": {
            "type": "string"
          },
          "secret": {
            "type": "string"
          },
          "app_type": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateConsumer",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/consumers",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv4.0.0-deleteBankLevelEndpointTag",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "deleteBankLevelEndpointTag"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v4.0.0/management/banks/BANK_ID/endpoints/OPERATION_ID/tags/ENDPOINT_TAG_ID",
      "summary": "Delete Bank Level Endpoint Tag",
      "description": "<p>Delete Bank Level Endpoint Tag.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#\">ENDPOINT_TAG_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\">OPERATION_ID</a>: OBPv4.0.0-getBanks</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n",
      "description_markdown": "Delete Bank Level Endpoint Tag.\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[ENDPOINT_TAG_ID](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[OPERATION_ID](/glossary#): OBPv4.0.0-getBanks\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**value**](/glossary#): 5987953\n\n\n",
      "success_response_body": {
        "value": true
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["API", "API", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "value": {
            "type": "boolean"
          }
        }
      },
      "roles": [
        {
          "role": "CanDeleteBankLevelEndpointTag",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/banks/BANK_ID/endpoints/OPERATION_ID/tags/ENDPOINT_TAG_ID",
      "connector_methods": ["obp.deleteEndpointTag", "obp.getEndpointTagById"]
    },
    {
      "operation_id": "OBPv4.0.0-getConsents",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getConsents"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/my/consents",
      "summary": "Get Consents",
      "description": "<p>This endpoint gets the Consents that the current User created.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>api_standard</strong></a>: api_standard</p>\n<p><a href=\"/glossary#api_version\"><strong>api_version</strong></a>:</p>\n<p><a href=\"/glossary#consent_id\"><strong>consent_id</strong></a>:</p>\n<p><a href=\"/glossary#consents\"><strong>consents</strong></a>:</p>\n<p><a href=\"/glossary#jwt\"><strong>jwt</strong></a>:</p>\n<p><a href=\"/glossary#status\"><strong>status</strong></a>:</p>\n",
      "description_markdown": "This endpoint gets the Consents that the current User created.\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**api_standard**](/glossary#): api_standard\n\n\n\n[**api_version**](/glossary#api_version): \n\n\n\n[**consent_id**](/glossary#consent_id): \n\n\n\n[**consents**](/glossary#consents): \n\n\n\n[**jwt**](/glossary#jwt): \n\n\n\n[**status**](/glossary#status): \n\n\n",
      "success_response_body": {
        "consents": [
          {
            "consent_id": "9d429899-24f5-42c8-8565-943ffa6a7945",
            "jwt": "eyJhbGciOiJIUzI1NiJ9.eyJlbnRpdGxlbWVudHMiOltdLCJjcmVhdGVkQnlVc2VySWQiOiJhYjY1MzlhOS1iMTA1LTQ0ODktYTg4My0wYWQ4ZDZjNjE2NTciLCJzdWIiOiIyMWUxYzhjYy1mOTE4LTRlYWMtYjhlMy01ZTVlZWM2YjNiNGIiLCJhdWQiOiJlanpuazUwNWQxMzJyeW9tbmhieDFxbXRvaHVyYnNiYjBraWphanNrIiwibmJmIjoxNTUzNTU0ODk5LCJpc3MiOiJodHRwczpcL1wvd3d3Lm9wZW5iYW5rcHJvamVjdC5jb20iLCJleHAiOjE1NTM1NTg0OTksImlhdCI6MTU1MzU1NDg5OSwianRpIjoiMDlmODhkNWYtZWNlNi00Mzk4LThlOTktNjYxMWZhMWNkYmQ1Iiwidmlld3MiOlt7ImFjY291bnRfaWQiOiJtYXJrb19wcml2aXRlXzAxIiwiYmFua19pZCI6ImdoLjI5LnVrLngiLCJ2aWV3X2lkIjoib3duZXIifSx7ImFjY291bnRfaWQiOiJtYXJrb19wcml2aXRlXzAyIiwiYmFua19pZCI6ImdoLjI5LnVrLngiLCJ2aWV3X2lkIjoib3duZXIifV19.8cc7cBEf2NyQvJoukBCmDLT7LXYcuzTcSYLqSpbxLp4",
            "status": "INITIATED",
            "api_standard": "Berlin Group",
            "api_version": "v1.3"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Consent", "Account Information Service (AIS)", "PSD2", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "consents": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "api_standard": {
                  "type": "string"
                },
                "consent_id": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                },
                "jwt": {
                  "type": "string"
                },
                "api_version": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/my/consents",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv2.0.0-elasticSearchMetrics",
      "implemented_by": {
        "version": "OBPv2.0.0",
        "function": "elasticSearchMetrics"
      },
      "request_verb": "GET",
      "request_url": "/obp/v2.0.0/search/metrics",
      "summary": "Search API Metrics via Elasticsearch",
      "description": "<p>Search the API calls made to this API instance via Elastic Search.</p>\n<p>Login is required.</p>\n<p>CanSearchMetrics entitlement is required to search metrics data.</p>\n<p>parameters:</p>\n<p>esType  - elasticsearch type</p>\n<p>simple query:</p>\n<p>q       - plain_text_query</p>\n<p>df      - default field to search</p>\n<p>sort    - field to sort on</p>\n<p>size    - number of hits returned, default 10</p>\n<p>from    - show hits starting from</p>\n<p>json query:</p>\n<p>source  - JSON_query_(URL-escaped)</p>\n<p>example usage:</p>\n<p>/search/metrics/q=findThis</p>\n<p>or:</p>\n<p>/search/metrics/source={&quot;query&quot;:{&quot;query_string&quot;:{&quot;query&quot;:&quot;findThis&quot;}}}</p>\n<p>Note!!</p>\n<p>The whole JSON query string MUST be URL-encoded:</p>\n<ul>\n<li>For {  use %7B</li>\n<li>For }  use %7D</li>\n<li>For : use %3A</li>\n<li>For &quot; use %22</li>\n</ul>\n<p>etc..</p>\n<p>Only q, source and esType are passed to Elastic</p>\n<p>Elastic simple query: <a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/search-uri-request.html\">https://www.elastic.co/guide/en/elasticsearch/reference/current/search-uri-request.html</a></p>\n<p>Elastic JSON query: <a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-filter-context.html\">https://www.elastic.co/guide/en/elasticsearch/reference/current/query-filter-context.html</a></p>\n<p>Authentication is Mandatory</p>\n<p><strong>JSON response body fields:</strong></p>\n",
      "description_markdown": "Search the API calls made to this API instance via Elastic Search.\n\nLogin is required.\n\nCanSearchMetrics entitlement is required to search metrics data.\n\n\nparameters:\n\n esType  - elasticsearch type\n\n simple query:\n\n q       - plain_text_query\n\n df      - default field to search\n\n sort    - field to sort on\n\n size    - number of hits returned, default 10\n\n from    - show hits starting from\n\n json query:\n\n source  - JSON_query_(URL-escaped)\n\n\nexample usage:\n\n /search/metrics/q=findThis\n\nor:\n\n /search/metrics/source={\"query\":{\"query_string\":{\"query\":\"findThis\"}}}\n\n\nNote!!\n\nThe whole JSON query string MUST be URL-encoded:\n\n* For {  use %7B\n* For }  use %7D\n* For : use %3A\n* For \" use %22\n\netc..\n\n\n\nOnly q, source and esType are passed to Elastic\n\nElastic simple query: https://www.elastic.co/guide/en/elasticsearch/reference/current/search-uri-request.html\n\nElastic JSON query: https://www.elastic.co/guide/en/elasticsearch/reference/current/query-filter-context.html\n\n\n        \n\nAuthentication is Mandatory\n\n\n**JSON response body fields:**\n\n\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "jsonString": "{}"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Metric", "API"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanSearchMetrics",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/search/metrics",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv3.1.0-deleteUserAuthContexts",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "deleteUserAuthContexts"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v3.1.0/users/USER_ID/auth-context",
      "summary": "Delete User's Auth Contexts",
      "description": "<p>Delete the Auth Contexts of a User specified by USER_ID.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#User.user_id\">USER_ID</a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p>\n<p><strong>JSON response body fields:</strong></p>\n",
      "description_markdown": "Delete the Auth Contexts of a User specified by USER_ID.\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[USER_ID](/glossary#User.user_id): 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\n\n\n\n\n\n**JSON response body fields:**\n\n\n",
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["User", "New-Style"],
      "roles": [
        {
          "role": "CanDeleteUserAuthContext",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/users/USER_ID/auth-context",
      "connector_methods": ["obp.deleteUserAuthContexts", "obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv3.1.0-createMethodRouting",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "createMethodRouting"
      },
      "request_verb": "POST",
      "request_url": "/obp/v3.1.0/management/method_routings",
      "summary": "Create MethodRouting",
      "description": "<p>Create a MethodRouting.</p>\n<p>Authentication is Mandatory</p>\n<p>Explanation of Fields:</p>\n<ul>\n<li>method_name is required String value, current supported value: [mapped]</li>\n<li>connector_name is required String value</li>\n<li>is_bank_id_exact_match is required boolean value, if bank_id_pattern is exact bank_id value, this value is true; if bank_id_pattern is null or a regex, this value is false</li>\n<li>bank_id_pattern is optional String value, it can be null, a exact bank_id or a regex</li>\n<li>parameters is optional array of key value pairs. You can set some parameters for this method</li>\n</ul>\n<p>note and CAVEAT!:</p>\n<ul>\n<li>bank_id_pattern has to be empty for methods that do not take bank_id as a function parameter, otherwise might get empty result</li>\n<li>methods that aggregate bank objects (e.g. getBankAccountsForUser) have to take any  existing method routings for these objects into consideration</li>\n<li>so if you create e.g. a bank specific method routing for getting an account, make sure that it is also served by endpoints getting ALL accounts for ALL banks</li>\n<li>if bank_id_pattern is regex, special characters need to do escape, for example: bank_id_pattern = &quot;some-id_pattern_\\d+&quot;</li>\n</ul>\n<p>If the connector name starts with rest, parameters can contain &quot;outBoundMapping&quot; and &quot;inBoundMapping&quot;, convert OutBound and InBound json structure.<br />\nfor example:<br />\noutBoundMapping example, convert json from source to target:<br />\n<img src=\"https://user-images.githubusercontent.com/2577334/75248007-33332e00-580e-11ea-8d2a-d1856035fa24.png\" alt=\"Snipaste_outBoundMapping\" /><br />\nBuild OutBound json value rules:<br />\n1 set cId value with: outboundAdapterCallContext.correlationId value<br />\n2 set bankId value with: concat bankId.value value with  string helloworld<br />\n3 set originalJson value with: whole source json, note: the field value expression is $root</p>\n<p>inBoundMapping example, convert json from source to target:<br />\n<img src=\"https://user-images.githubusercontent.com/2577334/75248199-a9d02b80-580e-11ea-9238-e073264e9170.png\" alt=\"inBoundMapping\" /><br />\nBuild InBound json value rules:<br />\n1 and 2 set inboundAdapterCallContext and status value: because field name ends with &quot;$default&quot;, remove &quot;$default&quot; from field name, not change the value<br />\n3 set fullName value with: concat string full: with result.name value<br />\n4 set bankRoutingScheme value: because source value is Array, but target value is not Array, the mapping field name must ends with [0].</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>key</strong></a>: CustomerNumber</p>\n<p><a href=\"/glossary#parameters\"><strong>parameters</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>key</strong></a>: CustomerNumber</p>\n<p><a href=\"/glossary#parameters\"><strong>parameters</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n",
      "description_markdown": "Create a MethodRouting.\n\n\nAuthentication is Mandatory\n\nExplanation of Fields:\n\n* method_name is required String value, current supported value: [mapped]\n* connector_name is required String value\n* is_bank_id_exact_match is required boolean value, if bank_id_pattern is exact bank_id value, this value is true; if bank_id_pattern is null or a regex, this value is false\n* bank_id_pattern is optional String value, it can be null, a exact bank_id or a regex\n* parameters is optional array of key value pairs. You can set some parameters for this method\n\nnote and CAVEAT!:\n\n* bank_id_pattern has to be empty for methods that do not take bank_id as a function parameter, otherwise might get empty result\n* methods that aggregate bank objects (e.g. getBankAccountsForUser) have to take any  existing method routings for these objects into consideration\n* so if you create e.g. a bank specific method routing for getting an account, make sure that it is also served by endpoints getting ALL accounts for ALL banks\n* if bank_id_pattern is regex, special characters need to do escape, for example: bank_id_pattern = \"some\\-id_pattern_\\d+\"\n\nIf the connector name starts with rest, parameters can contain \"outBoundMapping\" and \"inBoundMapping\", convert OutBound and InBound json structure.\nfor example:\n outBoundMapping example, convert json from source to target:\n![Snipaste_outBoundMapping](https://user-images.githubusercontent.com/2577334/75248007-33332e00-580e-11ea-8d2a-d1856035fa24.png)\nBuild OutBound json value rules:\n1 set cId value with: outboundAdapterCallContext.correlationId value\n2 set bankId value with: concat bankId.value value with  string helloworld\n3 set originalJson value with: whole source json, note: the field value expression is $root\n\n\n inBoundMapping example, convert json from source to target:\n![inBoundMapping](https://user-images.githubusercontent.com/2577334/75248199-a9d02b80-580e-11ea-9238-e073264e9170.png)\nBuild InBound json value rules:\n1 and 2 set inboundAdapterCallContext and status value: because field name ends with \"$default\", remove \"$default\" from field name, not change the value\n3 set fullName value with: concat string full: with result.name value\n4 set bankRoutingScheme value: because source value is Array, but target value is not Array, the mapping field name must ends with [0].\n\n\n**JSON request body fields:**\n\n\n\n[**key**](/glossary#): CustomerNumber\n\n\n\n[**parameters**](/glossary#parameters): \n\n\n\n[**value**](/glossary#): 5987953\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**key**](/glossary#): CustomerNumber\n\n\n\n[**parameters**](/glossary#parameters): \n\n\n\n[**value**](/glossary#): 5987953\n\n\n",
      "example_request_body": {
        "is_bank_id_exact_match": false,
        "method_name": "getBank",
        "connector_name": "rest_vMar2019",
        "bank_id_pattern": "some_bankId_.*",
        "parameters": [
          {
            "key": "url",
            "value": "http://mydomain.com/xxx"
          }
        ]
      },
      "success_response_body": {
        "is_bank_id_exact_match": false,
        "method_name": "getBank",
        "connector_name": "rest_vMar2019",
        "method_routing_id": "this-method-routing-Id",
        "bank_id_pattern": "some_bankId_.*",
        "parameters": [
          {
            "key": "url",
            "value": "http://mydomain.com/xxx"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-10001: Incorrect json format.",
        "OBP-10021: Incorrect Connector name.",
        "OBP-10022: Incorrect Connector method name.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Method-Routing", "API", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "method_name": {
            "type": "string"
          },
          "bank_id_pattern": {
            "type": "string"
          },
          "parameters": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string"
                },
                "key": {
                  "type": "string"
                }
              }
            }
          },
          "is_bank_id_exact_match": {
            "type": "boolean"
          },
          "connector_name": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "method_name": {
            "type": "string"
          },
          "bank_id_pattern": {
            "type": "string"
          },
          "parameters": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string"
                },
                "key": {
                  "type": "string"
                }
              }
            }
          },
          "is_bank_id_exact_match": {
            "type": "boolean"
          },
          "method_routing_id": {
            "type": "string"
          },
          "connector_name": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateMethodRouting",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/method_routings",
      "connector_methods": ["obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv1.2.1-getOtherAccountMetadata",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "getOtherAccountMetadata"
      },
      "request_verb": "GET",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/metadata",
      "summary": "Get Other Account Metadata",
      "description": "<p>Get metadata of one other account.<br />\nReturns only the metadata about one other bank account (OTHER_ACCOUNT_ID) that had shared at least one transaction with ACCOUNT_ID at BANK_ID.</p>\n<p>Authentication via OAuth is required if the view is not public.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#other_account_id\">OTHER_ACCOUNT_ID</a>:</p>\n<p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>URL</strong></a>: <a href=\"http://www.example.com/id-docs/123/image.png\">http://www.example.com/id-docs/123/image.png</a></p>\n<p><a href=\"/glossary#corporate_location\"><strong>corporate_location</strong></a>: 10</p>\n<p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#display_name\"><strong>display_name</strong></a>:</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#image_url\"><strong>image_URL</strong></a>:</p>\n<p><a href=\"/glossary#latitude\"><strong>latitude</strong></a>: 38.8951</p>\n<p><a href=\"/glossary#longitude\"><strong>longitude</strong></a>: -77.0364</p>\n<p><a href=\"/glossary#more_info\"><strong>more_info</strong></a>: More information about this fee</p>\n<p><a href=\"/glossary#open_corporates_url\"><strong>open_corporates_URL</strong></a>:</p>\n<p><a href=\"/glossary#physical_location\"><strong>physical_location</strong></a>:</p>\n<p><a href=\"/glossary#private_alias\"><strong>private_alias</strong></a>:</p>\n<p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p>\n<p><a href=\"/glossary#public_alias\"><strong>public_alias</strong></a>:</p>\n<p><a href=\"/glossary#User\"><strong>user</strong></a>:</p>\n",
      "description_markdown": "Get metadata of one other account.\nReturns only the metadata about one other bank account (OTHER_ACCOUNT_ID) that had shared at least one transaction with ACCOUNT_ID at BANK_ID.\n\nAuthentication via OAuth is required if the view is not public.\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[OTHER_ACCOUNT_ID](/glossary#other_account_id): \n\n\n\n[VIEW_ID](/glossary#this_view_id): owner\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**URL**](/glossary#): http://www.example.com/id-docs/123/image.png\n\n\n\n[**corporate_location**](/glossary#corporate_location): 10\n\n\n\n[**date**](/glossary#): 2020-01-27\n\n\n\n[**display_name**](/glossary#display_name): \n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**image_URL**](/glossary#image_url): \n\n\n\n[**latitude**](/glossary#latitude): 38.8951\n\n\n\n[**longitude**](/glossary#longitude): -77.0364\n\n\n\n[**more_info**](/glossary#more_info): More information about this fee\n\n\n\n[**open_corporates_URL**](/glossary#open_corporates_url): \n\n\n\n[**physical_location**](/glossary#physical_location): \n\n\n\n[**private_alias**](/glossary#private_alias): \n\n\n\n[**provider**](/glossary#provider): ETHEREUM\n\n\n\n[**public_alias**](/glossary#public_alias): \n\n\n\n[**user**](/glossary#User): \n\n\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "public_alias": "NONE",
        "private_alias": "NONE",
        "more_info": "www.openbankproject.com",
        "URL": "www.openbankproject.com",
        "image_URL": "www.openbankproject.com",
        "open_corporates_URL": "www.openbankproject.com",
        "corporate_location": {
          "latitude": 1.231,
          "longitude": 1.231,
          "date": "1100-01-01T00:00:00Z",
          "user": {
            "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
            "provider": "http://127.0.0.1:8080",
            "display_name": "OBP"
          }
        },
        "physical_location": {
          "latitude": 1.231,
          "longitude": 1.231,
          "date": "1100-01-01T00:00:00Z",
          "user": {
            "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
            "provider": "http://127.0.0.1:8080",
            "display_name": "OBP"
          }
        }
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-50000: Unknown Error.",
        "the view does not allow metadata access"
      ],
      "tags": ["Counterparty-Metadata", "Counterparty", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "image_URL": {
            "type": "string"
          },
          "corporate_location": {
            "type": "object",
            "properties": {
              "longitude": {
                "type": "number"
              },
              "date": {
                "type": "string",
                "format": "date-time"
              },
              "latitude": {
                "type": "number"
              },
              "user": {
                "type": "object",
                "properties": {
                  "provider": {
                    "type": "string"
                  },
                  "display_name": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "URL": {
            "type": "string"
          },
          "open_corporates_URL": {
            "type": "string"
          },
          "physical_location": {
            "type": "object",
            "properties": {
              "longitude": {
                "type": "number"
              },
              "date": {
                "type": "string",
                "format": "date-time"
              },
              "latitude": {
                "type": "number"
              },
              "user": {
                "type": "object",
                "properties": {
                  "provider": {
                    "type": "string"
                  },
                  "display_name": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "public_alias": {
            "type": "string"
          },
          "private_alias": {
            "type": "string"
          },
          "more_info": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/metadata",
      "connector_methods": ["obp.checkBankAccountExists", "obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv2.0.0-getKycChecks",
      "implemented_by": {
        "version": "OBPv2.0.0",
        "function": "getKycChecks"
      },
      "request_verb": "GET",
      "request_url": "/obp/v2.0.0/customers/CUSTOMER_ID/kyc_checks",
      "summary": "Get Customer KYC Checks",
      "description": "<p>Get KYC checks for the Customer specified by CUSTOMER_ID.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Customer.customer_id\">CUSTOMER_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#checks\"><strong>checks</strong></a>:</p>\n<p><a href=\"/glossary#comments\"><strong>comments</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>customer_number</strong></a>: 5987953</p>\n<p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#how\"><strong>how</strong></a>:</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#satisfied\"><strong>satisfied</strong></a>: true</p>\n<p><a href=\"/glossary#staff_name\"><strong>staff_name</strong></a>:</p>\n<p><a href=\"/glossary#staff_user_id\"><strong>staff_user_id</strong></a>:</p>\n",
      "description_markdown": "Get KYC checks for the Customer specified by CUSTOMER_ID.\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[CUSTOMER_ID](/glossary#Customer.customer_id): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**checks**](/glossary#checks): \n\n\n\n[**comments**](/glossary#comments): \n\n\n\n[**customer_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**customer_number**](/glossary#): 5987953\n\n\n\n[**date**](/glossary#): 2020-01-27\n\n\n\n[**how**](/glossary#how): \n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**satisfied**](/glossary#satisfied): true\n\n\n\n[**staff_name**](/glossary#staff_name): \n\n\n\n[**staff_user_id**](/glossary#staff_user_id): \n\n\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "checks": [
          {
            "bank_id": "gh.29.uk",
            "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
            "id": "PlaceholderString",
            "customer_number": "5987953",
            "date": "1100-01-01T00:00:00Z",
            "how": "PlaceholderString",
            "staff_user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
            "staff_name": "PlaceholderString",
            "satisfied": true,
            "comments": "PlaceholderString"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30046: Customer not found. Please specify a valid value for CUSTOMER_ID.",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["KYC", "Customer", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "checks": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "comments": {
                  "type": "string"
                },
                "customer_id": {
                  "type": "string"
                },
                "staff_user_id": {
                  "type": "string"
                },
                "bank_id": {
                  "type": "string"
                },
                "customer_number": {
                  "type": "string"
                },
                "date": {
                  "type": "string",
                  "format": "date-time"
                },
                "id": {
                  "type": "string"
                },
                "satisfied": {
                  "type": "boolean"
                },
                "how": {
                  "type": "string"
                },
                "staff_name": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetAnyKycChecks",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/customers/CUSTOMER_ID/kyc_checks",
      "connector_methods": [
        "obp.getKycChecks",
        "obp.getCustomerByCustomerId",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv3.1.0-createAccountAttribute",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "createAccountAttribute"
      },
      "request_verb": "POST",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/products/PRODUCT_CODE/attribute",
      "summary": "Create Account Attribute",
      "description": "<p>Create Account Attribute</p>\n<p>Account Attributes are used to describe a financial Product with a list of typed key value pairs.</p>\n<p>Each Account Attribute is linked to its Account by ACCOUNT_ID</p>\n<p>Typical account attributes might be:</p>\n<p>ISIN (for International bonds)<br />\nVKN (for German bonds)<br />\nREDCODE (markit short code for credit derivative)<br />\nLOAN_ID (e.g. used for Anacredit reporting)</p>\n<p>ISSUE_DATE (When the bond was issued in the market)<br />\nMATURITY_DATE (End of life time of a product)<br />\nTRADABLE</p>\n<p>See <a href=\"http://www.fpml.org/\">FPML</a> for more examples.</p>\n<p>The type field must be one of &quot;STRING&quot;, &quot;INTEGER&quot;, &quot;DOUBLE&quot; or DATE_WITH_DAY&quot;</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#product_code\">PRODUCT_CODE</a>: 1234BW</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n<p><a href=\"/glossary#\">product_instance_code</a>: product_instance_code</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#account_attribute_id\"><strong>account_attribute_id</strong></a>:</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#product_code\"><strong>product_code</strong></a>: 1234BW</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n<p><a href=\"/glossary#\">product_instance_code</a>: product_instance_code</p>\n",
      "description_markdown": "Create Account Attribute\n\n\nAccount Attributes are used to describe a financial Product with a list of typed key value pairs.\n\nEach Account Attribute is linked to its Account by ACCOUNT_ID\n\n\n       \n\nTypical account attributes might be:\n\nISIN (for International bonds)\nVKN (for German bonds)\nREDCODE (markit short code for credit derivative)\nLOAN_ID (e.g. used for Anacredit reporting)\n\nISSUE_DATE (When the bond was issued in the market)\nMATURITY_DATE (End of life time of a product)\nTRADABLE\n\nSee [FPML](http://www.fpml.org/) for more examples.\n\nThe type field must be one of \"STRING\", \"INTEGER\", \"DOUBLE\" or DATE_WITH_DAY\"\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[PRODUCT_CODE](/glossary#product_code): 1234BW\n\n\n\n\n\n**JSON request body fields:**\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**type**](/glossary#type): \n\n\n\n[**value**](/glossary#): 5987953\n\n\n\n[product_instance_code](/glossary#): product_instance_code\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**account_attribute_id**](/glossary#account_attribute_id): \n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**product_code**](/glossary#product_code): 1234BW\n\n\n\n[**type**](/glossary#type): \n\n\n\n[**value**](/glossary#): 5987953\n\n\n\n[product_instance_code](/glossary#): product_instance_code\n\n\n",
      "example_request_body": {
        "name": "OVERDRAFT_START_DATE",
        "type": "DATE_WITH_DAY",
        "value": "2012-04-23",
        "product_instance_code": "LKJL98769F"
      },
      "success_response_body": {
        "product_code": "1234BW",
        "account_attribute_id": "613c83ea-80f9-4560-8404-b9cd4ec42a7f",
        "name": "OVERDRAFT_START_DATE",
        "type": "DATE_WITH_DAY",
        "value": "2012-04-23",
        "product_instance_code": "LKJL98769F"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["Account", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "product_instance_code": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "product_code": {
            "type": "string"
          },
          "account_attribute_id": {
            "type": "string"
          },
          "product_instance_code": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateAccountAttributeAtOneBank",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/products/PRODUCT_CODE/attribute",
      "connector_methods": [
        "obp.getProduct",
        "obp.createOrUpdateAccountAttribute",
        "obp.checkBankAccountExists",
        "obp.getBank",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv2.0.0-addKycDocument",
      "implemented_by": {
        "version": "OBPv2.0.0",
        "function": "addKycDocument"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v2.0.0/banks/BANK_ID/customers/CUSTOMER_ID/kyc_documents/KYC_DOCUMENT_ID",
      "summary": "Add KYC Document",
      "description": "<p>Add a KYC document for the customer specified by CUSTOMER_ID. KYC Documents contain the document type (e.g. passport), place of issue, expiry etc.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#Customer.customer_id\">CUSTOMER_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#kyc_document_id\">KYC_DOCUMENT_ID</a>:</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>customer_number</strong></a>: 5987953</p>\n<p><a href=\"/glossary#\"><strong>expiry_date</strong></a>: 2021-01-27</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#\"><strong>issue_date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#issue_place\"><strong>issue_place</strong></a>:</p>\n<p><a href=\"/glossary#number\"><strong>number</strong></a>:</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n",
      "description_markdown": "Add a KYC document for the customer specified by CUSTOMER_ID. KYC Documents contain the document type (e.g. passport), place of issue, expiry etc. \n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[CUSTOMER_ID](/glossary#Customer.customer_id): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[KYC_DOCUMENT_ID](/glossary#kyc_document_id): \n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**customer_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**customer_number**](/glossary#): 5987953\n\n\n\n[**expiry_date**](/glossary#): 2021-01-27\n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**issue_date**](/glossary#): 2020-01-27\n\n\n\n[**issue_place**](/glossary#issue_place): \n\n\n\n[**number**](/glossary#number): \n\n\n\n[**type**](/glossary#type): \n\n\n",
      "example_request_body": {
        "customer_number": "5987953",
        "type": "passport",
        "number": "12345",
        "issue_date": "1100-01-01T00:00:00Z",
        "issue_place": "Berlin",
        "expiry_date": "1100-01-01T00:00:00Z"
      },
      "success_response_body": {
        "bank_id": "gh.29.uk",
        "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "id": "PlaceholderString",
        "customer_number": "5987953",
        "type": "PlaceholderString",
        "number": "PlaceholderString",
        "issue_date": "1100-01-01T00:00:00Z",
        "issue_place": "PlaceholderString",
        "expiry_date": "1100-01-01T00:00:00Z"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-10001: Incorrect json format.",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30046: Customer not found. Please specify a valid value for CUSTOMER_ID.",
        "Server error: could not add KycDocument",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["KYC", "Customer", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "issue_place": {
            "type": "string"
          },
          "expiry_date": {
            "type": "string",
            "format": "date-time"
          },
          "issue_date": {
            "type": "string",
            "format": "date-time"
          },
          "customer_number": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "number": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "expiry_date": {
            "type": "string",
            "format": "date-time"
          },
          "issue_place": {
            "type": "string"
          },
          "customer_id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "issue_date": {
            "type": "string",
            "format": "date-time"
          },
          "number": {
            "type": "string"
          },
          "bank_id": {
            "type": "string"
          },
          "customer_number": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanAddKycDocument",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/customers/CUSTOMER_ID/kyc_documents/KYC_DOCUMENT_ID",
      "connector_methods": [
        "obp.createOrUpdateKycDocument",
        "obp.getCustomerByCustomerId",
        "obp.getBank",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv4.0.0-resetPasswordUrl",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "resetPasswordUrl"
      },
      "request_verb": "POST",
      "request_url": "/obp/v4.0.0/management/user/reset-password-url",
      "summary": "Create password reset url",
      "description": "<p>Create password reset url.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"&#x6d;a&#x69;&#108;&#116;o:&#x66;&#101;&#x6c;&#x69;xs&#109;i&#116;&#104;@&#101;&#x78;&#97;m&#112;&#x6c;&#x65;&#46;&#99;&#111;&#x6d;\">&#102;&#x65;l&#105;&#120;s&#109;&#105;&#x74;&#104;&#64;&#x65;&#120;a&#x6d;&#112;&#x6c;&#x65;.&#99;&#111;&#109;</a></p>\n<p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p>\n<p><a href=\"/glossary#\"><strong>username</strong></a>: felixsmith</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#reset_password_url\"><strong>reset_password_url</strong></a>:</p>\n",
      "description_markdown": "Create password reset url.\n\n\n\nAuthentication is Mandatory\n\n\n**JSON request body fields:**\n\n\n\n[**email**](/glossary#): felixsmith@example.com\n\n\n\n[**user_id**](/glossary#): 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\n\n\n\n[**username**](/glossary#): felixsmith\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**reset_password_url**](/glossary#reset_password_url): \n\n\n",
      "example_request_body": {
        "username": "jobloggs",
        "email": "jo@gmail.com",
        "user_id": "74a8ebcc-10e4-4036-bef3-9835922246bf"
      },
      "success_response_body": {
        "reset_password_url": "https://apisandbox.openbankproject.com/user_mgt/reset_password/QOL1CPNJPCZ4BRMPX3Z01DPOX1HMGU3L"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["User", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "reset_password_url": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateResetPasswordUrl",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/user/reset-password-url",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv3.1.0-updateCustomerCreditLimit",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "updateCustomerCreditLimit"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/customers/CUSTOMER_ID/credit-limit",
      "summary": "Update the credit limit of a Customer",
      "description": "<p>Update the credit limit of the Customer specified by CUSTOMER_ID.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#Customer.customer_id\">CUSTOMER_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#\"><strong>branch_id</strong></a>: DERBY6</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>customer_number</strong></a>: 5987953</p>\n<p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#\"><strong>date_of_birth</strong></a>: 2018-03-09</p>\n<p><a href=\"/glossary#\"><strong>dependants</strong></a>: 1</p>\n<p><a href=\"/glossary#dob_of_dependants\"><strong>dob_of_dependants</strong></a>: [2019-09-08, 2017-07-12]</p>\n<p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"&#109;ai&#108;&#x74;&#111;&#58;&#x66;e&#108;&#105;&#x78;&#115;&#109;&#x69;th&#x40;&#x65;&#x78;&#x61;&#x6d;&#112;l&#101;.c&#x6f;&#109;\">&#102;&#x65;l&#x69;&#x78;&#x73;&#x6d;i&#116;&#104;&#x40;&#x65;x&#97;&#109;pl&#x65;&#x2e;co&#109;</a></p>\n<p><a href=\"/glossary#\"><strong>employment_status</strong></a>: worker</p>\n<p><a href=\"/glossary#face_image\"><strong>face_image</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>highest_education_attained</strong></a>: Master</p>\n<p><a href=\"/glossary#\"><strong>kyc_status</strong></a>: true</p>\n<p><a href=\"/glossary#last_ok_date\"><strong>last_ok_date</strong></a>: 2022-04-13T04:30:07.985Z</p>\n<p><a href=\"/glossary#\"><strong>legal_name</strong></a>: Eveline Tripman</p>\n<p><a href=\"/glossary#mobile_phone_number\"><strong>mobile_phone_number</strong></a>: +49 30 901820</p>\n<p><a href=\"/glossary#\"><strong>name_suffix</strong></a>: Sr</p>\n<p><a href=\"/glossary#\"><strong>rating</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>relationship_status</strong></a>: single</p>\n<p><a href=\"/glossary#\"><strong>source</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>title</strong></a>: Dr.</p>\n<p><a href=\"/glossary#\"><strong>url</strong></a>: <a href=\"http://www.example.com/id-docs/123/image.png\">http://www.example.com/id-docs/123/image.png</a></p>\n<p><a href=\"/glossary#credit_limit\">credit_limit</a>:</p>\n<p><a href=\"/glossary#credit_rating\">credit_rating</a>:</p>\n",
      "description_markdown": "Update the credit limit of the Customer specified by CUSTOMER_ID.\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[CUSTOMER_ID](/glossary#Customer.customer_id): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**amount**](/glossary#): 10.12\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**branch_id**](/glossary#): DERBY6\n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**customer_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**customer_number**](/glossary#): 5987953\n\n\n\n[**date**](/glossary#): 2020-01-27\n\n\n\n[**date_of_birth**](/glossary#): 2018-03-09\n\n\n\n[**dependants**](/glossary#): 1\n\n\n\n[**dob_of_dependants**](/glossary#dob_of_dependants): [2019-09-08, 2017-07-12]\n\n\n\n[**email**](/glossary#): felixsmith@example.com\n\n\n\n[**employment_status**](/glossary#): worker\n\n\n\n[**face_image**](/glossary#face_image): \n\n\n\n[**highest_education_attained**](/glossary#): Master\n\n\n\n[**kyc_status**](/glossary#): true\n\n\n\n[**last_ok_date**](/glossary#last_ok_date): 2022-04-13T04:30:07.985Z\n\n\n\n[**legal_name**](/glossary#): Eveline Tripman\n\n\n\n[**mobile_phone_number**](/glossary#mobile_phone_number): +49 30 901820\n\n\n\n[**name_suffix**](/glossary#): Sr\n\n\n\n[**rating**](/glossary#): \n\n\n\n[**relationship_status**](/glossary#): single\n\n\n\n[**source**](/glossary#): \n\n\n\n[**title**](/glossary#): Dr.\n\n\n\n[**url**](/glossary#): http://www.example.com/id-docs/123/image.png\n\n\n\n[credit_limit](/glossary#credit_limit): \n\n\n\n[credit_rating](/glossary#credit_rating): \n\n\n",
      "example_request_body": {
        "credit_limit": {
          "currency": "EUR",
          "amount": "1000"
        }
      },
      "success_response_body": {
        "bank_id": "gh.29.uk",
        "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "customer_number": "5987953",
        "legal_name": "Eveline Tripman",
        "mobile_phone_number": "+44 07972 444 876",
        "email": "felixsmith@example.com",
        "face_image": {
          "url": "www.openbankproject",
          "date": "1100-01-01T00:00:00Z"
        },
        "date_of_birth": "1100-01-01T00:00:00Z",
        "relationship_status": "single",
        "dependants": 1,
        "dob_of_dependants": ["1100-01-01T00:00:00Z"],
        "credit_rating": {
          "rating": "OBP",
          "source": "OBP"
        },
        "credit_limit": {
          "currency": "EUR",
          "amount": "0"
        },
        "highest_education_attained": "Master",
        "employment_status": "worker",
        "kyc_status": true,
        "last_ok_date": "2022-04-13T04:30:08Z",
        "title": "Dr.",
        "branch_id": "DERBY6",
        "name_suffix": "Sr"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Customer", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "credit_limit": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string"
              },
              "amount": {
                "type": "string"
              }
            }
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "dependants": {
            "type": "integer"
          },
          "dob_of_dependants": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            }
          },
          "face_image": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string"
              },
              "date": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          "credit_limit": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string"
              },
              "amount": {
                "type": "string"
              }
            }
          },
          "employment_status": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "customer_id": {
            "type": "string"
          },
          "relationship_status": {
            "type": "string"
          },
          "bank_id": {
            "type": "string"
          },
          "highest_education_attained": {
            "type": "string"
          },
          "customer_number": {
            "type": "string"
          },
          "credit_rating": {
            "type": "object",
            "properties": {
              "rating": {
                "type": "string"
              },
              "source": {
                "type": "string"
              }
            }
          },
          "name_suffix": {
            "type": "string"
          },
          "last_ok_date": {
            "type": "string",
            "format": "date-time"
          },
          "legal_name": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "branch_id": {
            "type": "string"
          },
          "date_of_birth": {
            "type": "string",
            "format": "date-time"
          },
          "mobile_phone_number": {
            "type": "string"
          },
          "kyc_status": {
            "type": "boolean"
          }
        }
      },
      "roles": [
        {
          "role": "CanUpdateCustomerCreditLimit",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/customers/CUSTOMER_ID/credit-limit",
      "connector_methods": [
        "obp.updateCustomerCreditData",
        "obp.getCustomerByCustomerId",
        "obp.getBank",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv5.0.0-createCustomer",
      "implemented_by": {
        "version": "OBPv5.0.0",
        "function": "createCustomer"
      },
      "request_verb": "POST",
      "request_url": "/obp/v5.0.0/banks/BANK_ID/customers",
      "summary": "Create Customer",
      "description": "<p>The Customer resource stores the customer number (which is set by the backend), legal name, email, phone number, their date of birth, relationship status, education attained, a url for a profile image, KYC status etc.<br />\nDates need to be in the format 2013-01-21T23:08:00Z</p>\n<p>Note: If you need to set a specific customer number, use the Update Customer Number endpoint after this call.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#\"><strong>legal_name</strong></a>: Eveline Tripman</p>\n<p><a href=\"/glossary#mobile_phone_number\"><strong>mobile_phone_number</strong></a>: +49 30 901820</p>\n<p><a href=\"/glossary#\"><strong>rating</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>source</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>url</strong></a>: <a href=\"http://www.example.com/id-docs/123/image.png\">http://www.example.com/id-docs/123/image.png</a></p>\n<p><a href=\"/glossary#\">branch_id</a>: DERBY6</p>\n<p><a href=\"/glossary#credit_limit\">credit_limit</a>:</p>\n<p><a href=\"/glossary#credit_rating\">credit_rating</a>:</p>\n<p><a href=\"/glossary#\">customer_number</a>: 5987953</p>\n<p><a href=\"/glossary#\">date_of_birth</a>: 2018-03-09</p>\n<p><a href=\"/glossary#\">dependants</a>: 1</p>\n<p><a href=\"/glossary#dob_of_dependants\">dob_of_dependants</a>: [2019-09-08, 2017-07-12]</p>\n<p><a href=\"/glossary#\">email</a>: <a href=\"&#109;&#97;&#105;l&#116;o:fe&#108;&#x69;x&#115;m&#105;&#x74;h&#64;&#x65;x&#97;m&#x70;le.c&#x6f;&#x6d;\">&#x66;&#x65;&#x6c;&#x69;x&#x73;&#x6d;i&#116;h&#64;&#x65;&#120;&#97;mp&#108;&#101;.c&#111;&#109;</a></p>\n<p><a href=\"/glossary#\">employment_status</a>: worker</p>\n<p><a href=\"/glossary#face_image\">face_image</a>:</p>\n<p><a href=\"/glossary#\">highest_education_attained</a>: Master</p>\n<p><a href=\"/glossary#\">kyc_status</a>: true</p>\n<p><a href=\"/glossary#last_ok_date\">last_ok_date</a>: 2022-04-13T04:30:07.985Z</p>\n<p><a href=\"/glossary#\">name_suffix</a>: Sr</p>\n<p><a href=\"/glossary#\">relationship_status</a>: single</p>\n<p><a href=\"/glossary#\">title</a>: Dr.</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#\"><strong>branch_id</strong></a>: DERBY6</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>customer_number</strong></a>: 5987953</p>\n<p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#\"><strong>date_of_birth</strong></a>: 2018-03-09</p>\n<p><a href=\"/glossary#\"><strong>dependants</strong></a>: 1</p>\n<p><a href=\"/glossary#dob_of_dependants\"><strong>dob_of_dependants</strong></a>: [2019-09-08, 2017-07-12]</p>\n<p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"&#109;&#x61;&#x69;&#108;&#116;&#x6f;&#x3a;&#x66;&#x65;&#108;&#105;xs&#109;&#x69;&#x74;&#104;@&#x65;&#120;&#x61;&#109;&#x70;l&#x65;&#46;&#99;&#111;&#109;\">&#x66;&#x65;&#x6c;&#x69;x&#115;&#109;&#105;th@ex&#x61;&#109;p&#x6c;&#x65;&#46;&#x63;&#x6f;&#109;</a></p>\n<p><a href=\"/glossary#\"><strong>employment_status</strong></a>: worker</p>\n<p><a href=\"/glossary#face_image\"><strong>face_image</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>highest_education_attained</strong></a>: Master</p>\n<p><a href=\"/glossary#\"><strong>kyc_status</strong></a>: true</p>\n<p><a href=\"/glossary#last_ok_date\"><strong>last_ok_date</strong></a>: 2022-04-13T04:30:07.985Z</p>\n<p><a href=\"/glossary#\"><strong>legal_name</strong></a>: Eveline Tripman</p>\n<p><a href=\"/glossary#mobile_phone_number\"><strong>mobile_phone_number</strong></a>: +49 30 901820</p>\n<p><a href=\"/glossary#\"><strong>name_suffix</strong></a>: Sr</p>\n<p><a href=\"/glossary#\"><strong>rating</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>relationship_status</strong></a>: single</p>\n<p><a href=\"/glossary#\"><strong>source</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>title</strong></a>: Dr.</p>\n<p><a href=\"/glossary#\"><strong>url</strong></a>: <a href=\"http://www.example.com/id-docs/123/image.png\">http://www.example.com/id-docs/123/image.png</a></p>\n<p><a href=\"/glossary#credit_limit\">credit_limit</a>:</p>\n<p><a href=\"/glossary#credit_rating\">credit_rating</a>:</p>\n",
      "description_markdown": "The Customer resource stores the customer number (which is set by the backend), legal name, email, phone number, their date of birth, relationship status, education attained, a url for a profile image, KYC status etc.\nDates need to be in the format 2013-01-21T23:08:00Z\n\nNote: If you need to set a specific customer number, use the Update Customer Number endpoint after this call.\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON request body fields:**\n\n\n\n[**amount**](/glossary#): 10.12\n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**date**](/glossary#): 2020-01-27\n\n\n\n[**legal_name**](/glossary#): Eveline Tripman\n\n\n\n[**mobile_phone_number**](/glossary#mobile_phone_number): +49 30 901820\n\n\n\n[**rating**](/glossary#): \n\n\n\n[**source**](/glossary#): \n\n\n\n[**url**](/glossary#): http://www.example.com/id-docs/123/image.png\n\n\n\n[branch_id](/glossary#): DERBY6\n\n\n\n[credit_limit](/glossary#credit_limit): \n\n\n\n[credit_rating](/glossary#credit_rating): \n\n\n\n[customer_number](/glossary#): 5987953\n\n\n\n[date_of_birth](/glossary#): 2018-03-09\n\n\n\n[dependants](/glossary#): 1\n\n\n\n[dob_of_dependants](/glossary#dob_of_dependants): [2019-09-08, 2017-07-12]\n\n\n\n[email](/glossary#): felixsmith@example.com\n\n\n\n[employment_status](/glossary#): worker\n\n\n\n[face_image](/glossary#face_image): \n\n\n\n[highest_education_attained](/glossary#): Master\n\n\n\n[kyc_status](/glossary#): true\n\n\n\n[last_ok_date](/glossary#last_ok_date): 2022-04-13T04:30:07.985Z\n\n\n\n[name_suffix](/glossary#): Sr\n\n\n\n[relationship_status](/glossary#): single\n\n\n\n[title](/glossary#): Dr.\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**amount**](/glossary#): 10.12\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**branch_id**](/glossary#): DERBY6\n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**customer_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**customer_number**](/glossary#): 5987953\n\n\n\n[**date**](/glossary#): 2020-01-27\n\n\n\n[**date_of_birth**](/glossary#): 2018-03-09\n\n\n\n[**dependants**](/glossary#): 1\n\n\n\n[**dob_of_dependants**](/glossary#dob_of_dependants): [2019-09-08, 2017-07-12]\n\n\n\n[**email**](/glossary#): felixsmith@example.com\n\n\n\n[**employment_status**](/glossary#): worker\n\n\n\n[**face_image**](/glossary#face_image): \n\n\n\n[**highest_education_attained**](/glossary#): Master\n\n\n\n[**kyc_status**](/glossary#): true\n\n\n\n[**last_ok_date**](/glossary#last_ok_date): 2022-04-13T04:30:07.985Z\n\n\n\n[**legal_name**](/glossary#): Eveline Tripman\n\n\n\n[**mobile_phone_number**](/glossary#mobile_phone_number): +49 30 901820\n\n\n\n[**name_suffix**](/glossary#): Sr\n\n\n\n[**rating**](/glossary#): \n\n\n\n[**relationship_status**](/glossary#): single\n\n\n\n[**source**](/glossary#): \n\n\n\n[**title**](/glossary#): Dr.\n\n\n\n[**url**](/glossary#): http://www.example.com/id-docs/123/image.png\n\n\n\n[credit_limit](/glossary#credit_limit): \n\n\n\n[credit_rating](/glossary#credit_rating): \n\n\n",
      "example_request_body": {
        "legal_name": "Eveline Tripman",
        "customer_number": "5987953",
        "mobile_phone_number": "+49 30 901820",
        "email": "felixsmith@example.com",
        "face_image": {
          "url": "www.openbankproject",
          "date": "1100-01-01T00:00:00Z"
        },
        "date_of_birth": "1100-01-01T00:00:00Z",
        "relationship_status": "single",
        "dependants": 1,
        "dob_of_dependants": ["1100-01-01T00:00:00Z"],
        "credit_rating": {
          "rating": "OBP",
          "source": "OBP"
        },
        "credit_limit": {
          "currency": "EUR",
          "amount": "0"
        },
        "highest_education_attained": "Master",
        "employment_status": "worker",
        "kyc_status": true,
        "last_ok_date": "2022-04-13T04:30:08Z",
        "title": "Dr.",
        "branch_id": "DERBY6",
        "name_suffix": "Sr"
      },
      "success_response_body": {
        "bank_id": "gh.29.uk",
        "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "customer_number": "5987953",
        "legal_name": "Eveline Tripman",
        "mobile_phone_number": "+44 07972 444 876",
        "email": "felixsmith@example.com",
        "face_image": {
          "url": "www.openbankproject",
          "date": "1100-01-01T00:00:00Z"
        },
        "date_of_birth": "1100-01-01T00:00:00Z",
        "relationship_status": "single",
        "dependants": 1,
        "dob_of_dependants": ["1100-01-01T00:00:00Z"],
        "credit_rating": {
          "rating": "OBP",
          "source": "OBP"
        },
        "credit_limit": {
          "currency": "EUR",
          "amount": "0"
        },
        "highest_education_attained": "Master",
        "employment_status": "worker",
        "kyc_status": true,
        "last_ok_date": "2022-04-13T04:30:08Z",
        "title": "Dr.",
        "branch_id": "DERBY6",
        "name_suffix": "Sr"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-10001: Incorrect json format.",
        "OBP-30006: Customer Number already exists. Please specify a different value for BANK_ID or CUSTOMER_NUMBER.",
        "OBP-20005: User not found. Please specify a valid value for USER_ID.",
        "OBP-30007: The User is already linked to a Customer at the bank specified by BANK_ID",
        "OBP-30024: Could not create Consumer ",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["Customer", "Person", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "relationship_status": {
            "type": "string"
          },
          "name_suffix": {
            "type": "string"
          },
          "highest_education_attained": {
            "type": "string"
          },
          "last_ok_date": {
            "type": "string",
            "format": "date-time"
          },
          "credit_limit": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string"
              },
              "amount": {
                "type": "string"
              }
            }
          },
          "title": {
            "type": "string"
          },
          "face_image": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string"
              },
              "date": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          "dob_of_dependants": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            }
          },
          "credit_rating": {
            "type": "object",
            "properties": {
              "rating": {
                "type": "string"
              },
              "source": {
                "type": "string"
              }
            }
          },
          "email": {
            "type": "string"
          },
          "customer_number": {
            "type": "string"
          },
          "kyc_status": {
            "type": "boolean"
          },
          "date_of_birth": {
            "type": "string",
            "format": "date-time"
          },
          "legal_name": {
            "type": "string"
          },
          "branch_id": {
            "type": "string"
          },
          "employment_status": {
            "type": "string"
          },
          "mobile_phone_number": {
            "type": "string"
          },
          "dependants": {
            "type": "integer"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "dependants": {
            "type": "integer"
          },
          "dob_of_dependants": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            }
          },
          "face_image": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string"
              },
              "date": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          "credit_limit": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string"
              },
              "amount": {
                "type": "string"
              }
            }
          },
          "employment_status": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "customer_id": {
            "type": "string"
          },
          "relationship_status": {
            "type": "string"
          },
          "bank_id": {
            "type": "string"
          },
          "highest_education_attained": {
            "type": "string"
          },
          "customer_number": {
            "type": "string"
          },
          "credit_rating": {
            "type": "object",
            "properties": {
              "rating": {
                "type": "string"
              },
              "source": {
                "type": "string"
              }
            }
          },
          "name_suffix": {
            "type": "string"
          },
          "last_ok_date": {
            "type": "string",
            "format": "date-time"
          },
          "legal_name": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "branch_id": {
            "type": "string"
          },
          "date_of_birth": {
            "type": "string",
            "format": "date-time"
          },
          "mobile_phone_number": {
            "type": "string"
          },
          "kyc_status": {
            "type": "boolean"
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateCustomer",
          "requires_bank_id": true
        },
        {
          "role": "CanCreateCustomerAtAnyBank",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/customers",
      "connector_methods": ["obp.createCustomerC2", "obp.checkCustomerNumberAvailable"]
    },
    {
      "operation_id": "OBPv4.0.0-deleteBankAttribute",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "deleteBankAttribute"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/attributes/BANK_ATTRIBUTE_ID",
      "summary": "Delete Bank Attribute",
      "description": "<p>Delete Bank Attribute</p>\n<p>Delete a Bank Attribute by its id.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#\">BANK_ATTRIBUTE_ID</a>: BANK_ATTRIBUTE_ID</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON response body fields:</strong></p>\n",
      "description_markdown": "Delete Bank Attribute\n\nDelete a Bank Attribute by its id.\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ATTRIBUTE_ID](/glossary#): BANK_ATTRIBUTE_ID\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON response body fields:**\n\n\n",
      "error_response_bodies": [
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-50000: Unknown Error.",
        "OBP-20001: User not logged in. Authentication is required!"
      ],
      "tags": ["Bank", "New-Style"],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/attributes/BANK_ATTRIBUTE_ID",
      "connector_methods": ["obp.deleteBankAttribute", "obp.getBank", "obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv4.0.0-createBankLevelDynamicEndpoint",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "createBankLevelDynamicEndpoint"
      },
      "request_verb": "POST",
      "request_url": "/obp/v4.0.0/management/banks/BANK_ID/dynamic-endpoints",
      "summary": "Create Bank Level Dynamic Endpoint",
      "description": "<p>Create dynamic endpoints.</p>\n<p>Create dynamic endpoints with one json format swagger content.</p>\n<p>If the host of swagger is <code>dynamic_entity</code>, then you need link the swagger fields to the dynamic entity fields,<br />\nplease check <code>Endpoint Mapping</code> endpoints.</p>\n<p>If the host of swagger is <code>obp_mock</code>, every dynamic endpoint will return example response of swagger,</p>\n<p>when create MethodRouting for given dynamic endpoint, it will be routed to given url.</p>\n<p>Authentication is Mandatory</p>\n",
      "description_markdown": "Create dynamic endpoints.\n\nCreate dynamic endpoints with one json format swagger content.\n\nIf the host of swagger is `dynamic_entity`, then you need link the swagger fields to the dynamic entity fields, \nplease check `Endpoint Mapping` endpoints.\n\nIf the host of swagger is `obp_mock`, every dynamic endpoint will return example response of swagger,\n\nwhen create MethodRouting for given dynamic endpoint, it will be routed to given url.\n\n\n\nAuthentication is Mandatory",
      "example_request_body": {
        "swagger": "2.0",
        "info": {
          "title": "Bank Accounts (Dynamic Endpoint)",
          "version": "1.0.0"
        },
        "definitions": {
          "AccountName": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "family account"
              },
              "balance": {
                "type": "integer",
                "format": "int64",
                "example": 1000.123
              }
            }
          }
        },
        "paths": {
          "/accounts": {
            "post": {
              "operationId": "POST_account",
              "produces": ["application/json"],
              "responses": {
                "201": {
                  "description": "Success Response",
                  "schema": {
                    "$ref": "#/definitions/AccountName"
                  }
                }
              },
              "consumes": ["application/json"],
              "description": "POST Accounts",
              "summary": "POST Accounts"
            }
          },
          "/accounts/{account_id}": {
            "get": {
              "operationId": "GET_account",
              "produces": ["application/json"],
              "responses": {
                "200": {
                  "description": "Success Response",
                  "schema": {
                    "$ref": "#/definitions/AccountName"
                  }
                }
              },
              "consumes": ["application/json"],
              "description": "Get Bank Account",
              "summary": "Get Bank Account by Id"
            }
          }
        },
        "host": "obp_mock",
        "schemes": ["http", "https"]
      },
      "success_response_body": {
        "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
        "dynamic_endpoint_id": "dynamic-endpoint-id",
        "swagger_string": {
          "swagger": "2.0",
          "info": {
            "title": "Bank Accounts (Dynamic Endpoint)",
            "version": "1.0.0"
          },
          "definitions": {
            "AccountName": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "family account"
                },
                "balance": {
                  "type": "integer",
                  "format": "int64",
                  "example": 1000.123
                }
              }
            }
          },
          "paths": {
            "/accounts": {
              "post": {
                "operationId": "POST_account",
                "produces": ["application/json"],
                "responses": {
                  "201": {
                    "description": "Success Response",
                    "schema": {
                      "$ref": "#/definitions/AccountName"
                    }
                  }
                },
                "consumes": ["application/json"],
                "description": "POST Accounts",
                "summary": "POST Accounts"
              }
            },
            "/accounts/{account_id}": {
              "get": {
                "operationId": "GET_account",
                "produces": ["application/json"],
                "responses": {
                  "200": {
                    "description": "Success Response",
                    "schema": {
                      "$ref": "#/definitions/AccountName"
                    }
                  }
                },
                "consumes": ["application/json"],
                "description": "Get Bank Account",
                "summary": "Get Bank Account by Id"
              }
            }
          },
          "host": "obp_mock",
          "schemes": ["http", "https"]
        }
      },
      "error_response_bodies": [
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-09008: DynamicEndpoint already exists.",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Dynamic-Endpoint-Manage", "API", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "swagger": {
            "type": "string"
          },
          "paths": {
            "type": "object",
            "properties": {
              "/accounts": {
                "type": "object",
                "properties": {
                  "post": {
                    "type": "object",
                    "properties": {
                      "responses": {
                        "type": "object",
                        "properties": {
                          "201": {
                            "type": "object",
                            "properties": {
                              "description": {
                                "type": "string"
                              },
                              "schema": {
                                "type": "object",
                                "properties": {
                                  "$ref": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "consumes": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "s": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "operationId": {
                        "type": "string"
                      },
                      "summary": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "produces": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "s": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "/accounts/{account_id}": {
                "type": "object",
                "properties": {
                  "get": {
                    "type": "object",
                    "properties": {
                      "description": {
                        "type": "string"
                      },
                      "consumes": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "s": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "operationId": {
                        "type": "string"
                      },
                      "responses": {
                        "type": "object",
                        "properties": {
                          "200": {
                            "type": "object",
                            "properties": {
                              "description": {
                                "type": "string"
                              },
                              "schema": {
                                "type": "object",
                                "properties": {
                                  "$ref": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "summary": {
                        "type": "string"
                      },
                      "produces": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "s": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "info": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string"
              },
              "version": {
                "type": "string"
              }
            }
          },
          "definitions": {
            "type": "object",
            "properties": {
              "AccountName": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string"
                          },
                          "example": {
                            "type": "string"
                          }
                        }
                      },
                      "balance": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string"
                          },
                          "format": {
                            "type": "string"
                          },
                          "example": {
                            "type": "number"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "schemes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "s": {
                  "type": "string"
                }
              }
            }
          },
          "host": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "string"
          },
          "dynamic_endpoint_id": {
            "type": "string"
          },
          "swagger_string": {
            "type": "object",
            "properties": {
              "swagger": {
                "type": "string"
              },
              "paths": {
                "type": "object",
                "properties": {
                  "/accounts": {
                    "type": "object",
                    "properties": {
                      "post": {
                        "type": "object",
                        "properties": {
                          "responses": {
                            "type": "object",
                            "properties": {
                              "201": {
                                "type": "object",
                                "properties": {
                                  "description": {
                                    "type": "string"
                                  },
                                  "schema": {
                                    "type": "object",
                                    "properties": {
                                      "$ref": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "consumes": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "s": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "operationId": {
                            "type": "string"
                          },
                          "summary": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "produces": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "s": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "/accounts/{account_id}": {
                    "type": "object",
                    "properties": {
                      "get": {
                        "type": "object",
                        "properties": {
                          "description": {
                            "type": "string"
                          },
                          "consumes": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "s": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "operationId": {
                            "type": "string"
                          },
                          "responses": {
                            "type": "object",
                            "properties": {
                              "200": {
                                "type": "object",
                                "properties": {
                                  "description": {
                                    "type": "string"
                                  },
                                  "schema": {
                                    "type": "object",
                                    "properties": {
                                      "$ref": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "summary": {
                            "type": "string"
                          },
                          "produces": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "s": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "info": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "version": {
                    "type": "string"
                  }
                }
              },
              "definitions": {
                "type": "object",
                "properties": {
                  "AccountName": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string"
                      },
                      "properties": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string"
                              },
                              "example": {
                                "type": "string"
                              }
                            }
                          },
                          "balance": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string"
                              },
                              "format": {
                                "type": "string"
                              },
                              "example": {
                                "type": "number"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "schemes": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "s": {
                      "type": "string"
                    }
                  }
                }
              },
              "host": {
                "type": "string"
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateBankLevelDynamicEndpoint",
          "requires_bank_id": true
        },
        {
          "role": "CanCreateDynamicEndpoint",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/banks/BANK_ID/dynamic-endpoints",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv3.1.0-updateCustomerData",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "updateCustomerData"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/customers/CUSTOMER_ID/data",
      "summary": "Update the other data of a Customer",
      "description": "<p>Update the other data of the Customer specified by CUSTOMER_ID.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#Customer.customer_id\">CUSTOMER_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#\"><strong>branch_id</strong></a>: DERBY6</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>customer_number</strong></a>: 5987953</p>\n<p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#\"><strong>date_of_birth</strong></a>: 2018-03-09</p>\n<p><a href=\"/glossary#\"><strong>dependants</strong></a>: 1</p>\n<p><a href=\"/glossary#dob_of_dependants\"><strong>dob_of_dependants</strong></a>: [2019-09-08, 2017-07-12]</p>\n<p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"&#109;&#97;&#105;&#108;&#x74;&#111;:&#102;&#101;&#x6c;i&#x78;&#x73;&#x6d;&#105;&#x74;&#x68;&#64;e&#120;&#97;&#x6d;&#x70;&#x6c;&#101;&#x2e;&#x63;o&#x6d;\">&#x66;&#x65;&#108;i&#120;&#115;mi&#x74;&#104;&#64;&#101;&#120;&#x61;&#x6d;&#x70;&#x6c;&#x65;&#x2e;&#99;&#111;&#109;</a></p>\n<p><a href=\"/glossary#\"><strong>employment_status</strong></a>: worker</p>\n<p><a href=\"/glossary#face_image\"><strong>face_image</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>highest_education_attained</strong></a>: Master</p>\n<p><a href=\"/glossary#\"><strong>kyc_status</strong></a>: true</p>\n<p><a href=\"/glossary#last_ok_date\"><strong>last_ok_date</strong></a>: 2022-04-13T04:30:07.985Z</p>\n<p><a href=\"/glossary#\"><strong>legal_name</strong></a>: Eveline Tripman</p>\n<p><a href=\"/glossary#mobile_phone_number\"><strong>mobile_phone_number</strong></a>: +49 30 901820</p>\n<p><a href=\"/glossary#\"><strong>name_suffix</strong></a>: Sr</p>\n<p><a href=\"/glossary#\"><strong>rating</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>relationship_status</strong></a>: single</p>\n<p><a href=\"/glossary#\"><strong>source</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>title</strong></a>: Dr.</p>\n<p><a href=\"/glossary#\"><strong>url</strong></a>: <a href=\"http://www.example.com/id-docs/123/image.png\">http://www.example.com/id-docs/123/image.png</a></p>\n<p><a href=\"/glossary#credit_limit\">credit_limit</a>:</p>\n<p><a href=\"/glossary#credit_rating\">credit_rating</a>:</p>\n",
      "description_markdown": "Update the other data of the Customer specified by CUSTOMER_ID.\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[CUSTOMER_ID](/glossary#Customer.customer_id): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**amount**](/glossary#): 10.12\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**branch_id**](/glossary#): DERBY6\n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**customer_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**customer_number**](/glossary#): 5987953\n\n\n\n[**date**](/glossary#): 2020-01-27\n\n\n\n[**date_of_birth**](/glossary#): 2018-03-09\n\n\n\n[**dependants**](/glossary#): 1\n\n\n\n[**dob_of_dependants**](/glossary#dob_of_dependants): [2019-09-08, 2017-07-12]\n\n\n\n[**email**](/glossary#): felixsmith@example.com\n\n\n\n[**employment_status**](/glossary#): worker\n\n\n\n[**face_image**](/glossary#face_image): \n\n\n\n[**highest_education_attained**](/glossary#): Master\n\n\n\n[**kyc_status**](/glossary#): true\n\n\n\n[**last_ok_date**](/glossary#last_ok_date): 2022-04-13T04:30:07.985Z\n\n\n\n[**legal_name**](/glossary#): Eveline Tripman\n\n\n\n[**mobile_phone_number**](/glossary#mobile_phone_number): +49 30 901820\n\n\n\n[**name_suffix**](/glossary#): Sr\n\n\n\n[**rating**](/glossary#): \n\n\n\n[**relationship_status**](/glossary#): single\n\n\n\n[**source**](/glossary#): \n\n\n\n[**title**](/glossary#): Dr.\n\n\n\n[**url**](/glossary#): http://www.example.com/id-docs/123/image.png\n\n\n\n[credit_limit](/glossary#credit_limit): \n\n\n\n[credit_rating](/glossary#credit_rating): \n\n\n",
      "example_request_body": {
        "face_image": {
          "url": "www.openbankproject",
          "date": "1100-01-01T00:00:00Z"
        },
        "relationship_status": "single",
        "dependants": 1,
        "highest_education_attained": "Master",
        "employment_status": "worker"
      },
      "success_response_body": {
        "bank_id": "gh.29.uk",
        "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "customer_number": "5987953",
        "legal_name": "Eveline Tripman",
        "mobile_phone_number": "+44 07972 444 876",
        "email": "felixsmith@example.com",
        "face_image": {
          "url": "www.openbankproject",
          "date": "1100-01-01T00:00:00Z"
        },
        "date_of_birth": "1100-01-01T00:00:00Z",
        "relationship_status": "single",
        "dependants": 1,
        "dob_of_dependants": ["1100-01-01T00:00:00Z"],
        "credit_rating": {
          "rating": "OBP",
          "source": "OBP"
        },
        "credit_limit": {
          "currency": "EUR",
          "amount": "0"
        },
        "highest_education_attained": "Master",
        "employment_status": "worker",
        "kyc_status": true,
        "last_ok_date": "2022-04-13T04:30:08Z",
        "title": "Dr.",
        "branch_id": "DERBY6",
        "name_suffix": "Sr"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Customer", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "dependants": {
            "type": "integer"
          },
          "face_image": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string"
              },
              "date": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          "employment_status": {
            "type": "string"
          },
          "relationship_status": {
            "type": "string"
          },
          "highest_education_attained": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "dependants": {
            "type": "integer"
          },
          "dob_of_dependants": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            }
          },
          "face_image": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string"
              },
              "date": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          "credit_limit": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string"
              },
              "amount": {
                "type": "string"
              }
            }
          },
          "employment_status": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "customer_id": {
            "type": "string"
          },
          "relationship_status": {
            "type": "string"
          },
          "bank_id": {
            "type": "string"
          },
          "highest_education_attained": {
            "type": "string"
          },
          "customer_number": {
            "type": "string"
          },
          "credit_rating": {
            "type": "object",
            "properties": {
              "rating": {
                "type": "string"
              },
              "source": {
                "type": "string"
              }
            }
          },
          "name_suffix": {
            "type": "string"
          },
          "last_ok_date": {
            "type": "string",
            "format": "date-time"
          },
          "legal_name": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "branch_id": {
            "type": "string"
          },
          "date_of_birth": {
            "type": "string",
            "format": "date-time"
          },
          "mobile_phone_number": {
            "type": "string"
          },
          "kyc_status": {
            "type": "boolean"
          }
        }
      },
      "roles": [
        {
          "role": "CanUpdateCustomerIdentity",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/customers/CUSTOMER_ID/data",
      "connector_methods": [
        "obp.updateCustomerGeneralData",
        "obp.getCustomerByCustomerId",
        "obp.getBank",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv4.0.0-getTransactionRequestAttributes",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getTransactionRequestAttributes"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/transaction-requests/TRANSACTION_REQUEST_ID/attributes",
      "summary": "Get Transaction Request Attributes",
      "description": "<p>Get Transaction Request Attributes</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#\">TRANSACTION_REQUEST_ID</a>: 8138a7e4-6d02-40e3-a129-0b2bf89de9f1</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#\"><strong>transaction_request_attribute_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>transaction_request_attributes</strong></a>: transaction_request_attributes</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n",
      "description_markdown": "Get Transaction Request Attributes\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[TRANSACTION_REQUEST_ID](/glossary#): 8138a7e4-6d02-40e3-a129-0b2bf89de9f1\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**transaction_request_attribute_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**transaction_request_attributes**](/glossary#): transaction_request_attributes\n\n\n\n[**type**](/glossary#type): \n\n\n\n[**value**](/glossary#): 5987953\n\n\n",
      "success_response_body": {
        "transaction_request_attributes": [
          {
            "transaction_request_attribute_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
            "name": "HOUSE_RENT",
            "type": "DATE_WITH_DAY",
            "value": "123456789"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["Transaction-Request", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "transaction_request_attributes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "transaction_request_attribute_id": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetTransactionRequestAttributesAtOneBank",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/transaction-requests/TRANSACTION_REQUEST_ID/attributes",
      "connector_methods": ["obp.getTransactionRequestAttributes"]
    },
    {
      "operation_id": "OBPv4.0.0-deleteDynamicEndpoint",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "deleteDynamicEndpoint"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v4.0.0/management/dynamic-endpoints/DYNAMIC_ENDPOINT_ID",
      "summary": " Delete Dynamic Endpoint",
      "description": "<p>Delete a DynamicEndpoint specified by DYNAMIC_ENDPOINT_ID.</p>\n<p>Authentication is Mandatory</p>\n",
      "description_markdown": "Delete a DynamicEndpoint specified by DYNAMIC_ENDPOINT_ID.\n\nAuthentication is Mandatory",
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-09009: DynamicEndpoint not found. Please specify a valid value for DYNAMIC_ENDPOINT_ID.",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["Dynamic-Endpoint-Manage", "API", "New-Style"],
      "roles": [
        {
          "role": "CanDeleteDynamicEndpoint",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/dynamic-endpoints/DYNAMIC_ENDPOINT_ID",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv3.0.0-updateViewForBankAccount",
      "implemented_by": {
        "version": "OBPv3.0.0",
        "function": "updateViewForBankAccount"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v3.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/views/VIEW_ID",
      "summary": "Update View",
      "description": "<p>Update an existing view on a bank account</p>\n<p>Authentication is Mandatory and the user needs to have access to the owner view.</p>\n<p>The json sent is the same as during view creation (above), with one difference: the 'name' field<br />\nof a view is not editable (it is only set when a view is created)</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#alias\"><strong>alias</strong></a>:</p>\n<p><a href=\"/glossary#can_add_comment\"><strong>can_add_comment</strong></a>:</p>\n<p><a href=\"/glossary#can_add_corporate_location\"><strong>can_add_corporate_location</strong></a>:</p>\n<p><a href=\"/glossary#can_add_counterparty\"><strong>can_add_counterparty</strong></a>: true</p>\n<p><a href=\"/glossary#can_add_image\"><strong>can_add_image</strong></a>:</p>\n<p><a href=\"/glossary#can_add_image_url\"><strong>can_add_image_url</strong></a>: true</p>\n<p><a href=\"/glossary#can_add_more_info\"><strong>can_add_more_info</strong></a>: true</p>\n<p><a href=\"/glossary#can_add_open_corporates_url\"><strong>can_add_open_corporates_url</strong></a>:</p>\n<p><a href=\"/glossary#can_add_physical_location\"><strong>can_add_physical_location</strong></a>:</p>\n<p><a href=\"/glossary#can_add_private_alias\"><strong>can_add_private_alias</strong></a>:</p>\n<p><a href=\"/glossary#can_add_public_alias\"><strong>can_add_public_alias</strong></a>:</p>\n<p><a href=\"/glossary#can_add_tag\"><strong>can_add_tag</strong></a>: true</p>\n<p><a href=\"/glossary#can_add_transaction_request_to_any_account\"><strong>can_add_transaction_request_to_any_account</strong></a>:</p>\n<p><a href=\"/glossary#can_add_transaction_request_to_own_account\"><strong>can_add_transaction_request_to_own_account</strong></a>:</p>\n<p><a href=\"/glossary#can_add_url\"><strong>can_add_url</strong></a>:</p>\n<p><a href=\"/glossary#can_add_where_tag\"><strong>can_add_where_tag</strong></a>:</p>\n<p><a href=\"/glossary#can_create_direct_debit\"><strong>can_create_direct_debit</strong></a>: true</p>\n<p><a href=\"/glossary#can_create_standing_order\"><strong>can_create_standing_order</strong></a>:</p>\n<p><a href=\"/glossary#can_delete_comment\"><strong>can_delete_comment</strong></a>:</p>\n<p><a href=\"/glossary#can_delete_corporate_location\"><strong>can_delete_corporate_location</strong></a>: true</p>\n<p><a href=\"/glossary#can_delete_image\"><strong>can_delete_image</strong></a>: true</p>\n<p><a href=\"/glossary#can_delete_physical_location\"><strong>can_delete_physical_location</strong></a>:</p>\n<p><a href=\"/glossary#can_delete_tag\"><strong>can_delete_tag</strong></a>:</p>\n<p><a href=\"/glossary#can_delete_where_tag\"><strong>can_delete_where_tag</strong></a>: true</p>\n<p><a href=\"/glossary#can_edit_owner_comment\"><strong>can_edit_owner_comment</strong></a>: true</p>\n<p><a href=\"/glossary#can_query_available_funds\"><strong>can_query_available_funds</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_balance\"><strong>can_see_bank_account_balance</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_bank_name\"><strong>can_see_bank_account_bank_name</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_credit_limit\"><strong>can_see_bank_account_credit_limit</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_currency\"><strong>can_see_bank_account_currency</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_iban\"><strong>can_see_bank_account_iban</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_label\"><strong>can_see_bank_account_label</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_national_identifier\"><strong>can_see_bank_account_national_identifier</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_number\"><strong>can_see_bank_account_number</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_owners\"><strong>can_see_bank_account_owners</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_routing_address\"><strong>can_see_bank_account_routing_address</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_routing_scheme\"><strong>can_see_bank_account_routing_scheme</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_swift_bic\"><strong>can_see_bank_account_swift_bic</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_type\"><strong>can_see_bank_account_type</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_routing_address\"><strong>can_see_bank_routing_address</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_routing_scheme\"><strong>can_see_bank_routing_scheme</strong></a>:</p>\n<p><a href=\"/glossary#can_see_comments\"><strong>can_see_comments</strong></a>:</p>\n<p><a href=\"/glossary#can_see_corporate_location\"><strong>can_see_corporate_location</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_image_url\"><strong>can_see_image_url</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_images\"><strong>can_see_images</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_more_info\"><strong>can_see_more_info</strong></a>:</p>\n<p><a href=\"/glossary#can_see_open_corporates_url\"><strong>can_see_open_corporates_url</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_bank_name\"><strong>can_see_other_account_bank_name</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_iban\"><strong>can_see_other_account_iban</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_kind\"><strong>can_see_other_account_kind</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_metadata\"><strong>can_see_other_account_metadata</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_national_identifier\"><strong>can_see_other_account_national_identifier</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_other_account_number\"><strong>can_see_other_account_number</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_other_account_routing_address\"><strong>can_see_other_account_routing_address</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_other_account_routing_scheme\"><strong>can_see_other_account_routing_scheme</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_swift_bic\"><strong>can_see_other_account_swift_bic</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_other_bank_routing_address\"><strong>can_see_other_bank_routing_address</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_bank_routing_scheme\"><strong>can_see_other_bank_routing_scheme</strong></a>:</p>\n<p><a href=\"/glossary#can_see_owner_comment\"><strong>can_see_owner_comment</strong></a>:</p>\n<p><a href=\"/glossary#can_see_physical_location\"><strong>can_see_physical_location</strong></a>:</p>\n<p><a href=\"/glossary#can_see_private_alias\"><strong>can_see_private_alias</strong></a>:</p>\n<p><a href=\"/glossary#can_see_public_alias\"><strong>can_see_public_alias</strong></a>:</p>\n<p><a href=\"/glossary#can_see_tags\"><strong>can_see_tags</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_amount\"><strong>can_see_transaction_amount</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_transaction_balance\"><strong>can_see_transaction_balance</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_currency\"><strong>can_see_transaction_currency</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_description\"><strong>can_see_transaction_description</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_transaction_finish_date\"><strong>can_see_transaction_finish_date</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_metadata\"><strong>can_see_transaction_metadata</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_other_bank_account\"><strong>can_see_transaction_other_bank_account</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_start_date\"><strong>can_see_transaction_start_date</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_this_bank_account\"><strong>can_see_transaction_this_bank_account</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_type\"><strong>can_see_transaction_type</strong></a>:</p>\n<p><a href=\"/glossary#can_see_url\"><strong>can_see_url</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_where_tag\"><strong>can_see_where_tag</strong></a>: true</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#hide_metadata_if_alias_used\"><strong>hide_metadata_if_alias_used</strong></a>:</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#is_public\"><strong>is_public</strong></a>: true</p>\n<p><a href=\"/glossary#\"><strong>is_system</strong></a>: true</p>\n<p><a href=\"/glossary#metadata_view\"><strong>metadata_view</strong></a>:</p>\n<p><a href=\"/glossary#short_name\"><strong>short_name</strong></a>:</p>\n<p><a href=\"/glossary#is_firehose\">is_firehose</a>:</p>\n",
      "description_markdown": "Update an existing view on a bank account\n\nAuthentication is Mandatory and the user needs to have access to the owner view.\n\nThe json sent is the same as during view creation (above), with one difference: the 'name' field\nof a view is not editable (it is only set when a view is created)\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[VIEW_ID](/glossary#this_view_id): owner\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**alias**](/glossary#alias): \n\n\n\n[**can_add_comment**](/glossary#can_add_comment): \n\n\n\n[**can_add_corporate_location**](/glossary#can_add_corporate_location): \n\n\n\n[**can_add_counterparty**](/glossary#can_add_counterparty): true\n\n\n\n[**can_add_image**](/glossary#can_add_image): \n\n\n\n[**can_add_image_url**](/glossary#can_add_image_url): true\n\n\n\n[**can_add_more_info**](/glossary#can_add_more_info): true\n\n\n\n[**can_add_open_corporates_url**](/glossary#can_add_open_corporates_url): \n\n\n\n[**can_add_physical_location**](/glossary#can_add_physical_location): \n\n\n\n[**can_add_private_alias**](/glossary#can_add_private_alias): \n\n\n\n[**can_add_public_alias**](/glossary#can_add_public_alias): \n\n\n\n[**can_add_tag**](/glossary#can_add_tag): true\n\n\n\n[**can_add_transaction_request_to_any_account**](/glossary#can_add_transaction_request_to_any_account): \n\n\n\n[**can_add_transaction_request_to_own_account**](/glossary#can_add_transaction_request_to_own_account): \n\n\n\n[**can_add_url**](/glossary#can_add_url): \n\n\n\n[**can_add_where_tag**](/glossary#can_add_where_tag): \n\n\n\n[**can_create_direct_debit**](/glossary#can_create_direct_debit): true\n\n\n\n[**can_create_standing_order**](/glossary#can_create_standing_order): \n\n\n\n[**can_delete_comment**](/glossary#can_delete_comment): \n\n\n\n[**can_delete_corporate_location**](/glossary#can_delete_corporate_location): true\n\n\n\n[**can_delete_image**](/glossary#can_delete_image): true\n\n\n\n[**can_delete_physical_location**](/glossary#can_delete_physical_location): \n\n\n\n[**can_delete_tag**](/glossary#can_delete_tag): \n\n\n\n[**can_delete_where_tag**](/glossary#can_delete_where_tag): true\n\n\n\n[**can_edit_owner_comment**](/glossary#can_edit_owner_comment): true\n\n\n\n[**can_query_available_funds**](/glossary#can_query_available_funds): true\n\n\n\n[**can_see_bank_account_balance**](/glossary#can_see_bank_account_balance): \n\n\n\n[**can_see_bank_account_bank_name**](/glossary#can_see_bank_account_bank_name): true\n\n\n\n[**can_see_bank_account_credit_limit**](/glossary#can_see_bank_account_credit_limit): true\n\n\n\n[**can_see_bank_account_currency**](/glossary#can_see_bank_account_currency): \n\n\n\n[**can_see_bank_account_iban**](/glossary#can_see_bank_account_iban): \n\n\n\n[**can_see_bank_account_label**](/glossary#can_see_bank_account_label): true\n\n\n\n[**can_see_bank_account_national_identifier**](/glossary#can_see_bank_account_national_identifier): \n\n\n\n[**can_see_bank_account_number**](/glossary#can_see_bank_account_number): true\n\n\n\n[**can_see_bank_account_owners**](/glossary#can_see_bank_account_owners): true\n\n\n\n[**can_see_bank_account_routing_address**](/glossary#can_see_bank_account_routing_address): \n\n\n\n[**can_see_bank_account_routing_scheme**](/glossary#can_see_bank_account_routing_scheme): \n\n\n\n[**can_see_bank_account_swift_bic**](/glossary#can_see_bank_account_swift_bic): \n\n\n\n[**can_see_bank_account_type**](/glossary#can_see_bank_account_type): \n\n\n\n[**can_see_bank_routing_address**](/glossary#can_see_bank_routing_address): true\n\n\n\n[**can_see_bank_routing_scheme**](/glossary#can_see_bank_routing_scheme): \n\n\n\n[**can_see_comments**](/glossary#can_see_comments): \n\n\n\n[**can_see_corporate_location**](/glossary#can_see_corporate_location): true\n\n\n\n[**can_see_image_url**](/glossary#can_see_image_url): true\n\n\n\n[**can_see_images**](/glossary#can_see_images): true\n\n\n\n[**can_see_more_info**](/glossary#can_see_more_info): \n\n\n\n[**can_see_open_corporates_url**](/glossary#can_see_open_corporates_url): \n\n\n\n[**can_see_other_account_bank_name**](/glossary#can_see_other_account_bank_name): \n\n\n\n[**can_see_other_account_iban**](/glossary#can_see_other_account_iban): \n\n\n\n[**can_see_other_account_kind**](/glossary#can_see_other_account_kind): \n\n\n\n[**can_see_other_account_metadata**](/glossary#can_see_other_account_metadata): \n\n\n\n[**can_see_other_account_national_identifier**](/glossary#can_see_other_account_national_identifier): true\n\n\n\n[**can_see_other_account_number**](/glossary#can_see_other_account_number): true\n\n\n\n[**can_see_other_account_routing_address**](/glossary#can_see_other_account_routing_address): true\n\n\n\n[**can_see_other_account_routing_scheme**](/glossary#can_see_other_account_routing_scheme): \n\n\n\n[**can_see_other_account_swift_bic**](/glossary#can_see_other_account_swift_bic): true\n\n\n\n[**can_see_other_bank_routing_address**](/glossary#can_see_other_bank_routing_address): \n\n\n\n[**can_see_other_bank_routing_scheme**](/glossary#can_see_other_bank_routing_scheme): \n\n\n\n[**can_see_owner_comment**](/glossary#can_see_owner_comment): \n\n\n\n[**can_see_physical_location**](/glossary#can_see_physical_location): \n\n\n\n[**can_see_private_alias**](/glossary#can_see_private_alias): \n\n\n\n[**can_see_public_alias**](/glossary#can_see_public_alias): \n\n\n\n[**can_see_tags**](/glossary#can_see_tags): \n\n\n\n[**can_see_transaction_amount**](/glossary#can_see_transaction_amount): true\n\n\n\n[**can_see_transaction_balance**](/glossary#can_see_transaction_balance): \n\n\n\n[**can_see_transaction_currency**](/glossary#can_see_transaction_currency): \n\n\n\n[**can_see_transaction_description**](/glossary#can_see_transaction_description): true\n\n\n\n[**can_see_transaction_finish_date**](/glossary#can_see_transaction_finish_date): \n\n\n\n[**can_see_transaction_metadata**](/glossary#can_see_transaction_metadata): \n\n\n\n[**can_see_transaction_other_bank_account**](/glossary#can_see_transaction_other_bank_account): \n\n\n\n[**can_see_transaction_start_date**](/glossary#can_see_transaction_start_date): \n\n\n\n[**can_see_transaction_this_bank_account**](/glossary#can_see_transaction_this_bank_account): \n\n\n\n[**can_see_transaction_type**](/glossary#can_see_transaction_type): \n\n\n\n[**can_see_url**](/glossary#can_see_url): true\n\n\n\n[**can_see_where_tag**](/glossary#can_see_where_tag): true\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**hide_metadata_if_alias_used**](/glossary#hide_metadata_if_alias_used): \n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**is_public**](/glossary#is_public): true\n\n\n\n[**is_system**](/glossary#): true\n\n\n\n[**metadata_view**](/glossary#metadata_view): \n\n\n\n[**short_name**](/glossary#short_name): \n\n\n\n[is_firehose](/glossary#is_firehose): \n\n\n",
      "example_request_body": {
        "description": "this is for family",
        "metadata_view": "owner",
        "is_public": true,
        "which_alias_to_use": "family",
        "hide_metadata_if_alias_used": true,
        "allowed_actions": [
          "can_see_transaction_this_bank_account",
          "can_see_transaction_other_bank_account",
          "can_see_transaction_metadata",
          "can_see_transaction_label",
          "can_see_transaction_amount",
          "can_see_transaction_type",
          "can_see_transaction_currency",
          "can_see_transaction_start_date",
          "can_see_transaction_finish_date",
          "can_see_transaction_balance",
          "can_see_comments",
          "can_see_narrative",
          "can_see_tags",
          "can_see_images",
          "can_see_bank_account_owners",
          "can_see_bank_account_type",
          "can_see_bank_account_balance",
          "can_see_bank_account_currency",
          "can_see_bank_account_label",
          "can_see_bank_account_national_identifier",
          "can_see_bank_account_swift_bic",
          "can_see_bank_account_iban",
          "can_see_bank_account_number",
          "can_see_bank_account_bank_name",
          "can_see_other_account_national_identifier",
          "can_see_other_account_swift_bic",
          "can_see_other_account_iban",
          "can_see_other_account_bank_name",
          "can_see_other_account_number",
          "can_see_other_account_metadata",
          "can_see_other_account_kind",
          "can_see_more_info",
          "can_see_url",
          "can_see_image_url",
          "can_see_open_corporates_url",
          "can_see_corporate_location",
          "can_see_physical_location",
          "can_see_public_alias",
          "can_see_private_alias",
          "can_add_more_info",
          "can_add_url",
          "can_add_image_url",
          "can_add_open_corporates_url",
          "can_add_corporate_location",
          "can_add_physical_location",
          "can_add_public_alias",
          "can_add_private_alias",
          "can_delete_corporate_location",
          "can_delete_physical_location",
          "can_edit_narrative",
          "can_add_comment",
          "can_delete_comment",
          "can_add_tag",
          "can_delete_tag",
          "can_add_image",
          "can_delete_image",
          "can_add_where_tag",
          "can_see_where_tag",
          "can_delete_where_tag",
          "can_create_counterparty",
          "can_see_bank_routing_scheme",
          "can_see_bank_routing_address",
          "can_see_bank_account_routing_scheme",
          "can_see_bank_account_routing_address",
          "can_see_other_bank_routing_scheme",
          "can_see_other_bank_routing_address",
          "can_see_other_account_routing_scheme",
          "can_see_other_account_routing_address",
          "can_query_available_funds"
        ]
      },
      "success_response_body": {
        "id": "1234",
        "short_name": "short_name",
        "description": "description",
        "metadata_view": "owner",
        "is_public": true,
        "is_system": true,
        "alias": "No",
        "hide_metadata_if_alias_used": true,
        "can_add_comment": true,
        "can_add_corporate_location": true,
        "can_add_image": true,
        "can_add_image_url": true,
        "can_add_more_info": true,
        "can_add_open_corporates_url": true,
        "can_add_physical_location": true,
        "can_add_private_alias": true,
        "can_add_public_alias": true,
        "can_add_tag": true,
        "can_add_url": true,
        "can_add_where_tag": true,
        "can_delete_comment": true,
        "can_add_counterparty": true,
        "can_delete_corporate_location": true,
        "can_delete_image": true,
        "can_delete_physical_location": true,
        "can_delete_tag": true,
        "can_delete_where_tag": true,
        "can_edit_owner_comment": true,
        "can_see_bank_account_balance": true,
        "can_query_available_funds": true,
        "can_see_bank_account_bank_name": true,
        "can_see_bank_account_currency": true,
        "can_see_bank_account_iban": true,
        "can_see_bank_account_label": true,
        "can_see_bank_account_national_identifier": true,
        "can_see_bank_account_number": true,
        "can_see_bank_account_owners": true,
        "can_see_bank_account_swift_bic": true,
        "can_see_bank_account_type": true,
        "can_see_comments": true,
        "can_see_corporate_location": true,
        "can_see_image_url": true,
        "can_see_images": true,
        "can_see_more_info": true,
        "can_see_open_corporates_url": true,
        "can_see_other_account_bank_name": true,
        "can_see_other_account_iban": true,
        "can_see_other_account_kind": true,
        "can_see_other_account_metadata": true,
        "can_see_other_account_national_identifier": true,
        "can_see_other_account_number": true,
        "can_see_other_account_swift_bic": true,
        "can_see_owner_comment": true,
        "can_see_physical_location": true,
        "can_see_private_alias": true,
        "can_see_public_alias": true,
        "can_see_tags": true,
        "can_see_transaction_amount": true,
        "can_see_transaction_balance": true,
        "can_see_transaction_currency": true,
        "can_see_transaction_description": true,
        "can_see_transaction_finish_date": true,
        "can_see_transaction_metadata": true,
        "can_see_transaction_other_bank_account": true,
        "can_see_transaction_start_date": true,
        "can_see_transaction_this_bank_account": true,
        "can_see_transaction_type": true,
        "can_see_url": true,
        "can_see_where_tag": true,
        "can_see_bank_routing_scheme": true,
        "can_see_bank_routing_address": true,
        "can_see_bank_account_routing_scheme": true,
        "can_see_bank_account_routing_address": true,
        "can_see_other_bank_routing_scheme": true,
        "can_see_other_bank_routing_address": true,
        "can_see_other_account_routing_scheme": true,
        "can_see_other_account_routing_address": true,
        "can_add_transaction_request_to_own_account": true,
        "can_add_transaction_request_to_any_account": true,
        "can_see_bank_account_credit_limit": true,
        "can_create_direct_debit": true,
        "can_create_standing_order": true
      },
      "error_response_bodies": [
        "OBP-10001: Incorrect json format.",
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["View-Custom", "Account", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "allowed_actions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "description": {
            "type": "string"
          },
          "hide_metadata_if_alias_used": {
            "type": "boolean"
          },
          "metadata_view": {
            "type": "string"
          },
          "is_public": {
            "type": "boolean"
          },
          "which_alias_to_use": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "can_see_other_account_swift_bic": {
            "type": "boolean"
          },
          "can_see_where_tag": {
            "type": "boolean"
          },
          "can_see_url": {
            "type": "boolean"
          },
          "can_create_direct_debit": {
            "type": "boolean"
          },
          "can_see_bank_account_swift_bic": {
            "type": "boolean"
          },
          "can_see_bank_account_routing_address": {
            "type": "boolean"
          },
          "can_see_tags": {
            "type": "boolean"
          },
          "can_see_transaction_balance": {
            "type": "boolean"
          },
          "can_delete_corporate_location": {
            "type": "boolean"
          },
          "can_add_image_url": {
            "type": "boolean"
          },
          "can_see_public_alias": {
            "type": "boolean"
          },
          "can_add_transaction_request_to_own_account": {
            "type": "boolean"
          },
          "can_add_comment": {
            "type": "boolean"
          },
          "can_see_other_bank_routing_scheme": {
            "type": "boolean"
          },
          "description": {
            "type": "string"
          },
          "can_see_corporate_location": {
            "type": "boolean"
          },
          "can_see_other_account_bank_name": {
            "type": "boolean"
          },
          "can_see_more_info": {
            "type": "boolean"
          },
          "can_add_counterparty": {
            "type": "boolean"
          },
          "is_system": {
            "type": "boolean"
          },
          "can_see_physical_location": {
            "type": "boolean"
          },
          "can_query_available_funds": {
            "type": "boolean"
          },
          "can_edit_owner_comment": {
            "type": "boolean"
          },
          "can_see_private_alias": {
            "type": "boolean"
          },
          "can_see_bank_account_credit_limit": {
            "type": "boolean"
          },
          "can_see_other_account_routing_address": {
            "type": "boolean"
          },
          "can_see_bank_account_balance": {
            "type": "boolean"
          },
          "can_add_public_alias": {
            "type": "boolean"
          },
          "can_see_bank_routing_scheme": {
            "type": "boolean"
          },
          "can_see_bank_account_owners": {
            "type": "boolean"
          },
          "can_see_other_account_metadata": {
            "type": "boolean"
          },
          "can_delete_physical_location": {
            "type": "boolean"
          },
          "hide_metadata_if_alias_used": {
            "type": "boolean"
          },
          "can_see_transaction_this_bank_account": {
            "type": "boolean"
          },
          "can_see_image_url": {
            "type": "boolean"
          },
          "can_see_transaction_type": {
            "type": "boolean"
          },
          "can_see_images": {
            "type": "boolean"
          },
          "can_see_transaction_amount": {
            "type": "boolean"
          },
          "metadata_view": {
            "type": "string"
          },
          "can_see_transaction_metadata": {
            "type": "boolean"
          },
          "can_see_comments": {
            "type": "boolean"
          },
          "can_see_other_account_iban": {
            "type": "boolean"
          },
          "can_add_image": {
            "type": "boolean"
          },
          "can_see_bank_account_routing_scheme": {
            "type": "boolean"
          },
          "can_see_bank_account_type": {
            "type": "boolean"
          },
          "can_see_other_account_kind": {
            "type": "boolean"
          },
          "can_see_bank_account_currency": {
            "type": "boolean"
          },
          "can_add_where_tag": {
            "type": "boolean"
          },
          "can_see_transaction_start_date": {
            "type": "boolean"
          },
          "can_see_bank_account_label": {
            "type": "boolean"
          },
          "can_add_private_alias": {
            "type": "boolean"
          },
          "can_see_transaction_currency": {
            "type": "boolean"
          },
          "can_add_more_info": {
            "type": "boolean"
          },
          "can_delete_comment": {
            "type": "boolean"
          },
          "can_create_standing_order": {
            "type": "boolean"
          },
          "can_see_other_bank_routing_address": {
            "type": "boolean"
          },
          "can_see_transaction_other_bank_account": {
            "type": "boolean"
          },
          "can_see_bank_account_number": {
            "type": "boolean"
          },
          "can_add_corporate_location": {
            "type": "boolean"
          },
          "alias": {
            "type": "string"
          },
          "can_add_url": {
            "type": "boolean"
          },
          "short_name": {
            "type": "string"
          },
          "can_delete_where_tag": {
            "type": "boolean"
          },
          "is_public": {
            "type": "boolean"
          },
          "can_see_owner_comment": {
            "type": "boolean"
          },
          "can_see_transaction_finish_date": {
            "type": "boolean"
          },
          "can_see_open_corporates_url": {
            "type": "boolean"
          },
          "can_add_physical_location": {
            "type": "boolean"
          },
          "can_see_bank_account_iban": {
            "type": "boolean"
          },
          "can_see_other_account_national_identifier": {
            "type": "boolean"
          },
          "can_see_bank_routing_address": {
            "type": "boolean"
          },
          "can_delete_image": {
            "type": "boolean"
          },
          "can_add_transaction_request_to_any_account": {
            "type": "boolean"
          },
          "can_add_tag": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "can_see_other_account_routing_scheme": {
            "type": "boolean"
          },
          "can_add_open_corporates_url": {
            "type": "boolean"
          },
          "can_delete_tag": {
            "type": "boolean"
          },
          "can_see_transaction_description": {
            "type": "boolean"
          },
          "can_see_bank_account_national_identifier": {
            "type": "boolean"
          },
          "can_see_other_account_number": {
            "type": "boolean"
          },
          "can_see_bank_account_bank_name": {
            "type": "boolean"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/views/VIEW_ID",
      "connector_methods": ["obp.checkBankAccountExists", "obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv4.0.0-createTransactionRequestCard",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "createTransactionRequestCard"
      },
      "request_verb": "POST",
      "request_url": "/obp/v4.0.0/transaction-request-types/CARD/transaction-requests",
      "summary": "Create Transaction Request (CARD)",
      "description": "<p>When using CARD, the payee is set in the request body .</p>\n<p>Money goes into the Counterparty in the request body.</p>\n<p>Initiate a Payment via creating a Transaction Request.</p>\n<p>In OBP, a <code>transaction request</code> may or may not result in a <code>transaction</code>. However, a <code>transaction</code> only has one possible state: completed.</p>\n<p>A <code>Transaction Request</code> can have one of several states: INITIATED, NEXT_CHALLENGE_PENDING etc.</p>\n<p><code>Transactions</code> are modeled on items in a bank statement that represent the movement of money.</p>\n<p><code>Transaction Requests</code> are requests to move money which may or may not succeed and thus result in a <code>Transaction</code>.</p>\n<p>A <code>Transaction Request</code> might create a security challenge that needs to be answered before the <code>Transaction Request</code> proceeds.<br />\nIn case 1 person needs to answer security challenge we have next flow of state of an <code>transaction request</code>:<br />\nINITIATED =&gt; COMPLETED<br />\nIn case n persons needs to answer security challenge we have next flow of state of an <code>transaction request</code>:<br />\nINITIATED =&gt; NEXT_CHALLENGE_PENDING =&gt; ... =&gt; NEXT_CHALLENGE_PENDING =&gt; COMPLETED</p>\n<p>The security challenge is bound to a user i.e. in case of right answer and the user is different than expected one the challenge will fail.</p>\n<p>Rule for calculating number of security challenges:<br />\nIf product Account attribute REQUIRED_CHALLENGE_ANSWERS=N then create N challenges<br />\n(one for every user that has a View where permission &quot;can_add_transaction_request_to_any_account&quot;=true)<br />\nIn case REQUIRED_CHALLENGE_ANSWERS is not defined as an account attribute default value is 1.</p>\n<p>Transaction Requests contain charge information giving the client the opportunity to proceed or not (as long as the challenge level is appropriate).</p>\n<p>Transaction Requests can have one of several Transaction Request Types which expect different bodies. The escaped body is returned in the details key of the GET response.<br />\nThis provides some commonality and one URL for many different payment or transfer types with enough flexibility to validate them differently.</p>\n<p>The payer is set in the URL. Money comes out of the BANK_ID and ACCOUNT_ID specified in the URL.</p>\n<p>In sandbox mode, TRANSACTION_REQUEST_TYPE is commonly set to ACCOUNT. See getTransactionRequestTypesSupportedByBank for all supported types.</p>\n<p>In sandbox mode, if the amount is less than 1000 EUR (any currency, unless it is set differently on this server), the transaction request will create a transaction without a challenge, else the Transaction Request will be set to INITIALISED and a challenge will need to be answered.</p>\n<p>If a challenge is created you must answer it using Answer Transaction Request Challenge before the Transaction is created.</p>\n<p>You can transfer between different currency accounts. (new in 2.0.0). The currency in body must match the sending account.</p>\n<p>The following static FX rates are available in sandbox mode:</p>\n<p><a href=\"https://obp-apiexplorer.joinfincubator.com/more?version=OBPv4.0.0&amp;list-all-banks=false&amp;core=&amp;psd2=&amp;obwg=#OBPv2_2_0-getCurrentFxRate\">https://obp-apiexplorer.joinfincubator.com/more?version=OBPv4.0.0&amp;list-all-banks=false&amp;core=&amp;psd2=&amp;obwg=#OBPv2_2_0-getCurrentFxRate</a></p>\n<p>Transaction Requests satisfy PSD2 requirements thus:</p>\n<p>1) A transaction can be initiated by a third party application.</p>\n<p>2) The customer is informed of the charge that will incurred.</p>\n<p>3) The call supports delegated authentication (OAuth)</p>\n<p>See <a href=\"https://github.com/OpenBankProject/Hello-OBP-DirectLogin-Python/blob/master/hello_payments.py\">this python code</a> for a complete example of this flow.</p>\n<p>There is further documentation <a href=\"https://github.com/OpenBankProject/OBP-API/wiki/Transaction-Requests\">here</a></p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#\">CARD</a>: CARD</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p>\n<p><a href=\"/glossary#\"><strong>brand</strong></a>: Visa</p>\n<p><a href=\"/glossary#\"><strong>card</strong></a>: card</p>\n<p><a href=\"/glossary#\"><strong>card_number</strong></a>: 364435172576215</p>\n<p><a href=\"/glossary#\"><strong>card_type</strong></a>: Credit</p>\n<p><a href=\"/glossary#\"><strong>counterparty_id</strong></a>: 9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#\"><strong>cvv</strong></a>: 123</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#\"><strong>expiry_month</strong></a>: 01</p>\n<p><a href=\"/glossary#\"><strong>expiry_year</strong></a>: 2023</p>\n<p><a href=\"/glossary#\"><strong>name_on_card</strong></a>: SusanSmith</p>\n<p><a href=\"/glossary#to\"><strong>to</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#Account\"><strong>account</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>account_id</strong></a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#allowed_attempts\"><strong>allowed_attempts</strong></a>: 5</p>\n<p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p>\n<p><a href=\"/glossary#bank_code\"><strong>bank_code</strong></a>: CGHZ</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#branch_number\"><strong>branch_number</strong></a>:</p>\n<p><a href=\"/glossary#challenge_type\"><strong>challenge_type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>challenges</strong></a>: challenges</p>\n<p><a href=\"/glossary#charge\"><strong>charge</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>counterparty_id</strong></a>: 9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#creditoraccount\"><strong>creditorAccount</strong></a>:</p>\n<p><a href=\"/glossary#creditorname\"><strong>creditorName</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#\"><strong>date_of_birth</strong></a>: 2018-03-09</p>\n<p><a href=\"/glossary#debtoraccount\"><strong>debtorAccount</strong></a>:</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#details\"><strong>details</strong></a>:</p>\n<p><a href=\"/glossary#end_date\"><strong>end_date</strong></a>:</p>\n<p><a href=\"/glossary#from\"><strong>from</strong></a>:</p>\n<p><a href=\"/glossary#future_date\"><strong>future_date</strong></a>: 20200127</p>\n<p><a href=\"/glossary#\"><strong>iban</strong></a>: DE91 1000 0000 0123 4567 89</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#instructedamount\"><strong>instructedAmount</strong></a>: 100</p>\n<p><a href=\"/glossary#kyc_document\"><strong>kyc_document</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>legal_name</strong></a>: Eveline Tripman</p>\n<p><a href=\"/glossary#link\"><strong>link</strong></a>:</p>\n<p><a href=\"/glossary#message\"><strong>message</strong></a>: 123456</p>\n<p><a href=\"/glossary#mobile_phone_number\"><strong>mobile_phone_number</strong></a>: +49 30 901820</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#nickname\"><strong>nickname</strong></a>:</p>\n<p><a href=\"/glossary#number\"><strong>number</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>start_date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#status\"><strong>status</strong></a>:</p>\n<p><a href=\"/glossary#summary\"><strong>summary</strong></a>:</p>\n<p><a href=\"/glossary#to\"><strong>to</strong></a>:</p>\n<p><a href=\"/glossary#transaction_ids\"><strong>transaction_ids</strong></a>:</p>\n<p><a href=\"/glossary#transfer_type\"><strong>transfer_type</strong></a>:</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n<p><a href=\"/glossary#to_counterparty\">to_counterparty</a>:</p>\n<p><a href=\"/glossary#to_sandbox_tan\">to_sandbox_tan</a>:</p>\n<p><a href=\"/glossary#to_sepa\">to_sepa</a>:</p>\n<p><a href=\"/glossary#to_sepa_credit_transfers\">to_sepa_credit_transfers</a>:</p>\n<p><a href=\"/glossary#\">to_simple</a>: to_simple</p>\n<p><a href=\"/glossary#to_transfer_to_account\">to_transfer_to_account</a>:</p>\n<p><a href=\"/glossary#to_transfer_to_atm\">to_transfer_to_atm</a>:</p>\n<p><a href=\"/glossary#to_transfer_to_phone\">to_transfer_to_phone</a>:</p>\n",
      "description_markdown": "When using CARD, the payee is set in the request body .\n\nMoney goes into the Counterparty in the request body.\n\nInitiate a Payment via creating a Transaction Request.\n\nIn OBP, a `transaction request` may or may not result in a `transaction`. However, a `transaction` only has one possible state: completed.\n\nA `Transaction Request` can have one of several states: INITIATED, NEXT_CHALLENGE_PENDING etc.\n\n`Transactions` are modeled on items in a bank statement that represent the movement of money.\n\n`Transaction Requests` are requests to move money which may or may not succeed and thus result in a `Transaction`.\n\nA `Transaction Request` might create a security challenge that needs to be answered before the `Transaction Request` proceeds.\nIn case 1 person needs to answer security challenge we have next flow of state of an `transaction request`:\n  INITIATED => COMPLETED\nIn case n persons needs to answer security challenge we have next flow of state of an `transaction request`:\n  INITIATED => NEXT_CHALLENGE_PENDING => ... => NEXT_CHALLENGE_PENDING => COMPLETED\n\nThe security challenge is bound to a user i.e. in case of right answer and the user is different than expected one the challenge will fail.\n\nRule for calculating number of security challenges:\nIf product Account attribute REQUIRED_CHALLENGE_ANSWERS=N then create N challenges\n(one for every user that has a View where permission \"can_add_transaction_request_to_any_account\"=true)\nIn case REQUIRED_CHALLENGE_ANSWERS is not defined as an account attribute default value is 1.\n\nTransaction Requests contain charge information giving the client the opportunity to proceed or not (as long as the challenge level is appropriate).\n\nTransaction Requests can have one of several Transaction Request Types which expect different bodies. The escaped body is returned in the details key of the GET response.\nThis provides some commonality and one URL for many different payment or transfer types with enough flexibility to validate them differently.\n\nThe payer is set in the URL. Money comes out of the BANK_ID and ACCOUNT_ID specified in the URL.\n\nIn sandbox mode, TRANSACTION_REQUEST_TYPE is commonly set to ACCOUNT. See getTransactionRequestTypesSupportedByBank for all supported types.\n\nIn sandbox mode, if the amount is less than 1000 EUR (any currency, unless it is set differently on this server), the transaction request will create a transaction without a challenge, else the Transaction Request will be set to INITIALISED and a challenge will need to be answered.\n\nIf a challenge is created you must answer it using Answer Transaction Request Challenge before the Transaction is created.\n\nYou can transfer between different currency accounts. (new in 2.0.0). The currency in body must match the sending account.\n\nThe following static FX rates are available in sandbox mode:\n\nhttps://obp-apiexplorer.joinfincubator.com/more?version=OBPv4.0.0&list-all-banks=false&core=&psd2=&obwg=#OBPv2_2_0-getCurrentFxRate\n\n\nTransaction Requests satisfy PSD2 requirements thus:\n\n1) A transaction can be initiated by a third party application.\n\n2) The customer is informed of the charge that will incurred.\n\n3) The call supports delegated authentication (OAuth)\n\nSee [this python code](https://github.com/OpenBankProject/Hello-OBP-DirectLogin-Python/blob/master/hello_payments.py) for a complete example of this flow.\n\nThere is further documentation [here](https://github.com/OpenBankProject/OBP-API/wiki/Transaction-Requests)\n\n\n\n       \n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[CARD](/glossary#): CARD\n\n\n\n\n\n**JSON request body fields:**\n\n\n\n[**amount**](/glossary#): 10.12\n\n\n\n[**brand**](/glossary#): Visa\n\n\n\n[**card**](/glossary#): card\n\n\n\n[**card_number**](/glossary#): 364435172576215\n\n\n\n[**card_type**](/glossary#): Credit\n\n\n\n[**counterparty_id**](/glossary#): 9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**cvv**](/glossary#): 123\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**expiry_month**](/glossary#): 01\n\n\n\n[**expiry_year**](/glossary#): 2023\n\n\n\n[**name_on_card**](/glossary#): SusanSmith\n\n\n\n[**to**](/glossary#to): \n\n\n\n[**value**](/glossary#): 5987953\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**account**](/glossary#Account): \n\n\n\n[**account_id**](/glossary#): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[**allowed_attempts**](/glossary#allowed_attempts): 5\n\n\n\n[**amount**](/glossary#): 10.12\n\n\n\n[**bank_code**](/glossary#bank_code): CGHZ\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**branch_number**](/glossary#branch_number): \n\n\n\n[**challenge_type**](/glossary#challenge_type): \n\n\n\n[**challenges**](/glossary#): challenges\n\n\n\n[**charge**](/glossary#charge): \n\n\n\n[**counterparty_id**](/glossary#): 9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**creditorAccount**](/glossary#creditoraccount): \n\n\n\n[**creditorName**](/glossary#creditorname): \n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**date_of_birth**](/glossary#): 2018-03-09\n\n\n\n[**debtorAccount**](/glossary#debtoraccount): \n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**details**](/glossary#details): \n\n\n\n[**end_date**](/glossary#end_date): \n\n\n\n[**from**](/glossary#from): \n\n\n\n[**future_date**](/glossary#future_date): 20200127\n\n\n\n[**iban**](/glossary#): DE91 1000 0000 0123 4567 89\n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**instructedAmount**](/glossary#instructedamount): 100\n\n\n\n[**kyc_document**](/glossary#kyc_document): \n\n\n\n[**legal_name**](/glossary#): Eveline Tripman\n\n\n\n[**link**](/glossary#link): \n\n\n\n[**message**](/glossary#message): 123456\n\n\n\n[**mobile_phone_number**](/glossary#mobile_phone_number): +49 30 901820\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**nickname**](/glossary#nickname): \n\n\n\n[**number**](/glossary#number): \n\n\n\n[**start_date**](/glossary#): 2020-01-27\n\n\n\n[**status**](/glossary#status): \n\n\n\n[**summary**](/glossary#summary): \n\n\n\n[**to**](/glossary#to): \n\n\n\n[**transaction_ids**](/glossary#transaction_ids): \n\n\n\n[**transfer_type**](/glossary#transfer_type): \n\n\n\n[**type**](/glossary#type): \n\n\n\n[**user_id**](/glossary#): 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\n\n\n\n[**value**](/glossary#): 5987953\n\n\n\n[to_counterparty](/glossary#to_counterparty): \n\n\n\n[to_sandbox_tan](/glossary#to_sandbox_tan): \n\n\n\n[to_sepa](/glossary#to_sepa): \n\n\n\n[to_sepa_credit_transfers](/glossary#to_sepa_credit_transfers): \n\n\n\n[to_simple](/glossary#): to_simple\n\n\n\n[to_transfer_to_account](/glossary#to_transfer_to_account): \n\n\n\n[to_transfer_to_atm](/glossary#to_transfer_to_atm): \n\n\n\n[to_transfer_to_phone](/glossary#to_transfer_to_phone): \n\n\n",
      "example_request_body": {
        "card": {
          "card_type": "Credit",
          "brand": "Visa",
          "cvv": "123",
          "card_number": "364435172576215",
          "name_on_card": "SusanSmith",
          "expiry_year": "2023",
          "expiry_month": "01"
        },
        "to": {
          "counterparty_id": "9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh"
        },
        "value": {
          "currency": "EUR",
          "amount": "0"
        },
        "description": "A card payment description. "
      },
      "success_response_body": {
        "id": "4050046c-63b3-4868-8a22-14b4181d33a6",
        "type": "SANDBOX_TAN",
        "from": {
          "bank_id": "gh.29.uk",
          "account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
        },
        "details": {
          "to_sandbox_tan": {
            "bank_id": "String",
            "account_id": "String"
          },
          "to_sepa": {
            "iban": "String"
          },
          "to_counterparty": {
            "counterparty_id": "9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh"
          },
          "to_transfer_to_phone": {
            "value": {
              "currency": "EUR",
              "amount": "0"
            },
            "description": "String",
            "message": "String",
            "from": {
              "mobile_phone_number": "+44 07972 444 876",
              "nickname": "String"
            },
            "to": {
              "mobile_phone_number": "+44 07972 444 876"
            }
          },
          "to_transfer_to_atm": {
            "value": {
              "currency": "EUR",
              "amount": "0"
            },
            "description": "String",
            "message": "String",
            "from": {
              "mobile_phone_number": "+44 07972 444 876",
              "nickname": "String"
            },
            "to": {
              "legal_name": "Eveline Tripman",
              "date_of_birth": "20181230",
              "mobile_phone_number": "+44 07972 444 876",
              "kyc_document": {
                "type": "String",
                "number": "String"
              }
            }
          },
          "to_transfer_to_account": {
            "value": {
              "currency": "EUR",
              "amount": "0"
            },
            "description": "String",
            "transfer_type": "String",
            "future_date": "20181230",
            "to": {
              "name": "String",
              "bank_code": "String",
              "branch_number": "String",
              "account": {
                "number": "String",
                "iban": "String"
              }
            }
          },
          "to_sepa_credit_transfers": {
            "debtorAccount": {
              "iban": "12345"
            },
            "instructedAmount": {
              "currency": "EUR",
              "amount": "0"
            },
            "creditorAccount": {
              "iban": "54321"
            },
            "creditorName": "John Miles"
          },
          "value": {
            "currency": "EUR",
            "amount": "100"
          },
          "description": "String"
        },
        "transaction_ids": ["902ba3bb-dedd-45e7-9319-2fd3f2cd98a1"],
        "status": "COMPLETED",
        "start_date": "1100-01-01T00:00:00Z",
        "end_date": "1100-01-01T00:00:00Z",
        "challenges": [
          {
            "id": "2fg8a7e4-6d02-40e3-a129-0b2bf89de8ub",
            "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
            "allowed_attempts": 3,
            "challenge_type": "OBP_TRANSACTION_REQUEST_CHALLENGE",
            "link": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transaction-request-types/TRANSACTION_REQUEST_TYPE/transaction-requests/TRANSACTION_REQUEST_ID/challenge"
          }
        ],
        "charge": {
          "summary": "Rent the flat",
          "value": {
            "currency": "EUR",
            "amount": "0"
          }
        }
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30111: Invalid Bank Id. The BANK_ID should only contain 0-9/a-z/A-Z/'-'/'.'/'_', the length should be smaller than 255.",
        "OBP-30110: Invalid Account Id. The ACCOUNT_ID should only contain 0-9/a-z/A-Z/'-'/'.'/'_', the length should be smaller than 255.",
        "OBP-10001: Incorrect json format.",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30003: Account not found. Please specify a valid value for ACCOUNT_ID.",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-40002: Insufficient authorisation to create TransactionRequest. The Transaction Request could not be created because the login user doesn't have access to the view of the from account or the view don't have the `canAddTransactionRequestToAnyAccount` permission or your consumer doesn't not have the access to the view of the from account or you don't have the role CanCreateAnyTransactionRequest.",
        "OBP-40001: Invalid value for TRANSACTION_REQUEST_TYPE",
        "OBP-10001: Incorrect json format.",
        "OBP-10002: Invalid Number. Could not convert value to a number.",
        "OBP-40008: Can't send a payment with a value of 0 or less.",
        "OBP-40003: Transaction Request Currency must be the same as From Account Currency.",
        "OBP-00003: Transaction Requests is disabled in this API instance.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Transaction-Request", "Payment Initiation Service (PIS)", "PSD2", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "value": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string"
              },
              "amount": {
                "type": "string"
              }
            }
          },
          "card": {
            "type": "object",
            "properties": {
              "card_number": {
                "type": "string"
              },
              "cvv": {
                "type": "string"
              },
              "card_type": {
                "type": "string"
              },
              "name_on_card": {
                "type": "string"
              },
              "brand": {
                "type": "string"
              },
              "expiry_month": {
                "type": "string"
              },
              "expiry_year": {
                "type": "string"
              }
            }
          },
          "to": {
            "type": "object",
            "properties": {
              "counterparty_id": {
                "type": "string"
              }
            }
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "challenges": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "challenge_type": {
                  "type": "string"
                },
                "link": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "allowed_attempts": {
                  "type": "integer"
                },
                "user_id": {
                  "type": "string"
                }
              }
            }
          },
          "status": {
            "type": "string"
          },
          "end_date": {
            "type": "string",
            "format": "date-time"
          },
          "charge": {
            "type": "object",
            "properties": {
              "summary": {
                "type": "string"
              },
              "value": {
                "type": "object",
                "properties": {
                  "currency": {
                    "type": "string"
                  },
                  "amount": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "transaction_ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "from": {
            "type": "object",
            "properties": {
              "bank_id": {
                "type": "string"
              },
              "account_id": {
                "type": "string"
              }
            }
          },
          "details": {
            "type": "object",
            "properties": {
              "to_sandbox_tan": {
                "type": "object",
                "properties": {
                  "account_id": {
                    "type": "string"
                  },
                  "bank_id": {
                    "type": "string"
                  }
                }
              },
              "value": {
                "type": "object",
                "properties": {
                  "currency": {
                    "type": "string"
                  },
                  "amount": {
                    "type": "string"
                  }
                }
              },
              "to_transfer_to_phone": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  },
                  "from": {
                    "type": "object",
                    "properties": {
                      "nickname": {
                        "type": "string"
                      },
                      "mobile_phone_number": {
                        "type": "string"
                      }
                    }
                  },
                  "to": {
                    "type": "object",
                    "properties": {
                      "mobile_phone_number": {
                        "type": "string"
                      }
                    }
                  },
                  "value": {
                    "type": "object",
                    "properties": {
                      "currency": {
                        "type": "string"
                      },
                      "amount": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "to_sepa": {
                "type": "object",
                "properties": {
                  "iban": {
                    "type": "string"
                  }
                }
              },
              "description": {
                "type": "string"
              },
              "to_counterparty": {
                "type": "object",
                "properties": {
                  "counterparty_id": {
                    "type": "string"
                  }
                }
              },
              "to_transfer_to_account": {
                "type": "object",
                "properties": {
                  "to": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "account": {
                        "type": "object",
                        "properties": {
                          "number": {
                            "type": "string"
                          },
                          "iban": {
                            "type": "string"
                          }
                        }
                      },
                      "bank_code": {
                        "type": "string"
                      },
                      "branch_number": {
                        "type": "string"
                      }
                    }
                  },
                  "transfer_type": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "future_date": {
                    "type": "string"
                  },
                  "value": {
                    "type": "object",
                    "properties": {
                      "currency": {
                        "type": "string"
                      },
                      "amount": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "to_sepa_credit_transfers": {
                "type": "object",
                "properties": {
                  "instructedAmount": {
                    "type": "object",
                    "properties": {
                      "currency": {
                        "type": "string"
                      },
                      "amount": {
                        "type": "string"
                      }
                    }
                  },
                  "debtorAccount": {
                    "type": "object",
                    "properties": {
                      "iban": {
                        "type": "string"
                      }
                    }
                  },
                  "creditorAccount": {
                    "type": "object",
                    "properties": {
                      "iban": {
                        "type": "string"
                      }
                    }
                  },
                  "creditorName": {
                    "type": "string"
                  }
                }
              },
              "to_transfer_to_atm": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  },
                  "from": {
                    "type": "object",
                    "properties": {
                      "nickname": {
                        "type": "string"
                      },
                      "mobile_phone_number": {
                        "type": "string"
                      }
                    }
                  },
                  "value": {
                    "type": "object",
                    "properties": {
                      "currency": {
                        "type": "string"
                      },
                      "amount": {
                        "type": "string"
                      }
                    }
                  },
                  "to": {
                    "type": "object",
                    "properties": {
                      "date_of_birth": {
                        "type": "string"
                      },
                      "kyc_document": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string"
                          },
                          "number": {
                            "type": "string"
                          }
                        }
                      },
                      "legal_name": {
                        "type": "string"
                      },
                      "mobile_phone_number": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "start_date": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/transaction-request-types/CARD/transaction-requests",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv4.0.0-createSystemDynamicEntity",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "createSystemDynamicEntity"
      },
      "request_verb": "POST",
      "request_url": "/obp/v4.0.0/management/system-dynamic-entities",
      "summary": "Create System Level Dynamic Entity",
      "description": "<p>Create a system level Dynamic Entity.</p>\n<p>Authentication is Mandatory</p>\n<p>Create a DynamicEntity. If creation is successful, the corresponding POST, GET, PUT and DELETE (Create, Read, Update, Delete or CRUD for short) endpoints will be generated automatically</p>\n<p>The following field types are as supported:<br />\n[number, integer, boolean, string, DATE_WITH_DAY, reference]</p>\n<p>The DATE_WITH_DAY format is: yyyy-MM-dd</p>\n<p>Reference types are like foreign keys and composite foreign keys are supported. The value you need to supply as the (composite) foreign key is a UUID (or several UUIDs in the case of a composite key) that match value in another Entity..<br />\nSee the following list of currently available reference types and examples of how to construct key values correctly. Note: As more Dynamic Entities are created on this instance, this list will grow:</p>\n<pre><code>&quot;someField0&quot;: {\n    &quot;type&quot;: &quot;reference:FooBar&quot;,\n    &quot;example&quot;: &quot;91813ef3-5120-4827-9329-1649dcc06b51&quot;\n}\n\n&quot;someField1&quot;: {\n    &quot;type&quot;: &quot;reference:risk_checks&quot;,\n    &quot;example&quot;: &quot;91813ef3-5120-4827-9329-1649dcc06b51&quot;\n}\n\n&quot;someField2&quot;: {\n    &quot;type&quot;: &quot;reference:BookMarkBankAndAccount&quot;,\n    &quot;example&quot;: &quot;91813ef3-5120-4827-9329-1649dcc06b51&quot;\n}\n\n&quot;someField3&quot;: {\n    &quot;type&quot;: &quot;reference:risk_check&quot;,\n    &quot;example&quot;: &quot;91813ef3-5120-4827-9329-1649dcc06b51&quot;\n}\n\n&quot;someField4&quot;: {\n    &quot;type&quot;: &quot;reference:BookMarkBankAndAccount_system&quot;,\n    &quot;example&quot;: &quot;91813ef3-5120-4827-9329-1649dcc06b51&quot;\n}\n\n&quot;someField5&quot;: {\n    &quot;type&quot;: &quot;reference:Hospital&quot;,\n    &quot;example&quot;: &quot;91813ef3-5120-4827-9329-1649dcc06b51&quot;\n}\n\n&quot;someField6&quot;: {\n    &quot;type&quot;: &quot;reference:Bank&quot;,\n    &quot;example&quot;: &quot;91813ef3-5120-4827-9329-1649dcc06b51&quot;\n}\n\n&quot;someField7&quot;: {\n    &quot;type&quot;: &quot;reference:Consumer&quot;,\n    &quot;example&quot;: &quot;91813ef3-5120-4827-9329-1649dcc06b51&quot;\n}\n\n&quot;someField8&quot;: {\n    &quot;type&quot;: &quot;reference:Customer&quot;,\n    &quot;example&quot;: &quot;91813ef3-5120-4827-9329-1649dcc06b51&quot;\n}\n\n&quot;someField9&quot;: {\n    &quot;type&quot;: &quot;reference:MethodRouting&quot;,\n    &quot;example&quot;: &quot;91813ef3-5120-4827-9329-1649dcc06b51&quot;\n}\n\n&quot;someField10&quot;: {\n    &quot;type&quot;: &quot;reference:DynamicEntity&quot;,\n    &quot;example&quot;: &quot;91813ef3-5120-4827-9329-1649dcc06b51&quot;\n}\n\n&quot;someField11&quot;: {\n    &quot;type&quot;: &quot;reference:TransactionRequest&quot;,\n    &quot;example&quot;: &quot;91813ef3-5120-4827-9329-1649dcc06b51&quot;\n}\n\n&quot;someField12&quot;: {\n    &quot;type&quot;: &quot;reference:ProductAttribute&quot;,\n    &quot;example&quot;: &quot;91813ef3-5120-4827-9329-1649dcc06b51&quot;\n}\n\n&quot;someField13&quot;: {\n    &quot;type&quot;: &quot;reference:AccountAttribute&quot;,\n    &quot;example&quot;: &quot;91813ef3-5120-4827-9329-1649dcc06b51&quot;\n}\n\n&quot;someField14&quot;: {\n    &quot;type&quot;: &quot;reference:TransactionAttribute&quot;,\n    &quot;example&quot;: &quot;91813ef3-5120-4827-9329-1649dcc06b51&quot;\n}\n\n&quot;someField15&quot;: {\n    &quot;type&quot;: &quot;reference:CustomerAttribute&quot;,\n    &quot;example&quot;: &quot;91813ef3-5120-4827-9329-1649dcc06b51&quot;\n}\n\n&quot;someField16&quot;: {\n    &quot;type&quot;: &quot;reference:AccountApplication&quot;,\n    &quot;example&quot;: &quot;91813ef3-5120-4827-9329-1649dcc06b51&quot;\n}\n\n&quot;someField17&quot;: {\n    &quot;type&quot;: &quot;reference:CardAttribute&quot;,\n    &quot;example&quot;: &quot;91813ef3-5120-4827-9329-1649dcc06b51&quot;\n}\n\n&quot;someField18&quot;: {\n    &quot;type&quot;: &quot;reference:Counterparty&quot;,\n    &quot;example&quot;: &quot;91813ef3-5120-4827-9329-1649dcc06b51&quot;\n}\n\n&quot;someField19&quot;: {\n    &quot;type&quot;: &quot;reference:Branch:bankId&amp;branchId&quot;,\n    &quot;example&quot;: &quot;bankId=91813ef3-5120-4827-9329-1649dcc06b51&amp;branchId=9c815292-171e-4860-b686-7e47ccac450d&quot;\n}\n\n&quot;someField20&quot;: {\n    &quot;type&quot;: &quot;reference:Atm:bankId&amp;atmId&quot;,\n    &quot;example&quot;: &quot;bankId=91813ef3-5120-4827-9329-1649dcc06b51&amp;atmId=9c815292-171e-4860-b686-7e47ccac450d&quot;\n}\n\n&quot;someField21&quot;: {\n    &quot;type&quot;: &quot;reference:BankAccount:bankId&amp;accountId&quot;,\n    &quot;example&quot;: &quot;bankId=91813ef3-5120-4827-9329-1649dcc06b51&amp;accountId=9c815292-171e-4860-b686-7e47ccac450d&quot;\n}\n\n&quot;someField22&quot;: {\n    &quot;type&quot;: &quot;reference:Product:bankId&amp;productCode&quot;,\n    &quot;example&quot;: &quot;bankId=91813ef3-5120-4827-9329-1649dcc06b51&amp;productCode=9c815292-171e-4860-b686-7e47ccac450d&quot;\n}\n\n&quot;someField23&quot;: {\n    &quot;type&quot;: &quot;reference:PhysicalCard:bankId&amp;cardId&quot;,\n    &quot;example&quot;: &quot;bankId=91813ef3-5120-4827-9329-1649dcc06b51&amp;cardId=9c815292-171e-4860-b686-7e47ccac450d&quot;\n}\n\n&quot;someField24&quot;: {\n    &quot;type&quot;: &quot;reference:Transaction:bankId&amp;accountId&amp;transactionId&quot;,\n    &quot;example&quot;: &quot;bankId=91813ef3-5120-4827-9329-1649dcc06b51&amp;accountId=9c815292-171e-4860-b686-7e47ccac450d&amp;transactionId=919be7d2-b85a-45b9-bda7-f499c06caf02&quot;\n}\n\n&quot;someField25&quot;: {\n    &quot;type&quot;: &quot;reference:Counterparty:bankId&amp;accountId&amp;counterpartyId&quot;,\n    &quot;example&quot;: &quot;bankId=91813ef3-5120-4827-9329-1649dcc06b51&amp;accountId=9c815292-171e-4860-b686-7e47ccac450d&amp;counterpartyId=919be7d2-b85a-45b9-bda7-f499c06caf02&quot;\n}\n\n</code></pre>\n<p>Note: if you set <code>hasPersonalEntity</code> = false, then OBP will not generate the CRUD my FooBar endpoints.</p>\n",
      "description_markdown": "Create a system level Dynamic Entity.\n\n\nAuthentication is Mandatory\n\nCreate a DynamicEntity. If creation is successful, the corresponding POST, GET, PUT and DELETE (Create, Read, Update, Delete or CRUD for short) endpoints will be generated automatically\n\nThe following field types are as supported:\n[number, integer, boolean, string, DATE_WITH_DAY, reference]\n\nThe DATE_WITH_DAY format is: yyyy-MM-dd\n\nReference types are like foreign keys and composite foreign keys are supported. The value you need to supply as the (composite) foreign key is a UUID (or several UUIDs in the case of a composite key) that match value in another Entity..\nSee the following list of currently available reference types and examples of how to construct key values correctly. Note: As more Dynamic Entities are created on this instance, this list will grow:\n```\n\"someField0\": {\n    \"type\": \"reference:FooBar\",\n    \"example\": \"91813ef3-5120-4827-9329-1649dcc06b51\"\n}\n\n\"someField1\": {\n    \"type\": \"reference:risk_checks\",\n    \"example\": \"91813ef3-5120-4827-9329-1649dcc06b51\"\n}\n\n\"someField2\": {\n    \"type\": \"reference:BookMarkBankAndAccount\",\n    \"example\": \"91813ef3-5120-4827-9329-1649dcc06b51\"\n}\n\n\"someField3\": {\n    \"type\": \"reference:risk_check\",\n    \"example\": \"91813ef3-5120-4827-9329-1649dcc06b51\"\n}\n\n\"someField4\": {\n    \"type\": \"reference:BookMarkBankAndAccount_system\",\n    \"example\": \"91813ef3-5120-4827-9329-1649dcc06b51\"\n}\n\n\"someField5\": {\n    \"type\": \"reference:Hospital\",\n    \"example\": \"91813ef3-5120-4827-9329-1649dcc06b51\"\n}\n\n\"someField6\": {\n    \"type\": \"reference:Bank\",\n    \"example\": \"91813ef3-5120-4827-9329-1649dcc06b51\"\n}\n\n\"someField7\": {\n    \"type\": \"reference:Consumer\",\n    \"example\": \"91813ef3-5120-4827-9329-1649dcc06b51\"\n}\n\n\"someField8\": {\n    \"type\": \"reference:Customer\",\n    \"example\": \"91813ef3-5120-4827-9329-1649dcc06b51\"\n}\n\n\"someField9\": {\n    \"type\": \"reference:MethodRouting\",\n    \"example\": \"91813ef3-5120-4827-9329-1649dcc06b51\"\n}\n\n\"someField10\": {\n    \"type\": \"reference:DynamicEntity\",\n    \"example\": \"91813ef3-5120-4827-9329-1649dcc06b51\"\n}\n\n\"someField11\": {\n    \"type\": \"reference:TransactionRequest\",\n    \"example\": \"91813ef3-5120-4827-9329-1649dcc06b51\"\n}\n\n\"someField12\": {\n    \"type\": \"reference:ProductAttribute\",\n    \"example\": \"91813ef3-5120-4827-9329-1649dcc06b51\"\n}\n\n\"someField13\": {\n    \"type\": \"reference:AccountAttribute\",\n    \"example\": \"91813ef3-5120-4827-9329-1649dcc06b51\"\n}\n\n\"someField14\": {\n    \"type\": \"reference:TransactionAttribute\",\n    \"example\": \"91813ef3-5120-4827-9329-1649dcc06b51\"\n}\n\n\"someField15\": {\n    \"type\": \"reference:CustomerAttribute\",\n    \"example\": \"91813ef3-5120-4827-9329-1649dcc06b51\"\n}\n\n\"someField16\": {\n    \"type\": \"reference:AccountApplication\",\n    \"example\": \"91813ef3-5120-4827-9329-1649dcc06b51\"\n}\n\n\"someField17\": {\n    \"type\": \"reference:CardAttribute\",\n    \"example\": \"91813ef3-5120-4827-9329-1649dcc06b51\"\n}\n\n\"someField18\": {\n    \"type\": \"reference:Counterparty\",\n    \"example\": \"91813ef3-5120-4827-9329-1649dcc06b51\"\n}\n\n\"someField19\": {\n    \"type\": \"reference:Branch:bankId&branchId\",\n    \"example\": \"bankId=91813ef3-5120-4827-9329-1649dcc06b51&branchId=9c815292-171e-4860-b686-7e47ccac450d\"\n}\n\n\"someField20\": {\n    \"type\": \"reference:Atm:bankId&atmId\",\n    \"example\": \"bankId=91813ef3-5120-4827-9329-1649dcc06b51&atmId=9c815292-171e-4860-b686-7e47ccac450d\"\n}\n\n\"someField21\": {\n    \"type\": \"reference:BankAccount:bankId&accountId\",\n    \"example\": \"bankId=91813ef3-5120-4827-9329-1649dcc06b51&accountId=9c815292-171e-4860-b686-7e47ccac450d\"\n}\n\n\"someField22\": {\n    \"type\": \"reference:Product:bankId&productCode\",\n    \"example\": \"bankId=91813ef3-5120-4827-9329-1649dcc06b51&productCode=9c815292-171e-4860-b686-7e47ccac450d\"\n}\n\n\"someField23\": {\n    \"type\": \"reference:PhysicalCard:bankId&cardId\",\n    \"example\": \"bankId=91813ef3-5120-4827-9329-1649dcc06b51&cardId=9c815292-171e-4860-b686-7e47ccac450d\"\n}\n\n\"someField24\": {\n    \"type\": \"reference:Transaction:bankId&accountId&transactionId\",\n    \"example\": \"bankId=91813ef3-5120-4827-9329-1649dcc06b51&accountId=9c815292-171e-4860-b686-7e47ccac450d&transactionId=919be7d2-b85a-45b9-bda7-f499c06caf02\"\n}\n\n\"someField25\": {\n    \"type\": \"reference:Counterparty:bankId&accountId&counterpartyId\",\n    \"example\": \"bankId=91813ef3-5120-4827-9329-1649dcc06b51&accountId=9c815292-171e-4860-b686-7e47ccac450d&counterpartyId=919be7d2-b85a-45b9-bda7-f499c06caf02\"\n}\n\n```\n\nNote: if you set `hasPersonalEntity` = false, then OBP will not generate the CRUD my FooBar endpoints.",
      "example_request_body": {
        "FooBar": {
          "description": "description of this entity, can be markdown text.",
          "required": ["name"],
          "properties": {
            "name": {
              "type": "string",
              "minLength": 3,
              "maxLength": 20,
              "example": "James Brown",
              "description": "description of **name** field, can be markdown text."
            },
            "number": {
              "type": "integer",
              "example": 698761728,
              "description": "description of **number** field, can be markdown text."
            }
          }
        },
        "hasPersonalEntity": true
      },
      "success_response_body": {
        "FooBar": {
          "description": "description of this entity, can be markdown text.",
          "required": ["name"],
          "properties": {
            "name": {
              "type": "string",
              "minLength": 3,
              "maxLength": 20,
              "example": "James Brown",
              "description": "description of **name** field, can be markdown text."
            },
            "number": {
              "type": "integer",
              "example": 698761728,
              "description": "description of **number** field, can be markdown text."
            }
          }
        },
        "dynamicEntityId": "dynamic-entity-id",
        "userId": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
        "hasPersonalEntity": true
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Dynamic-Entity-Manage", "API", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "hasPersonalEntity": {
            "type": "boolean"
          },
          "FooBar": {
            "type": "object",
            "properties": {
              "required": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "description": {
                "type": "string"
              },
              "properties": {
                "type": "object",
                "properties": {
                  "number": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": ["number", "integer", "boolean", "string", "DATE_WITH_DAY"]
                      },
                      "example": {
                        "type": "integer"
                      },
                      "description": {
                        "type": "string"
                      }
                    }
                  },
                  "name": {
                    "type": "object",
                    "properties": {
                      "minLength": {
                        "type": "integer"
                      },
                      "type": {
                        "type": "string",
                        "enum": ["number", "integer", "boolean", "string", "DATE_WITH_DAY"]
                      },
                      "maxLength": {
                        "type": "integer"
                      },
                      "example": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "dynamicEntityId": {
            "type": "string"
          },
          "hasPersonalEntity": {
            "type": "boolean"
          },
          "userId": {
            "type": "string"
          },
          "FooBar": {
            "type": "object",
            "properties": {
              "required": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "description": {
                "type": "string"
              },
              "properties": {
                "type": "object",
                "properties": {
                  "number": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": ["number", "integer", "boolean", "string", "DATE_WITH_DAY"]
                      },
                      "example": {
                        "type": "integer"
                      },
                      "description": {
                        "type": "string"
                      }
                    }
                  },
                  "name": {
                    "type": "object",
                    "properties": {
                      "minLength": {
                        "type": "integer"
                      },
                      "type": {
                        "type": "string",
                        "enum": ["number", "integer", "boolean", "string", "DATE_WITH_DAY"]
                      },
                      "maxLength": {
                        "type": "integer"
                      },
                      "example": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateSystemLevelDynamicEntity",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/system-dynamic-entities",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv3.1.0-createTaxResidence",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "createTaxResidence"
      },
      "request_verb": "POST",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/customers/CUSTOMER_ID/tax-residence",
      "summary": "Create Tax Residence",
      "description": "<p>Create a Tax Residence for a Customer specified by CUSTOMER_ID.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#Customer.customer_id\">CUSTOMER_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#domain\"><strong>domain</strong></a>:</p>\n<p><a href=\"/glossary#tax_number\"><strong>tax_number</strong></a>: 456</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#domain\"><strong>domain</strong></a>:</p>\n<p><a href=\"/glossary#tax_number\"><strong>tax_number</strong></a>: 456</p>\n<p><a href=\"/glossary#tax_residence_id\"><strong>tax_residence_id</strong></a>:</p>\n",
      "description_markdown": "Create a Tax Residence for a Customer specified by CUSTOMER_ID.\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[CUSTOMER_ID](/glossary#Customer.customer_id): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n\n\n**JSON request body fields:**\n\n\n\n[**domain**](/glossary#domain): \n\n\n\n[**tax_number**](/glossary#tax_number): 456\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**domain**](/glossary#domain): \n\n\n\n[**tax_number**](/glossary#tax_number): 456\n\n\n\n[**tax_residence_id**](/glossary#tax_residence_id): \n\n\n",
      "example_request_body": {
        "domain": "Enter some domain",
        "tax_number": "Enter some number"
      },
      "success_response_body": {
        "domain": "Enter some domain",
        "tax_number": "Enter some number",
        "tax_residence_id": "902ba3bb-dedd-45e7-9319-2fd3f2cd98a1"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Customer", "KYC", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "tax_number": {
            "type": "string"
          },
          "domain": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "tax_number": {
            "type": "string"
          },
          "domain": {
            "type": "string"
          },
          "tax_residence_id": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateTaxResidence",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/customers/CUSTOMER_ID/tax-residence",
      "connector_methods": [
        "obp.createTaxResidence",
        "obp.getCustomerByCustomerId",
        "obp.getBank",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv4.0.0-getScopes",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getScopes"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/consumers/CONSUMER_ID/scopes",
      "summary": "Get Scopes for Consumer",
      "description": "<p>Get all the scopes for an consumer specified by CONSUMER_ID</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#\">CONSUMER_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#list\"><strong>list</strong></a>:</p>\n<p><a href=\"/glossary#role_name\"><strong>role_name</strong></a>:</p>\n<p><a href=\"/glossary#scope_id\"><strong>scope_id</strong></a>:</p>\n",
      "description_markdown": "Get all the scopes for an consumer specified by CONSUMER_ID\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[CONSUMER_ID](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**list**](/glossary#list): \n\n\n\n[**role_name**](/glossary#role_name): \n\n\n\n[**scope_id**](/glossary#scope_id): \n\n\n",
      "success_response_body": {
        "list": [
          {
            "scope_id": "88625da4-a671-435e-9d24-e5b6e5cc404f",
            "role_name": "CanGetEntitlementsForAnyUserAtOneBank",
            "bank_id": "gh.29.uk"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30212: EntitlementId not found",
        "OBP-30019: Consumer not found. Please specify a valid value for CONSUMER_ID.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Scope", "Consumer", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "scope_id": {
                  "type": "string"
                },
                "bank_id": {
                  "type": "string"
                },
                "role_name": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/consumers/CONSUMER_ID/scopes",
      "connector_methods": ["obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv4.0.0-updateProductAttribute",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "updateProductAttribute"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/products/PRODUCT_CODE/attributes/PRODUCT_ATTRIBUTE_ID",
      "summary": "Update Product Attribute",
      "description": "<p>Update Product Attribute.</p>\n<p>Product Attributes are used to describe a financial Product with a list of typed key value pairs.</p>\n<p>Each Product Attribute is linked to its Product by PRODUCT_CODE</p>\n<p>Update one Product Attribute by its id.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#product_attribute_id\">PRODUCT_ATTRIBUTE_ID</a>:</p>\n<p><a href=\"/glossary#product_code\">PRODUCT_CODE</a>: 1234BW</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#product_attribute_id\"><strong>product_attribute_id</strong></a>:</p>\n<p><a href=\"/glossary#product_code\"><strong>product_code</strong></a>: 1234BW</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n<p><a href=\"/glossary#is_active\">is_active</a>: true</p>\n",
      "description_markdown": "Update Product Attribute. \n\n\n\nProduct Attributes are used to describe a financial Product with a list of typed key value pairs.\n\nEach Product Attribute is linked to its Product by PRODUCT_CODE\n\n\n       \n\nUpdate one Product Attribute by its id.\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[PRODUCT_ATTRIBUTE_ID](/glossary#product_attribute_id): \n\n\n\n[PRODUCT_CODE](/glossary#product_code): 1234BW\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**product_attribute_id**](/glossary#product_attribute_id): \n\n\n\n[**product_code**](/glossary#product_code): 1234BW\n\n\n\n[**type**](/glossary#type): \n\n\n\n[**value**](/glossary#): 5987953\n\n\n\n[is_active](/glossary#is_active): true\n\n\n",
      "example_request_body": {
        "name": "OVERDRAFT_START_DATE",
        "type": "DATE_WITH_DAY",
        "value": "2012-04-23",
        "is_active": true
      },
      "success_response_body": {
        "bank_id": "gh.29.uk",
        "product_code": "1234BW",
        "product_attribute_id": "613c83ea-80f9-4560-8404-b9cd4ec42a7f",
        "name": "OVERDRAFT_START_DATE",
        "type": "DATE_WITH_DAY",
        "value": "2012-04-23",
        "is_active": true
      },
      "error_response_bodies": [
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error.",
        "OBP-20001: User not logged in. Authentication is required!"
      ],
      "tags": ["Product", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "is_active": {
            "type": "boolean"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "product_code": {
            "type": "string"
          },
          "product_attribute_id": {
            "type": "string"
          },
          "bank_id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "is_active": {
            "type": "boolean"
          }
        }
      },
      "roles": [
        {
          "role": "CanUpdateProductAttribute",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/products/PRODUCT_CODE/attributes/PRODUCT_ATTRIBUTE_ID",
      "connector_methods": [
        "obp.createOrUpdateProductAttribute",
        "obp.getProductAttributeById",
        "obp.getBank",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv1.4.0-getCrmEvents",
      "implemented_by": {
        "version": "OBPv1.4.0",
        "function": "getCrmEvents"
      },
      "request_verb": "GET",
      "request_url": "/obp/v1.4.0/banks/BANK_ID/crm-events",
      "summary": "Get CRM Events",
      "description": "<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#actual_date\"><strong>actual_date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#category\"><strong>category</strong></a>:</p>\n<p><a href=\"/glossary#channel\"><strong>channel</strong></a>:</p>\n<p><a href=\"/glossary#crm_events\"><strong>crm_events</strong></a>:</p>\n<p><a href=\"/glossary#customer_name\"><strong>customer_name</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>customer_number</strong></a>: 5987953</p>\n<p><a href=\"/glossary#detail\"><strong>detail</strong></a>:</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#result\"><strong>result</strong></a>:</p>\n<p><a href=\"/glossary#scheduled_date\"><strong>scheduled_date</strong></a>: 2020-01-27</p>\n",
      "description_markdown": "Authentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**actual_date**](/glossary#actual_date): 2020-01-27\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**category**](/glossary#category): \n\n\n\n[**channel**](/glossary#channel): \n\n\n\n[**crm_events**](/glossary#crm_events): \n\n\n\n[**customer_name**](/glossary#customer_name): \n\n\n\n[**customer_number**](/glossary#): 5987953\n\n\n\n[**detail**](/glossary#detail): \n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**result**](/glossary#result): \n\n\n\n[**scheduled_date**](/glossary#scheduled_date): 2020-01-27\n\n\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "crm_events": [
          {
            "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
            "bank_id": "gh.29.uk",
            "customer_name": "String",
            "customer_number": "5987953",
            "category": "String",
            "detail": "String",
            "channel": "String",
            "scheduled_date": "1100-01-01T00:00:00Z",
            "actual_date": "1100-01-01T00:00:00Z",
            "result": "String"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "No CRM Events available.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Customer"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "crm_events": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "scheduled_date": {
                  "type": "string",
                  "format": "date-time"
                },
                "bank_id": {
                  "type": "string"
                },
                "customer_number": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "result": {
                  "type": "string"
                },
                "customer_name": {
                  "type": "string"
                },
                "category": {
                  "type": "string"
                },
                "actual_date": {
                  "type": "string",
                  "format": "date-time"
                },
                "detail": {
                  "type": "string"
                },
                "channel": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/crm-events",
      "connector_methods": ["obp.getBankLegacy"]
    },
    {
      "operation_id": "OBPv4.0.0-getCounterpartiesForAnyAccount",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getCounterpartiesForAnyAccount"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/management/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/counterparties",
      "summary": "Get Counterparties for any account (Explicit)",
      "description": "<p>Get the Counterparties (Explicit) for any account .</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#bespoke\"><strong>bespoke</strong></a>:</p>\n<p><a href=\"/glossary#counterparties\"><strong>counterparties</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>counterparty_id</strong></a>: 9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#created_by_user_id\"><strong>created_by_user_id</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#\"><strong>is_beneficiary</strong></a>: true</p>\n<p><a href=\"/glossary#\"><strong>key</strong></a>: CustomerNumber</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#other_account_routing_address\"><strong>other_account_routing_address</strong></a>:</p>\n<p><a href=\"/glossary#other_account_routing_scheme\"><strong>other_account_routing_scheme</strong></a>:</p>\n<p><a href=\"/glossary#other_account_secondary_routing_address\"><strong>other_account_secondary_routing_address</strong></a>:</p>\n<p><a href=\"/glossary#other_account_secondary_routing_scheme\"><strong>other_account_secondary_routing_scheme</strong></a>:</p>\n<p><a href=\"/glossary#other_bank_routing_address\"><strong>other_bank_routing_address</strong></a>:</p>\n<p><a href=\"/glossary#other_bank_routing_scheme\"><strong>other_bank_routing_scheme</strong></a>:</p>\n<p><a href=\"/glossary#other_branch_routing_address\"><strong>other_branch_routing_address</strong></a>:</p>\n<p><a href=\"/glossary#other_branch_routing_scheme\"><strong>other_branch_routing_scheme</strong></a>:</p>\n<p><a href=\"/glossary#this_account_id\"><strong>this_account_id</strong></a>:</p>\n<p><a href=\"/glossary#this_bank_id\"><strong>this_bank_id</strong></a>:</p>\n<p><a href=\"/glossary#this_view_id\"><strong>this_view_id</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n",
      "description_markdown": "Get the Counterparties (Explicit) for any account .\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[VIEW_ID](/glossary#this_view_id): owner\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**bespoke**](/glossary#bespoke): \n\n\n\n[**counterparties**](/glossary#counterparties): \n\n\n\n[**counterparty_id**](/glossary#): 9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**created_by_user_id**](/glossary#created_by_user_id): \n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**is_beneficiary**](/glossary#): true\n\n\n\n[**key**](/glossary#): CustomerNumber\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**other_account_routing_address**](/glossary#other_account_routing_address): \n\n\n\n[**other_account_routing_scheme**](/glossary#other_account_routing_scheme): \n\n\n\n[**other_account_secondary_routing_address**](/glossary#other_account_secondary_routing_address): \n\n\n\n[**other_account_secondary_routing_scheme**](/glossary#other_account_secondary_routing_scheme): \n\n\n\n[**other_bank_routing_address**](/glossary#other_bank_routing_address): \n\n\n\n[**other_bank_routing_scheme**](/glossary#other_bank_routing_scheme): \n\n\n\n[**other_branch_routing_address**](/glossary#other_branch_routing_address): \n\n\n\n[**other_branch_routing_scheme**](/glossary#other_branch_routing_scheme): \n\n\n\n[**this_account_id**](/glossary#this_account_id): \n\n\n\n[**this_bank_id**](/glossary#this_bank_id): \n\n\n\n[**this_view_id**](/glossary#this_view_id): \n\n\n\n[**value**](/glossary#): 5987953\n\n\n",
      "success_response_body": {
        "counterparties": [
          {
            "name": "CounterpartyName",
            "description": "My landlord",
            "currency": "EUR",
            "created_by_user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
            "this_bank_id": "gh.29.uk",
            "this_account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0",
            "this_view_id": "owner",
            "counterparty_id": "9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh",
            "other_bank_routing_scheme": "OBP",
            "other_bank_routing_address": "gh.29.uk",
            "other_branch_routing_scheme": "OBP",
            "other_branch_routing_address": "12f8a9e6-c2b1-407a-8bd0-421b7119307e",
            "other_account_routing_scheme": "OBP",
            "other_account_routing_address": "36f8a9e6-c2b1-407a-8bd0-421b7119307e",
            "other_account_secondary_routing_scheme": "IBAN",
            "other_account_secondary_routing_address": "DE89370400440532013000",
            "is_beneficiary": true,
            "bespoke": [
              {
                "key": "englishName",
                "value": "english Name"
              }
            ]
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["Counterparty", "Payment Initiation Service (PIS)", "PSD2", "Account", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "counterparties": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "bespoke": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "value": {
                        "type": "string"
                      },
                      "key": {
                        "type": "string"
                      }
                    }
                  }
                },
                "created_by_user_id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "this_bank_id": {
                  "type": "string"
                },
                "other_bank_routing_scheme": {
                  "type": "string"
                },
                "currency": {
                  "type": "string"
                },
                "other_account_secondary_routing_address": {
                  "type": "string"
                },
                "counterparty_id": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "other_bank_routing_address": {
                  "type": "string"
                },
                "other_account_routing_address": {
                  "type": "string"
                },
                "other_branch_routing_scheme": {
                  "type": "string"
                },
                "this_account_id": {
                  "type": "string"
                },
                "other_account_secondary_routing_scheme": {
                  "type": "string"
                },
                "is_beneficiary": {
                  "type": "boolean"
                },
                "other_account_routing_scheme": {
                  "type": "string"
                },
                "other_branch_routing_address": {
                  "type": "string"
                },
                "this_view_id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetCounterparties",
          "requires_bank_id": true
        },
        {
          "role": "CanGetCounterpartiesAtAnyBank",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/counterparties",
      "connector_methods": ["obp.getCounterparties"]
    },
    {
      "operation_id": "OBPv5.0.0-getMyCustomersAtBank",
      "implemented_by": {
        "version": "OBPv5.0.0",
        "function": "getMyCustomersAtBank"
      },
      "request_verb": "GET",
      "request_url": "/obp/v5.0.0/banks/BANK_ID/my/customers",
      "summary": "Get My Customers at Bank",
      "description": "<p>Returns a list of Customers at the Bank that are linked to the currently authenticated User.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>customer_number</strong></a>: 5987953</p>\n<p><a href=\"/glossary#customers\"><strong>customers</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#\"><strong>date_of_birth</strong></a>: 2018-03-09</p>\n<p><a href=\"/glossary#\"><strong>dependants</strong></a>: 1</p>\n<p><a href=\"/glossary#dob_of_dependants\"><strong>dob_of_dependants</strong></a>: [2019-09-08, 2017-07-12]</p>\n<p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"&#109;a&#x69;&#108;t&#111;&#x3a;&#x66;&#x65;li&#x78;&#x73;&#x6d;&#105;t&#104;&#x40;&#x65;&#120;&#x61;&#109;&#112;&#x6c;&#x65;&#46;&#x63;&#111;&#x6d;\">&#102;&#x65;&#x6c;&#x69;x&#x73;&#109;&#105;t&#x68;&#64;&#x65;&#120;a&#x6d;p&#108;&#x65;&#x2e;&#99;&#x6f;m</a></p>\n<p><a href=\"/glossary#\"><strong>employment_status</strong></a>: worker</p>\n<p><a href=\"/glossary#face_image\"><strong>face_image</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>highest_education_attained</strong></a>: Master</p>\n<p><a href=\"/glossary#\"><strong>kyc_status</strong></a>: true</p>\n<p><a href=\"/glossary#last_ok_date\"><strong>last_ok_date</strong></a>: 2022-04-13T04:30:07.985Z</p>\n<p><a href=\"/glossary#\"><strong>legal_name</strong></a>: Eveline Tripman</p>\n<p><a href=\"/glossary#mobile_phone_number\"><strong>mobile_phone_number</strong></a>: +49 30 901820</p>\n<p><a href=\"/glossary#\"><strong>rating</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>relationship_status</strong></a>: single</p>\n<p><a href=\"/glossary#\"><strong>source</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>url</strong></a>: <a href=\"http://www.example.com/id-docs/123/image.png\">http://www.example.com/id-docs/123/image.png</a></p>\n<p><a href=\"/glossary#credit_limit\">credit_limit</a>:</p>\n<p><a href=\"/glossary#credit_rating\">credit_rating</a>:</p>\n",
      "description_markdown": "Returns a list of Customers at the Bank that are linked to the currently authenticated User.\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**amount**](/glossary#): 10.12\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**customer_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**customer_number**](/glossary#): 5987953\n\n\n\n[**customers**](/glossary#customers): \n\n\n\n[**date**](/glossary#): 2020-01-27\n\n\n\n[**date_of_birth**](/glossary#): 2018-03-09\n\n\n\n[**dependants**](/glossary#): 1\n\n\n\n[**dob_of_dependants**](/glossary#dob_of_dependants): [2019-09-08, 2017-07-12]\n\n\n\n[**email**](/glossary#): felixsmith@example.com\n\n\n\n[**employment_status**](/glossary#): worker\n\n\n\n[**face_image**](/glossary#face_image): \n\n\n\n[**highest_education_attained**](/glossary#): Master\n\n\n\n[**kyc_status**](/glossary#): true\n\n\n\n[**last_ok_date**](/glossary#last_ok_date): 2022-04-13T04:30:07.985Z\n\n\n\n[**legal_name**](/glossary#): Eveline Tripman\n\n\n\n[**mobile_phone_number**](/glossary#mobile_phone_number): +49 30 901820\n\n\n\n[**rating**](/glossary#): \n\n\n\n[**relationship_status**](/glossary#): single\n\n\n\n[**source**](/glossary#): \n\n\n\n[**url**](/glossary#): http://www.example.com/id-docs/123/image.png\n\n\n\n[credit_limit](/glossary#credit_limit): \n\n\n\n[credit_rating](/glossary#credit_rating): \n\n\n",
      "success_response_body": {
        "customers": [
          {
            "bank_id": "gh.29.uk",
            "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
            "customer_number": "5987953",
            "legal_name": "Eveline Tripman",
            "mobile_phone_number": "+44 07972 444 876",
            "email": "felixsmith@example.com",
            "face_image": {
              "url": "www.openbankproject",
              "date": "1100-01-01T00:00:00Z"
            },
            "date_of_birth": "1100-01-01T00:00:00Z",
            "relationship_status": "single",
            "dependants": 1,
            "dob_of_dependants": ["1100-01-01T00:00:00Z"],
            "credit_rating": {
              "rating": "OBP",
              "source": "OBP"
            },
            "credit_limit": {
              "currency": "EUR",
              "amount": "0"
            },
            "highest_education_attained": "Master",
            "employment_status": "worker",
            "kyc_status": true,
            "last_ok_date": "2022-04-13T04:30:08Z"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30008: User Customer Link not found by USER_ID",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Customer", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "customers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "dependants": {
                  "type": "integer"
                },
                "dob_of_dependants": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "date-time"
                  }
                },
                "face_image": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "type": "string"
                    },
                    "date": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                },
                "credit_limit": {
                  "type": "object",
                  "properties": {
                    "currency": {
                      "type": "string"
                    },
                    "amount": {
                      "type": "string"
                    }
                  }
                },
                "employment_status": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "customer_id": {
                  "type": "string"
                },
                "relationship_status": {
                  "type": "string"
                },
                "bank_id": {
                  "type": "string"
                },
                "highest_education_attained": {
                  "type": "string"
                },
                "customer_number": {
                  "type": "string"
                },
                "credit_rating": {
                  "type": "object",
                  "properties": {
                    "rating": {
                      "type": "string"
                    },
                    "source": {
                      "type": "string"
                    }
                  }
                },
                "legal_name": {
                  "type": "string"
                },
                "last_ok_date": {
                  "type": "string",
                  "format": "date-time"
                },
                "date_of_birth": {
                  "type": "string",
                  "format": "date-time"
                },
                "mobile_phone_number": {
                  "type": "string"
                },
                "kyc_status": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/my/customers",
      "connector_methods": ["obp.getCustomersByUserId", "obp.getBank"]
    },
    {
      "operation_id": "OBPv4.0.0-deleteCustomerAttributeDefinition",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "deleteCustomerAttributeDefinition"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/attribute-definitions/ATTRIBUTE_DEFINITION_ID/customer",
      "summary": "Delete Customer Attribute Definition",
      "description": "<p>Delete Customer Attribute Definition by ATTRIBUTE_DEFINITION_ID</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#attribute_definition_id\">ATTRIBUTE_DEFINITION_ID</a>:</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON response body fields:</strong></p>\n",
      "description_markdown": "Delete Customer Attribute Definition by ATTRIBUTE_DEFINITION_ID\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ATTRIBUTE_DEFINITION_ID](/glossary#attribute_definition_id): \n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON response body fields:**\n\n\n",
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["Customer", "New-Style"],
      "roles": [
        {
          "role": "CanDeleteCustomerAttributeDefinitionAtOneBank",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/attribute-definitions/ATTRIBUTE_DEFINITION_ID/customer",
      "connector_methods": ["obp.deleteAttributeDefinition"]
    },
    {
      "operation_id": "OBPv1.2.1-updateCounterpartyUrl",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "updateCounterpartyUrl"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/metadata/url",
      "summary": "Update url of other bank account",
      "description": "<p>A url which represents the counterparty (home page url etc.)</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#other_account_id\">OTHER_ACCOUNT_ID</a>:</p>\n<p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#success\"><strong>success</strong></a>:</p>\n",
      "description_markdown": "A url which represents the counterparty (home page url etc.)\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[OTHER_ACCOUNT_ID](/glossary#other_account_id): \n\n\n\n[VIEW_ID](/glossary#this_view_id): owner\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**success**](/glossary#success): \n\n\n",
      "example_request_body": {
        "URL": "String"
      },
      "success_response_body": {
        "success": "Success"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-10001: Incorrect json format.",
        "OBP-30022: The current view does not have the permission:",
        "OBP-30005: View not found for Account. Please specify a valid value for VIEW_ID",
        "URL cannot be updated",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Counterparty-Metadata", "Counterparty", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "URL": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "success": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/metadata/url",
      "connector_methods": [
        "obp.checkBankAccountExists",
        "obp.getBank",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv4.0.0-getTransactionRequest",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getTransactionRequest"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transaction-requests/TRANSACTION_REQUEST_ID",
      "summary": "Get Transaction Request",
      "description": "<p>Returns transaction request for transaction specified by TRANSACTION_REQUEST_ID and for account specified by ACCOUNT_ID at bank specified by BANK_ID.</p>\n<p>The VIEW_ID specified must be 'owner' and the user must have access to this view.</p>\n<p>Version 2.0.0 now returns charge information.</p>\n<p>Transaction Requests serve to initiate transactions that may or may not proceed. They contain information including:</p>\n<ul>\n<li>Transaction Request Id</li>\n<li>Type</li>\n<li>Status (INITIATED, COMPLETED)</li>\n<li>Challenge (in order to confirm the request)</li>\n<li>From Bank / Account</li>\n<li>Details including Currency, Value, Description and other initiation information specific to each type. (Could potentialy include a list of future transactions.)</li>\n<li>Related Transactions</li>\n</ul>\n<p>PSD2 Context: PSD2 requires transparency of charges to the customer.<br />\nThis endpoint provides the charge that would be applied if the Transaction Request proceeds - and a record of that charge there after.<br />\nThe customer can proceed with the Transaction by answering the security challenge.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#\">TRANSACTION_REQUEST_ID</a>: 8138a7e4-6d02-40e3-a129-0b2bf89de9f1</p>\n<p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#Account\"><strong>account</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>account_id</strong></a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#allowed_attempts\"><strong>allowed_attempts</strong></a>: 5</p>\n<p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p>\n<p><a href=\"/glossary#bank_code\"><strong>bank_code</strong></a>: CGHZ</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#branch_number\"><strong>branch_number</strong></a>:</p>\n<p><a href=\"/glossary#challenge\"><strong>challenge</strong></a>:</p>\n<p><a href=\"/glossary#challenge_type\"><strong>challenge_type</strong></a>:</p>\n<p><a href=\"/glossary#charge\"><strong>charge</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>counterparty_id</strong></a>: 9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#creditoraccount\"><strong>creditorAccount</strong></a>:</p>\n<p><a href=\"/glossary#creditorname\"><strong>creditorName</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#\"><strong>date_of_birth</strong></a>: 2018-03-09</p>\n<p><a href=\"/glossary#debtoraccount\"><strong>debtorAccount</strong></a>:</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#details\"><strong>details</strong></a>:</p>\n<p><a href=\"/glossary#end_date\"><strong>end_date</strong></a>:</p>\n<p><a href=\"/glossary#from\"><strong>from</strong></a>:</p>\n<p><a href=\"/glossary#future_date\"><strong>future_date</strong></a>: 20200127</p>\n<p><a href=\"/glossary#\"><strong>iban</strong></a>: DE91 1000 0000 0123 4567 89</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#instructedamount\"><strong>instructedAmount</strong></a>: 100</p>\n<p><a href=\"/glossary#kyc_document\"><strong>kyc_document</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>legal_name</strong></a>: Eveline Tripman</p>\n<p><a href=\"/glossary#message\"><strong>message</strong></a>: 123456</p>\n<p><a href=\"/glossary#mobile_phone_number\"><strong>mobile_phone_number</strong></a>: +49 30 901820</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#nickname\"><strong>nickname</strong></a>:</p>\n<p><a href=\"/glossary#number\"><strong>number</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>start_date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#status\"><strong>status</strong></a>:</p>\n<p><a href=\"/glossary#summary\"><strong>summary</strong></a>:</p>\n<p><a href=\"/glossary#to\"><strong>to</strong></a>:</p>\n<p><a href=\"/glossary#transaction_ids\"><strong>transaction_ids</strong></a>:</p>\n<p><a href=\"/glossary#transfer_type\"><strong>transfer_type</strong></a>:</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n<p><a href=\"/glossary#to_counterparty\">to_counterparty</a>:</p>\n<p><a href=\"/glossary#to_sandbox_tan\">to_sandbox_tan</a>:</p>\n<p><a href=\"/glossary#to_sepa\">to_sepa</a>:</p>\n<p><a href=\"/glossary#to_sepa_credit_transfers\">to_sepa_credit_transfers</a>:</p>\n<p><a href=\"/glossary#\">to_simple</a>: to_simple</p>\n<p><a href=\"/glossary#to_transfer_to_account\">to_transfer_to_account</a>:</p>\n<p><a href=\"/glossary#to_transfer_to_atm\">to_transfer_to_atm</a>:</p>\n<p><a href=\"/glossary#to_transfer_to_phone\">to_transfer_to_phone</a>:</p>\n",
      "description_markdown": "Returns transaction request for transaction specified by TRANSACTION_REQUEST_ID and for account specified by ACCOUNT_ID at bank specified by BANK_ID.\n\nThe VIEW_ID specified must be 'owner' and the user must have access to this view.\n\nVersion 2.0.0 now returns charge information.\n\nTransaction Requests serve to initiate transactions that may or may not proceed. They contain information including:\n\n* Transaction Request Id\n* Type\n* Status (INITIATED, COMPLETED)\n* Challenge (in order to confirm the request)\n* From Bank / Account\n* Details including Currency, Value, Description and other initiation information specific to each type. (Could potentialy include a list of future transactions.)\n* Related Transactions\n\nPSD2 Context: PSD2 requires transparency of charges to the customer.\nThis endpoint provides the charge that would be applied if the Transaction Request proceeds - and a record of that charge there after.\nThe customer can proceed with the Transaction by answering the security challenge.\n\n      \n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[TRANSACTION_REQUEST_ID](/glossary#): 8138a7e4-6d02-40e3-a129-0b2bf89de9f1\n\n\n\n[VIEW_ID](/glossary#this_view_id): owner\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**account**](/glossary#Account): \n\n\n\n[**account_id**](/glossary#): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[**allowed_attempts**](/glossary#allowed_attempts): 5\n\n\n\n[**amount**](/glossary#): 10.12\n\n\n\n[**bank_code**](/glossary#bank_code): CGHZ\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**branch_number**](/glossary#branch_number): \n\n\n\n[**challenge**](/glossary#challenge): \n\n\n\n[**challenge_type**](/glossary#challenge_type): \n\n\n\n[**charge**](/glossary#charge): \n\n\n\n[**counterparty_id**](/glossary#): 9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**creditorAccount**](/glossary#creditoraccount): \n\n\n\n[**creditorName**](/glossary#creditorname): \n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**date_of_birth**](/glossary#): 2018-03-09\n\n\n\n[**debtorAccount**](/glossary#debtoraccount): \n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**details**](/glossary#details): \n\n\n\n[**end_date**](/glossary#end_date): \n\n\n\n[**from**](/glossary#from): \n\n\n\n[**future_date**](/glossary#future_date): 20200127\n\n\n\n[**iban**](/glossary#): DE91 1000 0000 0123 4567 89\n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**instructedAmount**](/glossary#instructedamount): 100\n\n\n\n[**kyc_document**](/glossary#kyc_document): \n\n\n\n[**legal_name**](/glossary#): Eveline Tripman\n\n\n\n[**message**](/glossary#message): 123456\n\n\n\n[**mobile_phone_number**](/glossary#mobile_phone_number): +49 30 901820\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**nickname**](/glossary#nickname): \n\n\n\n[**number**](/glossary#number): \n\n\n\n[**start_date**](/glossary#): 2020-01-27\n\n\n\n[**status**](/glossary#status): \n\n\n\n[**summary**](/glossary#summary): \n\n\n\n[**to**](/glossary#to): \n\n\n\n[**transaction_ids**](/glossary#transaction_ids): \n\n\n\n[**transfer_type**](/glossary#transfer_type): \n\n\n\n[**type**](/glossary#type): \n\n\n\n[**value**](/glossary#): 5987953\n\n\n\n[to_counterparty](/glossary#to_counterparty): \n\n\n\n[to_sandbox_tan](/glossary#to_sandbox_tan): \n\n\n\n[to_sepa](/glossary#to_sepa): \n\n\n\n[to_sepa_credit_transfers](/glossary#to_sepa_credit_transfers): \n\n\n\n[to_simple](/glossary#): to_simple\n\n\n\n[to_transfer_to_account](/glossary#to_transfer_to_account): \n\n\n\n[to_transfer_to_atm](/glossary#to_transfer_to_atm): \n\n\n\n[to_transfer_to_phone](/glossary#to_transfer_to_phone): \n\n\n",
      "success_response_body": {
        "id": "4050046c-63b3-4868-8a22-14b4181d33a6",
        "type": "SANDBOX_TAN",
        "from": {
          "bank_id": "gh.29.uk",
          "account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
        },
        "details": {
          "to_sandbox_tan": {
            "bank_id": "String",
            "account_id": "String"
          },
          "to_sepa": {
            "iban": "String"
          },
          "to_counterparty": {
            "counterparty_id": "9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh"
          },
          "to_transfer_to_phone": {
            "value": {
              "currency": "EUR",
              "amount": "0"
            },
            "description": "String",
            "message": "String",
            "from": {
              "mobile_phone_number": "+44 07972 444 876",
              "nickname": "String"
            },
            "to": {
              "mobile_phone_number": "+44 07972 444 876"
            }
          },
          "to_transfer_to_atm": {
            "value": {
              "currency": "EUR",
              "amount": "0"
            },
            "description": "String",
            "message": "String",
            "from": {
              "mobile_phone_number": "+44 07972 444 876",
              "nickname": "String"
            },
            "to": {
              "legal_name": "Eveline Tripman",
              "date_of_birth": "20181230",
              "mobile_phone_number": "+44 07972 444 876",
              "kyc_document": {
                "type": "String",
                "number": "String"
              }
            }
          },
          "to_transfer_to_account": {
            "value": {
              "currency": "EUR",
              "amount": "0"
            },
            "description": "String",
            "transfer_type": "String",
            "future_date": "20181230",
            "to": {
              "name": "String",
              "bank_code": "String",
              "branch_number": "String",
              "account": {
                "number": "String",
                "iban": "String"
              }
            }
          },
          "to_sepa_credit_transfers": {
            "debtorAccount": {
              "iban": "12345"
            },
            "instructedAmount": {
              "currency": "EUR",
              "amount": "0"
            },
            "creditorAccount": {
              "iban": "54321"
            },
            "creditorName": "John Miles"
          },
          "value": {
            "currency": "EUR",
            "amount": "100"
          },
          "description": "String"
        },
        "transaction_ids": ["902ba3bb-dedd-45e7-9319-2fd3f2cd98a1"],
        "status": "COMPLETED",
        "start_date": "1100-01-01T00:00:00Z",
        "end_date": "1100-01-01T00:00:00Z",
        "challenge": {
          "id": "be1a183d-b301-4b83-b855-5eeffdd3526f",
          "allowed_attempts": 3,
          "challenge_type": "SANDBOX_TAN"
        },
        "charge": {
          "summary": "Rent the flat",
          "value": {
            "currency": "EUR",
            "amount": "0"
          }
        }
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-20017: Current user does not have access to the view. Please specify a valid value for VIEW_ID.",
        "OBP-20019: User does not have access to owner view. ",
        "OBP-60010: Get Transaction Requests Exception. ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Transaction-Request", "Payment Initiation Service (PIS)", "PSD2", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "challenge": {
            "type": "object",
            "properties": {
              "challenge_type": {
                "type": "string"
              },
              "allowed_attempts": {
                "type": "integer"
              },
              "id": {
                "type": "string"
              }
            }
          },
          "status": {
            "type": "string"
          },
          "end_date": {
            "type": "string",
            "format": "date-time"
          },
          "charge": {
            "type": "object",
            "properties": {
              "summary": {
                "type": "string"
              },
              "value": {
                "type": "object",
                "properties": {
                  "currency": {
                    "type": "string"
                  },
                  "amount": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "transaction_ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "from": {
            "type": "object",
            "properties": {
              "bank_id": {
                "type": "string"
              },
              "account_id": {
                "type": "string"
              }
            }
          },
          "details": {
            "type": "object",
            "properties": {
              "to_sandbox_tan": {
                "type": "object",
                "properties": {
                  "account_id": {
                    "type": "string"
                  },
                  "bank_id": {
                    "type": "string"
                  }
                }
              },
              "value": {
                "type": "object",
                "properties": {
                  "currency": {
                    "type": "string"
                  },
                  "amount": {
                    "type": "string"
                  }
                }
              },
              "to_transfer_to_phone": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  },
                  "from": {
                    "type": "object",
                    "properties": {
                      "nickname": {
                        "type": "string"
                      },
                      "mobile_phone_number": {
                        "type": "string"
                      }
                    }
                  },
                  "to": {
                    "type": "object",
                    "properties": {
                      "mobile_phone_number": {
                        "type": "string"
                      }
                    }
                  },
                  "value": {
                    "type": "object",
                    "properties": {
                      "currency": {
                        "type": "string"
                      },
                      "amount": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "to_sepa": {
                "type": "object",
                "properties": {
                  "iban": {
                    "type": "string"
                  }
                }
              },
              "description": {
                "type": "string"
              },
              "to_counterparty": {
                "type": "object",
                "properties": {
                  "counterparty_id": {
                    "type": "string"
                  }
                }
              },
              "to_transfer_to_account": {
                "type": "object",
                "properties": {
                  "to": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "account": {
                        "type": "object",
                        "properties": {
                          "number": {
                            "type": "string"
                          },
                          "iban": {
                            "type": "string"
                          }
                        }
                      },
                      "bank_code": {
                        "type": "string"
                      },
                      "branch_number": {
                        "type": "string"
                      }
                    }
                  },
                  "transfer_type": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "future_date": {
                    "type": "string"
                  },
                  "value": {
                    "type": "object",
                    "properties": {
                      "currency": {
                        "type": "string"
                      },
                      "amount": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "to_sepa_credit_transfers": {
                "type": "object",
                "properties": {
                  "instructedAmount": {
                    "type": "object",
                    "properties": {
                      "currency": {
                        "type": "string"
                      },
                      "amount": {
                        "type": "string"
                      }
                    }
                  },
                  "debtorAccount": {
                    "type": "object",
                    "properties": {
                      "iban": {
                        "type": "string"
                      }
                    }
                  },
                  "creditorAccount": {
                    "type": "object",
                    "properties": {
                      "iban": {
                        "type": "string"
                      }
                    }
                  },
                  "creditorName": {
                    "type": "string"
                  }
                }
              },
              "to_transfer_to_atm": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  },
                  "from": {
                    "type": "object",
                    "properties": {
                      "nickname": {
                        "type": "string"
                      },
                      "mobile_phone_number": {
                        "type": "string"
                      }
                    }
                  },
                  "value": {
                    "type": "object",
                    "properties": {
                      "currency": {
                        "type": "string"
                      },
                      "amount": {
                        "type": "string"
                      }
                    }
                  },
                  "to": {
                    "type": "object",
                    "properties": {
                      "date_of_birth": {
                        "type": "string"
                      },
                      "kyc_document": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string"
                          },
                          "number": {
                            "type": "string"
                          }
                        }
                      },
                      "legal_name": {
                        "type": "string"
                      },
                      "mobile_phone_number": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "start_date": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transaction-requests/TRANSACTION_REQUEST_ID",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv5.1.0-getUserLockStatus",
      "implemented_by": {
        "version": "OBPv5.1.0",
        "function": "getUserLockStatus"
      },
      "request_verb": "GET",
      "request_url": "/obp/v5.1.0/users/PROVIDER/USERNAME/lock-status",
      "summary": "Get User Lock Status",
      "description": "<p>Get User Login Status.<br />\nAuthentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#provider\">PROVIDER</a>: ETHEREUM</p>\n<p><a href=\"/glossary#\">USERNAME</a>: felixsmith</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#bad_attempts_since_last_success_or_reset\"><strong>bad_attempts_since_last_success_or_reset</strong></a>:</p>\n<p><a href=\"/glossary#last_failure_date\"><strong>last_failure_date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#\"><strong>username</strong></a>: felixsmith</p>\n",
      "description_markdown": "Get User Login Status.\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[PROVIDER](/glossary#provider): ETHEREUM\n\n\n\n[USERNAME](/glossary#): felixsmith\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**bad_attempts_since_last_success_or_reset**](/glossary#bad_attempts_since_last_success_or_reset): \n\n\n\n[**last_failure_date**](/glossary#last_failure_date): 2020-01-27\n\n\n\n[**username**](/glossary#): felixsmith\n\n\n",
      "success_response_body": {
        "username": "felixsmith",
        "bad_attempts_since_last_success_or_reset": 0,
        "last_failure_date": "1100-01-01T01:01:01Z"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20027: User not found by provider and username.",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["User", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "last_failure_date": {
            "type": "string",
            "format": "date-time"
          },
          "bad_attempts_since_last_success_or_reset": {
            "type": "integer"
          },
          "username": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanReadUserLockedStatus",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/users/PROVIDER/USERNAME/lock-status",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv4.0.0-getAccountsMinimalByCustomerId",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getAccountsMinimalByCustomerId"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/customers/CUSTOMER_ID/accounts-minimal",
      "summary": "Get Accounts Minimal for a Customer",
      "description": "<p>Get Accounts Minimal by CUSTOMER_ID</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Customer.customer_id\">CUSTOMER_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>account_id</strong></a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#accounts\"><strong>accounts</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#\"><strong>view_id</strong></a>: owner</p>\n",
      "description_markdown": "Get Accounts Minimal by CUSTOMER_ID\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[CUSTOMER_ID](/glossary#Customer.customer_id): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**account_id**](/glossary#): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[**accounts**](/glossary#accounts): \n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**view_id**](/glossary#): owner\n\n\n",
      "success_response_body": {
        "accounts": [
          {
            "bank_id": "gh.29.uk",
            "account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0",
            "view_id": "owner"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30002: Customer not found. Please specify a valid value for CUSTOMER_NUMBER.",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["Account", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "accounts": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "bank_id": {
                  "type": "string"
                },
                "view_id": {
                  "type": "string"
                },
                "account_id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetAccountsMinimalForCustomerAtAnyBank",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/customers/CUSTOMER_ID/accounts-minimal",
      "connector_methods": ["obp.getCustomerByCustomerId"]
    },
    {
      "operation_id": "OBPv3.1.0-deleteMethodRouting",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "deleteMethodRouting"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v3.1.0/management/method_routings/METHOD_ROUTING_ID",
      "summary": "Delete MethodRouting",
      "description": "<p>Delete a MethodRouting specified by METHOD_ROUTING_ID.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#method_routing_id\">METHOD_ROUTING_ID</a>:</p>\n<p><strong>JSON response body fields:</strong></p>\n",
      "description_markdown": "Delete a MethodRouting specified by METHOD_ROUTING_ID.\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[METHOD_ROUTING_ID](/glossary#method_routing_id): \n\n\n\n\n\n**JSON response body fields:**\n\n\n",
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Method-Routing", "API", "New-Style"],
      "roles": [
        {
          "role": "CanDeleteMethodRouting",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/method_routings/METHOD_ROUTING_ID",
      "connector_methods": ["obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv4.0.0-callsLimit",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "callsLimit"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v4.0.0/management/consumers/CONSUMER_ID/consumer/call-limits",
      "summary": "Set Calls Limit for a Consumer",
      "description": "<p>Set the API call limits for a Consumer:</p>\n<p>Per Second<br />\nPer Minute<br />\nPer Hour<br />\nPer Week<br />\nPer Month</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#\">CONSUMER_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#from_date\"><strong>from_date</strong></a>:</p>\n<p><a href=\"/glossary#per_day_call_limit\"><strong>per_day_call_limit</strong></a>:</p>\n<p><a href=\"/glossary#per_hour_call_limit\"><strong>per_hour_call_limit</strong></a>:</p>\n<p><a href=\"/glossary#per_minute_call_limit\"><strong>per_minute_call_limit</strong></a>:</p>\n<p><a href=\"/glossary#per_month_call_limit\"><strong>per_month_call_limit</strong></a>:</p>\n<p><a href=\"/glossary#per_second_call_limit\"><strong>per_second_call_limit</strong></a>: 10</p>\n<p><a href=\"/glossary#per_week_call_limit\"><strong>per_week_call_limit</strong></a>:</p>\n<p><a href=\"/glossary#to_date\"><strong>to_date</strong></a>:</p>\n<p><a href=\"/glossary#\">api_name</a>: api_name</p>\n<p><a href=\"/glossary#api_version\">api_version</a>:</p>\n<p><a href=\"/glossary#\">bank_id</a>: gh.29.uk</p>\n",
      "description_markdown": "Set the API call limits for a Consumer:\n\nPer Second\nPer Minute\nPer Hour\nPer Week\nPer Month\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[CONSUMER_ID](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**from_date**](/glossary#from_date): \n\n\n\n[**per_day_call_limit**](/glossary#per_day_call_limit): \n\n\n\n[**per_hour_call_limit**](/glossary#per_hour_call_limit): \n\n\n\n[**per_minute_call_limit**](/glossary#per_minute_call_limit): \n\n\n\n[**per_month_call_limit**](/glossary#per_month_call_limit): \n\n\n\n[**per_second_call_limit**](/glossary#per_second_call_limit): 10\n\n\n\n[**per_week_call_limit**](/glossary#per_week_call_limit): \n\n\n\n[**to_date**](/glossary#to_date): \n\n\n\n[api_name](/glossary#): api_name\n\n\n\n[api_version](/glossary#api_version): \n\n\n\n[bank_id](/glossary#): gh.29.uk\n\n\n",
      "example_request_body": {
        "from_date": "1100-01-01T00:00:00Z",
        "to_date": "1100-01-01T00:00:00Z",
        "per_second_call_limit": "-1",
        "per_minute_call_limit": "-1",
        "per_hour_call_limit": "-1",
        "per_day_call_limit": "-1",
        "per_week_call_limit": "-1",
        "per_month_call_limit": "-1"
      },
      "success_response_body": {
        "from_date": "1100-01-01T00:00:00Z",
        "to_date": "1100-01-01T00:00:00Z",
        "per_second_call_limit": "-1",
        "per_minute_call_limit": "-1",
        "per_hour_call_limit": "-1",
        "per_day_call_limit": "-1",
        "per_week_call_limit": "-1",
        "per_month_call_limit": "-1"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-10001: Incorrect json format.",
        "OBP-20014: Invalid Consumer ID. Please specify a valid value for CONSUMER_ID.",
        "OBP-30019: Consumer not found. Please specify a valid value for CONSUMER_ID.",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-30023: Cannot update Consumer ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Consumer", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "to_date": {
            "type": "string",
            "format": "date-time"
          },
          "per_week_call_limit": {
            "type": "string"
          },
          "per_day_call_limit": {
            "type": "string"
          },
          "per_second_call_limit": {
            "type": "string"
          },
          "per_month_call_limit": {
            "type": "string"
          },
          "per_hour_call_limit": {
            "type": "string"
          },
          "per_minute_call_limit": {
            "type": "string"
          },
          "from_date": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "to_date": {
            "type": "string",
            "format": "date-time"
          },
          "per_week_call_limit": {
            "type": "string"
          },
          "per_day_call_limit": {
            "type": "string"
          },
          "per_second_call_limit": {
            "type": "string"
          },
          "per_month_call_limit": {
            "type": "string"
          },
          "per_hour_call_limit": {
            "type": "string"
          },
          "per_minute_call_limit": {
            "type": "string"
          },
          "from_date": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "roles": [
        {
          "role": "CanSetCallLimits",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/consumers/CONSUMER_ID/consumer/call-limits",
      "connector_methods": ["obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv4.0.0-createDynamicResourceDoc",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "createDynamicResourceDoc"
      },
      "request_verb": "POST",
      "request_url": "/obp/v4.0.0/management/dynamic-resource-docs",
      "summary": "Create Dynamic Resource Doc",
      "description": "<p>Create a Dynamic Resource Doc.</p>\n<p>The connector_method_body is URL-encoded format String</p>\n<p>Authentication is Mandatory</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#roles\"><strong>roles</strong></a>: CanCreateMyUser</p>\n<p><a href=\"/glossary#summary\"><strong>summary</strong></a>:</p>\n<p><a href=\"/glossary#tags\"><strong>tags</strong></a>: Create-My-User</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#roles\"><strong>roles</strong></a>: CanCreateMyUser</p>\n<p><a href=\"/glossary#summary\"><strong>summary</strong></a>:</p>\n<p><a href=\"/glossary#tags\"><strong>tags</strong></a>: Create-My-User</p>\n",
      "description_markdown": "Create a Dynamic Resource Doc.\n\nThe connector_method_body is URL-encoded format String\n\n\nAuthentication is Mandatory\n\n\n**JSON request body fields:**\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**roles**](/glossary#roles): CanCreateMyUser\n\n\n\n[**summary**](/glossary#summary): \n\n\n\n[**tags**](/glossary#tags): Create-My-User\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**roles**](/glossary#roles): CanCreateMyUser\n\n\n\n[**summary**](/glossary#summary): \n\n\n\n[**tags**](/glossary#tags): Create-My-User\n\n\n",
      "example_request_body": {
        "error_response_bodies": "OBP-50000: Unknown Error.,OBP-20001: User not logged in. Authentication is required!,OBP-20006: User is missing one or more roles: ,OBP-10001: Incorrect json format.",
        "description": "Create one User",
        "tags": "Create-My-User",
        "request_verb": "POST",
        "method_body": "%20%20%20%20val%20Some(resourceDoc)%20%3D%20callContext.resourceDocument%0A%20%20%20%20val%20hasRequestBody%20%3D%20request.body.isDefined%0A%0A%20%20%20%20%2F%2F%20get%20Path%20Parameters%2C%20example%3A%0A%20%20%20%20%2F%2F%20if%20the%20requestUrl%20of%20resourceDoc%20is%20%2Fhello%2Fbanks%2FBANK_ID%2Fworld%0A%20%20%20%20%2F%2F%20the%20request%20path%20is%20%2Fhello%2Fbanks%2Fbank_x%2Fworld%0A%20%20%20%20%2F%2FpathParams.get(%22BANK_ID%22)%20will%20get%20Option(%22bank_x%22)%20value%0A%0A%20%20%20%20val%20myUserId%20%3D%20pathParams(%22MY_USER_ID%22)%0A%0A%0A%20%20%20%20val%20requestEntity%20%3D%20request.json%20match%20%7B%0A%20%20%20%20%20%20case%20Full(zson)%20%3D%3E%0A%20%20%20%20%20%20%20%20try%20%7B%0A%20%20%20%20%20%20%20%20%20%20zson.extract%5BRequestRootJsonClass%5D%0A%20%20%20%20%20%20%20%20%7D%20catch%20%7B%0A%20%20%20%20%20%20%20%20%20%20case%20e%3A%20MappingException%20%3D%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20return%20Full(errorJsonResponse(s%22%24InvalidJsonFormat%20%24%7Be.msg%7D%22))%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20case%20_%3A%20EmptyBox%20%3D%3E%0A%20%20%20%20%20%20%20%20return%20Full(errorJsonResponse(s%22%24InvalidRequestPayload%20Current%20request%20has%20no%20payload%22))%0A%20%20%20%20%7D%0A%0A%0A%20%20%20%20%2F%2F%20please%20add%20business%20logic%20here%0A%20%20%20%20val%20responseBody%3AResponseRootJsonClass%20%3D%20ResponseRootJsonClass(s%22%24%7BmyUserId%7D_from_path%22%2C%20requestEntity.name%2C%20requestEntity.age%2C%20requestEntity.hobby)%0A%20%20%20%20Future.successful%20%7B%0A%20%20%20%20%20%20(responseBody%2C%20HttpCode.%60200%60(callContext.callContext))%0A%20%20%20%20%7D",
        "roles": "CanCreateMyUser",
        "example_request_body": {
          "name": "Jhon",
          "age": 12,
          "hobby": ["coding"],
          "_optional_fields_": ["hobby"]
        },
        "request_url": "/my_user/MY_USER_ID",
        "bank_id": "gh.29.uk",
        "partial_function_name": "createUser",
        "summary": "Create My User",
        "success_response_body": {
          "my_user_id": "some_id_value",
          "name": "Jhon",
          "age": 12,
          "hobby": ["coding"],
          "_optional_fields_": ["hobby"]
        }
      },
      "success_response_body": {
        "error_response_bodies": "OBP-50000: Unknown Error.,OBP-20001: User not logged in. Authentication is required!,OBP-20006: User is missing one or more roles: ,OBP-10001: Incorrect json format.",
        "description": "Create one User",
        "tags": "Create-My-User",
        "dynamic_resource_doc_id": "vce035ca-9a0f-4bfa-b30b-9003aa467f51",
        "request_verb": "POST",
        "method_body": "%20%20%20%20val%20Some(resourceDoc)%20%3D%20callContext.resourceDocument%0A%20%20%20%20val%20hasRequestBody%20%3D%20request.body.isDefined%0A%0A%20%20%20%20%2F%2F%20get%20Path%20Parameters%2C%20example%3A%0A%20%20%20%20%2F%2F%20if%20the%20requestUrl%20of%20resourceDoc%20is%20%2Fhello%2Fbanks%2FBANK_ID%2Fworld%0A%20%20%20%20%2F%2F%20the%20request%20path%20is%20%2Fhello%2Fbanks%2Fbank_x%2Fworld%0A%20%20%20%20%2F%2FpathParams.get(%22BANK_ID%22)%20will%20get%20Option(%22bank_x%22)%20value%0A%0A%20%20%20%20val%20myUserId%20%3D%20pathParams(%22MY_USER_ID%22)%0A%0A%0A%20%20%20%20val%20requestEntity%20%3D%20request.json%20match%20%7B%0A%20%20%20%20%20%20case%20Full(zson)%20%3D%3E%0A%20%20%20%20%20%20%20%20try%20%7B%0A%20%20%20%20%20%20%20%20%20%20zson.extract%5BRequestRootJsonClass%5D%0A%20%20%20%20%20%20%20%20%7D%20catch%20%7B%0A%20%20%20%20%20%20%20%20%20%20case%20e%3A%20MappingException%20%3D%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20return%20Full(errorJsonResponse(s%22%24InvalidJsonFormat%20%24%7Be.msg%7D%22))%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20case%20_%3A%20EmptyBox%20%3D%3E%0A%20%20%20%20%20%20%20%20return%20Full(errorJsonResponse(s%22%24InvalidRequestPayload%20Current%20request%20has%20no%20payload%22))%0A%20%20%20%20%7D%0A%0A%0A%20%20%20%20%2F%2F%20please%20add%20business%20logic%20here%0A%20%20%20%20val%20responseBody%3AResponseRootJsonClass%20%3D%20ResponseRootJsonClass(s%22%24%7BmyUserId%7D_from_path%22%2C%20requestEntity.name%2C%20requestEntity.age%2C%20requestEntity.hobby)%0A%20%20%20%20Future.successful%20%7B%0A%20%20%20%20%20%20(responseBody%2C%20HttpCode.%60200%60(callContext.callContext))%0A%20%20%20%20%7D",
        "roles": "CanCreateMyUser",
        "example_request_body": {
          "name": "Jhon",
          "age": 12,
          "hobby": ["coding"],
          "_optional_fields_": ["hobby"]
        },
        "request_url": "/my_user/MY_USER_ID",
        "bank_id": "gh.29.uk",
        "partial_function_name": "createUser",
        "summary": "Create My User",
        "success_response_body": {
          "my_user_id": "some_id_value",
          "name": "Jhon",
          "age": 12,
          "hobby": ["coding"],
          "_optional_fields_": ["hobby"]
        }
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Dynamic-Resource-Doc", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "tags": {
            "type": "string"
          },
          "request_verb": {
            "type": "string"
          },
          "example_request_body": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "age": {
                "type": "integer"
              },
              "hobby": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "s": {
                      "type": "string"
                    }
                  }
                }
              },
              "_optional_fields_": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "s": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "bank_id": {
            "type": "string"
          },
          "partial_function_name": {
            "type": "string"
          },
          "success_response_body": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "hobby": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "s": {
                      "type": "string"
                    }
                  }
                }
              },
              "my_user_id": {
                "type": "string"
              },
              "age": {
                "type": "integer"
              },
              "_optional_fields_": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "s": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "roles": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          },
          "request_url": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "method_body": {
            "type": "string"
          },
          "error_response_bodies": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "tags": {
            "type": "string"
          },
          "request_verb": {
            "type": "string"
          },
          "example_request_body": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "age": {
                "type": "integer"
              },
              "hobby": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "s": {
                      "type": "string"
                    }
                  }
                }
              },
              "_optional_fields_": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "s": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "bank_id": {
            "type": "string"
          },
          "partial_function_name": {
            "type": "string"
          },
          "success_response_body": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "hobby": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "s": {
                      "type": "string"
                    }
                  }
                }
              },
              "my_user_id": {
                "type": "string"
              },
              "age": {
                "type": "integer"
              },
              "_optional_fields_": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "s": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "roles": {
            "type": "string"
          },
          "dynamic_resource_doc_id": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          },
          "request_url": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "method_body": {
            "type": "string"
          },
          "error_response_bodies": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateDynamicResourceDoc",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/dynamic-resource-docs",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv3.1.0-createAccountApplication",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "createAccountApplication"
      },
      "request_verb": "POST",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/account-applications",
      "summary": "Create Account Application",
      "description": "<p>Create Account Application</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#product_code\"><strong>product_code</strong></a>: 1234BW</p>\n<p><a href=\"/glossary#\">customer_id</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\">user_id</a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#account_application_id\"><strong>account_application_id</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#\"><strong>branch_id</strong></a>: DERBY6</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#Customer\"><strong>customer</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>customer_number</strong></a>: 5987953</p>\n<p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#date_of_application\"><strong>date_of_application</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#\"><strong>date_of_birth</strong></a>: 2018-03-09</p>\n<p><a href=\"/glossary#\"><strong>dependants</strong></a>: 1</p>\n<p><a href=\"/glossary#dob_of_dependants\"><strong>dob_of_dependants</strong></a>: [2019-09-08, 2017-07-12]</p>\n<p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"&#109;&#97;&#105;&#x6c;&#116;&#x6f;&#58;&#102;e&#108;&#x69;&#x78;s&#109;&#x69;&#x74;h&#x40;&#x65;&#x78;&#97;&#109;&#112;&#x6c;&#x65;&#46;&#99;&#111;&#x6d;\">&#102;&#x65;&#x6c;&#x69;&#120;&#115;&#x6d;&#105;&#116;&#x68;&#x40;&#x65;&#120;&#97;&#x6d;p&#x6c;&#x65;&#x2e;&#99;&#111;&#109;</a></p>\n<p><a href=\"/glossary#\"><strong>employment_status</strong></a>: worker</p>\n<p><a href=\"/glossary#face_image\"><strong>face_image</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>highest_education_attained</strong></a>: Master</p>\n<p><a href=\"/glossary#\"><strong>kyc_status</strong></a>: true</p>\n<p><a href=\"/glossary#last_ok_date\"><strong>last_ok_date</strong></a>: 2022-04-13T04:30:07.985Z</p>\n<p><a href=\"/glossary#\"><strong>legal_name</strong></a>: Eveline Tripman</p>\n<p><a href=\"/glossary#mobile_phone_number\"><strong>mobile_phone_number</strong></a>: +49 30 901820</p>\n<p><a href=\"/glossary#\"><strong>name_suffix</strong></a>: Sr</p>\n<p><a href=\"/glossary#product_code\"><strong>product_code</strong></a>: 1234BW</p>\n<p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p>\n<p><a href=\"/glossary#provider_id\"><strong>provider_id</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>rating</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>relationship_status</strong></a>: single</p>\n<p><a href=\"/glossary#\"><strong>source</strong></a>:</p>\n<p><a href=\"/glossary#status\"><strong>status</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>title</strong></a>: Dr.</p>\n<p><a href=\"/glossary#\"><strong>url</strong></a>: <a href=\"http://www.example.com/id-docs/123/image.png\">http://www.example.com/id-docs/123/image.png</a></p>\n<p><a href=\"/glossary#User\"><strong>user</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p>\n<p><a href=\"/glossary#\"><strong>username</strong></a>: felixsmith</p>\n<p><a href=\"/glossary#credit_limit\">credit_limit</a>:</p>\n<p><a href=\"/glossary#credit_rating\">credit_rating</a>:</p>\n",
      "description_markdown": "Create Account Application\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON request body fields:**\n\n\n\n[**product_code**](/glossary#product_code): 1234BW\n\n\n\n[customer_id](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[user_id](/glossary#): 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**account_application_id**](/glossary#account_application_id): \n\n\n\n[**amount**](/glossary#): 10.12\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**branch_id**](/glossary#): DERBY6\n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**customer**](/glossary#Customer): \n\n\n\n[**customer_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**customer_number**](/glossary#): 5987953\n\n\n\n[**date**](/glossary#): 2020-01-27\n\n\n\n[**date_of_application**](/glossary#date_of_application): 2020-01-27\n\n\n\n[**date_of_birth**](/glossary#): 2018-03-09\n\n\n\n[**dependants**](/glossary#): 1\n\n\n\n[**dob_of_dependants**](/glossary#dob_of_dependants): [2019-09-08, 2017-07-12]\n\n\n\n[**email**](/glossary#): felixsmith@example.com\n\n\n\n[**employment_status**](/glossary#): worker\n\n\n\n[**face_image**](/glossary#face_image): \n\n\n\n[**highest_education_attained**](/glossary#): Master\n\n\n\n[**kyc_status**](/glossary#): true\n\n\n\n[**last_ok_date**](/glossary#last_ok_date): 2022-04-13T04:30:07.985Z\n\n\n\n[**legal_name**](/glossary#): Eveline Tripman\n\n\n\n[**mobile_phone_number**](/glossary#mobile_phone_number): +49 30 901820\n\n\n\n[**name_suffix**](/glossary#): Sr\n\n\n\n[**product_code**](/glossary#product_code): 1234BW\n\n\n\n[**provider**](/glossary#provider): ETHEREUM\n\n\n\n[**provider_id**](/glossary#provider_id): \n\n\n\n[**rating**](/glossary#): \n\n\n\n[**relationship_status**](/glossary#): single\n\n\n\n[**source**](/glossary#): \n\n\n\n[**status**](/glossary#status): \n\n\n\n[**title**](/glossary#): Dr.\n\n\n\n[**url**](/glossary#): http://www.example.com/id-docs/123/image.png\n\n\n\n[**user**](/glossary#User): \n\n\n\n[**user_id**](/glossary#): 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\n\n\n\n[**username**](/glossary#): felixsmith\n\n\n\n[credit_limit](/glossary#credit_limit): \n\n\n\n[credit_rating](/glossary#credit_rating): \n\n\n",
      "example_request_body": {
        "product_code": "1234BW",
        "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
        "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      },
      "success_response_body": {
        "account_application_id": "gc23a7e2-7dd2-4bdf-a0b4-ae31232a4763",
        "product_code": "1234BW",
        "user": {
          "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
          "email": "felixsmith@example.com",
          "provider_id": "Chris",
          "provider": "http://127.0.0.1:8080",
          "username": "felixsmith"
        },
        "customer": {
          "bank_id": "gh.29.uk",
          "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
          "customer_number": "5987953",
          "legal_name": "Eveline Tripman",
          "mobile_phone_number": "+44 07972 444 876",
          "email": "felixsmith@example.com",
          "face_image": {
            "url": "www.openbankproject",
            "date": "1100-01-01T00:00:00Z"
          },
          "date_of_birth": "1100-01-01T00:00:00Z",
          "relationship_status": "single",
          "dependants": 1,
          "dob_of_dependants": ["1100-01-01T00:00:00Z"],
          "credit_rating": {
            "rating": "OBP",
            "source": "OBP"
          },
          "credit_limit": {
            "currency": "EUR",
            "amount": "0"
          },
          "highest_education_attained": "Master",
          "employment_status": "worker",
          "kyc_status": true,
          "last_ok_date": "2022-04-13T04:30:08Z",
          "title": "Dr.",
          "branch_id": "DERBY6",
          "name_suffix": "Sr"
        },
        "date_of_application": "1100-01-01T00:00:00Z",
        "status": "REQUESTED"
      },
      "error_response_bodies": [
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error.",
        "OBP-20001: User not logged in. Authentication is required!"
      ],
      "tags": ["Account-Application", "Account", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "string"
          },
          "product_code": {
            "type": "string"
          },
          "customer_id": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "provider": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "provider_id": {
                "type": "string"
              },
              "username": {
                "type": "string"
              },
              "user_id": {
                "type": "string"
              }
            }
          },
          "product_code": {
            "type": "string"
          },
          "customer": {
            "type": "object",
            "properties": {
              "dependants": {
                "type": "integer"
              },
              "dob_of_dependants": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "face_image": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string"
                  },
                  "date": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              },
              "credit_limit": {
                "type": "object",
                "properties": {
                  "currency": {
                    "type": "string"
                  },
                  "amount": {
                    "type": "string"
                  }
                }
              },
              "employment_status": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "customer_id": {
                "type": "string"
              },
              "relationship_status": {
                "type": "string"
              },
              "bank_id": {
                "type": "string"
              },
              "highest_education_attained": {
                "type": "string"
              },
              "customer_number": {
                "type": "string"
              },
              "credit_rating": {
                "type": "object",
                "properties": {
                  "rating": {
                    "type": "string"
                  },
                  "source": {
                    "type": "string"
                  }
                }
              },
              "name_suffix": {
                "type": "string"
              },
              "last_ok_date": {
                "type": "string",
                "format": "date-time"
              },
              "legal_name": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "branch_id": {
                "type": "string"
              },
              "date_of_birth": {
                "type": "string",
                "format": "date-time"
              },
              "mobile_phone_number": {
                "type": "string"
              },
              "kyc_status": {
                "type": "boolean"
              }
            }
          },
          "status": {
            "type": "string"
          },
          "date_of_application": {
            "type": "string",
            "format": "date-time"
          },
          "account_application_id": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/account-applications",
      "connector_methods": [
        "obp.getCustomerByCustomerId",
        "obp.createAccountApplication",
        "obp.getBank",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv4.0.0-createOrUpdateTransactionAttributeDefinition",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "createOrUpdateTransactionAttributeDefinition"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/attribute-definitions/transaction",
      "summary": "Create or Update Transaction Attribute Definition",
      "description": "<p>Create or Update Transaction Attribute Definition</p>\n<p>The category field must be Transaction</p>\n<p>The type field must be one of; DOUBLE, STRING, INTEGER and DATE_WITH_DAY</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#alias\"><strong>alias</strong></a>:</p>\n<p><a href=\"/glossary#attribute_definition_id\"><strong>attribute_definition_id</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#can_be_seen_on_views\"><strong>can_be_seen_on_views</strong></a>: true</p>\n<p><a href=\"/glossary#category\"><strong>category</strong></a>:</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#is_active\"><strong>is_active</strong></a>: true</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n",
      "description_markdown": "Create or Update Transaction Attribute Definition\n\nThe category field must be Transaction\n\nThe type field must be one of; DOUBLE, STRING, INTEGER and DATE_WITH_DAY\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**alias**](/glossary#alias): \n\n\n\n[**attribute_definition_id**](/glossary#attribute_definition_id): \n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**can_be_seen_on_views**](/glossary#can_be_seen_on_views): true\n\n\n\n[**category**](/glossary#category): \n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**is_active**](/glossary#is_active): true\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**type**](/glossary#type): \n\n\n",
      "example_request_body": {
        "name": "SPECIAL_TAX_NUMBER",
        "category": "Transaction",
        "type": "STRING",
        "description": "description",
        "alias": "STRING",
        "can_be_seen_on_views": ["bank"],
        "is_active": true
      },
      "success_response_body": {
        "attribute_definition_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
        "bank_id": "gh.29.uk",
        "name": "SPECIAL_TAX_NUMBER",
        "category": "Transaction",
        "type": "STRING",
        "description": "description",
        "alias": "STRING",
        "can_be_seen_on_views": ["bank"],
        "is_active": true
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["Transaction", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "can_be_seen_on_views": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "description": {
            "type": "string"
          },
          "is_active": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "alias": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "can_be_seen_on_views": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "attribute_definition_id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "is_active": {
            "type": "boolean"
          },
          "bank_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "alias": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateTransactionAttributeDefinitionAtOneBank",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/attribute-definitions/transaction",
      "connector_methods": ["obp.createOrUpdateAttributeDefinition"]
    },
    {
      "operation_id": "OBPv4.0.0-createTransactionRequestSepa",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "createTransactionRequestSepa"
      },
      "request_verb": "POST",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transaction-request-types/SEPA/transaction-requests",
      "summary": "Create Transaction Request (SEPA)",
      "description": "<p>Special instructions for SEPA:</p>\n<p>When using a SEPA Transaction Request, you specify the IBAN of a Counterparty in the body of the request.<br />\nThe routing details (IBAN) of the counterparty will be forwarded to the core banking system for the transfer.</p>\n<p>Initiate a Payment via creating a Transaction Request.</p>\n<p>In OBP, a <code>transaction request</code> may or may not result in a <code>transaction</code>. However, a <code>transaction</code> only has one possible state: completed.</p>\n<p>A <code>Transaction Request</code> can have one of several states: INITIATED, NEXT_CHALLENGE_PENDING etc.</p>\n<p><code>Transactions</code> are modeled on items in a bank statement that represent the movement of money.</p>\n<p><code>Transaction Requests</code> are requests to move money which may or may not succeed and thus result in a <code>Transaction</code>.</p>\n<p>A <code>Transaction Request</code> might create a security challenge that needs to be answered before the <code>Transaction Request</code> proceeds.<br />\nIn case 1 person needs to answer security challenge we have next flow of state of an <code>transaction request</code>:<br />\nINITIATED =&gt; COMPLETED<br />\nIn case n persons needs to answer security challenge we have next flow of state of an <code>transaction request</code>:<br />\nINITIATED =&gt; NEXT_CHALLENGE_PENDING =&gt; ... =&gt; NEXT_CHALLENGE_PENDING =&gt; COMPLETED</p>\n<p>The security challenge is bound to a user i.e. in case of right answer and the user is different than expected one the challenge will fail.</p>\n<p>Rule for calculating number of security challenges:<br />\nIf product Account attribute REQUIRED_CHALLENGE_ANSWERS=N then create N challenges<br />\n(one for every user that has a View where permission &quot;can_add_transaction_request_to_any_account&quot;=true)<br />\nIn case REQUIRED_CHALLENGE_ANSWERS is not defined as an account attribute default value is 1.</p>\n<p>Transaction Requests contain charge information giving the client the opportunity to proceed or not (as long as the challenge level is appropriate).</p>\n<p>Transaction Requests can have one of several Transaction Request Types which expect different bodies. The escaped body is returned in the details key of the GET response.<br />\nThis provides some commonality and one URL for many different payment or transfer types with enough flexibility to validate them differently.</p>\n<p>The payer is set in the URL. Money comes out of the BANK_ID and ACCOUNT_ID specified in the URL.</p>\n<p>In sandbox mode, TRANSACTION_REQUEST_TYPE is commonly set to ACCOUNT. See getTransactionRequestTypesSupportedByBank for all supported types.</p>\n<p>In sandbox mode, if the amount is less than 1000 EUR (any currency, unless it is set differently on this server), the transaction request will create a transaction without a challenge, else the Transaction Request will be set to INITIALISED and a challenge will need to be answered.</p>\n<p>If a challenge is created you must answer it using Answer Transaction Request Challenge before the Transaction is created.</p>\n<p>You can transfer between different currency accounts. (new in 2.0.0). The currency in body must match the sending account.</p>\n<p>The following static FX rates are available in sandbox mode:</p>\n<p><a href=\"https://obp-apiexplorer.joinfincubator.com/more?version=OBPv4.0.0&amp;list-all-banks=false&amp;core=&amp;psd2=&amp;obwg=#OBPv2_2_0-getCurrentFxRate\">https://obp-apiexplorer.joinfincubator.com/more?version=OBPv4.0.0&amp;list-all-banks=false&amp;core=&amp;psd2=&amp;obwg=#OBPv2_2_0-getCurrentFxRate</a></p>\n<p>Transaction Requests satisfy PSD2 requirements thus:</p>\n<p>1) A transaction can be initiated by a third party application.</p>\n<p>2) The customer is informed of the charge that will incurred.</p>\n<p>3) The call supports delegated authentication (OAuth)</p>\n<p>See <a href=\"https://github.com/OpenBankProject/Hello-OBP-DirectLogin-Python/blob/master/hello_payments.py\">this python code</a> for a complete example of this flow.</p>\n<p>There is further documentation <a href=\"https://github.com/OpenBankProject/OBP-API/wiki/Transaction-Requests\">here</a></p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#sepa\">SEPA</a>:</p>\n<p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p>\n<p><a href=\"/glossary#\"><strong>charge_policy</strong></a>: SHARED</p>\n<p><a href=\"/glossary#code\"><strong>code</strong></a>: 125</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#\"><strong>iban</strong></a>: DE91 1000 0000 0123 4567 89</p>\n<p><a href=\"/glossary#to\"><strong>to</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n<p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#document_number\">document_number</a>:</p>\n<p><a href=\"/glossary#future_date\">future_date</a>: 20200127</p>\n<p><a href=\"/glossary#reasons\">reasons</a>:</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#Account\"><strong>account</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>account_id</strong></a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#allowed_attempts\"><strong>allowed_attempts</strong></a>: 5</p>\n<p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p>\n<p><a href=\"/glossary#bank_code\"><strong>bank_code</strong></a>: CGHZ</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#branch_number\"><strong>branch_number</strong></a>:</p>\n<p><a href=\"/glossary#challenge_type\"><strong>challenge_type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>challenges</strong></a>: challenges</p>\n<p><a href=\"/glossary#charge\"><strong>charge</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>counterparty_id</strong></a>: 9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#creditoraccount\"><strong>creditorAccount</strong></a>:</p>\n<p><a href=\"/glossary#creditorname\"><strong>creditorName</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#\"><strong>date_of_birth</strong></a>: 2018-03-09</p>\n<p><a href=\"/glossary#debtoraccount\"><strong>debtorAccount</strong></a>:</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#details\"><strong>details</strong></a>:</p>\n<p><a href=\"/glossary#end_date\"><strong>end_date</strong></a>:</p>\n<p><a href=\"/glossary#from\"><strong>from</strong></a>:</p>\n<p><a href=\"/glossary#future_date\"><strong>future_date</strong></a>: 20200127</p>\n<p><a href=\"/glossary#\"><strong>iban</strong></a>: DE91 1000 0000 0123 4567 89</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#instructedamount\"><strong>instructedAmount</strong></a>: 100</p>\n<p><a href=\"/glossary#kyc_document\"><strong>kyc_document</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>legal_name</strong></a>: Eveline Tripman</p>\n<p><a href=\"/glossary#link\"><strong>link</strong></a>:</p>\n<p><a href=\"/glossary#message\"><strong>message</strong></a>: 123456</p>\n<p><a href=\"/glossary#mobile_phone_number\"><strong>mobile_phone_number</strong></a>: +49 30 901820</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#nickname\"><strong>nickname</strong></a>:</p>\n<p><a href=\"/glossary#number\"><strong>number</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>start_date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#status\"><strong>status</strong></a>:</p>\n<p><a href=\"/glossary#summary\"><strong>summary</strong></a>:</p>\n<p><a href=\"/glossary#to\"><strong>to</strong></a>:</p>\n<p><a href=\"/glossary#transaction_ids\"><strong>transaction_ids</strong></a>:</p>\n<p><a href=\"/glossary#transfer_type\"><strong>transfer_type</strong></a>:</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n<p><a href=\"/glossary#to_counterparty\">to_counterparty</a>:</p>\n<p><a href=\"/glossary#to_sandbox_tan\">to_sandbox_tan</a>:</p>\n<p><a href=\"/glossary#to_sepa\">to_sepa</a>:</p>\n<p><a href=\"/glossary#to_sepa_credit_transfers\">to_sepa_credit_transfers</a>:</p>\n<p><a href=\"/glossary#\">to_simple</a>: to_simple</p>\n<p><a href=\"/glossary#to_transfer_to_account\">to_transfer_to_account</a>:</p>\n<p><a href=\"/glossary#to_transfer_to_atm\">to_transfer_to_atm</a>:</p>\n<p><a href=\"/glossary#to_transfer_to_phone\">to_transfer_to_phone</a>:</p>\n",
      "description_markdown": "Special instructions for SEPA:\n\nWhen using a SEPA Transaction Request, you specify the IBAN of a Counterparty in the body of the request.\nThe routing details (IBAN) of the counterparty will be forwarded to the core banking system for the transfer.\n\nInitiate a Payment via creating a Transaction Request.\n\nIn OBP, a `transaction request` may or may not result in a `transaction`. However, a `transaction` only has one possible state: completed.\n\nA `Transaction Request` can have one of several states: INITIATED, NEXT_CHALLENGE_PENDING etc.\n\n`Transactions` are modeled on items in a bank statement that represent the movement of money.\n\n`Transaction Requests` are requests to move money which may or may not succeed and thus result in a `Transaction`.\n\nA `Transaction Request` might create a security challenge that needs to be answered before the `Transaction Request` proceeds.\nIn case 1 person needs to answer security challenge we have next flow of state of an `transaction request`:\n  INITIATED => COMPLETED\nIn case n persons needs to answer security challenge we have next flow of state of an `transaction request`:\n  INITIATED => NEXT_CHALLENGE_PENDING => ... => NEXT_CHALLENGE_PENDING => COMPLETED\n\nThe security challenge is bound to a user i.e. in case of right answer and the user is different than expected one the challenge will fail.\n\nRule for calculating number of security challenges:\nIf product Account attribute REQUIRED_CHALLENGE_ANSWERS=N then create N challenges\n(one for every user that has a View where permission \"can_add_transaction_request_to_any_account\"=true)\nIn case REQUIRED_CHALLENGE_ANSWERS is not defined as an account attribute default value is 1.\n\nTransaction Requests contain charge information giving the client the opportunity to proceed or not (as long as the challenge level is appropriate).\n\nTransaction Requests can have one of several Transaction Request Types which expect different bodies. The escaped body is returned in the details key of the GET response.\nThis provides some commonality and one URL for many different payment or transfer types with enough flexibility to validate them differently.\n\nThe payer is set in the URL. Money comes out of the BANK_ID and ACCOUNT_ID specified in the URL.\n\nIn sandbox mode, TRANSACTION_REQUEST_TYPE is commonly set to ACCOUNT. See getTransactionRequestTypesSupportedByBank for all supported types.\n\nIn sandbox mode, if the amount is less than 1000 EUR (any currency, unless it is set differently on this server), the transaction request will create a transaction without a challenge, else the Transaction Request will be set to INITIALISED and a challenge will need to be answered.\n\nIf a challenge is created you must answer it using Answer Transaction Request Challenge before the Transaction is created.\n\nYou can transfer between different currency accounts. (new in 2.0.0). The currency in body must match the sending account.\n\nThe following static FX rates are available in sandbox mode:\n\nhttps://obp-apiexplorer.joinfincubator.com/more?version=OBPv4.0.0&list-all-banks=false&core=&psd2=&obwg=#OBPv2_2_0-getCurrentFxRate\n\n\nTransaction Requests satisfy PSD2 requirements thus:\n\n1) A transaction can be initiated by a third party application.\n\n2) The customer is informed of the charge that will incurred.\n\n3) The call supports delegated authentication (OAuth)\n\nSee [this python code](https://github.com/OpenBankProject/Hello-OBP-DirectLogin-Python/blob/master/hello_payments.py) for a complete example of this flow.\n\nThere is further documentation [here](https://github.com/OpenBankProject/OBP-API/wiki/Transaction-Requests)\n\n\n\n       \n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[SEPA](/glossary#sepa): \n\n\n\n[VIEW_ID](/glossary#this_view_id): owner\n\n\n\n\n\n**JSON request body fields:**\n\n\n\n[**amount**](/glossary#): 10.12\n\n\n\n[**charge_policy**](/glossary#): SHARED\n\n\n\n[**code**](/glossary#code): 125\n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**iban**](/glossary#): DE91 1000 0000 0123 4567 89\n\n\n\n[**to**](/glossary#to): \n\n\n\n[**value**](/glossary#): 5987953\n\n\n\n[**amount**](/glossary#): 10.12\n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[document_number](/glossary#document_number): \n\n\n\n[future_date](/glossary#future_date): 20200127\n\n\n\n[reasons](/glossary#reasons): \n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**account**](/glossary#Account): \n\n\n\n[**account_id**](/glossary#): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[**allowed_attempts**](/glossary#allowed_attempts): 5\n\n\n\n[**amount**](/glossary#): 10.12\n\n\n\n[**bank_code**](/glossary#bank_code): CGHZ\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**branch_number**](/glossary#branch_number): \n\n\n\n[**challenge_type**](/glossary#challenge_type): \n\n\n\n[**challenges**](/glossary#): challenges\n\n\n\n[**charge**](/glossary#charge): \n\n\n\n[**counterparty_id**](/glossary#): 9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**creditorAccount**](/glossary#creditoraccount): \n\n\n\n[**creditorName**](/glossary#creditorname): \n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**date_of_birth**](/glossary#): 2018-03-09\n\n\n\n[**debtorAccount**](/glossary#debtoraccount): \n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**details**](/glossary#details): \n\n\n\n[**end_date**](/glossary#end_date): \n\n\n\n[**from**](/glossary#from): \n\n\n\n[**future_date**](/glossary#future_date): 20200127\n\n\n\n[**iban**](/glossary#): DE91 1000 0000 0123 4567 89\n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**instructedAmount**](/glossary#instructedamount): 100\n\n\n\n[**kyc_document**](/glossary#kyc_document): \n\n\n\n[**legal_name**](/glossary#): Eveline Tripman\n\n\n\n[**link**](/glossary#link): \n\n\n\n[**message**](/glossary#message): 123456\n\n\n\n[**mobile_phone_number**](/glossary#mobile_phone_number): +49 30 901820\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**nickname**](/glossary#nickname): \n\n\n\n[**number**](/glossary#number): \n\n\n\n[**start_date**](/glossary#): 2020-01-27\n\n\n\n[**status**](/glossary#status): \n\n\n\n[**summary**](/glossary#summary): \n\n\n\n[**to**](/glossary#to): \n\n\n\n[**transaction_ids**](/glossary#transaction_ids): \n\n\n\n[**transfer_type**](/glossary#transfer_type): \n\n\n\n[**type**](/glossary#type): \n\n\n\n[**user_id**](/glossary#): 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\n\n\n\n[**value**](/glossary#): 5987953\n\n\n\n[to_counterparty](/glossary#to_counterparty): \n\n\n\n[to_sandbox_tan](/glossary#to_sandbox_tan): \n\n\n\n[to_sepa](/glossary#to_sepa): \n\n\n\n[to_sepa_credit_transfers](/glossary#to_sepa_credit_transfers): \n\n\n\n[to_simple](/glossary#): to_simple\n\n\n\n[to_transfer_to_account](/glossary#to_transfer_to_account): \n\n\n\n[to_transfer_to_atm](/glossary#to_transfer_to_atm): \n\n\n\n[to_transfer_to_phone](/glossary#to_transfer_to_phone): \n\n\n",
      "example_request_body": {
        "value": {
          "currency": "EUR",
          "amount": "0"
        },
        "to": {
          "iban": "123"
        },
        "description": "This is a SEPA Transaction Request",
        "charge_policy": "SHARED",
        "future_date": "20200127",
        "reasons": [
          {
            "code": "410",
            "document_number": "2020/154",
            "amount": "100",
            "currency": "EUR",
            "description": "SEPA payment"
          }
        ]
      },
      "success_response_body": {
        "id": "4050046c-63b3-4868-8a22-14b4181d33a6",
        "type": "SANDBOX_TAN",
        "from": {
          "bank_id": "gh.29.uk",
          "account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
        },
        "details": {
          "to_sandbox_tan": {
            "bank_id": "String",
            "account_id": "String"
          },
          "to_sepa": {
            "iban": "String"
          },
          "to_counterparty": {
            "counterparty_id": "9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh"
          },
          "to_transfer_to_phone": {
            "value": {
              "currency": "EUR",
              "amount": "0"
            },
            "description": "String",
            "message": "String",
            "from": {
              "mobile_phone_number": "+44 07972 444 876",
              "nickname": "String"
            },
            "to": {
              "mobile_phone_number": "+44 07972 444 876"
            }
          },
          "to_transfer_to_atm": {
            "value": {
              "currency": "EUR",
              "amount": "0"
            },
            "description": "String",
            "message": "String",
            "from": {
              "mobile_phone_number": "+44 07972 444 876",
              "nickname": "String"
            },
            "to": {
              "legal_name": "Eveline Tripman",
              "date_of_birth": "20181230",
              "mobile_phone_number": "+44 07972 444 876",
              "kyc_document": {
                "type": "String",
                "number": "String"
              }
            }
          },
          "to_transfer_to_account": {
            "value": {
              "currency": "EUR",
              "amount": "0"
            },
            "description": "String",
            "transfer_type": "String",
            "future_date": "20181230",
            "to": {
              "name": "String",
              "bank_code": "String",
              "branch_number": "String",
              "account": {
                "number": "String",
                "iban": "String"
              }
            }
          },
          "to_sepa_credit_transfers": {
            "debtorAccount": {
              "iban": "12345"
            },
            "instructedAmount": {
              "currency": "EUR",
              "amount": "0"
            },
            "creditorAccount": {
              "iban": "54321"
            },
            "creditorName": "John Miles"
          },
          "value": {
            "currency": "EUR",
            "amount": "100"
          },
          "description": "String"
        },
        "transaction_ids": ["902ba3bb-dedd-45e7-9319-2fd3f2cd98a1"],
        "status": "COMPLETED",
        "start_date": "1100-01-01T00:00:00Z",
        "end_date": "1100-01-01T00:00:00Z",
        "challenges": [
          {
            "id": "2fg8a7e4-6d02-40e3-a129-0b2bf89de8ub",
            "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
            "allowed_attempts": 3,
            "challenge_type": "OBP_TRANSACTION_REQUEST_CHALLENGE",
            "link": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transaction-request-types/TRANSACTION_REQUEST_TYPE/transaction-requests/TRANSACTION_REQUEST_ID/challenge"
          }
        ],
        "charge": {
          "summary": "Rent the flat",
          "value": {
            "currency": "EUR",
            "amount": "0"
          }
        }
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30111: Invalid Bank Id. The BANK_ID should only contain 0-9/a-z/A-Z/'-'/'.'/'_', the length should be smaller than 255.",
        "OBP-30110: Invalid Account Id. The ACCOUNT_ID should only contain 0-9/a-z/A-Z/'-'/'.'/'_', the length should be smaller than 255.",
        "OBP-10001: Incorrect json format.",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30003: Account not found. Please specify a valid value for ACCOUNT_ID.",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-40002: Insufficient authorisation to create TransactionRequest. The Transaction Request could not be created because the login user doesn't have access to the view of the from account or the view don't have the `canAddTransactionRequestToAnyAccount` permission or your consumer doesn't not have the access to the view of the from account or you don't have the role CanCreateAnyTransactionRequest.",
        "OBP-40001: Invalid value for TRANSACTION_REQUEST_TYPE",
        "OBP-10001: Incorrect json format.",
        "OBP-10002: Invalid Number. Could not convert value to a number.",
        "OBP-40008: Can't send a payment with a value of 0 or less.",
        "OBP-40003: Transaction Request Currency must be the same as From Account Currency.",
        "OBP-00003: Transaction Requests is disabled in this API instance.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Transaction-Request", "Payment Initiation Service (PIS)", "PSD2", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "future_date": {
            "type": "string"
          },
          "reasons": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "description": {
                  "type": "string"
                },
                "code": {
                  "type": "string"
                },
                "amount": {
                  "type": "string"
                },
                "document_number": {
                  "type": "string"
                },
                "currency": {
                  "type": "string"
                }
              }
            }
          },
          "to": {
            "type": "object",
            "properties": {
              "iban": {
                "type": "string"
              }
            }
          },
          "description": {
            "type": "string"
          },
          "value": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string"
              },
              "amount": {
                "type": "string"
              }
            }
          },
          "charge_policy": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "challenges": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "challenge_type": {
                  "type": "string"
                },
                "link": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "allowed_attempts": {
                  "type": "integer"
                },
                "user_id": {
                  "type": "string"
                }
              }
            }
          },
          "status": {
            "type": "string"
          },
          "end_date": {
            "type": "string",
            "format": "date-time"
          },
          "charge": {
            "type": "object",
            "properties": {
              "summary": {
                "type": "string"
              },
              "value": {
                "type": "object",
                "properties": {
                  "currency": {
                    "type": "string"
                  },
                  "amount": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "transaction_ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "from": {
            "type": "object",
            "properties": {
              "bank_id": {
                "type": "string"
              },
              "account_id": {
                "type": "string"
              }
            }
          },
          "details": {
            "type": "object",
            "properties": {
              "to_sandbox_tan": {
                "type": "object",
                "properties": {
                  "account_id": {
                    "type": "string"
                  },
                  "bank_id": {
                    "type": "string"
                  }
                }
              },
              "value": {
                "type": "object",
                "properties": {
                  "currency": {
                    "type": "string"
                  },
                  "amount": {
                    "type": "string"
                  }
                }
              },
              "to_transfer_to_phone": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  },
                  "from": {
                    "type": "object",
                    "properties": {
                      "nickname": {
                        "type": "string"
                      },
                      "mobile_phone_number": {
                        "type": "string"
                      }
                    }
                  },
                  "to": {
                    "type": "object",
                    "properties": {
                      "mobile_phone_number": {
                        "type": "string"
                      }
                    }
                  },
                  "value": {
                    "type": "object",
                    "properties": {
                      "currency": {
                        "type": "string"
                      },
                      "amount": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "to_sepa": {
                "type": "object",
                "properties": {
                  "iban": {
                    "type": "string"
                  }
                }
              },
              "description": {
                "type": "string"
              },
              "to_counterparty": {
                "type": "object",
                "properties": {
                  "counterparty_id": {
                    "type": "string"
                  }
                }
              },
              "to_transfer_to_account": {
                "type": "object",
                "properties": {
                  "to": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "account": {
                        "type": "object",
                        "properties": {
                          "number": {
                            "type": "string"
                          },
                          "iban": {
                            "type": "string"
                          }
                        }
                      },
                      "bank_code": {
                        "type": "string"
                      },
                      "branch_number": {
                        "type": "string"
                      }
                    }
                  },
                  "transfer_type": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "future_date": {
                    "type": "string"
                  },
                  "value": {
                    "type": "object",
                    "properties": {
                      "currency": {
                        "type": "string"
                      },
                      "amount": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "to_sepa_credit_transfers": {
                "type": "object",
                "properties": {
                  "instructedAmount": {
                    "type": "object",
                    "properties": {
                      "currency": {
                        "type": "string"
                      },
                      "amount": {
                        "type": "string"
                      }
                    }
                  },
                  "debtorAccount": {
                    "type": "object",
                    "properties": {
                      "iban": {
                        "type": "string"
                      }
                    }
                  },
                  "creditorAccount": {
                    "type": "object",
                    "properties": {
                      "iban": {
                        "type": "string"
                      }
                    }
                  },
                  "creditorName": {
                    "type": "string"
                  }
                }
              },
              "to_transfer_to_atm": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  },
                  "from": {
                    "type": "object",
                    "properties": {
                      "nickname": {
                        "type": "string"
                      },
                      "mobile_phone_number": {
                        "type": "string"
                      }
                    }
                  },
                  "value": {
                    "type": "object",
                    "properties": {
                      "currency": {
                        "type": "string"
                      },
                      "amount": {
                        "type": "string"
                      }
                    }
                  },
                  "to": {
                    "type": "object",
                    "properties": {
                      "date_of_birth": {
                        "type": "string"
                      },
                      "kyc_document": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string"
                          },
                          "number": {
                            "type": "string"
                          }
                        }
                      },
                      "legal_name": {
                        "type": "string"
                      },
                      "mobile_phone_number": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "start_date": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transaction-request-types/SEPA/transaction-requests",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv5.1.0-revokeConsentAtBank",
      "implemented_by": {
        "version": "OBPv5.1.0",
        "function": "revokeConsentAtBank"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v5.1.0/banks/BANK_ID/consents/CONSENT_ID",
      "summary": "Revoke Consent at Bank",
      "description": "<p>Revoke Consent specified by CONSENT_ID</p>\n<p>There are a few reasons you might need to revoke an application’s access to a user’s account:<br />\n- The user explicitly wishes to revoke the application’s access<br />\n- You as the service provider have determined an application is compromised or malicious, and want to disable it<br />\n- etc.</p>\n<p>OBP as a resource server stores access tokens in a database, then it is relatively easy to revoke some token that belongs to a particular user.<br />\nThe status of the token is changed to &quot;REVOKED&quot; so the next time the revoked client makes a request, their token will fail to validate.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#consent_id\">CONSENT_ID</a>:</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#consent_id\"><strong>consent_id</strong></a>:</p>\n<p><a href=\"/glossary#jwt\"><strong>jwt</strong></a>:</p>\n<p><a href=\"/glossary#status\"><strong>status</strong></a>:</p>\n",
      "description_markdown": "Revoke Consent specified by CONSENT_ID\n\nThere are a few reasons you might need to revoke an application’s access to a user’s account:\n  - The user explicitly wishes to revoke the application’s access\n  - You as the service provider have determined an application is compromised or malicious, and want to disable it\n  - etc.\n\nOBP as a resource server stores access tokens in a database, then it is relatively easy to revoke some token that belongs to a particular user.\nThe status of the token is changed to \"REVOKED\" so the next time the revoked client makes a request, their token will fail to validate.\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[CONSENT_ID](/glossary#consent_id): \n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**consent_id**](/glossary#consent_id): \n\n\n\n[**jwt**](/glossary#jwt): \n\n\n\n[**status**](/glossary#status): \n\n\n",
      "success_response_body": {
        "consent_id": "9d429899-24f5-42c8-8565-943ffa6a7945",
        "jwt": "eyJhbGciOiJIUzI1NiJ9.eyJlbnRpdGxlbWVudHMiOltdLCJjcmVhdGVkQnlVc2VySWQiOiJhYjY1MzlhOS1iMTA1LTQ0ODktYTg4My0wYWQ4ZDZjNjE2NTciLCJzdWIiOiIyMWUxYzhjYy1mOTE4LTRlYWMtYjhlMy01ZTVlZWM2YjNiNGIiLCJhdWQiOiJlanpuazUwNWQxMzJyeW9tbmhieDFxbXRvaHVyYnNiYjBraWphanNrIiwibmJmIjoxNTUzNTU0ODk5LCJpc3MiOiJodHRwczpcL1wvd3d3Lm9wZW5iYW5rcHJvamVjdC5jb20iLCJleHAiOjE1NTM1NTg0OTksImlhdCI6MTU1MzU1NDg5OSwianRpIjoiMDlmODhkNWYtZWNlNi00Mzk4LThlOTktNjYxMWZhMWNkYmQ1Iiwidmlld3MiOlt7ImFjY291bnRfaWQiOiJtYXJrb19wcml2aXRlXzAxIiwiYmFua19pZCI6ImdoLjI5LnVrLngiLCJ2aWV3X2lkIjoib3duZXIifSx7ImFjY291bnRfaWQiOiJtYXJrb19wcml2aXRlXzAyIiwiYmFua19pZCI6ImdoLjI5LnVrLngiLCJ2aWV3X2lkIjoib3duZXIifV19.8cc7cBEf2NyQvJoukBCmDLT7LXYcuzTcSYLqSpbxLp4",
        "status": "REJECTED"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["Consent", "Account Information Service (AIS)", "PSD2", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "consent_id": {
            "type": "string"
          },
          "jwt": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanRevokeConsentAtBank",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/consents/CONSENT_ID",
      "connector_methods": ["obp.getBank", "obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv4.0.0-createCounterparty",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "createCounterparty"
      },
      "request_verb": "POST",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/counterparties",
      "summary": "Create Counterparty (Explicit)",
      "description": "<p>Create Counterparty (Explicit) for an Account.</p>\n<p>In OBP, there are two types of Counterparty.</p>\n<ul>\n<li>\n<p>Explicit Counterparties (those here) which we create explicitly and are used in COUNTERPARTY Transaction Requests</p>\n</li>\n<li>\n<p>Implicit Counterparties (AKA Other Accounts) which are generated automatically from the other sides of Transactions.</p>\n</li>\n</ul>\n<p>Explicit Counterparties are created for the account / view<br />\nThey are how the user of the view (e.g. account owner) refers to the other side of the transaction</p>\n<p>name : the human readable name (e.g. Piano teacher, Miss Nipa)</p>\n<p>description : the human readable name (e.g. Piano teacher, Miss Nipa)</p>\n<p>currency : counterparty account currency (e.g. EUR, GBP, USD, ...)</p>\n<p>bank_routing_scheme : eg: bankId or bankCode or any other strings</p>\n<p>bank_routing_address : eg: <code>gh.29.uk</code>, must be valid sandbox bankIds</p>\n<p>account_routing_scheme : eg: AccountId or AccountNumber or any other strings</p>\n<p>account_routing_address : eg: <code>1d65db7c-a7b2-4839-af41-95</code>, must be valid accountIds</p>\n<p>other_account_secondary_routing_scheme : eg: IBan or any other strings</p>\n<p>other_account_secondary_routing_address : if it is an IBAN, it should be unique for each counterparty.</p>\n<p>other_branch_routing_scheme : eg: branchId or any other strings or you can leave it empty, not useful in sandbox mode.</p>\n<p>other_branch_routing_address : eg: <code>branch-id-123</code> or you can leave it empty, not useful in sandbox mode.</p>\n<p>is_beneficiary : must be set to <code>true</code> in order to send payments to this counterparty</p>\n<p>bespoke: It supports a list of key-value, you can add it to the counterparty.</p>\n<p>bespoke.key : any info-key you want to add to this counterparty</p>\n<p>bespoke.value : any info-value you want to add to this counterparty</p>\n<p>The view specified by VIEW_ID must have the canAddCounterparty permission</p>\n<p>A minimal example for TransactionRequestType == COUNTERPARTY<br />\n{<br />\n&quot;name&quot;: &quot;Tesobe1&quot;,<br />\n&quot;description&quot;: &quot;Good Company&quot;,<br />\n&quot;currency&quot;: &quot;EUR&quot;,<br />\n&quot;other_bank_routing_scheme&quot;: &quot;OBP&quot;,<br />\n&quot;other_bank_routing_address&quot;: &quot;gh.29.uk&quot;,<br />\n&quot;other_account_routing_scheme&quot;: &quot;OBP&quot;,<br />\n&quot;other_account_routing_address&quot;: &quot;8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0&quot;,<br />\n&quot;is_beneficiary&quot;: true,<br />\n&quot;other_account_secondary_routing_scheme&quot;: &quot;&quot;,<br />\n&quot;other_account_secondary_routing_address&quot;: &quot;&quot;,<br />\n&quot;other_branch_routing_scheme&quot;: &quot;&quot;,<br />\n&quot;other_branch_routing_address&quot;: &quot;&quot;,<br />\n&quot;bespoke&quot;: []<br />\n}</p>\n<p>A minimal example for TransactionRequestType == SEPA</p>\n<p>{<br />\n&quot;name&quot;: &quot;Tesobe2&quot;,<br />\n&quot;description&quot;: &quot;Good Company&quot;,<br />\n&quot;currency&quot;: &quot;EUR&quot;,<br />\n&quot;other_bank_routing_scheme&quot;: &quot;OBP&quot;,<br />\n&quot;other_bank_routing_address&quot;: &quot;gh.29.uk&quot;,<br />\n&quot;other_account_routing_scheme&quot;: &quot;OBP&quot;,<br />\n&quot;other_account_routing_address&quot;: &quot;8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0&quot;,<br />\n&quot;other_account_secondary_routing_scheme&quot;: &quot;IBAN&quot;,<br />\n&quot;other_account_secondary_routing_address&quot;: &quot;DE89 3704 0044 0532 0130 00&quot;,<br />\n&quot;is_beneficiary&quot;: true,<br />\n&quot;other_branch_routing_scheme&quot;: &quot;&quot;,<br />\n&quot;other_branch_routing_address&quot;: &quot;&quot;,<br />\n&quot;bespoke&quot;: []<br />\n}</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#bespoke\"><strong>bespoke</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#\"><strong>is_beneficiary</strong></a>: true</p>\n<p><a href=\"/glossary#\"><strong>key</strong></a>: CustomerNumber</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#other_account_routing_address\"><strong>other_account_routing_address</strong></a>:</p>\n<p><a href=\"/glossary#other_account_routing_scheme\"><strong>other_account_routing_scheme</strong></a>:</p>\n<p><a href=\"/glossary#other_account_secondary_routing_address\"><strong>other_account_secondary_routing_address</strong></a>:</p>\n<p><a href=\"/glossary#other_account_secondary_routing_scheme\"><strong>other_account_secondary_routing_scheme</strong></a>:</p>\n<p><a href=\"/glossary#other_bank_routing_address\"><strong>other_bank_routing_address</strong></a>:</p>\n<p><a href=\"/glossary#other_bank_routing_scheme\"><strong>other_bank_routing_scheme</strong></a>:</p>\n<p><a href=\"/glossary#other_branch_routing_address\"><strong>other_branch_routing_address</strong></a>:</p>\n<p><a href=\"/glossary#other_branch_routing_scheme\"><strong>other_branch_routing_scheme</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#bespoke\"><strong>bespoke</strong></a>:</p>\n<p><a href=\"/glossary#corporate_location\"><strong>corporate_location</strong></a>: 10</p>\n<p><a href=\"/glossary#\"><strong>counterparty_id</strong></a>: 9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#created_by_user_id\"><strong>created_by_user_id</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#image_url\"><strong>image_url</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>is_beneficiary</strong></a>: true</p>\n<p><a href=\"/glossary#\"><strong>key</strong></a>: CustomerNumber</p>\n<p><a href=\"/glossary#latitude\"><strong>latitude</strong></a>: 38.8951</p>\n<p><a href=\"/glossary#longitude\"><strong>longitude</strong></a>: -77.0364</p>\n<p><a href=\"/glossary#metadata\"><strong>metadata</strong></a>:</p>\n<p><a href=\"/glossary#more_info\"><strong>more_info</strong></a>: More information about this fee</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#open_corporates_url\"><strong>open_corporates_url</strong></a>:</p>\n<p><a href=\"/glossary#other_account_routing_address\"><strong>other_account_routing_address</strong></a>:</p>\n<p><a href=\"/glossary#other_account_routing_scheme\"><strong>other_account_routing_scheme</strong></a>:</p>\n<p><a href=\"/glossary#other_account_secondary_routing_address\"><strong>other_account_secondary_routing_address</strong></a>:</p>\n<p><a href=\"/glossary#other_account_secondary_routing_scheme\"><strong>other_account_secondary_routing_scheme</strong></a>:</p>\n<p><a href=\"/glossary#other_bank_routing_address\"><strong>other_bank_routing_address</strong></a>:</p>\n<p><a href=\"/glossary#other_bank_routing_scheme\"><strong>other_bank_routing_scheme</strong></a>:</p>\n<p><a href=\"/glossary#other_branch_routing_address\"><strong>other_branch_routing_address</strong></a>:</p>\n<p><a href=\"/glossary#other_branch_routing_scheme\"><strong>other_branch_routing_scheme</strong></a>:</p>\n<p><a href=\"/glossary#physical_location\"><strong>physical_location</strong></a>:</p>\n<p><a href=\"/glossary#private_alias\"><strong>private_alias</strong></a>:</p>\n<p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p>\n<p><a href=\"/glossary#public_alias\"><strong>public_alias</strong></a>:</p>\n<p><a href=\"/glossary#this_account_id\"><strong>this_account_id</strong></a>:</p>\n<p><a href=\"/glossary#this_bank_id\"><strong>this_bank_id</strong></a>:</p>\n<p><a href=\"/glossary#this_view_id\"><strong>this_view_id</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>url</strong></a>: <a href=\"http://www.example.com/id-docs/123/image.png\">http://www.example.com/id-docs/123/image.png</a></p>\n<p><a href=\"/glossary#User\"><strong>user</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>username</strong></a>: felixsmith</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n",
      "description_markdown": "Create Counterparty (Explicit) for an Account.\n\nIn OBP, there are two types of Counterparty.\n\n* Explicit Counterparties (those here) which we create explicitly and are used in COUNTERPARTY Transaction Requests\n\n* Implicit Counterparties (AKA Other Accounts) which are generated automatically from the other sides of Transactions.\n\nExplicit Counterparties are created for the account / view\nThey are how the user of the view (e.g. account owner) refers to the other side of the transaction\n\nname : the human readable name (e.g. Piano teacher, Miss Nipa)\n\ndescription : the human readable name (e.g. Piano teacher, Miss Nipa)\n\ncurrency : counterparty account currency (e.g. EUR, GBP, USD, ...)\n\nbank_routing_scheme : eg: bankId or bankCode or any other strings\n\nbank_routing_address : eg: `gh.29.uk`, must be valid sandbox bankIds\n\naccount_routing_scheme : eg: AccountId or AccountNumber or any other strings\n\naccount_routing_address : eg: `1d65db7c-a7b2-4839-af41-95`, must be valid accountIds\n\nother_account_secondary_routing_scheme : eg: IBan or any other strings\n\nother_account_secondary_routing_address : if it is an IBAN, it should be unique for each counterparty.\n\nother_branch_routing_scheme : eg: branchId or any other strings or you can leave it empty, not useful in sandbox mode.\n\nother_branch_routing_address : eg: `branch-id-123` or you can leave it empty, not useful in sandbox mode.\n\nis_beneficiary : must be set to `true` in order to send payments to this counterparty\n\nbespoke: It supports a list of key-value, you can add it to the counterparty.\n\nbespoke.key : any info-key you want to add to this counterparty\n\nbespoke.value : any info-value you want to add to this counterparty\n\nThe view specified by VIEW_ID must have the canAddCounterparty permission\n\nA minimal example for TransactionRequestType == COUNTERPARTY\n {\n  \"name\": \"Tesobe1\",\n  \"description\": \"Good Company\",\n  \"currency\": \"EUR\",\n  \"other_bank_routing_scheme\": \"OBP\",\n  \"other_bank_routing_address\": \"gh.29.uk\",\n  \"other_account_routing_scheme\": \"OBP\",\n  \"other_account_routing_address\": \"8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0\",\n  \"is_beneficiary\": true,\n  \"other_account_secondary_routing_scheme\": \"\",\n  \"other_account_secondary_routing_address\": \"\",\n  \"other_branch_routing_scheme\": \"\",\n  \"other_branch_routing_address\": \"\",\n  \"bespoke\": []\n}\n\n\nA minimal example for TransactionRequestType == SEPA\n\n {\n  \"name\": \"Tesobe2\",\n  \"description\": \"Good Company\",\n  \"currency\": \"EUR\",\n  \"other_bank_routing_scheme\": \"OBP\",\n  \"other_bank_routing_address\": \"gh.29.uk\",\n  \"other_account_routing_scheme\": \"OBP\",\n  \"other_account_routing_address\": \"8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0\",\n  \"other_account_secondary_routing_scheme\": \"IBAN\",\n  \"other_account_secondary_routing_address\": \"DE89 3704 0044 0532 0130 00\",\n  \"is_beneficiary\": true,\n  \"other_branch_routing_scheme\": \"\",\n  \"other_branch_routing_address\": \"\",\n  \"bespoke\": []\n}\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[VIEW_ID](/glossary#this_view_id): owner\n\n\n\n\n\n**JSON request body fields:**\n\n\n\n[**bespoke**](/glossary#bespoke): \n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**is_beneficiary**](/glossary#): true\n\n\n\n[**key**](/glossary#): CustomerNumber\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**other_account_routing_address**](/glossary#other_account_routing_address): \n\n\n\n[**other_account_routing_scheme**](/glossary#other_account_routing_scheme): \n\n\n\n[**other_account_secondary_routing_address**](/glossary#other_account_secondary_routing_address): \n\n\n\n[**other_account_secondary_routing_scheme**](/glossary#other_account_secondary_routing_scheme): \n\n\n\n[**other_bank_routing_address**](/glossary#other_bank_routing_address): \n\n\n\n[**other_bank_routing_scheme**](/glossary#other_bank_routing_scheme): \n\n\n\n[**other_branch_routing_address**](/glossary#other_branch_routing_address): \n\n\n\n[**other_branch_routing_scheme**](/glossary#other_branch_routing_scheme): \n\n\n\n[**value**](/glossary#): 5987953\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**bespoke**](/glossary#bespoke): \n\n\n\n[**corporate_location**](/glossary#corporate_location): 10\n\n\n\n[**counterparty_id**](/glossary#): 9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**created_by_user_id**](/glossary#created_by_user_id): \n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**date**](/glossary#): 2020-01-27\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**image_url**](/glossary#image_url): \n\n\n\n[**is_beneficiary**](/glossary#): true\n\n\n\n[**key**](/glossary#): CustomerNumber\n\n\n\n[**latitude**](/glossary#latitude): 38.8951\n\n\n\n[**longitude**](/glossary#longitude): -77.0364\n\n\n\n[**metadata**](/glossary#metadata): \n\n\n\n[**more_info**](/glossary#more_info): More information about this fee\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**open_corporates_url**](/glossary#open_corporates_url): \n\n\n\n[**other_account_routing_address**](/glossary#other_account_routing_address): \n\n\n\n[**other_account_routing_scheme**](/glossary#other_account_routing_scheme): \n\n\n\n[**other_account_secondary_routing_address**](/glossary#other_account_secondary_routing_address): \n\n\n\n[**other_account_secondary_routing_scheme**](/glossary#other_account_secondary_routing_scheme): \n\n\n\n[**other_bank_routing_address**](/glossary#other_bank_routing_address): \n\n\n\n[**other_bank_routing_scheme**](/glossary#other_bank_routing_scheme): \n\n\n\n[**other_branch_routing_address**](/glossary#other_branch_routing_address): \n\n\n\n[**other_branch_routing_scheme**](/glossary#other_branch_routing_scheme): \n\n\n\n[**physical_location**](/glossary#physical_location): \n\n\n\n[**private_alias**](/glossary#private_alias): \n\n\n\n[**provider**](/glossary#provider): ETHEREUM\n\n\n\n[**public_alias**](/glossary#public_alias): \n\n\n\n[**this_account_id**](/glossary#this_account_id): \n\n\n\n[**this_bank_id**](/glossary#this_bank_id): \n\n\n\n[**this_view_id**](/glossary#this_view_id): \n\n\n\n[**url**](/glossary#): http://www.example.com/id-docs/123/image.png\n\n\n\n[**user**](/glossary#User): \n\n\n\n[**username**](/glossary#): felixsmith\n\n\n\n[**value**](/glossary#): 5987953\n\n\n",
      "example_request_body": {
        "name": "CounterpartyName",
        "description": "My landlord",
        "currency": "EUR",
        "other_account_routing_scheme": "OBP",
        "other_account_routing_address": "36f8a9e6-c2b1-407a-8bd0-421b7119307e",
        "other_account_secondary_routing_scheme": "IBAN",
        "other_account_secondary_routing_address": "DE89370400440532013000",
        "other_bank_routing_scheme": "OBP",
        "other_bank_routing_address": "gh.29.uk",
        "other_branch_routing_scheme": "OBP",
        "other_branch_routing_address": "12f8a9e6-c2b1-407a-8bd0-421b7119307e",
        "is_beneficiary": true,
        "bespoke": [
          {
            "key": "englishName",
            "value": "english Name"
          }
        ]
      },
      "success_response_body": {
        "name": "CounterpartyName",
        "description": "My landlord",
        "currency": "EUR",
        "created_by_user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
        "this_bank_id": "gh.29.uk",
        "this_account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0",
        "this_view_id": "owner",
        "counterparty_id": "9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "other_bank_routing_scheme": "OBP",
        "other_bank_routing_address": "gh.29.uk",
        "other_branch_routing_scheme": "OBP",
        "other_branch_routing_address": "12f8a9e6-c2b1-407a-8bd0-421b7119307e",
        "other_account_routing_scheme": "OBP",
        "other_account_routing_address": "36f8a9e6-c2b1-407a-8bd0-421b7119307e",
        "other_account_secondary_routing_scheme": "IBAN",
        "other_account_secondary_routing_address": "DE89370400440532013000",
        "is_beneficiary": true,
        "bespoke": [
          {
            "key": "englishName",
            "value": "english Name"
          }
        ],
        "metadata": {
          "public_alias": "String",
          "more_info": "String",
          "url": "String",
          "image_url": "String",
          "open_corporates_url": "String",
          "corporate_location": {
            "latitude": 11.45,
            "longitude": 11.45,
            "date": "1100-01-01T00:00:00Z",
            "user": {
              "id": "123",
              "provider": "http://127.0.0.1:8080",
              "username": "felixsmith"
            }
          },
          "physical_location": {
            "latitude": 11.45,
            "longitude": 11.45,
            "date": "1100-01-01T00:00:00Z",
            "user": {
              "id": "123",
              "provider": "http://127.0.0.1:8080",
              "username": "felixsmith"
            }
          },
          "private_alias": "String"
        }
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30110: Invalid Account Id. The ACCOUNT_ID should only contain 0-9/a-z/A-Z/'-'/'.'/'_', the length should be smaller than 255.",
        "OBP-30111: Invalid Bank Id. The BANK_ID should only contain 0-9/a-z/A-Z/'-'/'.'/'_', the length should be smaller than 255.",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-20017: Current user does not have access to the view. Please specify a valid value for VIEW_ID.",
        "OBP-10001: Incorrect json format.",
        "OBP-10003: Invalid Currency Value. It should be three letters ISO Currency Code. ",
        "OBP-30005: View not found for Account. Please specify a valid value for VIEW_ID",
        "OBP-30014: Counterparty already exists. Please specify a different value for BANK_ID or ACCOUNT_ID or VIEW_ID or NAME.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Counterparty", "Account", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "bespoke": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string"
                },
                "key": {
                  "type": "string"
                }
              }
            }
          },
          "name": {
            "type": "string"
          },
          "other_bank_routing_scheme": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "other_account_secondary_routing_address": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "other_bank_routing_address": {
            "type": "string"
          },
          "other_account_routing_address": {
            "type": "string"
          },
          "other_branch_routing_scheme": {
            "type": "string"
          },
          "other_account_secondary_routing_scheme": {
            "type": "string"
          },
          "is_beneficiary": {
            "type": "boolean"
          },
          "other_account_routing_scheme": {
            "type": "string"
          },
          "other_branch_routing_address": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "bespoke": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string"
                },
                "key": {
                  "type": "string"
                }
              }
            }
          },
          "created_by_user_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "metadata": {
            "type": "object",
            "properties": {
              "private_alias": {
                "type": "string"
              },
              "physical_location": {
                "type": "object",
                "properties": {
                  "user": {
                    "type": "object",
                    "properties": {
                      "provider": {
                        "type": "string"
                      },
                      "id": {
                        "type": "string"
                      },
                      "username": {
                        "type": "string"
                      }
                    }
                  },
                  "date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "longitude": {
                    "type": "number"
                  },
                  "latitude": {
                    "type": "number"
                  }
                }
              },
              "url": {
                "type": "string"
              },
              "public_alias": {
                "type": "string"
              },
              "open_corporates_url": {
                "type": "string"
              },
              "more_info": {
                "type": "string"
              },
              "corporate_location": {
                "type": "object",
                "properties": {
                  "user": {
                    "type": "object",
                    "properties": {
                      "provider": {
                        "type": "string"
                      },
                      "id": {
                        "type": "string"
                      },
                      "username": {
                        "type": "string"
                      }
                    }
                  },
                  "date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "longitude": {
                    "type": "number"
                  },
                  "latitude": {
                    "type": "number"
                  }
                }
              },
              "image_url": {
                "type": "string"
              }
            }
          },
          "this_bank_id": {
            "type": "string"
          },
          "other_bank_routing_scheme": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "other_account_secondary_routing_address": {
            "type": "string"
          },
          "counterparty_id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "other_bank_routing_address": {
            "type": "string"
          },
          "other_account_routing_address": {
            "type": "string"
          },
          "other_branch_routing_scheme": {
            "type": "string"
          },
          "this_account_id": {
            "type": "string"
          },
          "other_account_secondary_routing_scheme": {
            "type": "string"
          },
          "is_beneficiary": {
            "type": "boolean"
          },
          "other_account_routing_scheme": {
            "type": "string"
          },
          "other_branch_routing_address": {
            "type": "string"
          },
          "this_view_id": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/counterparties",
      "connector_methods": [
        "obp.checkBankAccountExists",
        "obp.getBank",
        "obp.checkCounterpartyExists"
      ]
    },
    {
      "operation_id": "OBPv3.1.0-getOAuth2ServerJWKsURIs",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "getOAuth2ServerJWKsURIs"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.1.0/jwks-uris",
      "summary": "Get JSON Web Key (JWK) URIs",
      "description": "<p>Get the OAuth2 server's public JSON Web Key (JWK) URIs.<br />\nIt is required by client applications to validate ID tokens, self-contained access tokens and other issued objects.</p>\n<p>Authentication is Optional</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#jwks_uri\"><strong>jwks_uri</strong></a>:</p>\n<p><a href=\"/glossary#jwks_uris\"><strong>jwks_uris</strong></a>:</p>\n",
      "description_markdown": "Get the OAuth2 server's public JSON Web Key (JWK) URIs.\n It is required by client applications to validate ID tokens, self-contained access tokens and other issued objects.\n\n      \n\nAuthentication is Optional\n\n\n**JSON response body fields:**\n\n\n\n[**jwks_uri**](/glossary#jwks_uri): \n\n\n\n[**jwks_uris**](/glossary#jwks_uris): \n\n\n",
      "success_response_body": {
        "jwks_uris": [
          {
            "jwks_uri": "https://www.googleapis.com/oauth2/v3/certs"
          }
        ]
      },
      "error_response_bodies": ["OBP-50000: Unknown Error."],
      "tags": ["API", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "jwks_uris": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "jwks_uri": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/jwks-uris",
      "connector_methods": ["obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv4.0.0-createBankLevelEndpointTag",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "createBankLevelEndpointTag"
      },
      "request_verb": "POST",
      "request_url": "/obp/v4.0.0/management/banks/BANK_ID/endpoints/OPERATION_ID/tags",
      "summary": "Create Bank Level Endpoint Tag",
      "description": "<p>Create Bank Level Endpoint Tag</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#\">OPERATION_ID</a>: OBPv4.0.0-getBanks</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>tag_name</strong></a>: BankAccountTag1</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#\"><strong>endpoint_tag_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>operation_id</strong></a>: OBPv4.0.0-getBanks</p>\n<p><a href=\"/glossary#\"><strong>tag_name</strong></a>: BankAccountTag1</p>\n",
      "description_markdown": "Create Bank Level Endpoint Tag\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[OPERATION_ID](/glossary#): OBPv4.0.0-getBanks\n\n\n\n\n\n**JSON request body fields:**\n\n\n\n[**tag_name**](/glossary#): BankAccountTag1\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**endpoint_tag_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**operation_id**](/glossary#): OBPv4.0.0-getBanks\n\n\n\n[**tag_name**](/glossary#): BankAccountTag1\n\n\n",
      "example_request_body": {
        "tag_name": "BankAccountTag1"
      },
      "success_response_body": {
        "bank_id": "gh.29.uk",
        "endpoint_tag_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "operation_id": "OBPv4.0.0-getBanks",
        "tag_name": "BankAccountTag1"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["API", "API", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "tag_name": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "operation_id": {
            "type": "string"
          },
          "tag_name": {
            "type": "string"
          },
          "bank_id": {
            "type": "string"
          },
          "endpoint_tag_id": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateBankLevelEndpointTag",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/banks/BANK_ID/endpoints/OPERATION_ID/tags",
      "connector_methods": ["obp.createBankLevelEndpointTag", "obp.getBankLevelEndpointTag"]
    },
    {
      "operation_id": "OBPv5.0.0-getCustomersMinimalAtOneBank",
      "implemented_by": {
        "version": "OBPv5.0.0",
        "function": "getCustomersMinimalAtOneBank"
      },
      "request_verb": "GET",
      "request_url": "/obp/v5.0.0/banks/BANK_ID/customers-minimal",
      "summary": "Get Customers Minimal at Bank",
      "description": "<p>Get Customers Minimal at Bank.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#customers\"><strong>customers</strong></a>:</p>\n",
      "description_markdown": "Get Customers Minimal at Bank.\n\n\n\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**customer_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**customers**](/glossary#customers): \n\n\n",
      "success_response_body": {
        "customers": [
          {
            "bank_id": "gh.29.uk",
            "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-30008: User Customer Link not found by USER_ID",
        "OBP-50000: Unknown Error.",
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["Customer", "User", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "customers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "customer_id": {
                  "type": "string"
                },
                "bank_id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetCustomersMinimal",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/customers-minimal",
      "connector_methods": ["obp.getCustomers"]
    },
    {
      "operation_id": "OBPv4.0.0-createProductAttribute",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "createProductAttribute"
      },
      "request_verb": "POST",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/products/PRODUCT_CODE/attribute",
      "summary": "Create Product Attribute",
      "description": "<p>Create Product Attribute</p>\n<p>Product Attributes are used to describe a financial Product with a list of typed key value pairs.</p>\n<p>Each Product Attribute is linked to its Product by PRODUCT_CODE</p>\n<p>Typical product attributes might be:</p>\n<p>ISIN (for International bonds)<br />\nVKN (for German bonds)<br />\nREDCODE (markit short code for credit derivative)<br />\nLOAN_ID (e.g. used for Anacredit reporting)</p>\n<p>ISSUE_DATE (When the bond was issued in the market)<br />\nMATURITY_DATE (End of life time of a product)<br />\nTRADABLE</p>\n<p>See <a href=\"http://www.fpml.org/\">FPML</a> for more examples.</p>\n<p>The type field must be one of &quot;STRING&quot;, &quot;INTEGER&quot;, &quot;DOUBLE&quot; or DATE_WITH_DAY&quot;</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#product_code\">PRODUCT_CODE</a>: 1234BW</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n<p><a href=\"/glossary#is_active\">is_active</a>: true</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#product_attribute_id\"><strong>product_attribute_id</strong></a>:</p>\n<p><a href=\"/glossary#product_code\"><strong>product_code</strong></a>: 1234BW</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n<p><a href=\"/glossary#is_active\">is_active</a>: true</p>\n",
      "description_markdown": "Create Product Attribute\n\n\nProduct Attributes are used to describe a financial Product with a list of typed key value pairs.\n\nEach Product Attribute is linked to its Product by PRODUCT_CODE\n\n\n       \n\nTypical product attributes might be:\n\nISIN (for International bonds)\nVKN (for German bonds)\nREDCODE (markit short code for credit derivative)\nLOAN_ID (e.g. used for Anacredit reporting)\n\nISSUE_DATE (When the bond was issued in the market)\nMATURITY_DATE (End of life time of a product)\nTRADABLE\n\nSee [FPML](http://www.fpml.org/) for more examples.\n\n\nThe type field must be one of \"STRING\", \"INTEGER\", \"DOUBLE\" or DATE_WITH_DAY\"\n\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[PRODUCT_CODE](/glossary#product_code): 1234BW\n\n\n\n\n\n**JSON request body fields:**\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**type**](/glossary#type): \n\n\n\n[**value**](/glossary#): 5987953\n\n\n\n[is_active](/glossary#is_active): true\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**product_attribute_id**](/glossary#product_attribute_id): \n\n\n\n[**product_code**](/glossary#product_code): 1234BW\n\n\n\n[**type**](/glossary#type): \n\n\n\n[**value**](/glossary#): 5987953\n\n\n\n[is_active](/glossary#is_active): true\n\n\n",
      "example_request_body": {
        "name": "OVERDRAFT_START_DATE",
        "type": "DATE_WITH_DAY",
        "value": "2012-04-23",
        "is_active": true
      },
      "success_response_body": {
        "bank_id": "gh.29.uk",
        "product_code": "1234BW",
        "product_attribute_id": "613c83ea-80f9-4560-8404-b9cd4ec42a7f",
        "name": "OVERDRAFT_START_DATE",
        "type": "DATE_WITH_DAY",
        "value": "2012-04-23",
        "is_active": true
      },
      "error_response_bodies": [
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error.",
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["Product", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "is_active": {
            "type": "boolean"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "product_code": {
            "type": "string"
          },
          "product_attribute_id": {
            "type": "string"
          },
          "bank_id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "is_active": {
            "type": "boolean"
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateProductAttribute",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/products/PRODUCT_CODE/attribute",
      "connector_methods": [
        "obp.getProduct",
        "obp.createOrUpdateProductAttribute",
        "obp.getBank",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv4.0.0-updateBankLevelEndpointTag",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "updateBankLevelEndpointTag"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v4.0.0/management/banks/BANK_ID/endpoints/OPERATION_ID/tags/ENDPOINT_TAG_ID",
      "summary": "Update Bank Level Endpoint Tag",
      "description": "<p>Update Endpoint Tag, you can only update the tag_name here, operation_id can not be updated.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#\">ENDPOINT_TAG_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\">OPERATION_ID</a>: OBPv4.0.0-getBanks</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#\"><strong>endpoint_tag_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>operation_id</strong></a>: OBPv4.0.0-getBanks</p>\n<p><a href=\"/glossary#\"><strong>tag_name</strong></a>: BankAccountTag1</p>\n",
      "description_markdown": "Update Endpoint Tag, you can only update the tag_name here, operation_id can not be updated.\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[ENDPOINT_TAG_ID](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[OPERATION_ID](/glossary#): OBPv4.0.0-getBanks\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**endpoint_tag_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**operation_id**](/glossary#): OBPv4.0.0-getBanks\n\n\n\n[**tag_name**](/glossary#): BankAccountTag1\n\n\n",
      "example_request_body": {
        "tag_name": "BankAccountTag1"
      },
      "success_response_body": {
        "bank_id": "gh.29.uk",
        "endpoint_tag_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "operation_id": "OBPv4.0.0-getBanks",
        "tag_name": "BankAccountTag1"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-30099: Invalid ENDPOINT_TAG_ID. Please specify a valid value for ENDPOINT_TAG_ID.",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["API", "API", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "tag_name": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "operation_id": {
            "type": "string"
          },
          "tag_name": {
            "type": "string"
          },
          "bank_id": {
            "type": "string"
          },
          "endpoint_tag_id": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanUpdateBankLevelEndpointTag",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/banks/BANK_ID/endpoints/OPERATION_ID/tags/ENDPOINT_TAG_ID",
      "connector_methods": [
        "obp.updateBankLevelEndpointTag",
        "obp.getBankLevelEndpointTag",
        "obp.getEndpointTagById"
      ]
    },
    {
      "operation_id": "OBPv4.0.0-createUserCustomerLinks",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "createUserCustomerLinks"
      },
      "request_verb": "POST",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/user_customer_links",
      "summary": "Create User Customer Link",
      "description": "<p>Link a User to a Customer</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#date_inserted\"><strong>date_inserted</strong></a>:</p>\n<p><a href=\"/glossary#is_active\"><strong>is_active</strong></a>: true</p>\n<p><a href=\"/glossary#user_customer_link_id\"><strong>user_customer_link_id</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p>\n",
      "description_markdown": "Link a User to a Customer\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON request body fields:**\n\n\n\n[**customer_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**user_id**](/glossary#): 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**customer_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**date_inserted**](/glossary#date_inserted): \n\n\n\n[**is_active**](/glossary#is_active): true\n\n\n\n[**user_customer_link_id**](/glossary#user_customer_link_id): \n\n\n\n[**user_id**](/glossary#): 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\n\n\n",
      "example_request_body": {
        "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
        "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      },
      "success_response_body": {
        "user_customer_link_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
        "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
        "date_inserted": "1100-01-01T00:00:00Z",
        "is_active": true
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30111: Invalid Bank Id. The BANK_ID should only contain 0-9/a-z/A-Z/'-'/'.'/'_', the length should be smaller than 255.",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-10001: Incorrect json format.",
        "OBP-30046: Customer not found. Please specify a valid value for CUSTOMER_ID.",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-30007: The User is already linked to a Customer at the bank specified by BANK_ID",
        "OBP-30025: Could not create user_customer_links ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Customer", "User"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "customer_id": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "user_customer_link_id": {
            "type": "string"
          },
          "customer_id": {
            "type": "string"
          },
          "is_active": {
            "type": "boolean"
          },
          "date_inserted": {
            "type": "string",
            "format": "date-time"
          },
          "user_id": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateUserCustomerLinkAtAnyBank",
          "requires_bank_id": false
        },
        {
          "role": "CanCreateUserCustomerLink",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/user_customer_links",
      "connector_methods": ["obp.getCustomerByCustomerId"]
    },
    {
      "operation_id": "OBPv4.0.0-updateAtmLocationCategories",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "updateAtmLocationCategories"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/atms/ATM_ID/location-categories",
      "summary": "Update ATM Location Categories",
      "description": "<p>Update ATM Location Categories.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#atm_id\">ATM_ID</a>: atme0352a-9a0f-4bfa-b30b-9003aa467f51</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#atm_id\"><strong>atm_id</strong></a>: atme0352a-9a0f-4bfa-b30b-9003aa467f51</p>\n<p><a href=\"/glossary#\"><strong>location_categories</strong></a>: location_categories</p>\n",
      "description_markdown": "Update ATM Location Categories.\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ATM_ID](/glossary#atm_id): atme0352a-9a0f-4bfa-b30b-9003aa467f51\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**atm_id**](/glossary#atm_id): atme0352a-9a0f-4bfa-b30b-9003aa467f51\n\n\n\n[**location_categories**](/glossary#): location_categories\n\n\n",
      "example_request_body": {
        "location_categories": ["ATBI", "ATBE"]
      },
      "success_response_body": {
        "atm_id": "atme0352a-9a0f-4bfa-b30b-9003aa467f51",
        "location_categories": ["ATBI", "ATBE"]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["ATM", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "location_categories": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "atm_id": {
            "type": "string"
          },
          "location_categories": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/atms/ATM_ID/location-categories",
      "connector_methods": ["obp.updateAtmLocationCategories", "obp.getAtm"]
    },
    {
      "operation_id": "OBPv5.0.0-createSystemView",
      "implemented_by": {
        "version": "OBPv5.0.0",
        "function": "createSystemView"
      },
      "request_verb": "POST",
      "request_url": "/obp/v5.0.0/system-views",
      "summary": "Create System View",
      "description": "<p>Create a system view</p>\n<p>Authentication is Mandatory and the user needs to have access to the CanCreateSystemView entitlement.<br />\nThe 'alias' field in the JSON can take one of two values:</p>\n<ul>\n<li><em>public</em>: to use the public alias if there is one specified for the other account.</li>\n<li><em>private</em>: to use the public alias if there is one specified for the other account.</li>\n<li>\n<p><em>''(empty string)</em>: to use no alias; the view shows the real name of the other account.</p>\n</li>\n</ul>\n<p>The 'hide_metadata_if_alias_used' field in the JSON can take boolean values. If it is set to <code>true</code> and there is an alias on the other account then the other accounts' metadata (like more_info, url, image_url, open_corporates_url, etc.) will be hidden. Otherwise the metadata will be shown.</p>\n<p>The 'allowed_actions' field is a list containing the name of the actions allowed on this view, all the actions contained will be set to <code>true</code> on the view creation, the rest will be set to <code>false</code>.</p>\n<p>Please note that system views cannot be public. In case you try to set it you will get the error OBP-30258: System view cannot be public</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#allowed_actions\"><strong>allowed_actions</strong></a>:</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#hide_metadata_if_alias_used\"><strong>hide_metadata_if_alias_used</strong></a>:</p>\n<p><a href=\"/glossary#is_public\"><strong>is_public</strong></a>: true</p>\n<p><a href=\"/glossary#metadata_view\"><strong>metadata_view</strong></a>:</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#which_alias_to_use\"><strong>which_alias_to_use</strong></a>:</p>\n<p><a href=\"/glossary#\">can_grant_access_to_views</a>: can_grant_access_to_views</p>\n<p><a href=\"/glossary#\">can_revoke_access_to_views</a>: can_revoke_access_to_views</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#alias\"><strong>alias</strong></a>:</p>\n<p><a href=\"/glossary#can_add_comment\"><strong>can_add_comment</strong></a>:</p>\n<p><a href=\"/glossary#can_add_corporate_location\"><strong>can_add_corporate_location</strong></a>:</p>\n<p><a href=\"/glossary#can_add_counterparty\"><strong>can_add_counterparty</strong></a>: true</p>\n<p><a href=\"/glossary#can_add_image\"><strong>can_add_image</strong></a>:</p>\n<p><a href=\"/glossary#can_add_image_url\"><strong>can_add_image_url</strong></a>: true</p>\n<p><a href=\"/glossary#can_add_more_info\"><strong>can_add_more_info</strong></a>: true</p>\n<p><a href=\"/glossary#can_add_open_corporates_url\"><strong>can_add_open_corporates_url</strong></a>:</p>\n<p><a href=\"/glossary#can_add_physical_location\"><strong>can_add_physical_location</strong></a>:</p>\n<p><a href=\"/glossary#can_add_private_alias\"><strong>can_add_private_alias</strong></a>:</p>\n<p><a href=\"/glossary#can_add_public_alias\"><strong>can_add_public_alias</strong></a>:</p>\n<p><a href=\"/glossary#can_add_tag\"><strong>can_add_tag</strong></a>: true</p>\n<p><a href=\"/glossary#can_add_transaction_request_to_any_account\"><strong>can_add_transaction_request_to_any_account</strong></a>:</p>\n<p><a href=\"/glossary#can_add_transaction_request_to_own_account\"><strong>can_add_transaction_request_to_own_account</strong></a>:</p>\n<p><a href=\"/glossary#can_add_url\"><strong>can_add_url</strong></a>:</p>\n<p><a href=\"/glossary#can_add_where_tag\"><strong>can_add_where_tag</strong></a>:</p>\n<p><a href=\"/glossary#can_create_direct_debit\"><strong>can_create_direct_debit</strong></a>: true</p>\n<p><a href=\"/glossary#can_create_standing_order\"><strong>can_create_standing_order</strong></a>:</p>\n<p><a href=\"/glossary#can_delete_comment\"><strong>can_delete_comment</strong></a>:</p>\n<p><a href=\"/glossary#can_delete_corporate_location\"><strong>can_delete_corporate_location</strong></a>: true</p>\n<p><a href=\"/glossary#can_delete_image\"><strong>can_delete_image</strong></a>: true</p>\n<p><a href=\"/glossary#can_delete_physical_location\"><strong>can_delete_physical_location</strong></a>:</p>\n<p><a href=\"/glossary#can_delete_tag\"><strong>can_delete_tag</strong></a>:</p>\n<p><a href=\"/glossary#can_delete_where_tag\"><strong>can_delete_where_tag</strong></a>: true</p>\n<p><a href=\"/glossary#can_edit_owner_comment\"><strong>can_edit_owner_comment</strong></a>: true</p>\n<p><a href=\"/glossary#\"><strong>can_grant_access_to_views</strong></a>: can_grant_access_to_views</p>\n<p><a href=\"/glossary#can_query_available_funds\"><strong>can_query_available_funds</strong></a>: true</p>\n<p><a href=\"/glossary#\"><strong>can_revoke_access_to_views</strong></a>: can_revoke_access_to_views</p>\n<p><a href=\"/glossary#can_see_bank_account_balance\"><strong>can_see_bank_account_balance</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_bank_name\"><strong>can_see_bank_account_bank_name</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_credit_limit\"><strong>can_see_bank_account_credit_limit</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_currency\"><strong>can_see_bank_account_currency</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_iban\"><strong>can_see_bank_account_iban</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_label\"><strong>can_see_bank_account_label</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_national_identifier\"><strong>can_see_bank_account_national_identifier</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_number\"><strong>can_see_bank_account_number</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_owners\"><strong>can_see_bank_account_owners</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_routing_address\"><strong>can_see_bank_account_routing_address</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_routing_scheme\"><strong>can_see_bank_account_routing_scheme</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_swift_bic\"><strong>can_see_bank_account_swift_bic</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_type\"><strong>can_see_bank_account_type</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_routing_address\"><strong>can_see_bank_routing_address</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_routing_scheme\"><strong>can_see_bank_routing_scheme</strong></a>:</p>\n<p><a href=\"/glossary#can_see_comments\"><strong>can_see_comments</strong></a>:</p>\n<p><a href=\"/glossary#can_see_corporate_location\"><strong>can_see_corporate_location</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_image_url\"><strong>can_see_image_url</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_images\"><strong>can_see_images</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_more_info\"><strong>can_see_more_info</strong></a>:</p>\n<p><a href=\"/glossary#can_see_open_corporates_url\"><strong>can_see_open_corporates_url</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_bank_name\"><strong>can_see_other_account_bank_name</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_iban\"><strong>can_see_other_account_iban</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_kind\"><strong>can_see_other_account_kind</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_metadata\"><strong>can_see_other_account_metadata</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_national_identifier\"><strong>can_see_other_account_national_identifier</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_other_account_number\"><strong>can_see_other_account_number</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_other_account_routing_address\"><strong>can_see_other_account_routing_address</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_other_account_routing_scheme\"><strong>can_see_other_account_routing_scheme</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_swift_bic\"><strong>can_see_other_account_swift_bic</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_other_bank_routing_address\"><strong>can_see_other_bank_routing_address</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_bank_routing_scheme\"><strong>can_see_other_bank_routing_scheme</strong></a>:</p>\n<p><a href=\"/glossary#can_see_owner_comment\"><strong>can_see_owner_comment</strong></a>:</p>\n<p><a href=\"/glossary#can_see_physical_location\"><strong>can_see_physical_location</strong></a>:</p>\n<p><a href=\"/glossary#can_see_private_alias\"><strong>can_see_private_alias</strong></a>:</p>\n<p><a href=\"/glossary#can_see_public_alias\"><strong>can_see_public_alias</strong></a>:</p>\n<p><a href=\"/glossary#can_see_tags\"><strong>can_see_tags</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_amount\"><strong>can_see_transaction_amount</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_transaction_balance\"><strong>can_see_transaction_balance</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_currency\"><strong>can_see_transaction_currency</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_description\"><strong>can_see_transaction_description</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_transaction_finish_date\"><strong>can_see_transaction_finish_date</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_metadata\"><strong>can_see_transaction_metadata</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_other_bank_account\"><strong>can_see_transaction_other_bank_account</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_start_date\"><strong>can_see_transaction_start_date</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_this_bank_account\"><strong>can_see_transaction_this_bank_account</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_type\"><strong>can_see_transaction_type</strong></a>:</p>\n<p><a href=\"/glossary#can_see_url\"><strong>can_see_url</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_where_tag\"><strong>can_see_where_tag</strong></a>: true</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#hide_metadata_if_alias_used\"><strong>hide_metadata_if_alias_used</strong></a>:</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#is_public\"><strong>is_public</strong></a>: true</p>\n<p><a href=\"/glossary#\"><strong>is_system</strong></a>: true</p>\n<p><a href=\"/glossary#metadata_view\"><strong>metadata_view</strong></a>:</p>\n<p><a href=\"/glossary#short_name\"><strong>short_name</strong></a>:</p>\n<p><a href=\"/glossary#is_firehose\">is_firehose</a>:</p>\n",
      "description_markdown": "Create a system view\n\n Authentication is Mandatory and the user needs to have access to the CanCreateSystemView entitlement.\n The 'alias' field in the JSON can take one of two values:\n\n * _public_: to use the public alias if there is one specified for the other account.\n * _private_: to use the public alias if there is one specified for the other account.\n\n * _''(empty string)_: to use no alias; the view shows the real name of the other account.\n\n The 'hide_metadata_if_alias_used' field in the JSON can take boolean values. If it is set to `true` and there is an alias on the other account then the other accounts' metadata (like more_info, url, image_url, open_corporates_url, etc.) will be hidden. Otherwise the metadata will be shown.\n\n The 'allowed_actions' field is a list containing the name of the actions allowed on this view, all the actions contained will be set to `true` on the view creation, the rest will be set to `false`.\n \n Please note that system views cannot be public. In case you try to set it you will get the error OBP-30258: System view cannot be public\n\n\n**JSON request body fields:**\n\n\n\n[**allowed_actions**](/glossary#allowed_actions): \n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**hide_metadata_if_alias_used**](/glossary#hide_metadata_if_alias_used): \n\n\n\n[**is_public**](/glossary#is_public): true\n\n\n\n[**metadata_view**](/glossary#metadata_view): \n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**which_alias_to_use**](/glossary#which_alias_to_use): \n\n\n\n[can_grant_access_to_views](/glossary#): can_grant_access_to_views\n\n\n\n[can_revoke_access_to_views](/glossary#): can_revoke_access_to_views\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**alias**](/glossary#alias): \n\n\n\n[**can_add_comment**](/glossary#can_add_comment): \n\n\n\n[**can_add_corporate_location**](/glossary#can_add_corporate_location): \n\n\n\n[**can_add_counterparty**](/glossary#can_add_counterparty): true\n\n\n\n[**can_add_image**](/glossary#can_add_image): \n\n\n\n[**can_add_image_url**](/glossary#can_add_image_url): true\n\n\n\n[**can_add_more_info**](/glossary#can_add_more_info): true\n\n\n\n[**can_add_open_corporates_url**](/glossary#can_add_open_corporates_url): \n\n\n\n[**can_add_physical_location**](/glossary#can_add_physical_location): \n\n\n\n[**can_add_private_alias**](/glossary#can_add_private_alias): \n\n\n\n[**can_add_public_alias**](/glossary#can_add_public_alias): \n\n\n\n[**can_add_tag**](/glossary#can_add_tag): true\n\n\n\n[**can_add_transaction_request_to_any_account**](/glossary#can_add_transaction_request_to_any_account): \n\n\n\n[**can_add_transaction_request_to_own_account**](/glossary#can_add_transaction_request_to_own_account): \n\n\n\n[**can_add_url**](/glossary#can_add_url): \n\n\n\n[**can_add_where_tag**](/glossary#can_add_where_tag): \n\n\n\n[**can_create_direct_debit**](/glossary#can_create_direct_debit): true\n\n\n\n[**can_create_standing_order**](/glossary#can_create_standing_order): \n\n\n\n[**can_delete_comment**](/glossary#can_delete_comment): \n\n\n\n[**can_delete_corporate_location**](/glossary#can_delete_corporate_location): true\n\n\n\n[**can_delete_image**](/glossary#can_delete_image): true\n\n\n\n[**can_delete_physical_location**](/glossary#can_delete_physical_location): \n\n\n\n[**can_delete_tag**](/glossary#can_delete_tag): \n\n\n\n[**can_delete_where_tag**](/glossary#can_delete_where_tag): true\n\n\n\n[**can_edit_owner_comment**](/glossary#can_edit_owner_comment): true\n\n\n\n[**can_grant_access_to_views**](/glossary#): can_grant_access_to_views\n\n\n\n[**can_query_available_funds**](/glossary#can_query_available_funds): true\n\n\n\n[**can_revoke_access_to_views**](/glossary#): can_revoke_access_to_views\n\n\n\n[**can_see_bank_account_balance**](/glossary#can_see_bank_account_balance): \n\n\n\n[**can_see_bank_account_bank_name**](/glossary#can_see_bank_account_bank_name): true\n\n\n\n[**can_see_bank_account_credit_limit**](/glossary#can_see_bank_account_credit_limit): true\n\n\n\n[**can_see_bank_account_currency**](/glossary#can_see_bank_account_currency): \n\n\n\n[**can_see_bank_account_iban**](/glossary#can_see_bank_account_iban): \n\n\n\n[**can_see_bank_account_label**](/glossary#can_see_bank_account_label): true\n\n\n\n[**can_see_bank_account_national_identifier**](/glossary#can_see_bank_account_national_identifier): \n\n\n\n[**can_see_bank_account_number**](/glossary#can_see_bank_account_number): true\n\n\n\n[**can_see_bank_account_owners**](/glossary#can_see_bank_account_owners): true\n\n\n\n[**can_see_bank_account_routing_address**](/glossary#can_see_bank_account_routing_address): \n\n\n\n[**can_see_bank_account_routing_scheme**](/glossary#can_see_bank_account_routing_scheme): \n\n\n\n[**can_see_bank_account_swift_bic**](/glossary#can_see_bank_account_swift_bic): \n\n\n\n[**can_see_bank_account_type**](/glossary#can_see_bank_account_type): \n\n\n\n[**can_see_bank_routing_address**](/glossary#can_see_bank_routing_address): true\n\n\n\n[**can_see_bank_routing_scheme**](/glossary#can_see_bank_routing_scheme): \n\n\n\n[**can_see_comments**](/glossary#can_see_comments): \n\n\n\n[**can_see_corporate_location**](/glossary#can_see_corporate_location): true\n\n\n\n[**can_see_image_url**](/glossary#can_see_image_url): true\n\n\n\n[**can_see_images**](/glossary#can_see_images): true\n\n\n\n[**can_see_more_info**](/glossary#can_see_more_info): \n\n\n\n[**can_see_open_corporates_url**](/glossary#can_see_open_corporates_url): \n\n\n\n[**can_see_other_account_bank_name**](/glossary#can_see_other_account_bank_name): \n\n\n\n[**can_see_other_account_iban**](/glossary#can_see_other_account_iban): \n\n\n\n[**can_see_other_account_kind**](/glossary#can_see_other_account_kind): \n\n\n\n[**can_see_other_account_metadata**](/glossary#can_see_other_account_metadata): \n\n\n\n[**can_see_other_account_national_identifier**](/glossary#can_see_other_account_national_identifier): true\n\n\n\n[**can_see_other_account_number**](/glossary#can_see_other_account_number): true\n\n\n\n[**can_see_other_account_routing_address**](/glossary#can_see_other_account_routing_address): true\n\n\n\n[**can_see_other_account_routing_scheme**](/glossary#can_see_other_account_routing_scheme): \n\n\n\n[**can_see_other_account_swift_bic**](/glossary#can_see_other_account_swift_bic): true\n\n\n\n[**can_see_other_bank_routing_address**](/glossary#can_see_other_bank_routing_address): \n\n\n\n[**can_see_other_bank_routing_scheme**](/glossary#can_see_other_bank_routing_scheme): \n\n\n\n[**can_see_owner_comment**](/glossary#can_see_owner_comment): \n\n\n\n[**can_see_physical_location**](/glossary#can_see_physical_location): \n\n\n\n[**can_see_private_alias**](/glossary#can_see_private_alias): \n\n\n\n[**can_see_public_alias**](/glossary#can_see_public_alias): \n\n\n\n[**can_see_tags**](/glossary#can_see_tags): \n\n\n\n[**can_see_transaction_amount**](/glossary#can_see_transaction_amount): true\n\n\n\n[**can_see_transaction_balance**](/glossary#can_see_transaction_balance): \n\n\n\n[**can_see_transaction_currency**](/glossary#can_see_transaction_currency): \n\n\n\n[**can_see_transaction_description**](/glossary#can_see_transaction_description): true\n\n\n\n[**can_see_transaction_finish_date**](/glossary#can_see_transaction_finish_date): \n\n\n\n[**can_see_transaction_metadata**](/glossary#can_see_transaction_metadata): \n\n\n\n[**can_see_transaction_other_bank_account**](/glossary#can_see_transaction_other_bank_account): \n\n\n\n[**can_see_transaction_start_date**](/glossary#can_see_transaction_start_date): \n\n\n\n[**can_see_transaction_this_bank_account**](/glossary#can_see_transaction_this_bank_account): \n\n\n\n[**can_see_transaction_type**](/glossary#can_see_transaction_type): \n\n\n\n[**can_see_url**](/glossary#can_see_url): true\n\n\n\n[**can_see_where_tag**](/glossary#can_see_where_tag): true\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**hide_metadata_if_alias_used**](/glossary#hide_metadata_if_alias_used): \n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**is_public**](/glossary#is_public): true\n\n\n\n[**is_system**](/glossary#): true\n\n\n\n[**metadata_view**](/glossary#metadata_view): \n\n\n\n[**short_name**](/glossary#short_name): \n\n\n\n[is_firehose](/glossary#is_firehose): \n\n\n",
      "example_request_body": {
        "name": "_test",
        "description": "This view is for family",
        "metadata_view": "_test",
        "is_public": false,
        "which_alias_to_use": "family",
        "hide_metadata_if_alias_used": false,
        "allowed_actions": [
          "can_see_transaction_this_bank_account",
          "can_see_transaction_other_bank_account",
          "can_see_transaction_metadata",
          "can_see_transaction_label",
          "can_see_transaction_amount",
          "can_see_transaction_type",
          "can_see_transaction_currency",
          "can_see_transaction_start_date",
          "can_see_transaction_finish_date",
          "can_see_transaction_balance",
          "can_see_comments",
          "can_see_narrative",
          "can_see_tags",
          "can_see_images",
          "can_see_bank_account_owners",
          "can_see_bank_account_type",
          "can_see_bank_account_balance",
          "can_see_bank_account_currency",
          "can_see_bank_account_label",
          "can_see_bank_account_national_identifier",
          "can_see_bank_account_swift_bic",
          "can_see_bank_account_iban",
          "can_see_bank_account_number",
          "can_see_bank_account_bank_name",
          "can_see_other_account_national_identifier",
          "can_see_other_account_swift_bic",
          "can_see_other_account_iban",
          "can_see_other_account_bank_name",
          "can_see_other_account_number",
          "can_see_other_account_metadata",
          "can_see_other_account_kind",
          "can_see_more_info",
          "can_see_url",
          "can_see_image_url",
          "can_see_open_corporates_url",
          "can_see_corporate_location",
          "can_see_physical_location",
          "can_see_public_alias",
          "can_see_private_alias",
          "can_add_more_info",
          "can_add_url",
          "can_add_image_url",
          "can_add_open_corporates_url",
          "can_add_corporate_location",
          "can_add_physical_location",
          "can_add_public_alias",
          "can_add_private_alias",
          "can_delete_corporate_location",
          "can_delete_physical_location",
          "can_edit_narrative",
          "can_add_comment",
          "can_delete_comment",
          "can_add_tag",
          "can_delete_tag",
          "can_add_image",
          "can_delete_image",
          "can_add_where_tag",
          "can_see_where_tag",
          "can_delete_where_tag",
          "can_create_counterparty",
          "can_see_bank_routing_scheme",
          "can_see_bank_routing_address",
          "can_see_bank_account_routing_scheme",
          "can_see_bank_account_routing_address",
          "can_see_other_bank_routing_scheme",
          "can_see_other_bank_routing_address",
          "can_see_other_account_routing_scheme",
          "can_see_other_account_routing_address",
          "can_query_available_funds",
          "can_add_transaction_request_to_own_account",
          "can_add_transaction_request_to_any_account",
          "can_see_bank_account_credit_limit",
          "can_create_direct_debit",
          "can_create_standing_order",
          "can_add_transaction_request_to_any_account"
        ],
        "can_grant_access_to_views": ["owner"],
        "can_revoke_access_to_views": ["owner"]
      },
      "success_response_body": {
        "id": "1234",
        "short_name": "short_name",
        "description": "description",
        "metadata_view": "owner",
        "is_public": true,
        "is_system": true,
        "alias": "No",
        "hide_metadata_if_alias_used": true,
        "can_grant_access_to_views": ["Owner"],
        "can_revoke_access_to_views": ["Owner"],
        "can_add_comment": true,
        "can_add_corporate_location": true,
        "can_add_image": true,
        "can_add_image_url": true,
        "can_add_more_info": true,
        "can_add_open_corporates_url": true,
        "can_add_physical_location": true,
        "can_add_private_alias": true,
        "can_add_public_alias": true,
        "can_add_tag": true,
        "can_add_url": true,
        "can_add_where_tag": true,
        "can_delete_comment": true,
        "can_add_counterparty": true,
        "can_delete_corporate_location": true,
        "can_delete_image": true,
        "can_delete_physical_location": true,
        "can_delete_tag": true,
        "can_delete_where_tag": true,
        "can_edit_owner_comment": true,
        "can_see_bank_account_balance": true,
        "can_query_available_funds": true,
        "can_see_bank_account_bank_name": true,
        "can_see_bank_account_currency": true,
        "can_see_bank_account_iban": true,
        "can_see_bank_account_label": true,
        "can_see_bank_account_national_identifier": true,
        "can_see_bank_account_number": true,
        "can_see_bank_account_owners": true,
        "can_see_bank_account_swift_bic": true,
        "can_see_bank_account_type": true,
        "can_see_comments": true,
        "can_see_corporate_location": true,
        "can_see_image_url": true,
        "can_see_images": true,
        "can_see_more_info": true,
        "can_see_open_corporates_url": true,
        "can_see_other_account_bank_name": true,
        "can_see_other_account_iban": true,
        "can_see_other_account_kind": true,
        "can_see_other_account_metadata": true,
        "can_see_other_account_national_identifier": true,
        "can_see_other_account_number": true,
        "can_see_other_account_swift_bic": true,
        "can_see_owner_comment": true,
        "can_see_physical_location": true,
        "can_see_private_alias": true,
        "can_see_public_alias": true,
        "can_see_tags": true,
        "can_see_transaction_amount": true,
        "can_see_transaction_balance": true,
        "can_see_transaction_currency": true,
        "can_see_transaction_description": true,
        "can_see_transaction_finish_date": true,
        "can_see_transaction_metadata": true,
        "can_see_transaction_other_bank_account": true,
        "can_see_transaction_start_date": true,
        "can_see_transaction_this_bank_account": true,
        "can_see_transaction_type": true,
        "can_see_url": true,
        "can_see_where_tag": true,
        "can_see_bank_routing_scheme": true,
        "can_see_bank_routing_address": true,
        "can_see_bank_account_routing_scheme": true,
        "can_see_bank_account_routing_address": true,
        "can_see_other_bank_routing_scheme": true,
        "can_see_other_bank_routing_address": true,
        "can_see_other_account_routing_scheme": true,
        "can_see_other_account_routing_address": true,
        "can_add_transaction_request_to_own_account": true,
        "can_add_transaction_request_to_any_account": true,
        "can_see_bank_account_credit_limit": true,
        "can_create_direct_debit": true,
        "can_create_standing_order": true
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["View-System", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "hide_metadata_if_alias_used": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "is_public": {
            "type": "boolean"
          },
          "allowed_actions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "description": {
            "type": "string"
          },
          "can_revoke_access_to_views": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "can_grant_access_to_views": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "metadata_view": {
            "type": "string"
          },
          "which_alias_to_use": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "can_see_other_account_swift_bic": {
            "type": "boolean"
          },
          "can_see_where_tag": {
            "type": "boolean"
          },
          "can_see_url": {
            "type": "boolean"
          },
          "can_create_direct_debit": {
            "type": "boolean"
          },
          "can_see_bank_account_swift_bic": {
            "type": "boolean"
          },
          "can_see_bank_account_routing_address": {
            "type": "boolean"
          },
          "can_see_tags": {
            "type": "boolean"
          },
          "can_see_transaction_balance": {
            "type": "boolean"
          },
          "can_delete_corporate_location": {
            "type": "boolean"
          },
          "can_add_image_url": {
            "type": "boolean"
          },
          "can_see_public_alias": {
            "type": "boolean"
          },
          "can_add_transaction_request_to_own_account": {
            "type": "boolean"
          },
          "can_add_comment": {
            "type": "boolean"
          },
          "can_see_other_bank_routing_scheme": {
            "type": "boolean"
          },
          "description": {
            "type": "string"
          },
          "can_see_corporate_location": {
            "type": "boolean"
          },
          "can_see_other_account_bank_name": {
            "type": "boolean"
          },
          "can_see_more_info": {
            "type": "boolean"
          },
          "can_add_counterparty": {
            "type": "boolean"
          },
          "is_system": {
            "type": "boolean"
          },
          "can_revoke_access_to_views": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "can_see_physical_location": {
            "type": "boolean"
          },
          "can_query_available_funds": {
            "type": "boolean"
          },
          "can_edit_owner_comment": {
            "type": "boolean"
          },
          "can_see_private_alias": {
            "type": "boolean"
          },
          "can_see_bank_account_credit_limit": {
            "type": "boolean"
          },
          "can_see_other_account_routing_address": {
            "type": "boolean"
          },
          "can_see_bank_account_balance": {
            "type": "boolean"
          },
          "can_add_public_alias": {
            "type": "boolean"
          },
          "can_see_bank_routing_scheme": {
            "type": "boolean"
          },
          "can_see_bank_account_owners": {
            "type": "boolean"
          },
          "can_see_other_account_metadata": {
            "type": "boolean"
          },
          "can_delete_physical_location": {
            "type": "boolean"
          },
          "hide_metadata_if_alias_used": {
            "type": "boolean"
          },
          "can_see_transaction_this_bank_account": {
            "type": "boolean"
          },
          "can_see_image_url": {
            "type": "boolean"
          },
          "can_see_transaction_type": {
            "type": "boolean"
          },
          "can_see_images": {
            "type": "boolean"
          },
          "can_see_transaction_amount": {
            "type": "boolean"
          },
          "metadata_view": {
            "type": "string"
          },
          "can_see_transaction_metadata": {
            "type": "boolean"
          },
          "can_see_comments": {
            "type": "boolean"
          },
          "can_grant_access_to_views": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "can_see_other_account_iban": {
            "type": "boolean"
          },
          "can_add_image": {
            "type": "boolean"
          },
          "can_see_bank_account_routing_scheme": {
            "type": "boolean"
          },
          "can_see_bank_account_type": {
            "type": "boolean"
          },
          "can_see_other_account_kind": {
            "type": "boolean"
          },
          "can_see_bank_account_currency": {
            "type": "boolean"
          },
          "can_add_where_tag": {
            "type": "boolean"
          },
          "can_see_transaction_start_date": {
            "type": "boolean"
          },
          "can_see_bank_account_label": {
            "type": "boolean"
          },
          "can_add_private_alias": {
            "type": "boolean"
          },
          "can_see_transaction_currency": {
            "type": "boolean"
          },
          "can_add_more_info": {
            "type": "boolean"
          },
          "can_delete_comment": {
            "type": "boolean"
          },
          "can_create_standing_order": {
            "type": "boolean"
          },
          "can_see_other_bank_routing_address": {
            "type": "boolean"
          },
          "can_see_transaction_other_bank_account": {
            "type": "boolean"
          },
          "can_see_bank_account_number": {
            "type": "boolean"
          },
          "can_add_corporate_location": {
            "type": "boolean"
          },
          "alias": {
            "type": "string"
          },
          "can_add_url": {
            "type": "boolean"
          },
          "short_name": {
            "type": "string"
          },
          "can_delete_where_tag": {
            "type": "boolean"
          },
          "is_public": {
            "type": "boolean"
          },
          "can_see_owner_comment": {
            "type": "boolean"
          },
          "can_see_transaction_finish_date": {
            "type": "boolean"
          },
          "can_see_open_corporates_url": {
            "type": "boolean"
          },
          "can_add_physical_location": {
            "type": "boolean"
          },
          "can_see_bank_account_iban": {
            "type": "boolean"
          },
          "can_see_other_account_national_identifier": {
            "type": "boolean"
          },
          "can_see_bank_routing_address": {
            "type": "boolean"
          },
          "can_delete_image": {
            "type": "boolean"
          },
          "can_add_transaction_request_to_any_account": {
            "type": "boolean"
          },
          "can_add_tag": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "can_see_other_account_routing_scheme": {
            "type": "boolean"
          },
          "can_add_open_corporates_url": {
            "type": "boolean"
          },
          "can_delete_tag": {
            "type": "boolean"
          },
          "can_see_transaction_description": {
            "type": "boolean"
          },
          "can_see_bank_account_national_identifier": {
            "type": "boolean"
          },
          "can_see_other_account_number": {
            "type": "boolean"
          },
          "can_see_bank_account_bank_name": {
            "type": "boolean"
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateSystemView",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/system-views",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv2.2.0-createFx",
      "implemented_by": {
        "version": "OBPv2.2.0",
        "function": "createFx"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v2.2.0/banks/BANK_ID/fx",
      "summary": "Create Fx",
      "description": "<p>Create or Update Fx for the Bank.</p>\n<p>Example:</p>\n<p>“from_currency_code”:“EUR”,<br />\n“to_currency_code”:“USD”,<br />\n“conversion_value”: 1.136305,<br />\n“inverse_conversion_value”: 1 / 1.136305 = 0.8800454103431737,</p>\n<p>Thus 1 Euro = 1.136305 US Dollar<br />\nand<br />\n1 US Dollar = 0.8800 Euro</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#conversion_value\"><strong>conversion_value</strong></a>: 100</p>\n<p><a href=\"/glossary#effective_date\"><strong>effective_date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#from_currency_code\"><strong>from_currency_code</strong></a>:</p>\n<p><a href=\"/glossary#inverse_conversion_value\"><strong>inverse_conversion_value</strong></a>: 50</p>\n<p><a href=\"/glossary#to_currency_code\"><strong>to_currency_code</strong></a>: EUR</p>\n",
      "description_markdown": "Create or Update Fx for the Bank.\n\nExample:\n\n“from_currency_code”:“EUR”,\n“to_currency_code”:“USD”,\n“conversion_value”: 1.136305,\n“inverse_conversion_value”: 1 / 1.136305 = 0.8800454103431737,\n\n Thus 1 Euro = 1.136305 US Dollar\n and\n 1 US Dollar = 0.8800 Euro\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**conversion_value**](/glossary#conversion_value): 100\n\n\n\n[**effective_date**](/glossary#effective_date): 2020-01-27\n\n\n\n[**from_currency_code**](/glossary#from_currency_code): \n\n\n\n[**inverse_conversion_value**](/glossary#inverse_conversion_value): 50\n\n\n\n[**to_currency_code**](/glossary#to_currency_code): EUR\n\n\n",
      "example_request_body": {
        "bank_id": "gh.29.uk",
        "from_currency_code": "EUR",
        "to_currency_code": "USD",
        "conversion_value": 1.136305,
        "inverse_conversion_value": 0.8800454103431737,
        "effective_date": "1100-01-01T00:00:00Z"
      },
      "success_response_body": {
        "bank_id": "gh.29.uk",
        "from_currency_code": "EUR",
        "to_currency_code": "USD",
        "conversion_value": 1.136305,
        "inverse_conversion_value": 0.8800454103431737,
        "effective_date": "1100-01-01T00:00:00Z"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["FX"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "effective_date": {
            "type": "string",
            "format": "date-time"
          },
          "conversion_value": {
            "type": "number"
          },
          "from_currency_code": {
            "type": "string"
          },
          "bank_id": {
            "type": "string"
          },
          "inverse_conversion_value": {
            "type": "number"
          },
          "to_currency_code": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "effective_date": {
            "type": "string",
            "format": "date-time"
          },
          "conversion_value": {
            "type": "number"
          },
          "from_currency_code": {
            "type": "string"
          },
          "bank_id": {
            "type": "string"
          },
          "inverse_conversion_value": {
            "type": "number"
          },
          "to_currency_code": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateFxRate",
          "requires_bank_id": true
        },
        {
          "role": "CanCreateFxRateAtAnyBank",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/fx",
      "connector_methods": ["obp.createOrUpdateFXRate", "obp.getBankLegacy"]
    },
    {
      "operation_id": "OBPv4.0.0-getEndpointMapping",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getEndpointMapping"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/management/endpoint-mappings/ENDPOINT_MAPPING_ID",
      "summary": "Get Endpoint Mapping by Id",
      "description": "<p>Get an Endpoint Mapping by ENDPOINT_MAPPING_ID.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#\">ENDPOINT_MAPPING_ID</a>: ENDPOINT_MAPPING_ID</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n",
      "description_markdown": "Get an Endpoint Mapping by ENDPOINT_MAPPING_ID.\n\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ENDPOINT_MAPPING_ID](/glossary#): ENDPOINT_MAPPING_ID\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n",
      "success_response_body": {
        "operation_id": "OBPv4.0.0-dynamicEndpoint_POST_account",
        "request_mapping": {},
        "response_mapping": {
          "name": {
            "entity": "FooBar",
            "field": "name",
            "query": "number"
          },
          "balance": {
            "entity": "FashionBrand",
            "field": "number",
            "query": "number"
          }
        },
        "endpoint_mapping_id": "b4e0352a-9a0f-4bfa-b30b-9003aa467f50"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Endpoint-Mapping", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "operation_id": {
            "type": "string"
          },
          "request_mapping": {
            "type": "object",
            "properties": {}
          },
          "response_mapping": {
            "type": "object",
            "properties": {
              "name": {
                "type": "object",
                "properties": {
                  "entity": {
                    "type": "string"
                  },
                  "field": {
                    "type": "string"
                  },
                  "query": {
                    "type": "string"
                  }
                }
              },
              "balance": {
                "type": "object",
                "properties": {
                  "entity": {
                    "type": "string"
                  },
                  "field": {
                    "type": "string"
                  },
                  "query": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "endpoint_mapping_id": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanGetEndpointMapping",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/endpoint-mappings/ENDPOINT_MAPPING_ID",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv4.0.0-updateAtm",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "updateAtm"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/atms/ATM_ID",
      "summary": "UPDATE ATM",
      "description": "<p>Update ATM.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#atm_id\">ATM_ID</a>: atme0352a-9a0f-4bfa-b30b-9003aa467f51</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#accessibility_features\"><strong>accessibility_features</strong></a>: [&quot;ATAC&quot;,&quot;ATAD&quot;]</p>\n<p><a href=\"/glossary#address\"><strong>address</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>balance_inquiry_fee</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#\"><strong>branch_identification</strong></a>: branch_identification</p>\n<p><a href=\"/glossary#\"><strong>cash_withdrawal_international_fee</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>cash_withdrawal_national_fee</strong></a>:</p>\n<p><a href=\"/glossary#city\"><strong>city</strong></a>:</p>\n<p><a href=\"/glossary#closing_time\"><strong>closing_time</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#country_code\"><strong>country_code</strong></a>: 1254</p>\n<p><a href=\"/glossary#county\"><strong>county</strong></a>:</p>\n<p><a href=\"/glossary#friday\"><strong>friday</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>has_deposit_capability</strong></a>: true</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#\"><strong>is_accessible</strong></a>: true</p>\n<p><a href=\"/glossary#latitude\"><strong>latitude</strong></a>: 38.8951</p>\n<p><a href=\"/glossary#license\"><strong>license</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>line_1</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>line_2</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>line_3</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>located_at</strong></a>:</p>\n<p><a href=\"/glossary#location\"><strong>location</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>location_categories</strong></a>: location_categories</p>\n<p><a href=\"/glossary#longitude\"><strong>longitude</strong></a>: -77.0364</p>\n<p><a href=\"/glossary#meta\"><strong>meta</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>minimum_withdrawal</strong></a>: minimum_withdrawal</p>\n<p><a href=\"/glossary#monday\"><strong>monday</strong></a>:</p>\n<p><a href=\"/glossary#more_info\"><strong>more_info</strong></a>: More information about this fee</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#\"><strong>notes</strong></a>: notes</p>\n<p><a href=\"/glossary#opening_time\"><strong>opening_time</strong></a>:</p>\n<p><a href=\"/glossary#postcode\"><strong>postcode</strong></a>:</p>\n<p><a href=\"/glossary#saturday\"><strong>saturday</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>services</strong></a>: services</p>\n<p><a href=\"/glossary#\"><strong>site_identification</strong></a>: site_identification</p>\n<p><a href=\"/glossary#\"><strong>site_name</strong></a>: site_name</p>\n<p><a href=\"/glossary#state\"><strong>state</strong></a>:</p>\n<p><a href=\"/glossary#sunday\"><strong>sunday</strong></a>:</p>\n<p><a href=\"/glossary#supported_currencies\"><strong>supported_currencies</strong></a>: [&quot;EUR&quot;,&quot;MXN&quot;,&quot;USD&quot;]</p>\n<p><a href=\"/glossary#supported_languages\"><strong>supported_languages</strong></a>: [&quot;es&quot;,&quot;fr&quot;,&quot;de&quot;]</p>\n<p><a href=\"/glossary#thursday\"><strong>thursday</strong></a>:</p>\n<p><a href=\"/glossary#tuesday\"><strong>tuesday</strong></a>:</p>\n<p><a href=\"/glossary#wednesday\"><strong>wednesday</strong></a>:</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n",
      "description_markdown": "Update ATM.\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ATM_ID](/glossary#atm_id): atme0352a-9a0f-4bfa-b30b-9003aa467f51\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**accessibility_features**](/glossary#accessibility_features): [\"ATAC\",\"ATAD\"]\n\n\n\n[**address**](/glossary#address): \n\n\n\n[**balance_inquiry_fee**](/glossary#): \n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**branch_identification**](/glossary#): branch_identification\n\n\n\n[**cash_withdrawal_international_fee**](/glossary#): \n\n\n\n[**cash_withdrawal_national_fee**](/glossary#): \n\n\n\n[**city**](/glossary#city): \n\n\n\n[**closing_time**](/glossary#closing_time): 2020-01-27\n\n\n\n[**country_code**](/glossary#country_code): 1254\n\n\n\n[**county**](/glossary#county): \n\n\n\n[**friday**](/glossary#friday): \n\n\n\n[**has_deposit_capability**](/glossary#): true\n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**is_accessible**](/glossary#): true\n\n\n\n[**latitude**](/glossary#latitude): 38.8951\n\n\n\n[**license**](/glossary#license): \n\n\n\n[**line_1**](/glossary#): \n\n\n\n[**line_2**](/glossary#): \n\n\n\n[**line_3**](/glossary#): \n\n\n\n[**located_at**](/glossary#): \n\n\n\n[**location**](/glossary#location): \n\n\n\n[**location_categories**](/glossary#): location_categories\n\n\n\n[**longitude**](/glossary#longitude): -77.0364\n\n\n\n[**meta**](/glossary#meta): \n\n\n\n[**minimum_withdrawal**](/glossary#): minimum_withdrawal\n\n\n\n[**monday**](/glossary#monday): \n\n\n\n[**more_info**](/glossary#more_info): More information about this fee\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**notes**](/glossary#): notes\n\n\n\n[**opening_time**](/glossary#opening_time): \n\n\n\n[**postcode**](/glossary#postcode): \n\n\n\n[**saturday**](/glossary#saturday): \n\n\n\n[**services**](/glossary#): services\n\n\n\n[**site_identification**](/glossary#): site_identification\n\n\n\n[**site_name**](/glossary#): site_name\n\n\n\n[**state**](/glossary#state): \n\n\n\n[**sunday**](/glossary#sunday): \n\n\n\n[**supported_currencies**](/glossary#supported_currencies): [\"EUR\",\"MXN\",\"USD\"]\n\n\n\n[**supported_languages**](/glossary#supported_languages): [\"es\",\"fr\",\"de\"]\n\n\n\n[**thursday**](/glossary#thursday): \n\n\n\n[**tuesday**](/glossary#tuesday): \n\n\n\n[**wednesday**](/glossary#wednesday): \n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n",
      "example_request_body": {
        "bank_id": "gh.29.uk",
        "name": "Atm by the Lake",
        "address": {
          "line_1": "No 1 the Road",
          "line_2": "The Place",
          "line_3": "The Hill",
          "city": "Berlin",
          "county": "",
          "state": "Brandenburg",
          "postcode": "13359",
          "country_code": "DE"
        },
        "location": {
          "latitude": 11.45,
          "longitude": 11.45
        },
        "meta": {
          "license": {
            "id": "ODbL-1.0",
            "name": "Open Database License"
          }
        },
        "monday": {
          "opening_time": "10:00",
          "closing_time": "18:00"
        },
        "tuesday": {
          "opening_time": "10:00",
          "closing_time": "18:00"
        },
        "wednesday": {
          "opening_time": "10:00",
          "closing_time": "18:00"
        },
        "thursday": {
          "opening_time": "10:00",
          "closing_time": "18:00"
        },
        "friday": {
          "opening_time": "10:00",
          "closing_time": "18:00"
        },
        "saturday": {
          "opening_time": "10:00",
          "closing_time": "18:00"
        },
        "sunday": {
          "opening_time": "10:00",
          "closing_time": "18:00"
        },
        "is_accessible": "true",
        "located_at": "",
        "more_info": "More information about this fee",
        "has_deposit_capability": "true",
        "supported_languages": ["es", "fr", "de"],
        "services": ["ATBP", "ATBA"],
        "accessibility_features": ["ATAC", "ATAD"],
        "supported_currencies": ["EUR", "MXN", "USD"],
        "notes": ["String1", "String2"],
        "location_categories": ["ATBI", "ATBE"],
        "minimum_withdrawal": "5",
        "branch_identification": "",
        "site_identification": "",
        "site_name": "",
        "cash_withdrawal_national_fee": "",
        "cash_withdrawal_international_fee": "",
        "balance_inquiry_fee": ""
      },
      "success_response_body": {
        "id": "atme0352a-9a0f-4bfa-b30b-9003aa467f51",
        "bank_id": "gh.29.uk",
        "name": "Atm by the Lake",
        "address": {
          "line_1": "No 1 the Road",
          "line_2": "The Place",
          "line_3": "The Hill",
          "city": "Berlin",
          "county": "",
          "state": "Brandenburg",
          "postcode": "13359",
          "country_code": "DE"
        },
        "location": {
          "latitude": 11.45,
          "longitude": 11.45
        },
        "meta": {
          "license": {
            "id": "ODbL-1.0",
            "name": "Open Database License"
          }
        },
        "monday": {
          "opening_time": "10:00",
          "closing_time": "18:00"
        },
        "tuesday": {
          "opening_time": "10:00",
          "closing_time": "18:00"
        },
        "wednesday": {
          "opening_time": "10:00",
          "closing_time": "18:00"
        },
        "thursday": {
          "opening_time": "10:00",
          "closing_time": "18:00"
        },
        "friday": {
          "opening_time": "10:00",
          "closing_time": "18:00"
        },
        "saturday": {
          "opening_time": "10:00",
          "closing_time": "18:00"
        },
        "sunday": {
          "opening_time": "10:00",
          "closing_time": "18:00"
        },
        "is_accessible": "true",
        "located_at": "",
        "more_info": "More information about this fee",
        "has_deposit_capability": "true",
        "supported_languages": ["es", "fr", "de"],
        "services": ["ATBP", "ATBA"],
        "accessibility_features": ["ATAC", "ATAD"],
        "supported_currencies": ["EUR", "MXN", "USD"],
        "notes": ["String1", "String2"],
        "location_categories": ["ATBI", "ATBE"],
        "minimum_withdrawal": "5",
        "branch_identification": "",
        "site_identification": "",
        "site_name": "",
        "cash_withdrawal_national_fee": "",
        "cash_withdrawal_international_fee": "",
        "balance_inquiry_fee": ""
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["ATM", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "has_deposit_capability": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "site_name": {
            "type": "string"
          },
          "friday": {
            "type": "object",
            "properties": {
              "closing_time": {
                "type": "string"
              },
              "opening_time": {
                "type": "string"
              }
            }
          },
          "site_identification": {
            "type": "string"
          },
          "is_accessible": {
            "type": "string"
          },
          "accessibility_features": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "supported_currencies": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "bank_id": {
            "type": "string"
          },
          "monday": {
            "type": "object",
            "properties": {
              "closing_time": {
                "type": "string"
              },
              "opening_time": {
                "type": "string"
              }
            }
          },
          "cash_withdrawal_international_fee": {
            "type": "string"
          },
          "supported_languages": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "balance_inquiry_fee": {
            "type": "string"
          },
          "meta": {
            "type": "object",
            "properties": {
              "license": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "notes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "saturday": {
            "type": "object",
            "properties": {
              "closing_time": {
                "type": "string"
              },
              "opening_time": {
                "type": "string"
              }
            }
          },
          "thursday": {
            "type": "object",
            "properties": {
              "closing_time": {
                "type": "string"
              },
              "opening_time": {
                "type": "string"
              }
            }
          },
          "tuesday": {
            "type": "object",
            "properties": {
              "closing_time": {
                "type": "string"
              },
              "opening_time": {
                "type": "string"
              }
            }
          },
          "wednesday": {
            "type": "object",
            "properties": {
              "closing_time": {
                "type": "string"
              },
              "opening_time": {
                "type": "string"
              }
            }
          },
          "sunday": {
            "type": "object",
            "properties": {
              "closing_time": {
                "type": "string"
              },
              "opening_time": {
                "type": "string"
              }
            }
          },
          "located_at": {
            "type": "string"
          },
          "more_info": {
            "type": "string"
          },
          "address": {
            "type": "object",
            "properties": {
              "city": {
                "type": "string"
              },
              "postcode": {
                "type": "string"
              },
              "line_1": {
                "type": "string"
              },
              "line_2": {
                "type": "string"
              },
              "line_3": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "country_code": {
                "type": "string"
              },
              "county": {
                "type": "string"
              }
            }
          },
          "minimum_withdrawal": {
            "type": "string"
          },
          "branch_identification": {
            "type": "string"
          },
          "location": {
            "type": "object",
            "properties": {
              "longitude": {
                "type": "number"
              },
              "latitude": {
                "type": "number"
              }
            }
          },
          "services": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "cash_withdrawal_national_fee": {
            "type": "string"
          },
          "location_categories": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "has_deposit_capability": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "site_name": {
            "type": "string"
          },
          "friday": {
            "type": "object",
            "properties": {
              "closing_time": {
                "type": "string"
              },
              "opening_time": {
                "type": "string"
              }
            }
          },
          "id": {
            "type": "string"
          },
          "site_identification": {
            "type": "string"
          },
          "is_accessible": {
            "type": "string"
          },
          "accessibility_features": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "supported_currencies": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "bank_id": {
            "type": "string"
          },
          "monday": {
            "type": "object",
            "properties": {
              "closing_time": {
                "type": "string"
              },
              "opening_time": {
                "type": "string"
              }
            }
          },
          "cash_withdrawal_international_fee": {
            "type": "string"
          },
          "supported_languages": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "balance_inquiry_fee": {
            "type": "string"
          },
          "meta": {
            "type": "object",
            "properties": {
              "license": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "notes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "saturday": {
            "type": "object",
            "properties": {
              "closing_time": {
                "type": "string"
              },
              "opening_time": {
                "type": "string"
              }
            }
          },
          "thursday": {
            "type": "object",
            "properties": {
              "closing_time": {
                "type": "string"
              },
              "opening_time": {
                "type": "string"
              }
            }
          },
          "tuesday": {
            "type": "object",
            "properties": {
              "closing_time": {
                "type": "string"
              },
              "opening_time": {
                "type": "string"
              }
            }
          },
          "wednesday": {
            "type": "object",
            "properties": {
              "closing_time": {
                "type": "string"
              },
              "opening_time": {
                "type": "string"
              }
            }
          },
          "sunday": {
            "type": "object",
            "properties": {
              "closing_time": {
                "type": "string"
              },
              "opening_time": {
                "type": "string"
              }
            }
          },
          "located_at": {
            "type": "string"
          },
          "more_info": {
            "type": "string"
          },
          "address": {
            "type": "object",
            "properties": {
              "city": {
                "type": "string"
              },
              "postcode": {
                "type": "string"
              },
              "line_1": {
                "type": "string"
              },
              "line_2": {
                "type": "string"
              },
              "line_3": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "country_code": {
                "type": "string"
              },
              "county": {
                "type": "string"
              }
            }
          },
          "minimum_withdrawal": {
            "type": "string"
          },
          "branch_identification": {
            "type": "string"
          },
          "location": {
            "type": "object",
            "properties": {
              "longitude": {
                "type": "number"
              },
              "latitude": {
                "type": "number"
              }
            }
          },
          "services": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "cash_withdrawal_national_fee": {
            "type": "string"
          },
          "location_categories": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanUpdateAtm",
          "requires_bank_id": true
        },
        {
          "role": "CanUpdateAtmAtAnyBank",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/atms/ATM_ID",
      "connector_methods": ["obp.createOrUpdateAtm", "obp.getAtm"]
    },
    {
      "operation_id": "OBPv4.0.0-getPrivateAccountByIdFull",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getPrivateAccountByIdFull"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/account",
      "summary": "Get Account by Id (Full)",
      "description": "<p>Information returned about an account specified by ACCOUNT_ID as moderated by the view (VIEW_ID):</p>\n<ul>\n<li>Number</li>\n<li>Owners</li>\n<li>Type</li>\n<li>Balance</li>\n<li>IBAN</li>\n<li>Available views (sorted by short_name)</li>\n</ul>\n<p>More details about the data moderation by the view <a href=\"#1_2_1-getViewsForBankAccount\">here</a>.</p>\n<p>PSD2 Context: PSD2 requires customers to have access to their account information via third party applications.<br />\nThis call provides balance and other account information via delegated authentication using OAuth.</p>\n<p>Authentication is required if the 'is_public' field in view (VIEW_ID) is not set to <code>true</code>.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#account_attribute_id\"><strong>account_attribute_id</strong></a>:</p>\n<p><a href=\"/glossary#account_attributes\"><strong>account_attributes</strong></a>:</p>\n<p><a href=\"/glossary#account_routings\"><strong>account_routings</strong></a>:</p>\n<p><a href=\"/glossary#address\"><strong>address</strong></a>:</p>\n<p><a href=\"/glossary#alias\"><strong>alias</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p>\n<p><a href=\"/glossary#balance\"><strong>balance</strong></a>: 10</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#can_add_comment\"><strong>can_add_comment</strong></a>:</p>\n<p><a href=\"/glossary#can_add_corporate_location\"><strong>can_add_corporate_location</strong></a>:</p>\n<p><a href=\"/glossary#can_add_image\"><strong>can_add_image</strong></a>:</p>\n<p><a href=\"/glossary#can_add_image_url\"><strong>can_add_image_url</strong></a>: true</p>\n<p><a href=\"/glossary#can_add_more_info\"><strong>can_add_more_info</strong></a>: true</p>\n<p><a href=\"/glossary#can_add_open_corporates_url\"><strong>can_add_open_corporates_url</strong></a>:</p>\n<p><a href=\"/glossary#can_add_physical_location\"><strong>can_add_physical_location</strong></a>:</p>\n<p><a href=\"/glossary#can_add_private_alias\"><strong>can_add_private_alias</strong></a>:</p>\n<p><a href=\"/glossary#can_add_public_alias\"><strong>can_add_public_alias</strong></a>:</p>\n<p><a href=\"/glossary#can_add_tag\"><strong>can_add_tag</strong></a>: true</p>\n<p><a href=\"/glossary#can_add_url\"><strong>can_add_url</strong></a>:</p>\n<p><a href=\"/glossary#can_add_where_tag\"><strong>can_add_where_tag</strong></a>:</p>\n<p><a href=\"/glossary#can_delete_comment\"><strong>can_delete_comment</strong></a>:</p>\n<p><a href=\"/glossary#can_delete_corporate_location\"><strong>can_delete_corporate_location</strong></a>: true</p>\n<p><a href=\"/glossary#can_delete_image\"><strong>can_delete_image</strong></a>: true</p>\n<p><a href=\"/glossary#can_delete_physical_location\"><strong>can_delete_physical_location</strong></a>:</p>\n<p><a href=\"/glossary#can_delete_tag\"><strong>can_delete_tag</strong></a>:</p>\n<p><a href=\"/glossary#can_delete_where_tag\"><strong>can_delete_where_tag</strong></a>: true</p>\n<p><a href=\"/glossary#can_edit_owner_comment\"><strong>can_edit_owner_comment</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_balance\"><strong>can_see_bank_account_balance</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_bank_name\"><strong>can_see_bank_account_bank_name</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_currency\"><strong>can_see_bank_account_currency</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_iban\"><strong>can_see_bank_account_iban</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_label\"><strong>can_see_bank_account_label</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_national_identifier\"><strong>can_see_bank_account_national_identifier</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_number\"><strong>can_see_bank_account_number</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_owners\"><strong>can_see_bank_account_owners</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_swift_bic\"><strong>can_see_bank_account_swift_bic</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_type\"><strong>can_see_bank_account_type</strong></a>:</p>\n<p><a href=\"/glossary#can_see_comments\"><strong>can_see_comments</strong></a>:</p>\n<p><a href=\"/glossary#can_see_corporate_location\"><strong>can_see_corporate_location</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_image_url\"><strong>can_see_image_url</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_images\"><strong>can_see_images</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_more_info\"><strong>can_see_more_info</strong></a>:</p>\n<p><a href=\"/glossary#can_see_open_corporates_url\"><strong>can_see_open_corporates_url</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_bank_name\"><strong>can_see_other_account_bank_name</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_iban\"><strong>can_see_other_account_iban</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_kind\"><strong>can_see_other_account_kind</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_metadata\"><strong>can_see_other_account_metadata</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_national_identifier\"><strong>can_see_other_account_national_identifier</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_other_account_number\"><strong>can_see_other_account_number</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_other_account_swift_bic\"><strong>can_see_other_account_swift_bic</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_owner_comment\"><strong>can_see_owner_comment</strong></a>:</p>\n<p><a href=\"/glossary#can_see_physical_location\"><strong>can_see_physical_location</strong></a>:</p>\n<p><a href=\"/glossary#can_see_private_alias\"><strong>can_see_private_alias</strong></a>:</p>\n<p><a href=\"/glossary#can_see_public_alias\"><strong>can_see_public_alias</strong></a>:</p>\n<p><a href=\"/glossary#can_see_tags\"><strong>can_see_tags</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_amount\"><strong>can_see_transaction_amount</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_transaction_balance\"><strong>can_see_transaction_balance</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_currency\"><strong>can_see_transaction_currency</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_description\"><strong>can_see_transaction_description</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_transaction_finish_date\"><strong>can_see_transaction_finish_date</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_metadata\"><strong>can_see_transaction_metadata</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_other_bank_account\"><strong>can_see_transaction_other_bank_account</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_start_date\"><strong>can_see_transaction_start_date</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_this_bank_account\"><strong>can_see_transaction_this_bank_account</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_type\"><strong>can_see_transaction_type</strong></a>:</p>\n<p><a href=\"/glossary#can_see_url\"><strong>can_see_url</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_where_tag\"><strong>can_see_where_tag</strong></a>: true</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#display_name\"><strong>display_name</strong></a>:</p>\n<p><a href=\"/glossary#hide_metadata_if_alias_used\"><strong>hide_metadata_if_alias_used</strong></a>:</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#is_public\"><strong>is_public</strong></a>: true</p>\n<p><a href=\"/glossary#\"><strong>label</strong></a>: My Account</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#number\"><strong>number</strong></a>:</p>\n<p><a href=\"/glossary#owners\"><strong>owners</strong></a>:</p>\n<p><a href=\"/glossary#product_code\"><strong>product_code</strong></a>: 1234BW</p>\n<p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p>\n<p><a href=\"/glossary#scheme\"><strong>scheme</strong></a>: scheme value</p>\n<p><a href=\"/glossary#short_name\"><strong>short_name</strong></a>:</p>\n<p><a href=\"/glossary#tags\"><strong>tags</strong></a>: Create-My-User</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n<p><a href=\"/glossary#User\"><strong>user</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n<p><a href=\"/glossary#views_available\"><strong>views_available</strong></a>:</p>\n<p><a href=\"/glossary#\">product_instance_code</a>: product_instance_code</p>\n",
      "description_markdown": "Information returned about an account specified by ACCOUNT_ID as moderated by the view (VIEW_ID):\n\n* Number\n* Owners\n* Type\n* Balance\n* IBAN\n* Available views (sorted by short_name)\n\nMore details about the data moderation by the view [here](#1_2_1-getViewsForBankAccount).\n\nPSD2 Context: PSD2 requires customers to have access to their account information via third party applications.\nThis call provides balance and other account information via delegated authentication using OAuth.\n\nAuthentication is required if the 'is_public' field in view (VIEW_ID) is not set to `true`.\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[VIEW_ID](/glossary#this_view_id): owner\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**account_attribute_id**](/glossary#account_attribute_id): \n\n\n\n[**account_attributes**](/glossary#account_attributes): \n\n\n\n[**account_routings**](/glossary#account_routings): \n\n\n\n[**address**](/glossary#address): \n\n\n\n[**alias**](/glossary#alias): \n\n\n\n[**amount**](/glossary#): 10.12\n\n\n\n[**balance**](/glossary#balance): 10\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**can_add_comment**](/glossary#can_add_comment): \n\n\n\n[**can_add_corporate_location**](/glossary#can_add_corporate_location): \n\n\n\n[**can_add_image**](/glossary#can_add_image): \n\n\n\n[**can_add_image_url**](/glossary#can_add_image_url): true\n\n\n\n[**can_add_more_info**](/glossary#can_add_more_info): true\n\n\n\n[**can_add_open_corporates_url**](/glossary#can_add_open_corporates_url): \n\n\n\n[**can_add_physical_location**](/glossary#can_add_physical_location): \n\n\n\n[**can_add_private_alias**](/glossary#can_add_private_alias): \n\n\n\n[**can_add_public_alias**](/glossary#can_add_public_alias): \n\n\n\n[**can_add_tag**](/glossary#can_add_tag): true\n\n\n\n[**can_add_url**](/glossary#can_add_url): \n\n\n\n[**can_add_where_tag**](/glossary#can_add_where_tag): \n\n\n\n[**can_delete_comment**](/glossary#can_delete_comment): \n\n\n\n[**can_delete_corporate_location**](/glossary#can_delete_corporate_location): true\n\n\n\n[**can_delete_image**](/glossary#can_delete_image): true\n\n\n\n[**can_delete_physical_location**](/glossary#can_delete_physical_location): \n\n\n\n[**can_delete_tag**](/glossary#can_delete_tag): \n\n\n\n[**can_delete_where_tag**](/glossary#can_delete_where_tag): true\n\n\n\n[**can_edit_owner_comment**](/glossary#can_edit_owner_comment): true\n\n\n\n[**can_see_bank_account_balance**](/glossary#can_see_bank_account_balance): \n\n\n\n[**can_see_bank_account_bank_name**](/glossary#can_see_bank_account_bank_name): true\n\n\n\n[**can_see_bank_account_currency**](/glossary#can_see_bank_account_currency): \n\n\n\n[**can_see_bank_account_iban**](/glossary#can_see_bank_account_iban): \n\n\n\n[**can_see_bank_account_label**](/glossary#can_see_bank_account_label): true\n\n\n\n[**can_see_bank_account_national_identifier**](/glossary#can_see_bank_account_national_identifier): \n\n\n\n[**can_see_bank_account_number**](/glossary#can_see_bank_account_number): true\n\n\n\n[**can_see_bank_account_owners**](/glossary#can_see_bank_account_owners): true\n\n\n\n[**can_see_bank_account_swift_bic**](/glossary#can_see_bank_account_swift_bic): \n\n\n\n[**can_see_bank_account_type**](/glossary#can_see_bank_account_type): \n\n\n\n[**can_see_comments**](/glossary#can_see_comments): \n\n\n\n[**can_see_corporate_location**](/glossary#can_see_corporate_location): true\n\n\n\n[**can_see_image_url**](/glossary#can_see_image_url): true\n\n\n\n[**can_see_images**](/glossary#can_see_images): true\n\n\n\n[**can_see_more_info**](/glossary#can_see_more_info): \n\n\n\n[**can_see_open_corporates_url**](/glossary#can_see_open_corporates_url): \n\n\n\n[**can_see_other_account_bank_name**](/glossary#can_see_other_account_bank_name): \n\n\n\n[**can_see_other_account_iban**](/glossary#can_see_other_account_iban): \n\n\n\n[**can_see_other_account_kind**](/glossary#can_see_other_account_kind): \n\n\n\n[**can_see_other_account_metadata**](/glossary#can_see_other_account_metadata): \n\n\n\n[**can_see_other_account_national_identifier**](/glossary#can_see_other_account_national_identifier): true\n\n\n\n[**can_see_other_account_number**](/glossary#can_see_other_account_number): true\n\n\n\n[**can_see_other_account_swift_bic**](/glossary#can_see_other_account_swift_bic): true\n\n\n\n[**can_see_owner_comment**](/glossary#can_see_owner_comment): \n\n\n\n[**can_see_physical_location**](/glossary#can_see_physical_location): \n\n\n\n[**can_see_private_alias**](/glossary#can_see_private_alias): \n\n\n\n[**can_see_public_alias**](/glossary#can_see_public_alias): \n\n\n\n[**can_see_tags**](/glossary#can_see_tags): \n\n\n\n[**can_see_transaction_amount**](/glossary#can_see_transaction_amount): true\n\n\n\n[**can_see_transaction_balance**](/glossary#can_see_transaction_balance): \n\n\n\n[**can_see_transaction_currency**](/glossary#can_see_transaction_currency): \n\n\n\n[**can_see_transaction_description**](/glossary#can_see_transaction_description): true\n\n\n\n[**can_see_transaction_finish_date**](/glossary#can_see_transaction_finish_date): \n\n\n\n[**can_see_transaction_metadata**](/glossary#can_see_transaction_metadata): \n\n\n\n[**can_see_transaction_other_bank_account**](/glossary#can_see_transaction_other_bank_account): \n\n\n\n[**can_see_transaction_start_date**](/glossary#can_see_transaction_start_date): \n\n\n\n[**can_see_transaction_this_bank_account**](/glossary#can_see_transaction_this_bank_account): \n\n\n\n[**can_see_transaction_type**](/glossary#can_see_transaction_type): \n\n\n\n[**can_see_url**](/glossary#can_see_url): true\n\n\n\n[**can_see_where_tag**](/glossary#can_see_where_tag): true\n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**date**](/glossary#): 2020-01-27\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**display_name**](/glossary#display_name): \n\n\n\n[**hide_metadata_if_alias_used**](/glossary#hide_metadata_if_alias_used): \n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**is_public**](/glossary#is_public): true\n\n\n\n[**label**](/glossary#): My Account\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**number**](/glossary#number): \n\n\n\n[**owners**](/glossary#owners): \n\n\n\n[**product_code**](/glossary#product_code): 1234BW\n\n\n\n[**provider**](/glossary#provider): ETHEREUM\n\n\n\n[**scheme**](/glossary#scheme): scheme value\n\n\n\n[**short_name**](/glossary#short_name): \n\n\n\n[**tags**](/glossary#tags): Create-My-User\n\n\n\n[**type**](/glossary#type): \n\n\n\n[**user**](/glossary#User): \n\n\n\n[**value**](/glossary#): 5987953\n\n\n\n[**views_available**](/glossary#views_available): \n\n\n\n[product_instance_code](/glossary#): product_instance_code\n\n\n",
      "success_response_body": {
        "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
        "label": "NoneLabel",
        "number": "123",
        "owners": [
          {
            "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
            "provider": "http://127.0.0.1:8080",
            "display_name": "OBP"
          }
        ],
        "product_code": "1234BW",
        "balance": {
          "currency": "EUR",
          "amount": "0"
        },
        "views_available": [
          {
            "id": "123",
            "short_name": "short_name",
            "description": "description",
            "is_public": true,
            "alias": "None",
            "hide_metadata_if_alias_used": true,
            "can_add_comment": true,
            "can_add_corporate_location": true,
            "can_add_image": true,
            "can_add_image_url": true,
            "can_add_more_info": true,
            "can_add_open_corporates_url": true,
            "can_add_physical_location": true,
            "can_add_private_alias": true,
            "can_add_public_alias": true,
            "can_add_tag": true,
            "can_add_url": true,
            "can_add_where_tag": true,
            "can_delete_comment": true,
            "can_delete_corporate_location": true,
            "can_delete_image": true,
            "can_delete_physical_location": true,
            "can_delete_tag": true,
            "can_delete_where_tag": true,
            "can_edit_owner_comment": true,
            "can_see_bank_account_balance": true,
            "can_see_bank_account_bank_name": true,
            "can_see_bank_account_currency": true,
            "can_see_bank_account_iban": true,
            "can_see_bank_account_label": true,
            "can_see_bank_account_national_identifier": true,
            "can_see_bank_account_number": true,
            "can_see_bank_account_owners": true,
            "can_see_bank_account_swift_bic": true,
            "can_see_bank_account_type": true,
            "can_see_comments": true,
            "can_see_corporate_location": true,
            "can_see_image_url": true,
            "can_see_images": true,
            "can_see_more_info": true,
            "can_see_open_corporates_url": true,
            "can_see_other_account_bank_name": true,
            "can_see_other_account_iban": true,
            "can_see_other_account_kind": true,
            "can_see_other_account_metadata": true,
            "can_see_other_account_national_identifier": true,
            "can_see_other_account_number": true,
            "can_see_other_account_swift_bic": true,
            "can_see_owner_comment": true,
            "can_see_physical_location": true,
            "can_see_private_alias": true,
            "can_see_public_alias": true,
            "can_see_tags": true,
            "can_see_transaction_amount": true,
            "can_see_transaction_balance": true,
            "can_see_transaction_currency": true,
            "can_see_transaction_description": true,
            "can_see_transaction_finish_date": true,
            "can_see_transaction_metadata": true,
            "can_see_transaction_other_bank_account": true,
            "can_see_transaction_start_date": true,
            "can_see_transaction_this_bank_account": true,
            "can_see_transaction_type": true,
            "can_see_url": true,
            "can_see_where_tag": true
          }
        ],
        "bank_id": "gh.29.uk",
        "account_routings": [
          {
            "scheme": "AccountNumber",
            "address": "4930396"
          }
        ],
        "account_attributes": [
          {
            "product_code": "1234BW",
            "account_attribute_id": "613c83ea-80f9-4560-8404-b9cd4ec42a7f",
            "name": "OVERDRAFT_START_DATE",
            "type": "DATE_WITH_DAY",
            "value": "2012-04-23",
            "product_instance_code": "LKJL98769F"
          }
        ],
        "tags": [
          {
            "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
            "value": "OBP",
            "date": "1100-01-01T00:00:00Z",
            "user": {
              "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
              "provider": "http://127.0.0.1:8080",
              "display_name": "OBP"
            }
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-20017: Current user does not have access to the view. Please specify a valid value for VIEW_ID.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Account", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "product_code": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                },
                "date": {
                  "type": "string",
                  "format": "date-time"
                },
                "user": {
                  "type": "object",
                  "properties": {
                    "provider": {
                      "type": "string"
                    },
                    "display_name": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "label": {
            "type": "string"
          },
          "number": {
            "type": "string"
          },
          "bank_id": {
            "type": "string"
          },
          "owners": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "provider": {
                  "type": "string"
                },
                "display_name": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                }
              }
            }
          },
          "id": {
            "type": "string"
          },
          "views_available": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "can_see_other_account_swift_bic": {
                  "type": "boolean"
                },
                "can_see_where_tag": {
                  "type": "boolean"
                },
                "can_see_url": {
                  "type": "boolean"
                },
                "can_see_bank_account_swift_bic": {
                  "type": "boolean"
                },
                "can_see_tags": {
                  "type": "boolean"
                },
                "can_see_transaction_balance": {
                  "type": "boolean"
                },
                "can_delete_corporate_location": {
                  "type": "boolean"
                },
                "can_add_image_url": {
                  "type": "boolean"
                },
                "can_see_public_alias": {
                  "type": "boolean"
                },
                "can_add_comment": {
                  "type": "boolean"
                },
                "description": {
                  "type": "string"
                },
                "can_see_corporate_location": {
                  "type": "boolean"
                },
                "can_see_other_account_bank_name": {
                  "type": "boolean"
                },
                "can_see_more_info": {
                  "type": "boolean"
                },
                "can_see_physical_location": {
                  "type": "boolean"
                },
                "can_edit_owner_comment": {
                  "type": "boolean"
                },
                "can_see_private_alias": {
                  "type": "boolean"
                },
                "can_see_bank_account_balance": {
                  "type": "boolean"
                },
                "can_add_public_alias": {
                  "type": "boolean"
                },
                "can_see_bank_account_owners": {
                  "type": "boolean"
                },
                "can_see_other_account_metadata": {
                  "type": "boolean"
                },
                "can_delete_physical_location": {
                  "type": "boolean"
                },
                "hide_metadata_if_alias_used": {
                  "type": "boolean"
                },
                "can_see_transaction_this_bank_account": {
                  "type": "boolean"
                },
                "can_see_image_url": {
                  "type": "boolean"
                },
                "can_see_transaction_type": {
                  "type": "boolean"
                },
                "can_see_images": {
                  "type": "boolean"
                },
                "can_see_transaction_amount": {
                  "type": "boolean"
                },
                "can_see_transaction_metadata": {
                  "type": "boolean"
                },
                "id": {
                  "type": "string"
                },
                "can_see_comments": {
                  "type": "boolean"
                },
                "can_see_other_account_iban": {
                  "type": "boolean"
                },
                "can_add_image": {
                  "type": "boolean"
                },
                "can_see_bank_account_type": {
                  "type": "boolean"
                },
                "can_see_other_account_kind": {
                  "type": "boolean"
                },
                "can_see_bank_account_currency": {
                  "type": "boolean"
                },
                "can_add_where_tag": {
                  "type": "boolean"
                },
                "can_see_transaction_start_date": {
                  "type": "boolean"
                },
                "can_see_bank_account_label": {
                  "type": "boolean"
                },
                "can_add_private_alias": {
                  "type": "boolean"
                },
                "can_see_transaction_currency": {
                  "type": "boolean"
                },
                "can_add_more_info": {
                  "type": "boolean"
                },
                "can_delete_comment": {
                  "type": "boolean"
                },
                "can_see_transaction_other_bank_account": {
                  "type": "boolean"
                },
                "can_see_bank_account_number": {
                  "type": "boolean"
                },
                "can_add_corporate_location": {
                  "type": "boolean"
                },
                "can_add_url": {
                  "type": "boolean"
                },
                "short_name": {
                  "type": "string"
                },
                "can_delete_where_tag": {
                  "type": "boolean"
                },
                "is_public": {
                  "type": "boolean"
                },
                "can_see_owner_comment": {
                  "type": "boolean"
                },
                "can_see_transaction_finish_date": {
                  "type": "boolean"
                },
                "can_see_open_corporates_url": {
                  "type": "boolean"
                },
                "can_add_physical_location": {
                  "type": "boolean"
                },
                "can_see_bank_account_iban": {
                  "type": "boolean"
                },
                "can_see_other_account_national_identifier": {
                  "type": "boolean"
                },
                "can_delete_image": {
                  "type": "boolean"
                },
                "can_add_tag": {
                  "type": "boolean"
                },
                "can_add_open_corporates_url": {
                  "type": "boolean"
                },
                "can_delete_tag": {
                  "type": "boolean"
                },
                "can_see_transaction_description": {
                  "type": "boolean"
                },
                "can_see_bank_account_national_identifier": {
                  "type": "boolean"
                },
                "can_see_other_account_number": {
                  "type": "boolean"
                },
                "can_see_bank_account_bank_name": {
                  "type": "boolean"
                },
                "alias": {
                  "type": "string"
                }
              }
            }
          },
          "balance": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string"
              },
              "amount": {
                "type": "string"
              }
            }
          },
          "account_attributes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string"
                },
                "product_code": {
                  "type": "string"
                },
                "account_attribute_id": {
                  "type": "string"
                },
                "product_instance_code": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              }
            }
          },
          "account_routings": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "scheme": {
                  "type": "string"
                },
                "address": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/account",
      "connector_methods": ["obp.getAccountAttributesByAccount"]
    },
    {
      "operation_id": "OBPv4.0.0-getSystemDynamicEntities",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getSystemDynamicEntities"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/management/system-dynamic-entities",
      "summary": "Get System Dynamic Entities",
      "description": "<p>Get all System Dynamic Entities</p>\n<p>Authentication is Mandatory</p>\n",
      "description_markdown": "Get all System Dynamic Entities \n\nAuthentication is Mandatory",
      "success_response_body": {
        "dynamic_entities": [
          {
            "bankId": "gh.29.uk",
            "FooBar": {
              "description": "description of this entity, can be markdown text.",
              "required": ["name"],
              "properties": {
                "name": {
                  "type": "string",
                  "minLength": 3,
                  "maxLength": 20,
                  "example": "James Brown",
                  "description": "description of **name** field, can be markdown text."
                },
                "number": {
                  "type": "integer",
                  "example": 698761728,
                  "description": "description of **number** field, can be markdown text."
                }
              }
            },
            "dynamicEntityId": "dynamic-entity-id",
            "userId": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
            "hasPersonalEntity": true
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Dynamic-Entity-Manage", "API", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "dynamic_entities": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "dynamicEntityId": {
                  "type": "string"
                },
                "bankId": {
                  "type": "string"
                },
                "hasPersonalEntity": {
                  "type": "boolean"
                },
                "userId": {
                  "type": "string"
                },
                "FooBar": {
                  "type": "object",
                  "properties": {
                    "required": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "description": {
                      "type": "string"
                    },
                    "properties": {
                      "type": "object",
                      "properties": {
                        "number": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": ["number", "integer", "boolean", "string", "DATE_WITH_DAY"]
                            },
                            "example": {
                              "type": "integer"
                            },
                            "description": {
                              "type": "string"
                            }
                          }
                        },
                        "name": {
                          "type": "object",
                          "properties": {
                            "minLength": {
                              "type": "integer"
                            },
                            "type": {
                              "type": "string",
                              "enum": ["number", "integer", "boolean", "string", "DATE_WITH_DAY"]
                            },
                            "maxLength": {
                              "type": "integer"
                            },
                            "example": {
                              "type": "string"
                            },
                            "description": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetSystemLevelDynamicEntities",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/system-dynamic-entities",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv3.1.0-createAccountWebhook",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "createAccountWebhook"
      },
      "request_verb": "POST",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/account-web-hooks",
      "summary": "Create an Account Webhook",
      "description": "<p>Create an Account Webhook</p>\n<p>Webhooks are used to call external URLs when certain events happen.</p>\n<p>Account Webhooks focus on events around accounts.</p>\n<p>For instance, a webhook could be used to notify an external service if a balance changes on an account.</p>\n<p>This functionality is work in progress! Please note that only implemented trigger is: OnBalanceChange</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>account_id</strong></a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#http_method\"><strong>http_method</strong></a>: GET</p>\n<p><a href=\"/glossary#http_protocol\"><strong>http_protocol</strong></a>:</p>\n<p><a href=\"/glossary#is_active\"><strong>is_active</strong></a>: true</p>\n<p><a href=\"/glossary#trigger_name\"><strong>trigger_name</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>url</strong></a>: <a href=\"http://www.example.com/id-docs/123/image.png\">http://www.example.com/id-docs/123/image.png</a></p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>account_id</strong></a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#account_webhook_id\"><strong>account_webhook_id</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#created_by_user_id\"><strong>created_by_user_id</strong></a>:</p>\n<p><a href=\"/glossary#http_method\"><strong>http_method</strong></a>: GET</p>\n<p><a href=\"/glossary#http_protocol\"><strong>http_protocol</strong></a>:</p>\n<p><a href=\"/glossary#is_active\"><strong>is_active</strong></a>: true</p>\n<p><a href=\"/glossary#trigger_name\"><strong>trigger_name</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>url</strong></a>: <a href=\"http://www.example.com/id-docs/123/image.png\">http://www.example.com/id-docs/123/image.png</a></p>\n",
      "description_markdown": "Create an Account Webhook\n\nWebhooks are used to call external URLs when certain events happen.\n\nAccount Webhooks focus on events around accounts.\n\nFor instance, a webhook could be used to notify an external service if a balance changes on an account.\n\nThis functionality is work in progress! Please note that only implemented trigger is: OnBalanceChange\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON request body fields:**\n\n\n\n[**account_id**](/glossary#): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[**http_method**](/glossary#http_method): GET\n\n\n\n[**http_protocol**](/glossary#http_protocol): \n\n\n\n[**is_active**](/glossary#is_active): true\n\n\n\n[**trigger_name**](/glossary#trigger_name): \n\n\n\n[**url**](/glossary#): http://www.example.com/id-docs/123/image.png\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**account_id**](/glossary#): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[**account_webhook_id**](/glossary#account_webhook_id): \n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**created_by_user_id**](/glossary#created_by_user_id): \n\n\n\n[**http_method**](/glossary#http_method): GET\n\n\n\n[**http_protocol**](/glossary#http_protocol): \n\n\n\n[**is_active**](/glossary#is_active): true\n\n\n\n[**trigger_name**](/glossary#trigger_name): \n\n\n\n[**url**](/glossary#): http://www.example.com/id-docs/123/image.png\n\n\n",
      "example_request_body": {
        "account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0",
        "trigger_name": "OnBalanceChange",
        "url": "https://localhost.openbankproject.com",
        "http_method": "POST",
        "http_protocol": "HTTP/1.1",
        "is_active": "true"
      },
      "success_response_body": {
        "account_webhook_id": "613c83ea-80f9-4560-8404-b9cd4ec42a7f",
        "bank_id": "gh.29.uk",
        "account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0",
        "trigger_name": "OnBalanceChange",
        "url": "https://localhost.openbankproject.com",
        "http_method": "POST",
        "http_protocol": "HTTP/1.1",
        "created_by_user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
        "is_active": true
      },
      "error_response_bodies": [
        "OBP-50000: Unknown Error.",
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["Webhook", "Bank", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "http_method": {
            "type": "string"
          },
          "is_active": {
            "type": "string"
          },
          "http_protocol": {
            "type": "string"
          },
          "trigger_name": {
            "type": "string"
          },
          "account_id": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "created_by_user_id": {
            "type": "string"
          },
          "http_method": {
            "type": "string"
          },
          "is_active": {
            "type": "boolean"
          },
          "bank_id": {
            "type": "string"
          },
          "http_protocol": {
            "type": "string"
          },
          "account_webhook_id": {
            "type": "string"
          },
          "trigger_name": {
            "type": "string"
          },
          "account_id": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateWebhook",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/account-web-hooks",
      "connector_methods": ["obp.getBank", "obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv4.0.0-getMyApiCollectionEndpoints",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getMyApiCollectionEndpoints"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/my/api-collections/API_COLLECTION_NAME/api-collection-endpoints",
      "summary": "Get My Api Collection Endpoints",
      "description": "<p>Get Api Collection Endpoints By API_COLLECTION_NAME.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#\">API_COLLECTION_NAME</a>: Favourites</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>api_collection_endpoint_id</strong></a>: 8uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>api_collection_endpoints</strong></a>: api_collection_endpoints</p>\n<p><a href=\"/glossary#\"><strong>api_collection_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>operation_id</strong></a>: OBPv4.0.0-getBanks</p>\n",
      "description_markdown": "Get Api Collection Endpoints By API_COLLECTION_NAME.\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[API_COLLECTION_NAME](/glossary#): Favourites\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**api_collection_endpoint_id**](/glossary#): 8uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**api_collection_endpoints**](/glossary#): api_collection_endpoints\n\n\n\n[**api_collection_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**operation_id**](/glossary#): OBPv4.0.0-getBanks\n\n\n",
      "success_response_body": {
        "api_collection_endpoints": [
          {
            "api_collection_endpoint_id": "8uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
            "api_collection_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
            "operation_id": "OBPv4.0.0-getBanks"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20057: User not found by userId.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Api-Collection", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "api_collection_endpoints": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "operation_id": {
                  "type": "string"
                },
                "api_collection_id": {
                  "type": "string"
                },
                "api_collection_endpoint_id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/my/api-collections/API_COLLECTION_NAME/api-collection-endpoints",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv4.0.0-updateBankLevelDynamicResourceDoc",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "updateBankLevelDynamicResourceDoc"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v4.0.0/management/banks/BANK_ID/dynamic-resource-docs/DYNAMIC-RESOURCE-DOC-ID",
      "summary": "Update Bank Level Dynamic Resource Doc",
      "description": "<p>Update a Bank Level Dynamic Resource Doc.</p>\n<p>The connector_method_body is URL-encoded format String</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#roles\"><strong>roles</strong></a>: CanCreateMyUser</p>\n<p><a href=\"/glossary#summary\"><strong>summary</strong></a>:</p>\n<p><a href=\"/glossary#tags\"><strong>tags</strong></a>: Create-My-User</p>\n",
      "description_markdown": "Update a Bank Level Dynamic Resource Doc.\n\nThe connector_method_body is URL-encoded format String\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**roles**](/glossary#roles): CanCreateMyUser\n\n\n\n[**summary**](/glossary#summary): \n\n\n\n[**tags**](/glossary#tags): Create-My-User\n\n\n",
      "example_request_body": {
        "error_response_bodies": "OBP-50000: Unknown Error.,OBP-20001: User not logged in. Authentication is required!,OBP-20006: User is missing one or more roles: ,OBP-10001: Incorrect json format.",
        "description": "Create one User",
        "tags": "Create-My-User",
        "request_verb": "POST",
        "method_body": "%20%20%20%20val%20Some(resourceDoc)%20%3D%20callContext.resourceDocument%0A%20%20%20%20val%20hasRequestBody%20%3D%20request.body.isDefined%0A%0A%20%20%20%20%2F%2F%20get%20Path%20Parameters%2C%20example%3A%0A%20%20%20%20%2F%2F%20if%20the%20requestUrl%20of%20resourceDoc%20is%20%2Fhello%2Fbanks%2FBANK_ID%2Fworld%0A%20%20%20%20%2F%2F%20the%20request%20path%20is%20%2Fhello%2Fbanks%2Fbank_x%2Fworld%0A%20%20%20%20%2F%2FpathParams.get(%22BANK_ID%22)%20will%20get%20Option(%22bank_x%22)%20value%0A%0A%20%20%20%20val%20myUserId%20%3D%20pathParams(%22MY_USER_ID%22)%0A%0A%0A%20%20%20%20val%20requestEntity%20%3D%20request.json%20match%20%7B%0A%20%20%20%20%20%20case%20Full(zson)%20%3D%3E%0A%20%20%20%20%20%20%20%20try%20%7B%0A%20%20%20%20%20%20%20%20%20%20zson.extract%5BRequestRootJsonClass%5D%0A%20%20%20%20%20%20%20%20%7D%20catch%20%7B%0A%20%20%20%20%20%20%20%20%20%20case%20e%3A%20MappingException%20%3D%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20return%20Full(errorJsonResponse(s%22%24InvalidJsonFormat%20%24%7Be.msg%7D%22))%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20case%20_%3A%20EmptyBox%20%3D%3E%0A%20%20%20%20%20%20%20%20return%20Full(errorJsonResponse(s%22%24InvalidRequestPayload%20Current%20request%20has%20no%20payload%22))%0A%20%20%20%20%7D%0A%0A%0A%20%20%20%20%2F%2F%20please%20add%20business%20logic%20here%0A%20%20%20%20val%20responseBody%3AResponseRootJsonClass%20%3D%20ResponseRootJsonClass(s%22%24%7BmyUserId%7D_from_path%22%2C%20requestEntity.name%2C%20requestEntity.age%2C%20requestEntity.hobby)%0A%20%20%20%20Future.successful%20%7B%0A%20%20%20%20%20%20(responseBody%2C%20HttpCode.%60200%60(callContext.callContext))%0A%20%20%20%20%7D",
        "roles": "CanCreateMyUser",
        "example_request_body": {
          "name": "Jhon",
          "age": 12,
          "hobby": ["coding"],
          "_optional_fields_": ["hobby"]
        },
        "request_url": "/my_user/MY_USER_ID",
        "bank_id": "gh.29.uk",
        "partial_function_name": "createUser",
        "summary": "Create My User",
        "success_response_body": {
          "my_user_id": "some_id_value",
          "name": "Jhon",
          "age": 12,
          "hobby": ["coding"],
          "_optional_fields_": ["hobby"]
        }
      },
      "success_response_body": {
        "error_response_bodies": "OBP-50000: Unknown Error.,OBP-20001: User not logged in. Authentication is required!,OBP-20006: User is missing one or more roles: ,OBP-10001: Incorrect json format.",
        "description": "Create one User",
        "tags": "Create-My-User",
        "dynamic_resource_doc_id": "vce035ca-9a0f-4bfa-b30b-9003aa467f51",
        "request_verb": "POST",
        "method_body": "%20%20%20%20val%20Some(resourceDoc)%20%3D%20callContext.resourceDocument%0A%20%20%20%20val%20hasRequestBody%20%3D%20request.body.isDefined%0A%0A%20%20%20%20%2F%2F%20get%20Path%20Parameters%2C%20example%3A%0A%20%20%20%20%2F%2F%20if%20the%20requestUrl%20of%20resourceDoc%20is%20%2Fhello%2Fbanks%2FBANK_ID%2Fworld%0A%20%20%20%20%2F%2F%20the%20request%20path%20is%20%2Fhello%2Fbanks%2Fbank_x%2Fworld%0A%20%20%20%20%2F%2FpathParams.get(%22BANK_ID%22)%20will%20get%20Option(%22bank_x%22)%20value%0A%0A%20%20%20%20val%20myUserId%20%3D%20pathParams(%22MY_USER_ID%22)%0A%0A%0A%20%20%20%20val%20requestEntity%20%3D%20request.json%20match%20%7B%0A%20%20%20%20%20%20case%20Full(zson)%20%3D%3E%0A%20%20%20%20%20%20%20%20try%20%7B%0A%20%20%20%20%20%20%20%20%20%20zson.extract%5BRequestRootJsonClass%5D%0A%20%20%20%20%20%20%20%20%7D%20catch%20%7B%0A%20%20%20%20%20%20%20%20%20%20case%20e%3A%20MappingException%20%3D%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20return%20Full(errorJsonResponse(s%22%24InvalidJsonFormat%20%24%7Be.msg%7D%22))%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20case%20_%3A%20EmptyBox%20%3D%3E%0A%20%20%20%20%20%20%20%20return%20Full(errorJsonResponse(s%22%24InvalidRequestPayload%20Current%20request%20has%20no%20payload%22))%0A%20%20%20%20%7D%0A%0A%0A%20%20%20%20%2F%2F%20please%20add%20business%20logic%20here%0A%20%20%20%20val%20responseBody%3AResponseRootJsonClass%20%3D%20ResponseRootJsonClass(s%22%24%7BmyUserId%7D_from_path%22%2C%20requestEntity.name%2C%20requestEntity.age%2C%20requestEntity.hobby)%0A%20%20%20%20Future.successful%20%7B%0A%20%20%20%20%20%20(responseBody%2C%20HttpCode.%60200%60(callContext.callContext))%0A%20%20%20%20%7D",
        "roles": "CanCreateMyUser",
        "example_request_body": {
          "name": "Jhon",
          "age": 12,
          "hobby": ["coding"],
          "_optional_fields_": ["hobby"]
        },
        "request_url": "/my_user/MY_USER_ID",
        "bank_id": "gh.29.uk",
        "partial_function_name": "createUser",
        "summary": "Create My User",
        "success_response_body": {
          "my_user_id": "some_id_value",
          "name": "Jhon",
          "age": 12,
          "hobby": ["coding"],
          "_optional_fields_": ["hobby"]
        }
      },
      "error_response_bodies": [
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Dynamic-Resource-Doc", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "tags": {
            "type": "string"
          },
          "request_verb": {
            "type": "string"
          },
          "example_request_body": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "age": {
                "type": "integer"
              },
              "hobby": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "s": {
                      "type": "string"
                    }
                  }
                }
              },
              "_optional_fields_": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "s": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "bank_id": {
            "type": "string"
          },
          "partial_function_name": {
            "type": "string"
          },
          "success_response_body": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "hobby": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "s": {
                      "type": "string"
                    }
                  }
                }
              },
              "my_user_id": {
                "type": "string"
              },
              "age": {
                "type": "integer"
              },
              "_optional_fields_": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "s": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "roles": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          },
          "request_url": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "method_body": {
            "type": "string"
          },
          "error_response_bodies": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "tags": {
            "type": "string"
          },
          "request_verb": {
            "type": "string"
          },
          "example_request_body": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "age": {
                "type": "integer"
              },
              "hobby": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "s": {
                      "type": "string"
                    }
                  }
                }
              },
              "_optional_fields_": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "s": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "bank_id": {
            "type": "string"
          },
          "partial_function_name": {
            "type": "string"
          },
          "success_response_body": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "hobby": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "s": {
                      "type": "string"
                    }
                  }
                }
              },
              "my_user_id": {
                "type": "string"
              },
              "age": {
                "type": "integer"
              },
              "_optional_fields_": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "s": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "roles": {
            "type": "string"
          },
          "dynamic_resource_doc_id": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          },
          "request_url": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "method_body": {
            "type": "string"
          },
          "error_response_bodies": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanUpdateBankLevelDynamicResourceDoc",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/banks/BANK_ID/dynamic-resource-docs/DYNAMIC-RESOURCE-DOC-ID",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv1.2.1-updateCounterpartyImageUrl",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "updateCounterpartyImageUrl"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/metadata/image_url",
      "summary": "Update Counterparty Image Url",
      "description": "<p>Update the url that points to the logo of the counterparty</p>\n<p>Authentication is Optional</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#other_account_id\">OTHER_ACCOUNT_ID</a>:</p>\n<p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#success\"><strong>success</strong></a>:</p>\n",
      "description_markdown": "Update the url that points to the logo of the counterparty\n\nAuthentication is Optional\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[OTHER_ACCOUNT_ID](/glossary#other_account_id): \n\n\n\n[VIEW_ID](/glossary#this_view_id): owner\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**success**](/glossary#success): \n\n\n",
      "example_request_body": {
        "image_URL": "String"
      },
      "success_response_body": {
        "success": "Success"
      },
      "error_response_bodies": [
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-10001: Incorrect json format.",
        "the view does not allow metadata access",
        "the view does not allow updating an image url",
        "URL cannot be updated",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Counterparty-Metadata", "Counterparty", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "image_URL": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "success": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/metadata/image_url",
      "connector_methods": [
        "obp.checkBankAccountExists",
        "obp.getBank",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv1.4.0-getBankLevelDynamicResourceDocsObp",
      "implemented_by": {
        "version": "OBPv1.4.0",
        "function": "getBankLevelDynamicResourceDocsObp"
      },
      "request_verb": "GET",
      "request_url": "/obp/v1.4.0/banks/BANK_ID/resource-docs/API_VERSION/obp",
      "summary": "Get Bank Level Dynamic Resource Docs",
      "description": "<p>Get documentation about the RESTful resources on this server including example bodies for POST and PUT requests.</p>\n<p>This is the native data format used to document OBP endpoints. Each endpoint has a Resource Doc (a Scala case class) defined in the source code.</p>\n<p>This endpoint is used by OBP API Explorer to display and work with the API documentation.</p>\n<p>Most (but not all) fields are also available in swagger format. (The Swagger endpoint is built from Resource Docs.)</p>\n<p>API_VERSION is the version you want documentation about e.g. v3.0.0</p>\n<p>You may filter this endpoint with tags parameter e.g. ?tags=Account,Bank</p>\n<p>You may filter this endpoint with functions parameter e.g. ?functions=enableDisableConsumers,getConnectorMetrics</p>\n<p>For possible function values, see implemented_by.function in the JSON returned by this endpoint or the OBP source code or the footer of the API Explorer which produces a comma separated list of functions that reflect the server or filtering by API Explorer based on tags etc.</p>\n<p>You may filter this endpoint using the 'content' url parameter, e.g. ?content=dynamic<br />\nif set content=dynamic, only show dynamic endpoints, if content=static, only show the static endpoints. if omit this parameter, we will show all the endpoints.</p>\n<p>You may need some other language resource docs, now we support i18n language tag , e.g. ?locale=zh_CN</p>\n<p>You can filter with api-collection-id, but api-collection-id can not be used with others together. If api-collection-id is used in URL, it will ignore all other parameters.</p>\n<p>You can easily pass the cache, use different value for cache-modifier, eg: ?cache-modifier= 123</p>\n<p>See the Resource Doc endpoint for more information.</p>\n<p>Following are more examples:<br />\n<a href=\"https://obp-apisandbox.joinfincubator.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp\">https://obp-apisandbox.joinfincubator.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp</a><br />\n<a href=\"https://obp-apisandbox.joinfincubator.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?tags=Account,Bank\">https://obp-apisandbox.joinfincubator.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?tags=Account,Bank</a><br />\n<a href=\"https://obp-apisandbox.joinfincubator.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?functions=getBanks,bankById\">https://obp-apisandbox.joinfincubator.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?functions=getBanks,bankById</a><br />\n<a href=\"https://obp-apisandbox.joinfincubator.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?locale=zh_CN\">https://obp-apisandbox.joinfincubator.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?locale=zh_CN</a><br />\n<a href=\"https://obp-apisandbox.joinfincubator.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?content=static,dynamic,all\">https://obp-apisandbox.joinfincubator.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?content=static,dynamic,all</a><br />\n<a href=\"https://obp-apisandbox.joinfincubator.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?api-collection-id=4e866c86-60c3-4268-a221-cb0bbf1ad221\">https://obp-apisandbox.joinfincubator.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?api-collection-id=4e866c86-60c3-4268-a221-cb0bbf1ad221</a><br />\n<a href=\"https://obp-apisandbox.joinfincubator.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?cache-modifier=3141592653\">https://obp-apisandbox.joinfincubator.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?cache-modifier=3141592653</a></p>\n<ul>\n<li> operation_id is concatenation of \"v\", version and function and should be unique (used for DOM element IDs etc. maybe used to link to source code) </li>\n<li> version references the version that the API call is defined in.</li>\n<li> function is the (scala) partial function that implements this endpoint. It is unique per version of the API.</li>\n<li> request_url is empty for the root call, else the path. It contains the standard prefix (e.g. /obp) and the implemented version (the version where this endpoint was defined) e.g. /obp/v1.2.0/resource</li>\n<li> specified_url (recommended to use) is empty for the root call, else the path. It contains the standard prefix (e.g. /obp) and the version specified in the call e.g. /obp/v3.1.0/resource. In OBP, endpoints are first made available at the request_url, but the same resource (function call) is often made available under later versions (specified_url). To access the latest version of all endpoints use the latest version available on your OBP instance e.g. /obp/v3.1.0 - To get the original version use the request_url. We recommend to use the specified_url since non semantic improvements are more likely to be applied to later implementations of the call.</li>\n<li> summary is a short description inline with the swagger terminology. </li>\n<li> description may contain html markup (generated from markdown on the server).</li>\n</ul>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#api_version\">API_VERSION</a>:</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>connector_methods</strong></a>: connector_methods</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#\"><strong>description_markdown</strong></a>: description_markdown</p>\n<p><a href=\"/glossary#\"><strong>error_response_bodies</strong></a>: OBP-50000: Unknown Error.,OBP-20001: User not logged in. Authentication is required!,OBP-20006: User is missing one or more roles: ,OBP-10001: Incorrect json format.</p>\n<p><a href=\"/glossary#\"><strong>example_request_body</strong></a>: {&quot;name&quot;: &quot;Jhon&quot;, &quot;age&quot;: 12, &quot;hobby&quot;: [&quot;coding&quot;],&quot;<em>optional_fields</em>&quot;: [&quot;hobby&quot;]}</p>\n<p><a href=\"/glossary#\"><strong>function</strong></a>: function</p>\n<p><a href=\"/glossary#\"><strong>implemented_by</strong></a>: implemented_by</p>\n<p><a href=\"/glossary#\"><strong>is_featured</strong></a>: false</p>\n<p><a href=\"/glossary#\"><strong>operation_id</strong></a>: OBPv4.0.0-getBanks</p>\n<p><a href=\"/glossary#\"><strong>request_url</strong></a>: /my_user/MY_USER_ID</p>\n<p><a href=\"/glossary#\"><strong>request_verb</strong></a>: POST</p>\n<p><a href=\"/glossary#\"><strong>resource_docs</strong></a>: resource_docs</p>\n<p><a href=\"/glossary#\"><strong>special_instructions</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>specified_url</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>success_response_body</strong></a>: {&quot;my_user_id&quot;: &quot;some_id_value&quot;, &quot;name&quot;: &quot;Jhon&quot;, &quot;age&quot;: 12, &quot;hobby&quot;: [&quot;coding&quot;],&quot;<em>optional_fields</em>&quot;: [&quot;hobby&quot;]}</p>\n<p><a href=\"/glossary#summary\"><strong>summary</strong></a>:</p>\n<p><a href=\"/glossary#tags\"><strong>tags</strong></a>: Create-My-User</p>\n<p><a href=\"/glossary#\"><strong>typed_request_body</strong></a>: typed_request_body</p>\n<p><a href=\"/glossary#\"><strong>typed_success_response_body</strong></a>: typed_success_response_body</p>\n<p><a href=\"/glossary#version\"><strong>version</strong></a>:</p>\n<p><a href=\"/glossary#\">created_by_bank_id</a>: created_by_bank_id</p>\n<p><a href=\"/glossary#meta\">meta</a>:</p>\n<p><a href=\"/glossary#roles\">roles</a>: CanCreateMyUser</p>\n",
      "description_markdown": "Get documentation about the RESTful resources on this server including example bodies for POST and PUT requests.\n\nThis is the native data format used to document OBP endpoints. Each endpoint has a Resource Doc (a Scala case class) defined in the source code.\n\n This endpoint is used by OBP API Explorer to display and work with the API documentation.\n\n Most (but not all) fields are also available in swagger format. (The Swagger endpoint is built from Resource Docs.)\n\n API_VERSION is the version you want documentation about e.g. v3.0.0\n\n You may filter this endpoint with tags parameter e.g. ?tags=Account,Bank\n\n You may filter this endpoint with functions parameter e.g. ?functions=enableDisableConsumers,getConnectorMetrics\n\n For possible function values, see implemented_by.function in the JSON returned by this endpoint or the OBP source code or the footer of the API Explorer which produces a comma separated list of functions that reflect the server or filtering by API Explorer based on tags etc.\n\n You may filter this endpoint using the 'content' url parameter, e.g. ?content=dynamic\n if set content=dynamic, only show dynamic endpoints, if content=static, only show the static endpoints. if omit this parameter, we will show all the endpoints.\n\n You may need some other language resource docs, now we support i18n language tag , e.g. ?locale=zh_CN\n \n You can filter with api-collection-id, but api-collection-id can not be used with others together. If api-collection-id is used in URL, it will ignore all other parameters. \n\n You can easily pass the cache, use different value for cache-modifier, eg: ?cache-modifier= 123\n\nSee the Resource Doc endpoint for more information.\n\nFollowing are more examples:\nhttps://obp-apisandbox.joinfincubator.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp\nhttps://obp-apisandbox.joinfincubator.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?tags=Account,Bank\nhttps://obp-apisandbox.joinfincubator.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?functions=getBanks,bankById\nhttps://obp-apisandbox.joinfincubator.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?locale=zh_CN\nhttps://obp-apisandbox.joinfincubator.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?content=static,dynamic,all\nhttps://obp-apisandbox.joinfincubator.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?api-collection-id=4e866c86-60c3-4268-a221-cb0bbf1ad221\nhttps://obp-apisandbox.joinfincubator.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?cache-modifier=3141592653\n\n<ul>\n<li> operation_id is concatenation of \"v\", version and function and should be unique (used for DOM element IDs etc. maybe used to link to source code) </li>\n<li> version references the version that the API call is defined in.</li>\n<li> function is the (scala) partial function that implements this endpoint. It is unique per version of the API.</li>\n<li> request_url is empty for the root call, else the path. It contains the standard prefix (e.g. /obp) and the implemented version (the version where this endpoint was defined) e.g. /obp/v1.2.0/resource</li>\n<li> specified_url (recommended to use) is empty for the root call, else the path. It contains the standard prefix (e.g. /obp) and the version specified in the call e.g. /obp/v3.1.0/resource. In OBP, endpoints are first made available at the request_url, but the same resource (function call) is often made available under later versions (specified_url). To access the latest version of all endpoints use the latest version available on your OBP instance e.g. /obp/v3.1.0 - To get the original version use the request_url. We recommend to use the specified_url since non semantic improvements are more likely to be applied to later implementations of the call.</li>\n<li> summary is a short description inline with the swagger terminology. </li>\n<li> description may contain html markup (generated from markdown on the server).</li>\n</ul>\n      \n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[API_VERSION](/glossary#api_version): \n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**connector_methods**](/glossary#): connector_methods\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**description_markdown**](/glossary#): description_markdown\n\n\n\n[**error_response_bodies**](/glossary#): OBP-50000: Unknown Error.,OBP-20001: User not logged in. Authentication is required!,OBP-20006: User is missing one or more roles: ,OBP-10001: Incorrect json format.\n\n\n\n[**example_request_body**](/glossary#): {\"name\": \"Jhon\", \"age\": 12, \"hobby\": [\"coding\"],\"_optional_fields_\": [\"hobby\"]}\n\n\n\n[**function**](/glossary#): function\n\n\n\n[**implemented_by**](/glossary#): implemented_by\n\n\n\n[**is_featured**](/glossary#): false\n\n\n\n[**operation_id**](/glossary#): OBPv4.0.0-getBanks\n\n\n\n[**request_url**](/glossary#): /my_user/MY_USER_ID\n\n\n\n[**request_verb**](/glossary#): POST\n\n\n\n[**resource_docs**](/glossary#): resource_docs\n\n\n\n[**special_instructions**](/glossary#): \n\n\n\n[**specified_url**](/glossary#): \n\n\n\n[**success_response_body**](/glossary#): {\"my_user_id\": \"some_id_value\", \"name\": \"Jhon\", \"age\": 12, \"hobby\": [\"coding\"],\"_optional_fields_\": [\"hobby\"]}\n\n\n\n[**summary**](/glossary#summary): \n\n\n\n[**tags**](/glossary#tags): Create-My-User\n\n\n\n[**typed_request_body**](/glossary#): typed_request_body\n\n\n\n[**typed_success_response_body**](/glossary#): typed_success_response_body\n\n\n\n[**version**](/glossary#version): \n\n\n\n[created_by_bank_id](/glossary#): created_by_bank_id\n\n\n\n[meta](/glossary#meta): \n\n\n\n[roles](/glossary#roles): CanCreateMyUser\n\n\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "resource_docs": [
          {
            "operation_id": "OBPv1.4.0-testResourceDoc",
            "implemented_by": {
              "version": "OBPv1.4.0",
              "function": "testResourceDoc"
            },
            "request_verb": "GET",
            "request_url": "/dummy",
            "summary": "Test Resource Doc",
            "description": "<p>I am only a test Resource Doc</p>\n<p>Authentication is Optional</p>\n<p><strong>JSON response body fields:</strong></p>\n",
            "description_markdown": "I am only a test Resource Doc\n\nAuthentication is Optional\n\n\n**JSON response body fields:**\n\n\n",
            "example_request_body": {
              "jsonString": "{}"
            },
            "success_response_body": {
              "jsonString": "{}"
            },
            "error_response_bodies": ["OBP-50000: Unknown Error."],
            "tags": ["Documentation"],
            "typed_request_body": {
              "type": "object",
              "properties": {
                "jsonString": {
                  "type": "string"
                }
              }
            },
            "typed_success_response_body": {
              "type": "object",
              "properties": {
                "jsonString": {
                  "type": "string"
                }
              }
            },
            "is_featured": false,
            "special_instructions": "",
            "specified_url": "",
            "connector_methods": []
          }
        ]
      },
      "error_response_bodies": [
        "OBP-50000: Unknown Error.",
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["Documentation", "API"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "resource_docs": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "summary": {
                  "type": "string"
                },
                "tags": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "request_url": {
                  "type": "string"
                },
                "specified_url": {
                  "type": "string"
                },
                "implemented_by": {
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "function": {
                      "type": "string"
                    }
                  }
                },
                "operation_id": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "is_featured": {
                  "type": "boolean"
                },
                "description_markdown": {
                  "type": "string"
                },
                "typed_request_body": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "properties": {
                      "type": "object",
                      "properties": {
                        "jsonString": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "success_response_body": {
                  "type": "object",
                  "properties": {
                    "jsonString": {
                      "type": "string"
                    }
                  }
                },
                "request_verb": {
                  "type": "string"
                },
                "error_response_bodies": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "connector_methods": {
                  "type": "object",
                  "properties": {}
                },
                "typed_success_response_body": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "properties": {
                      "type": "object",
                      "properties": {
                        "jsonString": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "special_instructions": {
                  "type": "string"
                },
                "example_request_body": {
                  "type": "object",
                  "properties": {
                    "jsonString": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanReadDynamicResourceDocsAtOneBank",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/resource-docs/API_VERSION/obp",
      "connector_methods": ["obp.getBank", "obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv3.1.0-updateAccountApplicationStatus",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "updateAccountApplicationStatus"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/account-applications/ACCOUNT_APPLICATION_ID",
      "summary": "Update Account Application Status",
      "description": "<p>Update an Account Application status</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#account_application_id\">ACCOUNT_APPLICATION_ID</a>:</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#account_application_id\"><strong>account_application_id</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#\"><strong>branch_id</strong></a>: DERBY6</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#Customer\"><strong>customer</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>customer_number</strong></a>: 5987953</p>\n<p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#date_of_application\"><strong>date_of_application</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#\"><strong>date_of_birth</strong></a>: 2018-03-09</p>\n<p><a href=\"/glossary#\"><strong>dependants</strong></a>: 1</p>\n<p><a href=\"/glossary#dob_of_dependants\"><strong>dob_of_dependants</strong></a>: [2019-09-08, 2017-07-12]</p>\n<p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"m&#x61;&#105;l&#x74;&#111;&#x3a;f&#101;&#108;&#105;&#120;&#x73;m&#x69;&#x74;&#x68;@&#x65;x&#97;&#x6d;&#112;&#108;&#101;&#46;&#x63;&#111;&#109;\">&#102;&#101;&#x6c;&#x69;&#x78;&#115;&#x6d;&#105;&#x74;&#x68;&#x40;exa&#x6d;&#112;&#x6c;&#x65;&#x2e;c&#111;m</a></p>\n<p><a href=\"/glossary#\"><strong>employment_status</strong></a>: worker</p>\n<p><a href=\"/glossary#face_image\"><strong>face_image</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>highest_education_attained</strong></a>: Master</p>\n<p><a href=\"/glossary#\"><strong>kyc_status</strong></a>: true</p>\n<p><a href=\"/glossary#last_ok_date\"><strong>last_ok_date</strong></a>: 2022-04-13T04:30:07.985Z</p>\n<p><a href=\"/glossary#\"><strong>legal_name</strong></a>: Eveline Tripman</p>\n<p><a href=\"/glossary#mobile_phone_number\"><strong>mobile_phone_number</strong></a>: +49 30 901820</p>\n<p><a href=\"/glossary#\"><strong>name_suffix</strong></a>: Sr</p>\n<p><a href=\"/glossary#product_code\"><strong>product_code</strong></a>: 1234BW</p>\n<p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p>\n<p><a href=\"/glossary#provider_id\"><strong>provider_id</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>rating</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>relationship_status</strong></a>: single</p>\n<p><a href=\"/glossary#\"><strong>source</strong></a>:</p>\n<p><a href=\"/glossary#status\"><strong>status</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>title</strong></a>: Dr.</p>\n<p><a href=\"/glossary#\"><strong>url</strong></a>: <a href=\"http://www.example.com/id-docs/123/image.png\">http://www.example.com/id-docs/123/image.png</a></p>\n<p><a href=\"/glossary#User\"><strong>user</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p>\n<p><a href=\"/glossary#\"><strong>username</strong></a>: felixsmith</p>\n<p><a href=\"/glossary#credit_limit\">credit_limit</a>:</p>\n<p><a href=\"/glossary#credit_rating\">credit_rating</a>:</p>\n",
      "description_markdown": "Update an Account Application status\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ACCOUNT_APPLICATION_ID](/glossary#account_application_id): \n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**account_application_id**](/glossary#account_application_id): \n\n\n\n[**amount**](/glossary#): 10.12\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**branch_id**](/glossary#): DERBY6\n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**customer**](/glossary#Customer): \n\n\n\n[**customer_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**customer_number**](/glossary#): 5987953\n\n\n\n[**date**](/glossary#): 2020-01-27\n\n\n\n[**date_of_application**](/glossary#date_of_application): 2020-01-27\n\n\n\n[**date_of_birth**](/glossary#): 2018-03-09\n\n\n\n[**dependants**](/glossary#): 1\n\n\n\n[**dob_of_dependants**](/glossary#dob_of_dependants): [2019-09-08, 2017-07-12]\n\n\n\n[**email**](/glossary#): felixsmith@example.com\n\n\n\n[**employment_status**](/glossary#): worker\n\n\n\n[**face_image**](/glossary#face_image): \n\n\n\n[**highest_education_attained**](/glossary#): Master\n\n\n\n[**kyc_status**](/glossary#): true\n\n\n\n[**last_ok_date**](/glossary#last_ok_date): 2022-04-13T04:30:07.985Z\n\n\n\n[**legal_name**](/glossary#): Eveline Tripman\n\n\n\n[**mobile_phone_number**](/glossary#mobile_phone_number): +49 30 901820\n\n\n\n[**name_suffix**](/glossary#): Sr\n\n\n\n[**product_code**](/glossary#product_code): 1234BW\n\n\n\n[**provider**](/glossary#provider): ETHEREUM\n\n\n\n[**provider_id**](/glossary#provider_id): \n\n\n\n[**rating**](/glossary#): \n\n\n\n[**relationship_status**](/glossary#): single\n\n\n\n[**source**](/glossary#): \n\n\n\n[**status**](/glossary#status): \n\n\n\n[**title**](/glossary#): Dr.\n\n\n\n[**url**](/glossary#): http://www.example.com/id-docs/123/image.png\n\n\n\n[**user**](/glossary#User): \n\n\n\n[**user_id**](/glossary#): 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\n\n\n\n[**username**](/glossary#): felixsmith\n\n\n\n[credit_limit](/glossary#credit_limit): \n\n\n\n[credit_rating](/glossary#credit_rating): \n\n\n",
      "example_request_body": {
        "status": "ACCEPTED"
      },
      "success_response_body": {
        "account_application_id": "gc23a7e2-7dd2-4bdf-a0b4-ae31232a4763",
        "product_code": "1234BW",
        "user": {
          "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
          "email": "felixsmith@example.com",
          "provider_id": "Chris",
          "provider": "http://127.0.0.1:8080",
          "username": "felixsmith"
        },
        "customer": {
          "bank_id": "gh.29.uk",
          "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
          "customer_number": "5987953",
          "legal_name": "Eveline Tripman",
          "mobile_phone_number": "+44 07972 444 876",
          "email": "felixsmith@example.com",
          "face_image": {
            "url": "www.openbankproject",
            "date": "1100-01-01T00:00:00Z"
          },
          "date_of_birth": "1100-01-01T00:00:00Z",
          "relationship_status": "single",
          "dependants": 1,
          "dob_of_dependants": ["1100-01-01T00:00:00Z"],
          "credit_rating": {
            "rating": "OBP",
            "source": "OBP"
          },
          "credit_limit": {
            "currency": "EUR",
            "amount": "0"
          },
          "highest_education_attained": "Master",
          "employment_status": "worker",
          "kyc_status": true,
          "last_ok_date": "2022-04-13T04:30:08Z",
          "title": "Dr.",
          "branch_id": "DERBY6",
          "name_suffix": "Sr"
        },
        "date_of_application": "1100-01-01T00:00:00Z",
        "status": "REQUESTED"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Account-Application", "Account", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "provider": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "provider_id": {
                "type": "string"
              },
              "username": {
                "type": "string"
              },
              "user_id": {
                "type": "string"
              }
            }
          },
          "product_code": {
            "type": "string"
          },
          "customer": {
            "type": "object",
            "properties": {
              "dependants": {
                "type": "integer"
              },
              "dob_of_dependants": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "face_image": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string"
                  },
                  "date": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              },
              "credit_limit": {
                "type": "object",
                "properties": {
                  "currency": {
                    "type": "string"
                  },
                  "amount": {
                    "type": "string"
                  }
                }
              },
              "employment_status": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "customer_id": {
                "type": "string"
              },
              "relationship_status": {
                "type": "string"
              },
              "bank_id": {
                "type": "string"
              },
              "highest_education_attained": {
                "type": "string"
              },
              "customer_number": {
                "type": "string"
              },
              "credit_rating": {
                "type": "object",
                "properties": {
                  "rating": {
                    "type": "string"
                  },
                  "source": {
                    "type": "string"
                  }
                }
              },
              "name_suffix": {
                "type": "string"
              },
              "last_ok_date": {
                "type": "string",
                "format": "date-time"
              },
              "legal_name": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "branch_id": {
                "type": "string"
              },
              "date_of_birth": {
                "type": "string",
                "format": "date-time"
              },
              "mobile_phone_number": {
                "type": "string"
              },
              "kyc_status": {
                "type": "boolean"
              }
            }
          },
          "status": {
            "type": "string"
          },
          "date_of_application": {
            "type": "string",
            "format": "date-time"
          },
          "account_application_id": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/account-applications/ACCOUNT_APPLICATION_ID",
      "connector_methods": [
        "obp.getCustomerByCustomerId",
        "obp.getBankAccountsForUser",
        "obp.createBankAccount",
        "obp.updateAccountApplicationStatus",
        "obp.getAccountApplicationById",
        "obp.getBank"
      ]
    },
    {
      "operation_id": "OBPv3.1.0-getCheckbookOrders",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "getCheckbookOrders"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/checkbook/orders",
      "summary": "Get Checkbook orders",
      "description": "<p>Get all checkbook orders</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#Account\"><strong>account</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>account_id</strong></a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#account_routings\"><strong>account_routings</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>account_type</strong></a>: AC</p>\n<p><a href=\"/glossary#address\"><strong>address</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#branch_routings\"><strong>branch_routings</strong></a>:</p>\n<p><a href=\"/glossary#distribution_channel\"><strong>distribution_channel</strong></a>:</p>\n<p><a href=\"/glossary#first_check_number\"><strong>first_check_number</strong></a>:</p>\n<p><a href=\"/glossary#number_of_checkbooks\"><strong>number_of_checkbooks</strong></a>:</p>\n<p><a href=\"/glossary#order\"><strong>order</strong></a>:</p>\n<p><a href=\"/glossary#order_date\"><strong>order_date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#order_id\"><strong>order_id</strong></a>:</p>\n<p><a href=\"/glossary#orders\"><strong>orders</strong></a>:</p>\n<p><a href=\"/glossary#scheme\"><strong>scheme</strong></a>: scheme value</p>\n<p><a href=\"/glossary#shipping_code\"><strong>shipping_code</strong></a>:</p>\n<p><a href=\"/glossary#status\"><strong>status</strong></a>:</p>\n",
      "description_markdown": "Get all checkbook orders\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[VIEW_ID](/glossary#this_view_id): owner\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**account**](/glossary#Account): \n\n\n\n[**account_id**](/glossary#): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[**account_routings**](/glossary#account_routings): \n\n\n\n[**account_type**](/glossary#): AC\n\n\n\n[**address**](/glossary#address): \n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**branch_routings**](/glossary#branch_routings): \n\n\n\n[**distribution_channel**](/glossary#distribution_channel): \n\n\n\n[**first_check_number**](/glossary#first_check_number): \n\n\n\n[**number_of_checkbooks**](/glossary#number_of_checkbooks): \n\n\n\n[**order**](/glossary#order): \n\n\n\n[**order_date**](/glossary#order_date): 2020-01-27\n\n\n\n[**order_id**](/glossary#order_id): \n\n\n\n[**orders**](/glossary#orders): \n\n\n\n[**scheme**](/glossary#scheme): scheme value\n\n\n\n[**shipping_code**](/glossary#shipping_code): \n\n\n\n[**status**](/glossary#status): \n\n\n",
      "success_response_body": {
        "account": {
          "bank_id": "gh.29.uk",
          "account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0",
          "account_type": "330",
          "account_routings": [
            {
              "scheme": "AccountNumber",
              "address": "4930396"
            }
          ],
          "branch_routings": [
            {
              "scheme": "BranchNumber",
              "address": "678"
            }
          ]
        },
        "orders": [
          {
            "order": {
              "order_id": "xjksajfkj",
              "order_date": "07082013",
              "number_of_checkbooks": "4",
              "distribution_channel": "1201",
              "status": "2",
              "first_check_number": "5165276",
              "shipping_code": "1"
            }
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-50211: Connector did not return the set of check book.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Account", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "account": {
            "type": "object",
            "properties": {
              "account_type": {
                "type": "string"
              },
              "bank_id": {
                "type": "string"
              },
              "branch_routings": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "address": {
                      "type": "string"
                    },
                    "scheme": {
                      "type": "string"
                    }
                  }
                }
              },
              "account_routings": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "scheme": {
                      "type": "string"
                    },
                    "address": {
                      "type": "string"
                    }
                  }
                }
              },
              "account_id": {
                "type": "string"
              }
            }
          },
          "orders": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "order": {
                  "type": "object",
                  "properties": {
                    "shipping_code": {
                      "type": "string"
                    },
                    "number_of_checkbooks": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "order_id": {
                      "type": "string"
                    },
                    "distribution_channel": {
                      "type": "string"
                    },
                    "first_check_number": {
                      "type": "string"
                    },
                    "order_date": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/checkbook/orders",
      "connector_methods": [
        "obp.getCheckbookOrders",
        "obp.checkBankAccountExists",
        "obp.getBank",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv1.2.1-addCounterpartyPhysicalLocation",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "addCounterpartyPhysicalLocation"
      },
      "request_verb": "POST",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/metadata/physical_location",
      "summary": "Add physical location to other bank account",
      "description": "<p>Add geocoordinates of the counterparty's main location</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#other_account_id\">OTHER_ACCOUNT_ID</a>:</p>\n<p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#latitude\"><strong>latitude</strong></a>: 38.8951</p>\n<p><a href=\"/glossary#longitude\"><strong>longitude</strong></a>: -77.0364</p>\n<p><a href=\"/glossary#physical_location\"><strong>physical_location</strong></a>:</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#success\"><strong>success</strong></a>:</p>\n",
      "description_markdown": "Add geocoordinates of the counterparty's main location\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[OTHER_ACCOUNT_ID](/glossary#other_account_id): \n\n\n\n[VIEW_ID](/glossary#this_view_id): owner\n\n\n\n\n\n**JSON request body fields:**\n\n\n\n[**latitude**](/glossary#latitude): 38.8951\n\n\n\n[**longitude**](/glossary#longitude): -77.0364\n\n\n\n[**physical_location**](/glossary#physical_location): \n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**success**](/glossary#success): \n\n\n",
      "example_request_body": {
        "physical_location": {
          "latitude": 1.532,
          "longitude": 1.535
        }
      },
      "success_response_body": {
        "success": "Success"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-10001: Incorrect json format.",
        "the view does not allow metadata access",
        "the view does not allow adding a physical location",
        "Coordinates not possible",
        "Physical Location cannot be added",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Counterparty-Metadata", "Counterparty"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "physical_location": {
            "type": "object",
            "properties": {
              "longitude": {
                "type": "number"
              },
              "latitude": {
                "type": "number"
              }
            }
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "success": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/metadata/physical_location",
      "connector_methods": [
        "obp.getCounterpartyByCounterpartyIdLegacy",
        "obp.getCounterpartyFromTransaction",
        "obp.getBankAccountOld"
      ]
    },
    {
      "operation_id": "OBPv3.1.0-getCreditLimitRequests",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "getCreditLimitRequests"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/customers/CUSTOMER_ID/credit_limit/requests",
      "summary": "Get Credit Limit Order Requests ",
      "description": "<p><strong>NOTE: This endpoint currently only returns example data.</strong></p>\n<p>Get Credit Limit Order Requests</p>\n<p>Authentication is Optional</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#Customer.customer_id\">CUSTOMER_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>nominal_interest_1</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>nominal_interest_2</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>rank_amount_1</strong></a>: 100</p>\n<p><a href=\"/glossary#\"><strong>rank_amount_2</strong></a>:</p>\n",
      "description_markdown": "**NOTE: This endpoint currently only returns example data.**\n\n      \nGet Credit Limit Order Requests \n\n\nAuthentication is Optional\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[CUSTOMER_ID](/glossary#Customer.customer_id): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**nominal_interest_1**](/glossary#): \n\n\n\n[**nominal_interest_2**](/glossary#): \n\n\n\n[**rank_amount_1**](/glossary#): 100\n\n\n\n[**rank_amount_2**](/glossary#): \n\n\n",
      "success_response_body": {
        "rank_amount_1": "String",
        "nominal_interest_1": "String",
        "rank_amount_2": "String",
        "nominal_interest_2": "String"
      },
      "error_response_bodies": ["OBP-50000: Unknown Error."],
      "tags": ["Customer", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "nominal_interest_1": {
            "type": "string"
          },
          "rank_amount_1": {
            "type": "string"
          },
          "rank_amount_2": {
            "type": "string"
          },
          "nominal_interest_2": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/customers/CUSTOMER_ID/credit_limit/requests",
      "connector_methods": ["obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv4.0.0-getCustomersAtAnyBank",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getCustomersAtAnyBank"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/customers",
      "summary": "Get Customers at Any Bank",
      "description": "<p>Get Customers at Any Bank.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#\"><strong>branch_id</strong></a>: DERBY6</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>customer_number</strong></a>: 5987953</p>\n<p><a href=\"/glossary#customers\"><strong>customers</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#\"><strong>date_of_birth</strong></a>: 2018-03-09</p>\n<p><a href=\"/glossary#\"><strong>dependants</strong></a>: 1</p>\n<p><a href=\"/glossary#dob_of_dependants\"><strong>dob_of_dependants</strong></a>: [2019-09-08, 2017-07-12]</p>\n<p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"&#x6d;&#97;&#x69;&#108;t&#x6f;&#58;&#x66;e&#108;&#x69;&#120;&#x73;m&#105;t&#104;&#64;&#101;&#x78;&#97;&#109;&#112;&#108;&#x65;&#x2e;&#99;&#111;&#x6d;\">&#102;&#x65;&#x6c;&#105;&#x78;&#x73;&#109;&#105;&#x74;&#104;&#x40;&#101;&#x78;a&#x6d;&#112;&#x6c;&#x65;&#46;&#99;&#111;&#x6d;</a></p>\n<p><a href=\"/glossary#\"><strong>employment_status</strong></a>: worker</p>\n<p><a href=\"/glossary#face_image\"><strong>face_image</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>highest_education_attained</strong></a>: Master</p>\n<p><a href=\"/glossary#\"><strong>kyc_status</strong></a>: true</p>\n<p><a href=\"/glossary#last_ok_date\"><strong>last_ok_date</strong></a>: 2022-04-13T04:30:07.985Z</p>\n<p><a href=\"/glossary#\"><strong>legal_name</strong></a>: Eveline Tripman</p>\n<p><a href=\"/glossary#mobile_phone_number\"><strong>mobile_phone_number</strong></a>: +49 30 901820</p>\n<p><a href=\"/glossary#\"><strong>name_suffix</strong></a>: Sr</p>\n<p><a href=\"/glossary#\"><strong>rating</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>relationship_status</strong></a>: single</p>\n<p><a href=\"/glossary#\"><strong>source</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>title</strong></a>: Dr.</p>\n<p><a href=\"/glossary#\"><strong>url</strong></a>: <a href=\"http://www.example.com/id-docs/123/image.png\">http://www.example.com/id-docs/123/image.png</a></p>\n<p><a href=\"/glossary#credit_limit\">credit_limit</a>:</p>\n<p><a href=\"/glossary#credit_rating\">credit_rating</a>:</p>\n",
      "description_markdown": "Get Customers at Any Bank.\n\n\nAuthentication is Mandatory\n\n\n**JSON response body fields:**\n\n\n\n[**amount**](/glossary#): 10.12\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**branch_id**](/glossary#): DERBY6\n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**customer_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**customer_number**](/glossary#): 5987953\n\n\n\n[**customers**](/glossary#customers): \n\n\n\n[**date**](/glossary#): 2020-01-27\n\n\n\n[**date_of_birth**](/glossary#): 2018-03-09\n\n\n\n[**dependants**](/glossary#): 1\n\n\n\n[**dob_of_dependants**](/glossary#dob_of_dependants): [2019-09-08, 2017-07-12]\n\n\n\n[**email**](/glossary#): felixsmith@example.com\n\n\n\n[**employment_status**](/glossary#): worker\n\n\n\n[**face_image**](/glossary#face_image): \n\n\n\n[**highest_education_attained**](/glossary#): Master\n\n\n\n[**kyc_status**](/glossary#): true\n\n\n\n[**last_ok_date**](/glossary#last_ok_date): 2022-04-13T04:30:07.985Z\n\n\n\n[**legal_name**](/glossary#): Eveline Tripman\n\n\n\n[**mobile_phone_number**](/glossary#mobile_phone_number): +49 30 901820\n\n\n\n[**name_suffix**](/glossary#): Sr\n\n\n\n[**rating**](/glossary#): \n\n\n\n[**relationship_status**](/glossary#): single\n\n\n\n[**source**](/glossary#): \n\n\n\n[**title**](/glossary#): Dr.\n\n\n\n[**url**](/glossary#): http://www.example.com/id-docs/123/image.png\n\n\n\n[credit_limit](/glossary#credit_limit): \n\n\n\n[credit_rating](/glossary#credit_rating): \n\n\n",
      "success_response_body": {
        "customers": [
          {
            "bank_id": "gh.29.uk",
            "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
            "customer_number": "5987953",
            "legal_name": "Eveline Tripman",
            "mobile_phone_number": "+44 07972 444 876",
            "email": "felixsmith@example.com",
            "face_image": {
              "url": "www.openbankproject",
              "date": "1100-01-01T00:00:00Z"
            },
            "date_of_birth": "19900101",
            "relationship_status": "single",
            "dependants": 1,
            "dob_of_dependants": ["19900101"],
            "credit_rating": {
              "rating": "OBP",
              "source": "OBP"
            },
            "credit_limit": {
              "currency": "EUR",
              "amount": "0"
            },
            "highest_education_attained": "Master",
            "employment_status": "worker",
            "kyc_status": true,
            "last_ok_date": "2022-04-13T04:30:08Z",
            "title": "Dr.",
            "branch_id": "DERBY6",
            "name_suffix": "Sr"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30008: User Customer Link not found by USER_ID",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["Customer", "User", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "customers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "dependants": {
                  "type": "integer"
                },
                "face_image": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "type": "string"
                    },
                    "date": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                },
                "credit_limit": {
                  "type": "object",
                  "properties": {
                    "currency": {
                      "type": "string"
                    },
                    "amount": {
                      "type": "string"
                    }
                  }
                },
                "employment_status": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "customer_id": {
                  "type": "string"
                },
                "relationship_status": {
                  "type": "string"
                },
                "bank_id": {
                  "type": "string"
                },
                "highest_education_attained": {
                  "type": "string"
                },
                "customer_number": {
                  "type": "string"
                },
                "credit_rating": {
                  "type": "object",
                  "properties": {
                    "rating": {
                      "type": "string"
                    },
                    "source": {
                      "type": "string"
                    }
                  }
                },
                "name_suffix": {
                  "type": "string"
                },
                "last_ok_date": {
                  "type": "string",
                  "format": "date-time"
                },
                "date_of_birth": {
                  "type": "string"
                },
                "legal_name": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "dob_of_dependants": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "branch_id": {
                  "type": "string"
                },
                "mobile_phone_number": {
                  "type": "string"
                },
                "kyc_status": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetCustomersAtAnyBank",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/customers",
      "connector_methods": ["obp.getCustomersAtAllBanks"]
    },
    {
      "operation_id": "OBPv4.0.0-getBankLevelDynamicEntities",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getBankLevelDynamicEntities"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/management/banks/BANK_ID/dynamic-entities",
      "summary": "Get Bank Level Dynamic Entities",
      "description": "<p>Get all the bank level Dynamic Entities for one bank.</p>\n<p>Authentication is Mandatory</p>\n",
      "description_markdown": "Get all the bank level Dynamic Entities for one bank.\n\nAuthentication is Mandatory",
      "success_response_body": {
        "dynamic_entities": [
          {
            "bankId": "gh.29.uk",
            "FooBar": {
              "description": "description of this entity, can be markdown text.",
              "required": ["name"],
              "properties": {
                "name": {
                  "type": "string",
                  "minLength": 3,
                  "maxLength": 20,
                  "example": "James Brown",
                  "description": "description of **name** field, can be markdown text."
                },
                "number": {
                  "type": "integer",
                  "example": 698761728,
                  "description": "description of **number** field, can be markdown text."
                }
              }
            },
            "dynamicEntityId": "dynamic-entity-id",
            "userId": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
            "hasPersonalEntity": true
          }
        ]
      },
      "error_response_bodies": [
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Dynamic-Entity-Manage", "API", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "dynamic_entities": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "dynamicEntityId": {
                  "type": "string"
                },
                "bankId": {
                  "type": "string"
                },
                "hasPersonalEntity": {
                  "type": "boolean"
                },
                "userId": {
                  "type": "string"
                },
                "FooBar": {
                  "type": "object",
                  "properties": {
                    "required": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "description": {
                      "type": "string"
                    },
                    "properties": {
                      "type": "object",
                      "properties": {
                        "number": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": ["number", "integer", "boolean", "string", "DATE_WITH_DAY"]
                            },
                            "example": {
                              "type": "integer"
                            },
                            "description": {
                              "type": "string"
                            }
                          }
                        },
                        "name": {
                          "type": "object",
                          "properties": {
                            "minLength": {
                              "type": "integer"
                            },
                            "type": {
                              "type": "string",
                              "enum": ["number", "integer", "boolean", "string", "DATE_WITH_DAY"]
                            },
                            "maxLength": {
                              "type": "integer"
                            },
                            "example": {
                              "type": "string"
                            },
                            "description": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetBankLevelDynamicEntities",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/banks/BANK_ID/dynamic-entities",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv4.0.0-getProductFees",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getProductFees"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/products/PRODUCT_CODE/fees",
      "summary": "Get Product Fees",
      "description": "<p>Get Product Fees</p>\n<p>Authentication is Optional</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#product_code\">PRODUCT_CODE</a>: 1234BW</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#frequency\"><strong>frequency</strong></a>: DAILY</p>\n<p><a href=\"/glossary#is_active\"><strong>is_active</strong></a>: true</p>\n<p><a href=\"/glossary#more_info\"><strong>more_info</strong></a>: More information about this fee</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#product_code\"><strong>product_code</strong></a>: 1234BW</p>\n<p><a href=\"/glossary#product_fee_id\"><strong>product_fee_id</strong></a>: 696hlAHLFKUHE37469287634</p>\n<p><a href=\"/glossary#\"><strong>product_fees</strong></a>: product_fees</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n",
      "description_markdown": "Get Product Fees\n\nAuthentication is Optional\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[PRODUCT_CODE](/glossary#product_code): 1234BW\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**amount**](/glossary#): 10.12\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**frequency**](/glossary#frequency): DAILY\n\n\n\n[**is_active**](/glossary#is_active): true\n\n\n\n[**more_info**](/glossary#more_info): More information about this fee\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**product_code**](/glossary#product_code): 1234BW\n\n\n\n[**product_fee_id**](/glossary#product_fee_id): 696hlAHLFKUHE37469287634\n\n\n\n[**product_fees**](/glossary#): product_fees\n\n\n\n[**type**](/glossary#type): \n\n\n\n[**value**](/glossary#): 5987953\n\n\n",
      "success_response_body": {
        "product_fees": [
          {
            "bank_id": "gh.29.uk",
            "product_code": "1234BW",
            "product_fee_id": "696hlAHLFKUHE37469287634",
            "name": "ACCOUNT_MANAGEMENT_FEE",
            "is_active": true,
            "more_info": "More information about this fee",
            "value": {
              "currency": "EUR",
              "amount": "10.12",
              "frequency": "DAILY",
              "type": ""
            }
          }
        ]
      },
      "error_response_bodies": [
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Product", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "product_fees": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "product_code": {
                  "type": "string"
                },
                "is_active": {
                  "type": "boolean"
                },
                "bank_id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "more_info": {
                  "type": "string"
                },
                "value": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "currency": {
                      "type": "string"
                    },
                    "frequency": {
                      "type": "string"
                    },
                    "amount": {
                      "type": "number"
                    }
                  }
                },
                "product_fee_id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/products/PRODUCT_CODE/fees",
      "connector_methods": ["obp.getProductFeesFromProvider", "obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv4.0.0-getTagsForViewOnAccount",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getTagsForViewOnAccount"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/metadata/tags",
      "summary": "Get tags on account",
      "description": "<p>Returns the account ACCOUNT_ID tags made on a <a href=\"#1_2_1-getViewsForBankAccount\">view</a> (VIEW_ID).<br />\nAuthentication is Mandatory</p>\n<p>Authentication is required as the tag is linked with the user.</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#display_name\"><strong>display_name</strong></a>:</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p>\n<p><a href=\"/glossary#tags\"><strong>tags</strong></a>: Create-My-User</p>\n<p><a href=\"/glossary#User\"><strong>user</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n",
      "description_markdown": "Returns the account ACCOUNT_ID tags made on a [view](#1_2_1-getViewsForBankAccount) (VIEW_ID).\nAuthentication is Mandatory\n\nAuthentication is required as the tag is linked with the user.\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[VIEW_ID](/glossary#this_view_id): owner\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**date**](/glossary#): 2020-01-27\n\n\n\n[**display_name**](/glossary#display_name): \n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**provider**](/glossary#provider): ETHEREUM\n\n\n\n[**tags**](/glossary#tags): Create-My-User\n\n\n\n[**user**](/glossary#User): \n\n\n\n[**value**](/glossary#): 5987953\n\n\n",
      "success_response_body": {
        "tags": [
          {
            "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
            "value": "OBP",
            "date": "1100-01-01T00:00:00Z",
            "user": {
              "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
              "provider": "http://127.0.0.1:8080",
              "display_name": "OBP"
            }
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-30022: The current view does not have the permission:",
        "OBP-20017: Current user does not have access to the view. Please specify a valid value for VIEW_ID.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Account-Metadata", "Account", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "tags": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                },
                "date": {
                  "type": "string",
                  "format": "date-time"
                },
                "user": {
                  "type": "object",
                  "properties": {
                    "provider": {
                      "type": "string"
                    },
                    "display_name": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/metadata/tags",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv4.0.0-getJsonSchemaValidation",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getJsonSchemaValidation"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/management/json-schema-validations/OPERATION_ID",
      "summary": "Get a JSON Schema Validation",
      "description": "<p>Get a JSON Schema Validation by operation_id.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#\">OPERATION_ID</a>: OBPv4.0.0-getBanks</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>$schema</strong></a>: $schema</p>\n<p><a href=\"/glossary#\"><strong>additionalProperties</strong></a>: additionalProperties</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#\"><strong>examples</strong></a>: examples</p>\n<p><a href=\"/glossary#\"><strong>json_schema</strong></a>: json_schema</p>\n<p><a href=\"/glossary#\"><strong>maxLength</strong></a>: maxLength</p>\n<p><a href=\"/glossary#\"><strong>minLength</strong></a>: minLength</p>\n<p><a href=\"/glossary#\"><strong>operation_id</strong></a>: OBPv4.0.0-getBanks</p>\n<p><a href=\"/glossary#\"><strong>properties</strong></a>: properties</p>\n<p><a href=\"/glossary#\"><strong>required</strong></a>: required</p>\n<p><a href=\"/glossary#\"><strong>title</strong></a>: Dr.</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>xxx_id</strong></a>: xxx_id</p>\n",
      "description_markdown": "Get a JSON Schema Validation by operation_id.\n\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[OPERATION_ID](/glossary#): OBPv4.0.0-getBanks\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**$schema**](/glossary#): $schema\n\n\n\n[**additionalProperties**](/glossary#): additionalProperties\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**examples**](/glossary#): examples\n\n\n\n[**json_schema**](/glossary#): json_schema\n\n\n\n[**maxLength**](/glossary#): maxLength\n\n\n\n[**minLength**](/glossary#): minLength\n\n\n\n[**operation_id**](/glossary#): OBPv4.0.0-getBanks\n\n\n\n[**properties**](/glossary#): properties\n\n\n\n[**required**](/glossary#): required\n\n\n\n[**title**](/glossary#): Dr.\n\n\n\n[**type**](/glossary#type): \n\n\n\n[**xxx_id**](/glossary#): xxx_id\n\n\n",
      "success_response_body": {
        "operation_id": "OBPv4.0.0-createXxx",
        "json_schema": {
          "$schema": "http://json-schema.org/draft-07/schema",
          "description": "The demo json-schema",
          "title": "The demo schema",
          "required": ["xxx_id"],
          "type": "object",
          "properties": {
            "xxx_id": {
              "type": "string",
              "minLength": 2,
              "maxLength": 50,
              "examples": ["xxx_id_demo_value"]
            }
          },
          "additionalProperties": true
        }
      },
      "error_response_bodies": [
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error.",
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["JSON-Schema-Validation", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "json_schema": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string"
              },
              "required": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "$schema": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "properties": {
                "type": "object",
                "properties": {
                  "xxx_id": {
                    "type": "object",
                    "properties": {
                      "minLength": {
                        "type": "integer"
                      },
                      "maxLength": {
                        "type": "integer"
                      },
                      "type": {
                        "type": "string"
                      },
                      "examples": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "additionalProperties": {
                "type": "boolean"
              }
            }
          },
          "operation_id": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanGetJsonSchemaValidation",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/json-schema-validations/OPERATION_ID",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv4.0.0-getExplictCounterpartyById",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getExplictCounterpartyById"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/counterparties/COUNTERPARTY_ID",
      "summary": "Get Counterparty by Id (Explicit)",
      "description": "<p>Information returned about the Counterparty specified by COUNTERPARTY_ID:</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#\">COUNTERPARTY_ID</a>: 9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#bespoke\"><strong>bespoke</strong></a>:</p>\n<p><a href=\"/glossary#corporate_location\"><strong>corporate_location</strong></a>: 10</p>\n<p><a href=\"/glossary#\"><strong>counterparty_id</strong></a>: 9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#created_by_user_id\"><strong>created_by_user_id</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#image_url\"><strong>image_url</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>is_beneficiary</strong></a>: true</p>\n<p><a href=\"/glossary#\"><strong>key</strong></a>: CustomerNumber</p>\n<p><a href=\"/glossary#latitude\"><strong>latitude</strong></a>: 38.8951</p>\n<p><a href=\"/glossary#longitude\"><strong>longitude</strong></a>: -77.0364</p>\n<p><a href=\"/glossary#metadata\"><strong>metadata</strong></a>:</p>\n<p><a href=\"/glossary#more_info\"><strong>more_info</strong></a>: More information about this fee</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#open_corporates_url\"><strong>open_corporates_url</strong></a>:</p>\n<p><a href=\"/glossary#other_account_routing_address\"><strong>other_account_routing_address</strong></a>:</p>\n<p><a href=\"/glossary#other_account_routing_scheme\"><strong>other_account_routing_scheme</strong></a>:</p>\n<p><a href=\"/glossary#other_account_secondary_routing_address\"><strong>other_account_secondary_routing_address</strong></a>:</p>\n<p><a href=\"/glossary#other_account_secondary_routing_scheme\"><strong>other_account_secondary_routing_scheme</strong></a>:</p>\n<p><a href=\"/glossary#other_bank_routing_address\"><strong>other_bank_routing_address</strong></a>:</p>\n<p><a href=\"/glossary#other_bank_routing_scheme\"><strong>other_bank_routing_scheme</strong></a>:</p>\n<p><a href=\"/glossary#other_branch_routing_address\"><strong>other_branch_routing_address</strong></a>:</p>\n<p><a href=\"/glossary#other_branch_routing_scheme\"><strong>other_branch_routing_scheme</strong></a>:</p>\n<p><a href=\"/glossary#physical_location\"><strong>physical_location</strong></a>:</p>\n<p><a href=\"/glossary#private_alias\"><strong>private_alias</strong></a>:</p>\n<p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p>\n<p><a href=\"/glossary#public_alias\"><strong>public_alias</strong></a>:</p>\n<p><a href=\"/glossary#this_account_id\"><strong>this_account_id</strong></a>:</p>\n<p><a href=\"/glossary#this_bank_id\"><strong>this_bank_id</strong></a>:</p>\n<p><a href=\"/glossary#this_view_id\"><strong>this_view_id</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>url</strong></a>: <a href=\"http://www.example.com/id-docs/123/image.png\">http://www.example.com/id-docs/123/image.png</a></p>\n<p><a href=\"/glossary#User\"><strong>user</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>username</strong></a>: felixsmith</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n",
      "description_markdown": "Information returned about the Counterparty specified by COUNTERPARTY_ID:\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[COUNTERPARTY_ID](/glossary#): 9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[VIEW_ID](/glossary#this_view_id): owner\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**bespoke**](/glossary#bespoke): \n\n\n\n[**corporate_location**](/glossary#corporate_location): 10\n\n\n\n[**counterparty_id**](/glossary#): 9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**created_by_user_id**](/glossary#created_by_user_id): \n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**date**](/glossary#): 2020-01-27\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**image_url**](/glossary#image_url): \n\n\n\n[**is_beneficiary**](/glossary#): true\n\n\n\n[**key**](/glossary#): CustomerNumber\n\n\n\n[**latitude**](/glossary#latitude): 38.8951\n\n\n\n[**longitude**](/glossary#longitude): -77.0364\n\n\n\n[**metadata**](/glossary#metadata): \n\n\n\n[**more_info**](/glossary#more_info): More information about this fee\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**open_corporates_url**](/glossary#open_corporates_url): \n\n\n\n[**other_account_routing_address**](/glossary#other_account_routing_address): \n\n\n\n[**other_account_routing_scheme**](/glossary#other_account_routing_scheme): \n\n\n\n[**other_account_secondary_routing_address**](/glossary#other_account_secondary_routing_address): \n\n\n\n[**other_account_secondary_routing_scheme**](/glossary#other_account_secondary_routing_scheme): \n\n\n\n[**other_bank_routing_address**](/glossary#other_bank_routing_address): \n\n\n\n[**other_bank_routing_scheme**](/glossary#other_bank_routing_scheme): \n\n\n\n[**other_branch_routing_address**](/glossary#other_branch_routing_address): \n\n\n\n[**other_branch_routing_scheme**](/glossary#other_branch_routing_scheme): \n\n\n\n[**physical_location**](/glossary#physical_location): \n\n\n\n[**private_alias**](/glossary#private_alias): \n\n\n\n[**provider**](/glossary#provider): ETHEREUM\n\n\n\n[**public_alias**](/glossary#public_alias): \n\n\n\n[**this_account_id**](/glossary#this_account_id): \n\n\n\n[**this_bank_id**](/glossary#this_bank_id): \n\n\n\n[**this_view_id**](/glossary#this_view_id): \n\n\n\n[**url**](/glossary#): http://www.example.com/id-docs/123/image.png\n\n\n\n[**user**](/glossary#User): \n\n\n\n[**username**](/glossary#): felixsmith\n\n\n\n[**value**](/glossary#): 5987953\n\n\n",
      "success_response_body": {
        "name": "CounterpartyName",
        "description": "My landlord",
        "currency": "EUR",
        "created_by_user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
        "this_bank_id": "gh.29.uk",
        "this_account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0",
        "this_view_id": "owner",
        "counterparty_id": "9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "other_bank_routing_scheme": "OBP",
        "other_bank_routing_address": "gh.29.uk",
        "other_branch_routing_scheme": "OBP",
        "other_branch_routing_address": "12f8a9e6-c2b1-407a-8bd0-421b7119307e",
        "other_account_routing_scheme": "OBP",
        "other_account_routing_address": "36f8a9e6-c2b1-407a-8bd0-421b7119307e",
        "other_account_secondary_routing_scheme": "IBAN",
        "other_account_secondary_routing_address": "DE89370400440532013000",
        "is_beneficiary": true,
        "bespoke": [
          {
            "key": "englishName",
            "value": "english Name"
          }
        ],
        "metadata": {
          "public_alias": "String",
          "more_info": "String",
          "url": "String",
          "image_url": "String",
          "open_corporates_url": "String",
          "corporate_location": {
            "latitude": 11.45,
            "longitude": 11.45,
            "date": "1100-01-01T00:00:00Z",
            "user": {
              "id": "123",
              "provider": "http://127.0.0.1:8080",
              "username": "felixsmith"
            }
          },
          "physical_location": {
            "latitude": 11.45,
            "longitude": 11.45,
            "date": "1100-01-01T00:00:00Z",
            "user": {
              "id": "123",
              "provider": "http://127.0.0.1:8080",
              "username": "felixsmith"
            }
          },
          "private_alias": "String"
        }
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-20017: Current user does not have access to the view. Please specify a valid value for VIEW_ID.",
        "OBP-50000: Unknown Error."
      ],
      "tags": [
        "Counterparty",
        "Payment Initiation Service (PIS)",
        "PSD2",
        "Counterparty-Metadata",
        "New-Style"
      ],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "bespoke": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string"
                },
                "key": {
                  "type": "string"
                }
              }
            }
          },
          "created_by_user_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "metadata": {
            "type": "object",
            "properties": {
              "private_alias": {
                "type": "string"
              },
              "physical_location": {
                "type": "object",
                "properties": {
                  "user": {
                    "type": "object",
                    "properties": {
                      "provider": {
                        "type": "string"
                      },
                      "id": {
                        "type": "string"
                      },
                      "username": {
                        "type": "string"
                      }
                    }
                  },
                  "date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "longitude": {
                    "type": "number"
                  },
                  "latitude": {
                    "type": "number"
                  }
                }
              },
              "url": {
                "type": "string"
              },
              "public_alias": {
                "type": "string"
              },
              "open_corporates_url": {
                "type": "string"
              },
              "more_info": {
                "type": "string"
              },
              "corporate_location": {
                "type": "object",
                "properties": {
                  "user": {
                    "type": "object",
                    "properties": {
                      "provider": {
                        "type": "string"
                      },
                      "id": {
                        "type": "string"
                      },
                      "username": {
                        "type": "string"
                      }
                    }
                  },
                  "date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "longitude": {
                    "type": "number"
                  },
                  "latitude": {
                    "type": "number"
                  }
                }
              },
              "image_url": {
                "type": "string"
              }
            }
          },
          "this_bank_id": {
            "type": "string"
          },
          "other_bank_routing_scheme": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "other_account_secondary_routing_address": {
            "type": "string"
          },
          "counterparty_id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "other_bank_routing_address": {
            "type": "string"
          },
          "other_account_routing_address": {
            "type": "string"
          },
          "other_branch_routing_scheme": {
            "type": "string"
          },
          "this_account_id": {
            "type": "string"
          },
          "other_account_secondary_routing_scheme": {
            "type": "string"
          },
          "is_beneficiary": {
            "type": "boolean"
          },
          "other_account_routing_scheme": {
            "type": "string"
          },
          "other_branch_routing_address": {
            "type": "string"
          },
          "this_view_id": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/counterparties/COUNTERPARTY_ID",
      "connector_methods": ["obp.getCounterpartyByCounterpartyId"]
    },
    {
      "operation_id": "OBPv3.1.0-enableDisableAccountWebhook",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "enableDisableAccountWebhook"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/account-web-hooks",
      "summary": "Enable/Disable an Account Webhook",
      "description": "<p>Enable/Disable an Account Webhook</p>\n<p>Webhooks are used to call external URLs when certain events happen.</p>\n<p>Account Webhooks focus on events around accounts.</p>\n<p>For instance, a webhook could be used to notify an external service if a balance changes on an account.</p>\n<p>This functionality is work in progress! Please note that only implemented trigger is: OnBalanceChange</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>account_id</strong></a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#account_webhook_id\"><strong>account_webhook_id</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#created_by_user_id\"><strong>created_by_user_id</strong></a>:</p>\n<p><a href=\"/glossary#http_method\"><strong>http_method</strong></a>: GET</p>\n<p><a href=\"/glossary#http_protocol\"><strong>http_protocol</strong></a>:</p>\n<p><a href=\"/glossary#is_active\"><strong>is_active</strong></a>: true</p>\n<p><a href=\"/glossary#trigger_name\"><strong>trigger_name</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>url</strong></a>: <a href=\"http://www.example.com/id-docs/123/image.png\">http://www.example.com/id-docs/123/image.png</a></p>\n",
      "description_markdown": "Enable/Disable an Account Webhook\n\n\nWebhooks are used to call external URLs when certain events happen.\n\nAccount Webhooks focus on events around accounts.\n\nFor instance, a webhook could be used to notify an external service if a balance changes on an account.\n\nThis functionality is work in progress! Please note that only implemented trigger is: OnBalanceChange\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**account_id**](/glossary#): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[**account_webhook_id**](/glossary#account_webhook_id): \n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**created_by_user_id**](/glossary#created_by_user_id): \n\n\n\n[**http_method**](/glossary#http_method): GET\n\n\n\n[**http_protocol**](/glossary#http_protocol): \n\n\n\n[**is_active**](/glossary#is_active): true\n\n\n\n[**trigger_name**](/glossary#trigger_name): \n\n\n\n[**url**](/glossary#): http://www.example.com/id-docs/123/image.png\n\n\n",
      "example_request_body": {
        "account_webhook_id": "fc23a7e2-7dd2-4bdf-a0b4-ae31232a4762",
        "is_active": "true"
      },
      "success_response_body": {
        "account_webhook_id": "613c83ea-80f9-4560-8404-b9cd4ec42a7f",
        "bank_id": "gh.29.uk",
        "account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0",
        "trigger_name": "OnBalanceChange",
        "url": "https://localhost.openbankproject.com",
        "http_method": "POST",
        "http_protocol": "HTTP/1.1",
        "created_by_user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
        "is_active": true
      },
      "error_response_bodies": [
        "OBP-50000: Unknown Error.",
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["Webhook", "Bank", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "account_webhook_id": {
            "type": "string"
          },
          "is_active": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "created_by_user_id": {
            "type": "string"
          },
          "http_method": {
            "type": "string"
          },
          "is_active": {
            "type": "boolean"
          },
          "bank_id": {
            "type": "string"
          },
          "http_protocol": {
            "type": "string"
          },
          "account_webhook_id": {
            "type": "string"
          },
          "trigger_name": {
            "type": "string"
          },
          "account_id": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanUpdateWebhook",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/account-web-hooks",
      "connector_methods": ["obp.getBank", "obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv5.0.0-getCustomerAccountLinksByCustomerId",
      "implemented_by": {
        "version": "OBPv5.0.0",
        "function": "getCustomerAccountLinksByCustomerId"
      },
      "request_verb": "GET",
      "request_url": "/obp/v5.0.0/banks/BANK_ID/customers/CUSTOMER_ID/customer-account-links",
      "summary": "Get Customer Account Links by CUSTOMER_ID",
      "description": "<p>Get Customer Account Links by CUSTOMER_ID</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#Customer.customer_id\">CUSTOMER_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>account_id</strong></a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#\"><strong>customer_account_link_id</strong></a>: xyz8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>links</strong></a>: links</p>\n<p><a href=\"/glossary#\"><strong>relationship_type</strong></a>: Owner</p>\n",
      "description_markdown": "Get Customer Account Links by CUSTOMER_ID\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[CUSTOMER_ID](/glossary#Customer.customer_id): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**account_id**](/glossary#): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**customer_account_link_id**](/glossary#): xyz8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**customer_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**links**](/glossary#): links\n\n\n\n[**relationship_type**](/glossary#): Owner\n\n\n",
      "success_response_body": {
        "links": [
          {
            "customer_account_link_id": "xyz8a7e4-6d02-40e3-a129-0b2bf89de8uh",
            "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
            "bank_id": "gh.29.uk",
            "account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0",
            "relationship_type": "Owner"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30046: Customer not found. Please specify a valid value for CUSTOMER_ID.",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Customer", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "customer_account_link_id": {
                  "type": "string"
                },
                "customer_id": {
                  "type": "string"
                },
                "bank_id": {
                  "type": "string"
                },
                "account_id": {
                  "type": "string"
                },
                "relationship_type": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetCustomerAccountLinks",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/customers/CUSTOMER_ID/customer-account-links",
      "connector_methods": [
        "obp.getCustomerAccountLinksByCustomerId",
        "obp.getCustomerByCustomerId"
      ]
    },
    {
      "operation_id": "OBPv4.0.0-deleteMyDynamicEndpoint",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "deleteMyDynamicEndpoint"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v4.0.0/my/dynamic-endpoints/DYNAMIC_ENDPOINT_ID",
      "summary": "Delete My Dynamic Endpoint",
      "description": "<p>Delete a DynamicEndpoint specified by DYNAMIC_ENDPOINT_ID.</p>\n<p>Authentication is Mandatory</p>\n",
      "description_markdown": "Delete a DynamicEndpoint specified by DYNAMIC_ENDPOINT_ID.\n\nAuthentication is Mandatory",
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-09009: DynamicEndpoint not found. Please specify a valid value for DYNAMIC_ENDPOINT_ID.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Dynamic-Endpoint-Manage", "API", "New-Style"],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/my/dynamic-endpoints/DYNAMIC_ENDPOINT_ID",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv3.0.0-getEntitlementRequests",
      "implemented_by": {
        "version": "OBPv3.0.0",
        "function": "getEntitlementRequests"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.0.0/users/USER_ID/entitlement-requests",
      "summary": "Get Entitlement Requests for a User",
      "description": "<p>Get Entitlement Requests for a User.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#User.user_id\">USER_ID</a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#created\"><strong>created</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"&#x6d;&#97;&#x69;&#x6c;&#116;&#111;&#58;&#x66;&#x65;&#x6c;&#105;&#x78;&#x73;&#109;i&#116;&#x68;&#x40;&#x65;&#x78;&#x61;&#x6d;&#x70;&#x6c;&#101;&#x2e;&#x63;&#x6f;m\">f&#x65;&#108;i&#x78;&#x73;m&#x69;&#x74;&#104;&#64;&#x65;x&#97;&#x6d;&#112;&#108;&#101;&#x2e;&#x63;&#x6f;&#109;</a></p>\n<p><a href=\"/glossary#entitlement_id\"><strong>entitlement_id</strong></a>:</p>\n<p><a href=\"/glossary#entitlement_request_id\"><strong>entitlement_request_id</strong></a>:</p>\n<p><a href=\"/glossary#entitlement_requests\"><strong>entitlement_requests</strong></a>:</p>\n<p><a href=\"/glossary#entitlements\"><strong>entitlements</strong></a>:</p>\n<p><a href=\"/glossary#list\"><strong>list</strong></a>:</p>\n<p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p>\n<p><a href=\"/glossary#provider_id\"><strong>provider_id</strong></a>:</p>\n<p><a href=\"/glossary#role_name\"><strong>role_name</strong></a>:</p>\n<p><a href=\"/glossary#User\"><strong>user</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p>\n<p><a href=\"/glossary#\"><strong>username</strong></a>: felixsmith</p>\n",
      "description_markdown": "Get Entitlement Requests for a User.\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[USER_ID](/glossary#User.user_id): 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**created**](/glossary#created): \n\n\n\n[**email**](/glossary#): felixsmith@example.com\n\n\n\n[**entitlement_id**](/glossary#entitlement_id): \n\n\n\n[**entitlement_request_id**](/glossary#entitlement_request_id): \n\n\n\n[**entitlement_requests**](/glossary#entitlement_requests): \n\n\n\n[**entitlements**](/glossary#entitlements): \n\n\n\n[**list**](/glossary#list): \n\n\n\n[**provider**](/glossary#provider): ETHEREUM\n\n\n\n[**provider_id**](/glossary#provider_id): \n\n\n\n[**role_name**](/glossary#role_name): \n\n\n\n[**user**](/glossary#User): \n\n\n\n[**user_id**](/glossary#): 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\n\n\n\n[**username**](/glossary#): felixsmith\n\n\n",
      "success_response_body": {
        "entitlement_requests": [
          {
            "entitlement_request_id": "6fb17583-1e49-4435-bb74-a14fe0996723",
            "user": {
              "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
              "email": "felixsmith@example.com",
              "provider_id": "Chris",
              "provider": "http://127.0.0.1:8080",
              "username": "felixsmith",
              "entitlements": {
                "list": [
                  {
                    "entitlement_id": "6fb17583-1e49-4435-bb74-a14fe0996723",
                    "role_name": "CanQueryOtherUser",
                    "bank_id": "gh.29.uk"
                  }
                ]
              }
            },
            "role_name": "CanQueryOtherUser",
            "bank_id": "gh.29.uk",
            "created": "1100-01-01T00:00:00Z"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-50200: Connector cannot return the data we requested.",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["Role", "Entitlement", "User", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "entitlement_requests": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "entitlement_request_id": {
                  "type": "string"
                },
                "role_name": {
                  "type": "string"
                },
                "bank_id": {
                  "type": "string"
                },
                "user": {
                  "type": "object",
                  "properties": {
                    "provider": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "provider_id": {
                      "type": "string"
                    },
                    "entitlements": {
                      "type": "object",
                      "properties": {
                        "list": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "role_name": {
                                "type": "string"
                              },
                              "bank_id": {
                                "type": "string"
                              },
                              "entitlement_id": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "username": {
                      "type": "string"
                    },
                    "user_id": {
                      "type": "string"
                    }
                  }
                },
                "created": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetEntitlementRequestsAtAnyBank",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/users/USER_ID/entitlement-requests",
      "connector_methods": ["obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv1.2.1-addCounterpartyUrl",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "addCounterpartyUrl"
      },
      "request_verb": "POST",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/metadata/url",
      "summary": "Add url to other bank account",
      "description": "<p>A url which represents the counterparty (home page url etc.)</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#other_account_id\">OTHER_ACCOUNT_ID</a>:</p>\n<p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>URL</strong></a>: <a href=\"http://www.example.com/id-docs/123/image.png\">http://www.example.com/id-docs/123/image.png</a></p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#success\"><strong>success</strong></a>:</p>\n",
      "description_markdown": "A url which represents the counterparty (home page url etc.)\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[OTHER_ACCOUNT_ID](/glossary#other_account_id): \n\n\n\n[VIEW_ID](/glossary#this_view_id): owner\n\n\n\n\n\n**JSON request body fields:**\n\n\n\n[**URL**](/glossary#): http://www.example.com/id-docs/123/image.png\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**success**](/glossary#success): \n\n\n",
      "example_request_body": {
        "URL": "String"
      },
      "success_response_body": {
        "success": "Success"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-10001: Incorrect json format.",
        "the view does not allow metadata access",
        "the view does not allow adding a url",
        "URL cannot be added",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Counterparty-Metadata", "Counterparty", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "URL": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "success": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/metadata/url",
      "connector_methods": [
        "obp.checkBankAccountExists",
        "obp.getBank",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv4.0.0-deleteBankLevelDynamicMessageDoc",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "deleteBankLevelDynamicMessageDoc"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v4.0.0/management/banks/BANK_ID/dynamic-message-docs/DYNAMIC_MESSAGE_DOC_ID",
      "summary": "Delete Bank Level Dynamic Message Doc",
      "description": "<p>Delete a Bank Level Dynamic Message Doc.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#\">DYNAMIC_MESSAGE_DOC_ID</a>:</p>\n<p><strong>JSON response body fields:</strong></p>\n",
      "description_markdown": "Delete a Bank Level Dynamic Message Doc.\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[DYNAMIC_MESSAGE_DOC_ID](/glossary#): \n\n\n\n\n\n**JSON response body fields:**\n\n\n",
      "success_response_body": true,
      "error_response_bodies": [
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Dynamic-Message-Doc", "New-Style"],
      "roles": [
        {
          "role": "CanDeleteBankLevelDynamicMessageDoc",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/banks/BANK_ID/dynamic-message-docs/DYNAMIC_MESSAGE_DOC_ID",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv1.2.1-getImagesForViewOnTransaction",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "getImagesForViewOnTransaction"
      },
      "request_verb": "GET",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transactions/TRANSACTION_ID/metadata/images",
      "summary": "Get Transaction Images",
      "description": "<p>Returns the transaction TRANSACTION_ID images made on a <a href=\"#1_2_1-getViewsForBankAccount\">view</a> (VIEW_ID).<br />\nAuthentication via OAuth is required if the view is not public.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#transaction_ids\">TRANSACTION_ID</a>: 2fg8a7e4-6d02-40e3-a129-0b2bf89de8ub</p>\n<p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>URL</strong></a>: <a href=\"http://www.example.com/id-docs/123/image.png\">http://www.example.com/id-docs/123/image.png</a></p>\n<p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#display_name\"><strong>display_name</strong></a>:</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#images\"><strong>images</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>label</strong></a>: My Account</p>\n<p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p>\n<p><a href=\"/glossary#User\"><strong>user</strong></a>:</p>\n",
      "description_markdown": "Returns the transaction TRANSACTION_ID images made on a [view](#1_2_1-getViewsForBankAccount) (VIEW_ID).\n         Authentication via OAuth is required if the view is not public.\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[TRANSACTION_ID](/glossary#transaction_ids): 2fg8a7e4-6d02-40e3-a129-0b2bf89de8ub\n\n\n\n[VIEW_ID](/glossary#this_view_id): owner\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**URL**](/glossary#): http://www.example.com/id-docs/123/image.png\n\n\n\n[**date**](/glossary#): 2020-01-27\n\n\n\n[**display_name**](/glossary#display_name): \n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**images**](/glossary#images): \n\n\n\n[**label**](/glossary#): My Account\n\n\n\n[**provider**](/glossary#provider): ETHEREUM\n\n\n\n[**user**](/glossary#User): \n\n\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "images": [
          {
            "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
            "label": "NONE",
            "URL": "www.openbankproject.com",
            "date": "1100-01-01T00:00:00Z",
            "user": {
              "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
              "provider": "http://127.0.0.1:8080",
              "display_name": "OBP"
            }
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-30022: The current view does not have the permission:",
        "OBP-30005: View not found for Account. Please specify a valid value for VIEW_ID",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Transaction-Metadata", "Transaction", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "images": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "URL": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "date": {
                  "type": "string",
                  "format": "date-time"
                },
                "user": {
                  "type": "object",
                  "properties": {
                    "provider": {
                      "type": "string"
                    },
                    "display_name": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                },
                "label": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transactions/TRANSACTION_ID/metadata/images",
      "connector_methods": ["obp.checkBankAccountExists", "obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv4.0.0-deleteDynamicMessageDoc",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "deleteDynamicMessageDoc"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v4.0.0/management/dynamic-message-docs/DYNAMIC_MESSAGE_DOC_ID",
      "summary": "Delete Dynamic Message Doc",
      "description": "<p>Delete a Dynamic Message Doc.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#\">DYNAMIC_MESSAGE_DOC_ID</a>:</p>\n<p><strong>JSON response body fields:</strong></p>\n",
      "description_markdown": "Delete a Dynamic Message Doc.\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[DYNAMIC_MESSAGE_DOC_ID](/glossary#): \n\n\n\n\n\n**JSON response body fields:**\n\n\n",
      "success_response_body": true,
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Dynamic-Message-Doc", "New-Style"],
      "roles": [
        {
          "role": "CanDeleteDynamicMessageDoc",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/dynamic-message-docs/DYNAMIC_MESSAGE_DOC_ID",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv4.0.0-getProducts",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getProducts"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/products",
      "summary": "Get Products",
      "description": "<p>Returns information about the financial products offered by a bank specified by BANK_ID including:</p>\n<ul>\n<li>Name</li>\n<li>Code</li>\n<li>Parent Product Code</li>\n<li>More info URL</li>\n<li>Terms And Conditions URL</li>\n<li>Description</li>\n<li>Terms and Conditions</li>\n<li>License the data under this endpoint is released under</li>\n</ul>\n<p>Can filter with attributes name and values.<br />\nURL params example: /banks/some-bank-id/products?manager=John&amp;count=8</p>\n<p>Authentication is Optional</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#license\"><strong>license</strong></a>:</p>\n<p><a href=\"/glossary#meta\"><strong>meta</strong></a>:</p>\n<p><a href=\"/glossary#more_info_url\"><strong>more_info_url</strong></a>: <a href=\"http://www.example.com/abc\">www.example.com/abc</a></p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#parent_product_code\"><strong>parent_product_code</strong></a>: 787LOW</p>\n<p><a href=\"/glossary#product_code\"><strong>product_code</strong></a>: 1234BW</p>\n<p><a href=\"/glossary#products\"><strong>products</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>terms_and_conditions_url</strong></a>: <a href=\"http://www.example.com/xyz\">www.example.com/xyz</a></p>\n<p><a href=\"/glossary#attributes\">attributes</a>: attribute value in form of (name, value)</p>\n<p><a href=\"/glossary#\">fees</a>: fees</p>\n",
      "description_markdown": "Returns information about the financial products offered by a bank specified by BANK_ID including:\n\n* Name\n* Code\n* Parent Product Code\n* More info URL\n* Terms And Conditions URL\n* Description\n* Terms and Conditions\n* License the data under this endpoint is released under\n\nCan filter with attributes name and values.\nURL params example: /banks/some-bank-id/products?manager=John&count=8\n\nAuthentication is Optional\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**license**](/glossary#license): \n\n\n\n[**meta**](/glossary#meta): \n\n\n\n[**more_info_url**](/glossary#more_info_url): www.example.com/abc\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**parent_product_code**](/glossary#parent_product_code): 787LOW\n\n\n\n[**product_code**](/glossary#product_code): 1234BW\n\n\n\n[**products**](/glossary#products): \n\n\n\n[**terms_and_conditions_url**](/glossary#): www.example.com/xyz\n\n\n\n[attributes](/glossary#attributes): attribute value in form of (name, value)\n\n\n\n[fees](/glossary#): fees\n\n\n",
      "success_response_body": {
        "products": [
          {
            "bank_id": "gh.29.uk",
            "product_code": "1234BW",
            "parent_product_code": "787LOW",
            "name": "Deposit Account 1",
            "more_info_url": "www.example.com/abc",
            "terms_and_conditions_url": "www.example.com/xyz",
            "description": "This an optional field. Maximum length is 2000. It can be any characters here.",
            "meta": {
              "license": {
                "id": "ODbL-1.0",
                "name": "Open Database License"
              }
            }
          }
        ]
      },
      "error_response_bodies": [
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Product", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "products": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "description": {
                  "type": "string"
                },
                "product_code": {
                  "type": "string"
                },
                "bank_id": {
                  "type": "string"
                },
                "meta": {
                  "type": "object",
                  "properties": {
                    "license": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "more_info_url": {
                  "type": "string"
                },
                "parent_product_code": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "terms_and_conditions_url": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/products",
      "connector_methods": ["obp.getProducts", "obp.getBank", "obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv5.1.0-accountAccessUniqueIndexCheck",
      "implemented_by": {
        "version": "OBPv5.1.0",
        "function": "accountAccessUniqueIndexCheck"
      },
      "request_verb": "GET",
      "request_url": "/obp/v5.1.0/management/system/integrity/account-access-unique-index-1-check",
      "summary": "Check Unique Index at Account Access",
      "description": "<p>Check unique index at account access table.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#success\"><strong>success</strong></a>:</p>\n<p><a href=\"/glossary#\">debug_info</a>: debug_info</p>\n",
      "description_markdown": "Check unique index at account access table.\n\nAuthentication is Mandatory\n\n\n**JSON response body fields:**\n\n\n\n[**success**](/glossary#success): \n\n\n\n[debug_info](/glossary#): debug_info\n\n\n",
      "success_response_body": {
        "success": true
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["System-Integrity", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          }
        }
      },
      "roles": [
        {
          "role": "CanGetSystemIntegrity",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/system/integrity/account-access-unique-index-1-check",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv5.0.0-getCustomerOverview",
      "implemented_by": {
        "version": "OBPv5.0.0",
        "function": "getCustomerOverview"
      },
      "request_verb": "POST",
      "request_url": "/obp/v5.0.0/banks/BANK_ID/customers/customer-number-query/overview",
      "summary": "Get Customer Overview",
      "description": "<p>Gets the Customer Overview specified by customer_number and bank_code.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>customer_number</strong></a>: 5987953</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#account_attribute_id\"><strong>account_attribute_id</strong></a>:</p>\n<p><a href=\"/glossary#account_attributes\"><strong>account_attributes</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>account_id</strong></a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#account_routings\"><strong>account_routings</strong></a>:</p>\n<p><a href=\"/glossary#accounts\"><strong>accounts</strong></a>:</p>\n<p><a href=\"/glossary#address\"><strong>address</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p>\n<p><a href=\"/glossary#balance\"><strong>balance</strong></a>: 10</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#\"><strong>branch_id</strong></a>: DERBY6</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#\"><strong>customer_attribute_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#customer_attributes\"><strong>customer_attributes</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>customer_number</strong></a>: 5987953</p>\n<p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#\"><strong>date_of_birth</strong></a>: 2018-03-09</p>\n<p><a href=\"/glossary#\"><strong>dependants</strong></a>: 1</p>\n<p><a href=\"/glossary#dob_of_dependants\"><strong>dob_of_dependants</strong></a>: [2019-09-08, 2017-07-12]</p>\n<p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"&#x6d;&#97;&#105;&#x6c;t&#x6f;:&#102;&#x65;&#108;&#x69;&#120;&#115;&#109;&#105;t&#x68;&#x40;e&#x78;&#x61;&#109;&#112;&#108;&#101;.c&#111;&#109;\">&#102;&#x65;li&#120;&#115;&#109;&#x69;&#116;&#104;&#x40;&#x65;&#x78;&#x61;&#x6d;&#x70;&#x6c;&#x65;.c&#111;&#x6d;</a></p>\n<p><a href=\"/glossary#\"><strong>employment_status</strong></a>: worker</p>\n<p><a href=\"/glossary#face_image\"><strong>face_image</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>highest_education_attained</strong></a>: Master</p>\n<p><a href=\"/glossary#\"><strong>kyc_status</strong></a>: true</p>\n<p><a href=\"/glossary#\"><strong>label</strong></a>: My Account</p>\n<p><a href=\"/glossary#last_ok_date\"><strong>last_ok_date</strong></a>: 2022-04-13T04:30:07.985Z</p>\n<p><a href=\"/glossary#\"><strong>legal_name</strong></a>: Eveline Tripman</p>\n<p><a href=\"/glossary#mobile_phone_number\"><strong>mobile_phone_number</strong></a>: +49 30 901820</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#\"><strong>name_suffix</strong></a>: Sr</p>\n<p><a href=\"/glossary#product_code\"><strong>product_code</strong></a>: 1234BW</p>\n<p><a href=\"/glossary#\"><strong>rating</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>relationship_status</strong></a>: single</p>\n<p><a href=\"/glossary#scheme\"><strong>scheme</strong></a>: scheme value</p>\n<p><a href=\"/glossary#\"><strong>source</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>title</strong></a>: Dr.</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>url</strong></a>: <a href=\"http://www.example.com/id-docs/123/image.png\">http://www.example.com/id-docs/123/image.png</a></p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n<p><a href=\"/glossary#\">contract_code</a>: contract_code</p>\n<p><a href=\"/glossary#\">contracts</a>: contracts</p>\n<p><a href=\"/glossary#credit_limit\">credit_limit</a>:</p>\n<p><a href=\"/glossary#credit_rating\">credit_rating</a>:</p>\n",
      "description_markdown": "Gets the Customer Overview specified by customer_number and bank_code.\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON request body fields:**\n\n\n\n[**customer_number**](/glossary#): 5987953\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**account_attribute_id**](/glossary#account_attribute_id): \n\n\n\n[**account_attributes**](/glossary#account_attributes): \n\n\n\n[**account_id**](/glossary#): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[**account_routings**](/glossary#account_routings): \n\n\n\n[**accounts**](/glossary#accounts): \n\n\n\n[**address**](/glossary#address): \n\n\n\n[**amount**](/glossary#): 10.12\n\n\n\n[**balance**](/glossary#balance): 10\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**branch_id**](/glossary#): DERBY6\n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**customer_attribute_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**customer_attributes**](/glossary#customer_attributes): \n\n\n\n[**customer_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**customer_number**](/glossary#): 5987953\n\n\n\n[**date**](/glossary#): 2020-01-27\n\n\n\n[**date_of_birth**](/glossary#): 2018-03-09\n\n\n\n[**dependants**](/glossary#): 1\n\n\n\n[**dob_of_dependants**](/glossary#dob_of_dependants): [2019-09-08, 2017-07-12]\n\n\n\n[**email**](/glossary#): felixsmith@example.com\n\n\n\n[**employment_status**](/glossary#): worker\n\n\n\n[**face_image**](/glossary#face_image): \n\n\n\n[**highest_education_attained**](/glossary#): Master\n\n\n\n[**kyc_status**](/glossary#): true\n\n\n\n[**label**](/glossary#): My Account\n\n\n\n[**last_ok_date**](/glossary#last_ok_date): 2022-04-13T04:30:07.985Z\n\n\n\n[**legal_name**](/glossary#): Eveline Tripman\n\n\n\n[**mobile_phone_number**](/glossary#mobile_phone_number): +49 30 901820\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**name_suffix**](/glossary#): Sr\n\n\n\n[**product_code**](/glossary#product_code): 1234BW\n\n\n\n[**rating**](/glossary#): \n\n\n\n[**relationship_status**](/glossary#): single\n\n\n\n[**scheme**](/glossary#scheme): scheme value\n\n\n\n[**source**](/glossary#): \n\n\n\n[**title**](/glossary#): Dr.\n\n\n\n[**type**](/glossary#type): \n\n\n\n[**url**](/glossary#): http://www.example.com/id-docs/123/image.png\n\n\n\n[**value**](/glossary#): 5987953\n\n\n\n[contract_code](/glossary#): contract_code\n\n\n\n[contracts](/glossary#): contracts\n\n\n\n[credit_limit](/glossary#credit_limit): \n\n\n\n[credit_rating](/glossary#credit_rating): \n\n\n",
      "example_request_body": {
        "customer_number": "5987953"
      },
      "success_response_body": {
        "bank_id": "gh.29.uk",
        "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "customer_number": "5987953",
        "legal_name": "Eveline Tripman",
        "mobile_phone_number": "+44 07972 444 876",
        "email": "felixsmith@example.com",
        "face_image": {
          "url": "www.openbankproject",
          "date": "1100-01-01T00:00:00Z"
        },
        "date_of_birth": "1100-01-01T00:00:00Z",
        "relationship_status": "single",
        "dependants": 1,
        "dob_of_dependants": ["1100-01-01T00:00:00Z"],
        "credit_rating": {
          "rating": "OBP",
          "source": "OBP"
        },
        "credit_limit": {
          "currency": "EUR",
          "amount": "0"
        },
        "highest_education_attained": "Master",
        "employment_status": "worker",
        "kyc_status": true,
        "last_ok_date": "2022-04-13T04:30:08Z",
        "title": "Dr.",
        "branch_id": "DERBY6",
        "name_suffix": "Sr",
        "customer_attributes": [
          {
            "customer_attribute_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
            "name": "SPECIAL_TAX_NUMBER",
            "type": "STRING",
            "value": "123456789"
          }
        ],
        "accounts": [
          {
            "account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0",
            "label": "My Account",
            "product_code": "787LOW",
            "balance": {
              "currency": "EUR",
              "amount": "0"
            },
            "branch_id": "DERBY6",
            "account_routings": [
              {
                "scheme": "AccountNumber",
                "address": "4930396"
              }
            ],
            "account_attributes": [
              {
                "contract_code": "LKJL98769F",
                "product_code": "1234BW",
                "account_attribute_id": "613c83ea-80f9-4560-8404-b9cd4ec42a7f",
                "name": "OVERDRAFT_START_DATE",
                "type": "DATE_WITH_DAY",
                "value": "2012-04-23"
              }
            ]
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30008: User Customer Link not found by USER_ID",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["Customer", "KYC", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "customer_number": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "dependants": {
            "type": "integer"
          },
          "customer_attributes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "customer_attribute_id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "dob_of_dependants": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            }
          },
          "face_image": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string"
              },
              "date": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          "credit_limit": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string"
              },
              "amount": {
                "type": "string"
              }
            }
          },
          "employment_status": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "customer_id": {
            "type": "string"
          },
          "relationship_status": {
            "type": "string"
          },
          "bank_id": {
            "type": "string"
          },
          "highest_education_attained": {
            "type": "string"
          },
          "customer_number": {
            "type": "string"
          },
          "credit_rating": {
            "type": "object",
            "properties": {
              "rating": {
                "type": "string"
              },
              "source": {
                "type": "string"
              }
            }
          },
          "name_suffix": {
            "type": "string"
          },
          "accounts": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "product_code": {
                  "type": "string"
                },
                "label": {
                  "type": "string"
                },
                "balance": {
                  "type": "object",
                  "properties": {
                    "currency": {
                      "type": "string"
                    },
                    "amount": {
                      "type": "string"
                    }
                  }
                },
                "account_routings": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "scheme": {
                        "type": "string"
                      },
                      "address": {
                        "type": "string"
                      }
                    }
                  }
                },
                "branch_id": {
                  "type": "string"
                },
                "account_attributes": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "value": {
                        "type": "string"
                      },
                      "product_code": {
                        "type": "string"
                      },
                      "account_attribute_id": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "contract_code": {
                        "type": "string"
                      }
                    }
                  }
                },
                "account_id": {
                  "type": "string"
                }
              }
            }
          },
          "legal_name": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "branch_id": {
            "type": "string"
          },
          "date_of_birth": {
            "type": "string",
            "format": "date-time"
          },
          "mobile_phone_number": {
            "type": "string"
          },
          "kyc_status": {
            "type": "boolean"
          },
          "last_ok_date": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "roles": [
        {
          "role": "CanGetCustomerOverview",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/customers/customer-number-query/overview",
      "connector_methods": [
        "obp.getBankAccounts",
        "obp.getCustomerAttributes",
        "obp.getCustomerByCustomerNumber"
      ]
    },
    {
      "operation_id": "OBPv5.0.0-createUserAuthContextUpdateRequest",
      "implemented_by": {
        "version": "OBPv5.0.0",
        "function": "createUserAuthContextUpdateRequest"
      },
      "request_verb": "POST",
      "request_url": "/obp/v5.0.0/banks/BANK_ID/users/current/auth-context-updates/SCA_METHOD",
      "summary": "Create User Auth Context Update Request",
      "description": "<p>Create User Auth Context Update Request.<br />\nAuthentication is Mandatory</p>\n<p>A One Time Password (OTP) (AKA security challenge) is sent Out of Band (OOB) to the User via the transport defined in SCA_METHOD<br />\nSCA_METHOD is typically &quot;SMS&quot; or &quot;EMAIL&quot;. &quot;EMAIL&quot; is used for testing purposes.</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#sca_method\">SCA_METHOD</a>:</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>key</strong></a>: CustomerNumber</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>consumer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>key</strong></a>: CustomerNumber</p>\n<p><a href=\"/glossary#status\"><strong>status</strong></a>:</p>\n<p><a href=\"/glossary#user_auth_context_update_id\"><strong>user_auth_context_update_id</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n",
      "description_markdown": "Create User Auth Context Update Request.\nAuthentication is Mandatory\n\nA One Time Password (OTP) (AKA security challenge) is sent Out of Band (OOB) to the User via the transport defined in SCA_METHOD\nSCA_METHOD is typically \"SMS\" or \"EMAIL\". \"EMAIL\" is used for testing purposes.\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[SCA_METHOD](/glossary#sca_method): \n\n\n\n\n\n**JSON request body fields:**\n\n\n\n[**key**](/glossary#): CustomerNumber\n\n\n\n[**value**](/glossary#): 5987953\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**consumer_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**key**](/glossary#): CustomerNumber\n\n\n\n[**status**](/glossary#status): \n\n\n\n[**user_auth_context_update_id**](/glossary#user_auth_context_update_id): \n\n\n\n[**user_id**](/glossary#): 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\n\n\n\n[**value**](/glossary#): 5987953\n\n\n",
      "example_request_body": {
        "key": "CUSTOMER_NUMBER",
        "value": "78987432"
      },
      "success_response_body": {
        "user_auth_context_update_id": "613c83ea-80f9-4560-8404-b9cd4ec42a7f",
        "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
        "key": "CUSTOMER_NUMBER",
        "value": "78987432",
        "status": "INITIATED",
        "consumer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-10001: Incorrect json format.",
        "OBP-30053: Could not insert the UserAuthContext",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["User", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "user_auth_context_update_id": {
            "type": "string",
            "format": "date-time"
          },
          "consumer_id": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/users/current/auth-context-updates/SCA_METHOD",
      "connector_methods": [
        "obp.validateUserAuthContextUpdateRequest",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv3.1.0-getMeetings",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "getMeetings"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/meetings",
      "summary": "Get Meetings",
      "description": "<p>Meetings contain meta data about, and are used to facilitate, video conferences / chats etc.</p>\n<p>The actual conference/chats are handled by external services.</p>\n<p>Login is required.</p>\n<p>This call is <strong>experimental</strong> and will require further authorisation in the future.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#contact_details\"><strong>contact_details</strong></a>:</p>\n<p><a href=\"/glossary#creator\"><strong>creator</strong></a>:</p>\n<p><a href=\"/glossary#customer_token\"><strong>customer_token</strong></a>:</p>\n<p><a href=\"/glossary#customer_user_id\"><strong>customer_user_id</strong></a>:</p>\n<p><a href=\"/glossary#email_address\"><strong>email_address</strong></a>:</p>\n<p><a href=\"/glossary#invitees\"><strong>invitees</strong></a>:</p>\n<p><a href=\"/glossary#keys\"><strong>keys</strong></a>:</p>\n<p><a href=\"/glossary#meeting_id\"><strong>meeting_id</strong></a>:</p>\n<p><a href=\"/glossary#meetings\"><strong>meetings</strong></a>:</p>\n<p><a href=\"/glossary#mobile_phone\"><strong>mobile_phone</strong></a>:</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#present\"><strong>present</strong></a>:</p>\n<p><a href=\"/glossary#provider_id\"><strong>provider_id</strong></a>:</p>\n<p><a href=\"/glossary#purpose_id\"><strong>purpose_id</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>session_id</strong></a>: b4e0352a-9a0f-4bfa-b30b-9003aa467f50</p>\n<p><a href=\"/glossary#staff_token\"><strong>staff_token</strong></a>:</p>\n<p><a href=\"/glossary#staff_user_id\"><strong>staff_user_id</strong></a>:</p>\n<p><a href=\"/glossary#status\"><strong>status</strong></a>:</p>\n<p><a href=\"/glossary#when\"><strong>when</strong></a>: 2020-01-27</p>\n",
      "description_markdown": "Meetings contain meta data about, and are used to facilitate, video conferences / chats etc.\n\nThe actual conference/chats are handled by external services.\n\nLogin is required.\n\nThis call is **experimental** and will require further authorisation in the future.\n      \n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**contact_details**](/glossary#contact_details): \n\n\n\n[**creator**](/glossary#creator): \n\n\n\n[**customer_token**](/glossary#customer_token): \n\n\n\n[**customer_user_id**](/glossary#customer_user_id): \n\n\n\n[**email_address**](/glossary#email_address): \n\n\n\n[**invitees**](/glossary#invitees): \n\n\n\n[**keys**](/glossary#keys): \n\n\n\n[**meeting_id**](/glossary#meeting_id): \n\n\n\n[**meetings**](/glossary#meetings): \n\n\n\n[**mobile_phone**](/glossary#mobile_phone): \n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**present**](/glossary#present): \n\n\n\n[**provider_id**](/glossary#provider_id): \n\n\n\n[**purpose_id**](/glossary#purpose_id): \n\n\n\n[**session_id**](/glossary#): b4e0352a-9a0f-4bfa-b30b-9003aa467f50\n\n\n\n[**staff_token**](/glossary#staff_token): \n\n\n\n[**staff_user_id**](/glossary#staff_user_id): \n\n\n\n[**status**](/glossary#status): \n\n\n\n[**when**](/glossary#when): 2020-01-27\n\n\n",
      "success_response_body": {
        "meetings": [
          {
            "meeting_id": "UUID-String",
            "provider_id": "Chris",
            "purpose_id": "String, eg: onboarding",
            "bank_id": "gh.29.uk",
            "present": {
              "staff_user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
              "customer_user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
            },
            "keys": {
              "session_id": "String",
              "staff_token": "String",
              "customer_token": "String"
            },
            "when": "1100-01-01T00:00:00Z",
            "creator": {
              "name": "Simon ",
              "mobile_phone": "+44 07972 444 876",
              "email_address": "felixsmith@example.com"
            },
            "invitees": [
              {
                "contact_details": {
                  "name": "Simon ",
                  "mobile_phone": "+44 07972 444 876",
                  "email_address": "felixsmith@example.com"
                },
                "status": "String, eg: Good"
              }
            ]
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Customer-Meeting", "Customer", "Experimental", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "meetings": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "present": {
                  "type": "object",
                  "properties": {
                    "staff_user_id": {
                      "type": "string"
                    },
                    "customer_user_id": {
                      "type": "string"
                    }
                  }
                },
                "invitees": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string"
                      },
                      "contact_details": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "mobile_phone": {
                            "type": "string"
                          },
                          "email_address": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "bank_id": {
                  "type": "string"
                },
                "when": {
                  "type": "string",
                  "format": "date-time"
                },
                "provider_id": {
                  "type": "string"
                },
                "purpose_id": {
                  "type": "string"
                },
                "keys": {
                  "type": "object",
                  "properties": {
                    "customer_token": {
                      "type": "string"
                    },
                    "session_id": {
                      "type": "string"
                    },
                    "staff_token": {
                      "type": "string"
                    }
                  }
                },
                "creator": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "mobile_phone": {
                      "type": "string"
                    },
                    "email_address": {
                      "type": "string"
                    }
                  }
                },
                "meeting_id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/meetings",
      "connector_methods": ["obp.getMeetings", "obp.getBank", "obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv1.2.1-deleteImageForViewOnTransaction",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "deleteImageForViewOnTransaction"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transactions/TRANSACTION_ID/metadata/images/IMAGE_ID",
      "summary": "Delete a Transaction Image",
      "description": "<p>Deletes the image IMAGE_ID about the transaction TRANSACTION_ID made on <a href=\"#1_2_1-getViewsForBankAccount\">view</a>.</p>\n<p>Authentication via OAuth is required. The user must either have owner privileges for this account, or must be the user that posted the image.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#image_id\">IMAGE_ID</a>:</p>\n<p><a href=\"/glossary#transaction_ids\">TRANSACTION_ID</a>: 2fg8a7e4-6d02-40e3-a129-0b2bf89de8ub</p>\n<p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p>\n<p><strong>JSON response body fields:</strong></p>\n",
      "description_markdown": "Deletes the image IMAGE_ID about the transaction TRANSACTION_ID made on [view](#1_2_1-getViewsForBankAccount).\n\nAuthentication via OAuth is required. The user must either have owner privileges for this account, or must be the user that posted the image.\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[IMAGE_ID](/glossary#image_id): \n\n\n\n[TRANSACTION_ID](/glossary#transaction_ids): 2fg8a7e4-6d02-40e3-a129-0b2bf89de8ub\n\n\n\n[VIEW_ID](/glossary#this_view_id): owner\n\n\n\n\n\n**JSON response body fields:**\n\n\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "jsonString": "{}"
      },
      "error_response_bodies": [
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-30022: The current view does not have the permission:",
        "OBP-20001: User not logged in. Authentication is required!",
        "You must be able to see images in order to delete them",
        "Image not found for this transaction",
        "Deleting images not permitted for this view",
        "Deleting images not permitted for the current user",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Transaction-Metadata", "Transaction", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transactions/TRANSACTION_ID/metadata/images/IMAGE_ID",
      "connector_methods": ["obp.checkBankAccountExists", "obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv4.0.0-createMyApiCollectionEndpoint",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "createMyApiCollectionEndpoint"
      },
      "request_verb": "POST",
      "request_url": "/obp/v4.0.0/my/api-collections/API_COLLECTION_NAME/api-collection-endpoints",
      "summary": "Create My Api Collection Endpoint",
      "description": "<p>Create Api Collection Endpoint.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#\">API_COLLECTION_NAME</a>: Favourites</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>operation_id</strong></a>: OBPv4.0.0-getBanks</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>api_collection_endpoint_id</strong></a>: 8uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>api_collection_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>operation_id</strong></a>: OBPv4.0.0-getBanks</p>\n",
      "description_markdown": "Create Api Collection Endpoint.\n\n\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[API_COLLECTION_NAME](/glossary#): Favourites\n\n\n\n\n\n**JSON request body fields:**\n\n\n\n[**operation_id**](/glossary#): OBPv4.0.0-getBanks\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**api_collection_endpoint_id**](/glossary#): 8uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**api_collection_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**operation_id**](/glossary#): OBPv4.0.0-getBanks\n\n\n",
      "example_request_body": {
        "operation_id": "OBPv4.0.0-getBanks"
      },
      "success_response_body": {
        "api_collection_endpoint_id": "8uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "api_collection_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "operation_id": "OBPv4.0.0-getBanks"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Api-Collection", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "operation_id": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "operation_id": {
            "type": "string"
          },
          "api_collection_id": {
            "type": "string"
          },
          "api_collection_endpoint_id": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/my/api-collections/API_COLLECTION_NAME/api-collection-endpoints",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv4.0.0-createOrUpdateAccountAttributeDefinition",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "createOrUpdateAccountAttributeDefinition"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/attribute-definitions/account",
      "summary": "Create or Update Account Attribute Definition",
      "description": "<p>Create or Update Account Attribute Definition</p>\n<p>The category field must be Account</p>\n<p>The type field must be one of; DOUBLE, STRING, INTEGER and DATE_WITH_DAY</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#alias\"><strong>alias</strong></a>:</p>\n<p><a href=\"/glossary#attribute_definition_id\"><strong>attribute_definition_id</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#can_be_seen_on_views\"><strong>can_be_seen_on_views</strong></a>: true</p>\n<p><a href=\"/glossary#category\"><strong>category</strong></a>:</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#is_active\"><strong>is_active</strong></a>: true</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n",
      "description_markdown": "Create or Update Account Attribute Definition\n\nThe category field must be Account\n\nThe type field must be one of; DOUBLE, STRING, INTEGER and DATE_WITH_DAY\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**alias**](/glossary#alias): \n\n\n\n[**attribute_definition_id**](/glossary#attribute_definition_id): \n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**can_be_seen_on_views**](/glossary#can_be_seen_on_views): true\n\n\n\n[**category**](/glossary#category): \n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**is_active**](/glossary#is_active): true\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**type**](/glossary#type): \n\n\n",
      "example_request_body": {
        "name": "SPECIAL_TAX_NUMBER",
        "category": "Account",
        "type": "STRING",
        "description": "description",
        "alias": "STRING",
        "can_be_seen_on_views": ["bank"],
        "is_active": true
      },
      "success_response_body": {
        "attribute_definition_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
        "bank_id": "gh.29.uk",
        "name": "SPECIAL_TAX_NUMBER",
        "category": "Account",
        "type": "STRING",
        "description": "description",
        "alias": "STRING",
        "can_be_seen_on_views": ["bank"],
        "is_active": true
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["Account", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "can_be_seen_on_views": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "description": {
            "type": "string"
          },
          "is_active": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "alias": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "can_be_seen_on_views": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "attribute_definition_id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "is_active": {
            "type": "boolean"
          },
          "bank_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "alias": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateAccountAttributeDefinitionAtOneBank",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/attribute-definitions/account",
      "connector_methods": ["obp.createOrUpdateAttributeDefinition"]
    },
    {
      "operation_id": "OBPv4.0.0-getMyApiCollectionById",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getMyApiCollectionById"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/my/api-collections/API_COLLECTION_ID",
      "summary": "Get My Api Collection By Id",
      "description": "<p>Get Api Collection By API_COLLECTION_ID.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#\">API_COLLECTION_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>api_collection_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>api_collection_name</strong></a>: Favourites</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#\"><strong>is_sharable</strong></a>: is_sharable</p>\n<p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p>\n",
      "description_markdown": "Get Api Collection By API_COLLECTION_ID.\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[API_COLLECTION_ID](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**api_collection_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**api_collection_name**](/glossary#): Favourites\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**is_sharable**](/glossary#): is_sharable\n\n\n\n[**user_id**](/glossary#): 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\n\n\n",
      "success_response_body": {
        "api_collection_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
        "api_collection_name": "Favourites",
        "is_sharable": true,
        "description": "This an optional field. Maximum length is 2000. It can be any characters here."
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20057: User not found by userId.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Api-Collection", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "api_collection_id": {
            "type": "string"
          },
          "api_collection_name": {
            "type": "string"
          },
          "is_sharable": {
            "type": "boolean"
          },
          "user_id": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/my/api-collections/API_COLLECTION_ID",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv4.0.0-getExplictCounterpartiesForAccount",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getExplictCounterpartiesForAccount"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/counterparties",
      "summary": "Get Counterparties (Explicit)",
      "description": "<p>Get the Counterparties (Explicit) for the account / view.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#bespoke\"><strong>bespoke</strong></a>:</p>\n<p><a href=\"/glossary#counterparties\"><strong>counterparties</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>counterparty_id</strong></a>: 9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#created_by_user_id\"><strong>created_by_user_id</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#\"><strong>is_beneficiary</strong></a>: true</p>\n<p><a href=\"/glossary#\"><strong>key</strong></a>: CustomerNumber</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#other_account_routing_address\"><strong>other_account_routing_address</strong></a>:</p>\n<p><a href=\"/glossary#other_account_routing_scheme\"><strong>other_account_routing_scheme</strong></a>:</p>\n<p><a href=\"/glossary#other_account_secondary_routing_address\"><strong>other_account_secondary_routing_address</strong></a>:</p>\n<p><a href=\"/glossary#other_account_secondary_routing_scheme\"><strong>other_account_secondary_routing_scheme</strong></a>:</p>\n<p><a href=\"/glossary#other_bank_routing_address\"><strong>other_bank_routing_address</strong></a>:</p>\n<p><a href=\"/glossary#other_bank_routing_scheme\"><strong>other_bank_routing_scheme</strong></a>:</p>\n<p><a href=\"/glossary#other_branch_routing_address\"><strong>other_branch_routing_address</strong></a>:</p>\n<p><a href=\"/glossary#other_branch_routing_scheme\"><strong>other_branch_routing_scheme</strong></a>:</p>\n<p><a href=\"/glossary#this_account_id\"><strong>this_account_id</strong></a>:</p>\n<p><a href=\"/glossary#this_bank_id\"><strong>this_bank_id</strong></a>:</p>\n<p><a href=\"/glossary#this_view_id\"><strong>this_view_id</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n",
      "description_markdown": "Get the Counterparties (Explicit) for the account / view.\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[VIEW_ID](/glossary#this_view_id): owner\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**bespoke**](/glossary#bespoke): \n\n\n\n[**counterparties**](/glossary#counterparties): \n\n\n\n[**counterparty_id**](/glossary#): 9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**created_by_user_id**](/glossary#created_by_user_id): \n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**is_beneficiary**](/glossary#): true\n\n\n\n[**key**](/glossary#): CustomerNumber\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**other_account_routing_address**](/glossary#other_account_routing_address): \n\n\n\n[**other_account_routing_scheme**](/glossary#other_account_routing_scheme): \n\n\n\n[**other_account_secondary_routing_address**](/glossary#other_account_secondary_routing_address): \n\n\n\n[**other_account_secondary_routing_scheme**](/glossary#other_account_secondary_routing_scheme): \n\n\n\n[**other_bank_routing_address**](/glossary#other_bank_routing_address): \n\n\n\n[**other_bank_routing_scheme**](/glossary#other_bank_routing_scheme): \n\n\n\n[**other_branch_routing_address**](/glossary#other_branch_routing_address): \n\n\n\n[**other_branch_routing_scheme**](/glossary#other_branch_routing_scheme): \n\n\n\n[**this_account_id**](/glossary#this_account_id): \n\n\n\n[**this_bank_id**](/glossary#this_bank_id): \n\n\n\n[**this_view_id**](/glossary#this_view_id): \n\n\n\n[**value**](/glossary#): 5987953\n\n\n",
      "success_response_body": {
        "counterparties": [
          {
            "name": "CounterpartyName",
            "description": "My landlord",
            "currency": "EUR",
            "created_by_user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
            "this_bank_id": "gh.29.uk",
            "this_account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0",
            "this_view_id": "owner",
            "counterparty_id": "9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh",
            "other_bank_routing_scheme": "OBP",
            "other_bank_routing_address": "gh.29.uk",
            "other_branch_routing_scheme": "OBP",
            "other_branch_routing_address": "12f8a9e6-c2b1-407a-8bd0-421b7119307e",
            "other_account_routing_scheme": "OBP",
            "other_account_routing_address": "36f8a9e6-c2b1-407a-8bd0-421b7119307e",
            "other_account_secondary_routing_scheme": "IBAN",
            "other_account_secondary_routing_address": "DE89370400440532013000",
            "is_beneficiary": true,
            "bespoke": [
              {
                "key": "englishName",
                "value": "english Name"
              }
            ]
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-20017: Current user does not have access to the view. Please specify a valid value for VIEW_ID.",
        "OBP-30005: View not found for Account. Please specify a valid value for VIEW_ID",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Counterparty", "Payment Initiation Service (PIS)", "PSD2", "Account", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "counterparties": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "bespoke": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "value": {
                        "type": "string"
                      },
                      "key": {
                        "type": "string"
                      }
                    }
                  }
                },
                "created_by_user_id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "this_bank_id": {
                  "type": "string"
                },
                "other_bank_routing_scheme": {
                  "type": "string"
                },
                "currency": {
                  "type": "string"
                },
                "other_account_secondary_routing_address": {
                  "type": "string"
                },
                "counterparty_id": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "other_bank_routing_address": {
                  "type": "string"
                },
                "other_account_routing_address": {
                  "type": "string"
                },
                "other_branch_routing_scheme": {
                  "type": "string"
                },
                "this_account_id": {
                  "type": "string"
                },
                "other_account_secondary_routing_scheme": {
                  "type": "string"
                },
                "is_beneficiary": {
                  "type": "boolean"
                },
                "other_account_routing_scheme": {
                  "type": "string"
                },
                "other_branch_routing_address": {
                  "type": "string"
                },
                "this_view_id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/counterparties",
      "connector_methods": ["obp.getCounterparties"]
    },
    {
      "operation_id": "OBPv4.0.0-updateBankLevelEndpointMapping",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "updateBankLevelEndpointMapping"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v4.0.0/management/banks/BANK_ID/endpoint-mappings/ENDPOINT_MAPPING_ID",
      "summary": "Update Bank Level Endpoint Mapping",
      "description": "<p>Update an Bank Level Endpoint Mapping.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#\">ENDPOINT_MAPPING_ID</a>: ENDPOINT_MAPPING_ID</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n",
      "description_markdown": "Update an Bank Level Endpoint Mapping.\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[ENDPOINT_MAPPING_ID](/glossary#): ENDPOINT_MAPPING_ID\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n",
      "example_request_body": {
        "operation_id": "OBPv4.0.0-dynamicEndpoint_POST_account",
        "request_mapping": {},
        "response_mapping": {
          "name": {
            "entity": "FooBar",
            "field": "name",
            "query": "number"
          },
          "balance": {
            "entity": "FashionBrand",
            "field": "number",
            "query": "number"
          }
        }
      },
      "success_response_body": {
        "operation_id": "OBPv4.0.0-dynamicEndpoint_POST_account",
        "request_mapping": {},
        "response_mapping": {
          "name": {
            "entity": "FooBar",
            "field": "name",
            "query": "number"
          },
          "balance": {
            "entity": "FashionBrand",
            "field": "number",
            "query": "number"
          }
        },
        "endpoint_mapping_id": "b4e0352a-9a0f-4bfa-b30b-9003aa467f50"
      },
      "error_response_bodies": [
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Endpoint-Mapping", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "operation_id": {
            "type": "string"
          },
          "request_mapping": {
            "type": "object",
            "properties": {}
          },
          "response_mapping": {
            "type": "object",
            "properties": {
              "name": {
                "type": "object",
                "properties": {
                  "entity": {
                    "type": "string"
                  },
                  "field": {
                    "type": "string"
                  },
                  "query": {
                    "type": "string"
                  }
                }
              },
              "balance": {
                "type": "object",
                "properties": {
                  "entity": {
                    "type": "string"
                  },
                  "field": {
                    "type": "string"
                  },
                  "query": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "operation_id": {
            "type": "string"
          },
          "request_mapping": {
            "type": "object",
            "properties": {}
          },
          "response_mapping": {
            "type": "object",
            "properties": {
              "name": {
                "type": "object",
                "properties": {
                  "entity": {
                    "type": "string"
                  },
                  "field": {
                    "type": "string"
                  },
                  "query": {
                    "type": "string"
                  }
                }
              },
              "balance": {
                "type": "object",
                "properties": {
                  "entity": {
                    "type": "string"
                  },
                  "field": {
                    "type": "string"
                  },
                  "query": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "endpoint_mapping_id": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanUpdateBankLevelEndpointMapping",
          "requires_bank_id": true
        },
        {
          "role": "CanUpdateEndpointMapping",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/banks/BANK_ID/endpoint-mappings/ENDPOINT_MAPPING_ID",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv5.1.0-mtlsClientCertificateInfo",
      "implemented_by": {
        "version": "OBPv5.1.0",
        "function": "mtlsClientCertificateInfo"
      },
      "request_verb": "GET",
      "request_url": "/obp/v5.1.0/my/mtls/certificate/current",
      "summary": "Provide client's certificate info of a current call",
      "description": "<p>Provide client's certificate info of a current call specified by PSD2-CERT value at Request Header</p>\n<p>Authentication is Mandatory</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>issuer_domain_name</strong></a>: issuer_domain_name</p>\n<p><a href=\"/glossary#\"><strong>not_after</strong></a>: not_after</p>\n<p><a href=\"/glossary#\"><strong>not_before</strong></a>: not_before</p>\n<p><a href=\"/glossary#\"><strong>subject_domain_name</strong></a>: subject_domain_name</p>\n<p><a href=\"/glossary#roles\">roles</a>: CanCreateMyUser</p>\n<p><a href=\"/glossary#\">roles_info</a>: roles_info</p>\n",
      "description_markdown": "Provide client's certificate info of a current call specified by PSD2-CERT value at Request Header\n\nAuthentication is Mandatory\n\n\n**JSON response body fields:**\n\n\n\n[**issuer_domain_name**](/glossary#): issuer_domain_name\n\n\n\n[**not_after**](/glossary#): not_after\n\n\n\n[**not_before**](/glossary#): not_before\n\n\n\n[**subject_domain_name**](/glossary#): subject_domain_name\n\n\n\n[roles](/glossary#roles): CanCreateMyUser\n\n\n\n[roles_info](/glossary#): roles_info\n\n\n",
      "success_response_body": {
        "subject_domain_name": "OID.2.5.4.41=VPN, EMAILADDRESS=admin@tesobe.com, CN=TESOBE CA, OU=TESOBE Operations, O=TESOBE, L=Berlin, ST=Berlin, C=DE",
        "issuer_domain_name": "CN=localhost, O=TESOBE GmbH, ST=Berlin, C=DE",
        "not_before": "2022-04-01T10:13:00.000Z",
        "not_after": "2032-04-01T10:13:00.000Z",
        "roles_info": "PEM Encoded Certificate does not contain PSD2 roles."
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Consent", "Account Information Service (AIS)", "PSD2", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "roles_info": {
            "type": "string"
          },
          "subject_domain_name": {
            "type": "string"
          },
          "not_before": {
            "type": "string"
          },
          "issuer_domain_name": {
            "type": "string"
          },
          "not_after": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/my/mtls/certificate/current",
      "connector_methods": ["obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv4.0.0-createTransactionRequestAccountOtp",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "createTransactionRequestAccountOtp"
      },
      "request_verb": "POST",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transaction-request-types/ACCOUNT_OTP/transaction-requests",
      "summary": "Create Transaction Request (ACCOUNT_OTP)",
      "description": "<p>When using ACCOUNT, the payee is set in the request body.</p>\n<p>Money goes into the BANK_ID and ACCOUNT_ID specified in the request body.</p>\n<p>Initiate a Payment via creating a Transaction Request.</p>\n<p>In OBP, a <code>transaction request</code> may or may not result in a <code>transaction</code>. However, a <code>transaction</code> only has one possible state: completed.</p>\n<p>A <code>Transaction Request</code> can have one of several states: INITIATED, NEXT_CHALLENGE_PENDING etc.</p>\n<p><code>Transactions</code> are modeled on items in a bank statement that represent the movement of money.</p>\n<p><code>Transaction Requests</code> are requests to move money which may or may not succeed and thus result in a <code>Transaction</code>.</p>\n<p>A <code>Transaction Request</code> might create a security challenge that needs to be answered before the <code>Transaction Request</code> proceeds.<br />\nIn case 1 person needs to answer security challenge we have next flow of state of an <code>transaction request</code>:<br />\nINITIATED =&gt; COMPLETED<br />\nIn case n persons needs to answer security challenge we have next flow of state of an <code>transaction request</code>:<br />\nINITIATED =&gt; NEXT_CHALLENGE_PENDING =&gt; ... =&gt; NEXT_CHALLENGE_PENDING =&gt; COMPLETED</p>\n<p>The security challenge is bound to a user i.e. in case of right answer and the user is different than expected one the challenge will fail.</p>\n<p>Rule for calculating number of security challenges:<br />\nIf product Account attribute REQUIRED_CHALLENGE_ANSWERS=N then create N challenges<br />\n(one for every user that has a View where permission &quot;can_add_transaction_request_to_any_account&quot;=true)<br />\nIn case REQUIRED_CHALLENGE_ANSWERS is not defined as an account attribute default value is 1.</p>\n<p>Transaction Requests contain charge information giving the client the opportunity to proceed or not (as long as the challenge level is appropriate).</p>\n<p>Transaction Requests can have one of several Transaction Request Types which expect different bodies. The escaped body is returned in the details key of the GET response.<br />\nThis provides some commonality and one URL for many different payment or transfer types with enough flexibility to validate them differently.</p>\n<p>The payer is set in the URL. Money comes out of the BANK_ID and ACCOUNT_ID specified in the URL.</p>\n<p>In sandbox mode, TRANSACTION_REQUEST_TYPE is commonly set to ACCOUNT. See getTransactionRequestTypesSupportedByBank for all supported types.</p>\n<p>In sandbox mode, if the amount is less than 1000 EUR (any currency, unless it is set differently on this server), the transaction request will create a transaction without a challenge, else the Transaction Request will be set to INITIALISED and a challenge will need to be answered.</p>\n<p>If a challenge is created you must answer it using Answer Transaction Request Challenge before the Transaction is created.</p>\n<p>You can transfer between different currency accounts. (new in 2.0.0). The currency in body must match the sending account.</p>\n<p>The following static FX rates are available in sandbox mode:</p>\n<p><a href=\"https://obp-apiexplorer.joinfincubator.com/more?version=OBPv4.0.0&amp;list-all-banks=false&amp;core=&amp;psd2=&amp;obwg=#OBPv2_2_0-getCurrentFxRate\">https://obp-apiexplorer.joinfincubator.com/more?version=OBPv4.0.0&amp;list-all-banks=false&amp;core=&amp;psd2=&amp;obwg=#OBPv2_2_0-getCurrentFxRate</a></p>\n<p>Transaction Requests satisfy PSD2 requirements thus:</p>\n<p>1) A transaction can be initiated by a third party application.</p>\n<p>2) The customer is informed of the charge that will incurred.</p>\n<p>3) The call supports delegated authentication (OAuth)</p>\n<p>See <a href=\"https://github.com/OpenBankProject/Hello-OBP-DirectLogin-Python/blob/master/hello_payments.py\">this python code</a> for a complete example of this flow.</p>\n<p>There is further documentation <a href=\"https://github.com/OpenBankProject/OBP-API/wiki/Transaction-Requests\">here</a></p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#account_otp\">ACCOUNT_OTP</a>:</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>account_id</strong></a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#to\"><strong>to</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#Account\"><strong>account</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>account_id</strong></a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#allowed_attempts\"><strong>allowed_attempts</strong></a>: 5</p>\n<p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p>\n<p><a href=\"/glossary#bank_code\"><strong>bank_code</strong></a>: CGHZ</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#branch_number\"><strong>branch_number</strong></a>:</p>\n<p><a href=\"/glossary#challenge_type\"><strong>challenge_type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>challenges</strong></a>: challenges</p>\n<p><a href=\"/glossary#charge\"><strong>charge</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>counterparty_id</strong></a>: 9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#creditoraccount\"><strong>creditorAccount</strong></a>:</p>\n<p><a href=\"/glossary#creditorname\"><strong>creditorName</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#\"><strong>date_of_birth</strong></a>: 2018-03-09</p>\n<p><a href=\"/glossary#debtoraccount\"><strong>debtorAccount</strong></a>:</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#details\"><strong>details</strong></a>:</p>\n<p><a href=\"/glossary#end_date\"><strong>end_date</strong></a>:</p>\n<p><a href=\"/glossary#from\"><strong>from</strong></a>:</p>\n<p><a href=\"/glossary#future_date\"><strong>future_date</strong></a>: 20200127</p>\n<p><a href=\"/glossary#\"><strong>iban</strong></a>: DE91 1000 0000 0123 4567 89</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#instructedamount\"><strong>instructedAmount</strong></a>: 100</p>\n<p><a href=\"/glossary#kyc_document\"><strong>kyc_document</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>legal_name</strong></a>: Eveline Tripman</p>\n<p><a href=\"/glossary#link\"><strong>link</strong></a>:</p>\n<p><a href=\"/glossary#message\"><strong>message</strong></a>: 123456</p>\n<p><a href=\"/glossary#mobile_phone_number\"><strong>mobile_phone_number</strong></a>: +49 30 901820</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#nickname\"><strong>nickname</strong></a>:</p>\n<p><a href=\"/glossary#number\"><strong>number</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>start_date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#status\"><strong>status</strong></a>:</p>\n<p><a href=\"/glossary#summary\"><strong>summary</strong></a>:</p>\n<p><a href=\"/glossary#to\"><strong>to</strong></a>:</p>\n<p><a href=\"/glossary#transaction_ids\"><strong>transaction_ids</strong></a>:</p>\n<p><a href=\"/glossary#transfer_type\"><strong>transfer_type</strong></a>:</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n<p><a href=\"/glossary#to_counterparty\">to_counterparty</a>:</p>\n<p><a href=\"/glossary#to_sandbox_tan\">to_sandbox_tan</a>:</p>\n<p><a href=\"/glossary#to_sepa\">to_sepa</a>:</p>\n<p><a href=\"/glossary#to_sepa_credit_transfers\">to_sepa_credit_transfers</a>:</p>\n<p><a href=\"/glossary#\">to_simple</a>: to_simple</p>\n<p><a href=\"/glossary#to_transfer_to_account\">to_transfer_to_account</a>:</p>\n<p><a href=\"/glossary#to_transfer_to_atm\">to_transfer_to_atm</a>:</p>\n<p><a href=\"/glossary#to_transfer_to_phone\">to_transfer_to_phone</a>:</p>\n",
      "description_markdown": "When using ACCOUNT, the payee is set in the request body.\n\nMoney goes into the BANK_ID and ACCOUNT_ID specified in the request body.\n\nInitiate a Payment via creating a Transaction Request.\n\nIn OBP, a `transaction request` may or may not result in a `transaction`. However, a `transaction` only has one possible state: completed.\n\nA `Transaction Request` can have one of several states: INITIATED, NEXT_CHALLENGE_PENDING etc.\n\n`Transactions` are modeled on items in a bank statement that represent the movement of money.\n\n`Transaction Requests` are requests to move money which may or may not succeed and thus result in a `Transaction`.\n\nA `Transaction Request` might create a security challenge that needs to be answered before the `Transaction Request` proceeds.\nIn case 1 person needs to answer security challenge we have next flow of state of an `transaction request`:\n  INITIATED => COMPLETED\nIn case n persons needs to answer security challenge we have next flow of state of an `transaction request`:\n  INITIATED => NEXT_CHALLENGE_PENDING => ... => NEXT_CHALLENGE_PENDING => COMPLETED\n\nThe security challenge is bound to a user i.e. in case of right answer and the user is different than expected one the challenge will fail.\n\nRule for calculating number of security challenges:\nIf product Account attribute REQUIRED_CHALLENGE_ANSWERS=N then create N challenges\n(one for every user that has a View where permission \"can_add_transaction_request_to_any_account\"=true)\nIn case REQUIRED_CHALLENGE_ANSWERS is not defined as an account attribute default value is 1.\n\nTransaction Requests contain charge information giving the client the opportunity to proceed or not (as long as the challenge level is appropriate).\n\nTransaction Requests can have one of several Transaction Request Types which expect different bodies. The escaped body is returned in the details key of the GET response.\nThis provides some commonality and one URL for many different payment or transfer types with enough flexibility to validate them differently.\n\nThe payer is set in the URL. Money comes out of the BANK_ID and ACCOUNT_ID specified in the URL.\n\nIn sandbox mode, TRANSACTION_REQUEST_TYPE is commonly set to ACCOUNT. See getTransactionRequestTypesSupportedByBank for all supported types.\n\nIn sandbox mode, if the amount is less than 1000 EUR (any currency, unless it is set differently on this server), the transaction request will create a transaction without a challenge, else the Transaction Request will be set to INITIALISED and a challenge will need to be answered.\n\nIf a challenge is created you must answer it using Answer Transaction Request Challenge before the Transaction is created.\n\nYou can transfer between different currency accounts. (new in 2.0.0). The currency in body must match the sending account.\n\nThe following static FX rates are available in sandbox mode:\n\nhttps://obp-apiexplorer.joinfincubator.com/more?version=OBPv4.0.0&list-all-banks=false&core=&psd2=&obwg=#OBPv2_2_0-getCurrentFxRate\n\n\nTransaction Requests satisfy PSD2 requirements thus:\n\n1) A transaction can be initiated by a third party application.\n\n2) The customer is informed of the charge that will incurred.\n\n3) The call supports delegated authentication (OAuth)\n\nSee [this python code](https://github.com/OpenBankProject/Hello-OBP-DirectLogin-Python/blob/master/hello_payments.py) for a complete example of this flow.\n\nThere is further documentation [here](https://github.com/OpenBankProject/OBP-API/wiki/Transaction-Requests)\n\n\n\n       \n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[ACCOUNT_OTP](/glossary#account_otp): \n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[VIEW_ID](/glossary#this_view_id): owner\n\n\n\n\n\n**JSON request body fields:**\n\n\n\n[**account_id**](/glossary#): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[**amount**](/glossary#): 10.12\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**to**](/glossary#to): \n\n\n\n[**value**](/glossary#): 5987953\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**account**](/glossary#Account): \n\n\n\n[**account_id**](/glossary#): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[**allowed_attempts**](/glossary#allowed_attempts): 5\n\n\n\n[**amount**](/glossary#): 10.12\n\n\n\n[**bank_code**](/glossary#bank_code): CGHZ\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**branch_number**](/glossary#branch_number): \n\n\n\n[**challenge_type**](/glossary#challenge_type): \n\n\n\n[**challenges**](/glossary#): challenges\n\n\n\n[**charge**](/glossary#charge): \n\n\n\n[**counterparty_id**](/glossary#): 9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**creditorAccount**](/glossary#creditoraccount): \n\n\n\n[**creditorName**](/glossary#creditorname): \n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**date_of_birth**](/glossary#): 2018-03-09\n\n\n\n[**debtorAccount**](/glossary#debtoraccount): \n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**details**](/glossary#details): \n\n\n\n[**end_date**](/glossary#end_date): \n\n\n\n[**from**](/glossary#from): \n\n\n\n[**future_date**](/glossary#future_date): 20200127\n\n\n\n[**iban**](/glossary#): DE91 1000 0000 0123 4567 89\n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**instructedAmount**](/glossary#instructedamount): 100\n\n\n\n[**kyc_document**](/glossary#kyc_document): \n\n\n\n[**legal_name**](/glossary#): Eveline Tripman\n\n\n\n[**link**](/glossary#link): \n\n\n\n[**message**](/glossary#message): 123456\n\n\n\n[**mobile_phone_number**](/glossary#mobile_phone_number): +49 30 901820\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**nickname**](/glossary#nickname): \n\n\n\n[**number**](/glossary#number): \n\n\n\n[**start_date**](/glossary#): 2020-01-27\n\n\n\n[**status**](/glossary#status): \n\n\n\n[**summary**](/glossary#summary): \n\n\n\n[**to**](/glossary#to): \n\n\n\n[**transaction_ids**](/glossary#transaction_ids): \n\n\n\n[**transfer_type**](/glossary#transfer_type): \n\n\n\n[**type**](/glossary#type): \n\n\n\n[**user_id**](/glossary#): 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\n\n\n\n[**value**](/glossary#): 5987953\n\n\n\n[to_counterparty](/glossary#to_counterparty): \n\n\n\n[to_sandbox_tan](/glossary#to_sandbox_tan): \n\n\n\n[to_sepa](/glossary#to_sepa): \n\n\n\n[to_sepa_credit_transfers](/glossary#to_sepa_credit_transfers): \n\n\n\n[to_simple](/glossary#): to_simple\n\n\n\n[to_transfer_to_account](/glossary#to_transfer_to_account): \n\n\n\n[to_transfer_to_atm](/glossary#to_transfer_to_atm): \n\n\n\n[to_transfer_to_phone](/glossary#to_transfer_to_phone): \n\n\n",
      "example_request_body": {
        "to": {
          "bank_id": "gh.29.uk",
          "account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
        },
        "value": {
          "currency": "EUR",
          "amount": "0"
        },
        "description": "this is for work"
      },
      "success_response_body": {
        "id": "4050046c-63b3-4868-8a22-14b4181d33a6",
        "type": "SANDBOX_TAN",
        "from": {
          "bank_id": "gh.29.uk",
          "account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
        },
        "details": {
          "to_sandbox_tan": {
            "bank_id": "String",
            "account_id": "String"
          },
          "to_sepa": {
            "iban": "String"
          },
          "to_counterparty": {
            "counterparty_id": "9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh"
          },
          "to_transfer_to_phone": {
            "value": {
              "currency": "EUR",
              "amount": "0"
            },
            "description": "String",
            "message": "String",
            "from": {
              "mobile_phone_number": "+44 07972 444 876",
              "nickname": "String"
            },
            "to": {
              "mobile_phone_number": "+44 07972 444 876"
            }
          },
          "to_transfer_to_atm": {
            "value": {
              "currency": "EUR",
              "amount": "0"
            },
            "description": "String",
            "message": "String",
            "from": {
              "mobile_phone_number": "+44 07972 444 876",
              "nickname": "String"
            },
            "to": {
              "legal_name": "Eveline Tripman",
              "date_of_birth": "20181230",
              "mobile_phone_number": "+44 07972 444 876",
              "kyc_document": {
                "type": "String",
                "number": "String"
              }
            }
          },
          "to_transfer_to_account": {
            "value": {
              "currency": "EUR",
              "amount": "0"
            },
            "description": "String",
            "transfer_type": "String",
            "future_date": "20181230",
            "to": {
              "name": "String",
              "bank_code": "String",
              "branch_number": "String",
              "account": {
                "number": "String",
                "iban": "String"
              }
            }
          },
          "to_sepa_credit_transfers": {
            "debtorAccount": {
              "iban": "12345"
            },
            "instructedAmount": {
              "currency": "EUR",
              "amount": "0"
            },
            "creditorAccount": {
              "iban": "54321"
            },
            "creditorName": "John Miles"
          },
          "value": {
            "currency": "EUR",
            "amount": "100"
          },
          "description": "String"
        },
        "transaction_ids": ["902ba3bb-dedd-45e7-9319-2fd3f2cd98a1"],
        "status": "COMPLETED",
        "start_date": "1100-01-01T00:00:00Z",
        "end_date": "1100-01-01T00:00:00Z",
        "challenges": [
          {
            "id": "2fg8a7e4-6d02-40e3-a129-0b2bf89de8ub",
            "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
            "allowed_attempts": 3,
            "challenge_type": "OBP_TRANSACTION_REQUEST_CHALLENGE",
            "link": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transaction-request-types/TRANSACTION_REQUEST_TYPE/transaction-requests/TRANSACTION_REQUEST_ID/challenge"
          }
        ],
        "charge": {
          "summary": "Rent the flat",
          "value": {
            "currency": "EUR",
            "amount": "0"
          }
        }
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30111: Invalid Bank Id. The BANK_ID should only contain 0-9/a-z/A-Z/'-'/'.'/'_', the length should be smaller than 255.",
        "OBP-30110: Invalid Account Id. The ACCOUNT_ID should only contain 0-9/a-z/A-Z/'-'/'.'/'_', the length should be smaller than 255.",
        "OBP-10001: Incorrect json format.",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30003: Account not found. Please specify a valid value for ACCOUNT_ID.",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-40002: Insufficient authorisation to create TransactionRequest. The Transaction Request could not be created because the login user doesn't have access to the view of the from account or the view don't have the `canAddTransactionRequestToAnyAccount` permission or your consumer doesn't not have the access to the view of the from account or you don't have the role CanCreateAnyTransactionRequest.",
        "OBP-40001: Invalid value for TRANSACTION_REQUEST_TYPE",
        "OBP-10001: Incorrect json format.",
        "OBP-10002: Invalid Number. Could not convert value to a number.",
        "OBP-40008: Can't send a payment with a value of 0 or less.",
        "OBP-40003: Transaction Request Currency must be the same as From Account Currency.",
        "OBP-00003: Transaction Requests is disabled in this API instance.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Transaction-Request", "Payment Initiation Service (PIS)", "PSD2", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "to": {
            "type": "object",
            "properties": {
              "bank_id": {
                "type": "string"
              },
              "account_id": {
                "type": "string"
              }
            }
          },
          "description": {
            "type": "string"
          },
          "value": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string"
              },
              "amount": {
                "type": "string"
              }
            }
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "challenges": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "challenge_type": {
                  "type": "string"
                },
                "link": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "allowed_attempts": {
                  "type": "integer"
                },
                "user_id": {
                  "type": "string"
                }
              }
            }
          },
          "status": {
            "type": "string"
          },
          "end_date": {
            "type": "string",
            "format": "date-time"
          },
          "charge": {
            "type": "object",
            "properties": {
              "summary": {
                "type": "string"
              },
              "value": {
                "type": "object",
                "properties": {
                  "currency": {
                    "type": "string"
                  },
                  "amount": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "transaction_ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "from": {
            "type": "object",
            "properties": {
              "bank_id": {
                "type": "string"
              },
              "account_id": {
                "type": "string"
              }
            }
          },
          "details": {
            "type": "object",
            "properties": {
              "to_sandbox_tan": {
                "type": "object",
                "properties": {
                  "account_id": {
                    "type": "string"
                  },
                  "bank_id": {
                    "type": "string"
                  }
                }
              },
              "value": {
                "type": "object",
                "properties": {
                  "currency": {
                    "type": "string"
                  },
                  "amount": {
                    "type": "string"
                  }
                }
              },
              "to_transfer_to_phone": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  },
                  "from": {
                    "type": "object",
                    "properties": {
                      "nickname": {
                        "type": "string"
                      },
                      "mobile_phone_number": {
                        "type": "string"
                      }
                    }
                  },
                  "to": {
                    "type": "object",
                    "properties": {
                      "mobile_phone_number": {
                        "type": "string"
                      }
                    }
                  },
                  "value": {
                    "type": "object",
                    "properties": {
                      "currency": {
                        "type": "string"
                      },
                      "amount": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "to_sepa": {
                "type": "object",
                "properties": {
                  "iban": {
                    "type": "string"
                  }
                }
              },
              "description": {
                "type": "string"
              },
              "to_counterparty": {
                "type": "object",
                "properties": {
                  "counterparty_id": {
                    "type": "string"
                  }
                }
              },
              "to_transfer_to_account": {
                "type": "object",
                "properties": {
                  "to": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "account": {
                        "type": "object",
                        "properties": {
                          "number": {
                            "type": "string"
                          },
                          "iban": {
                            "type": "string"
                          }
                        }
                      },
                      "bank_code": {
                        "type": "string"
                      },
                      "branch_number": {
                        "type": "string"
                      }
                    }
                  },
                  "transfer_type": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "future_date": {
                    "type": "string"
                  },
                  "value": {
                    "type": "object",
                    "properties": {
                      "currency": {
                        "type": "string"
                      },
                      "amount": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "to_sepa_credit_transfers": {
                "type": "object",
                "properties": {
                  "instructedAmount": {
                    "type": "object",
                    "properties": {
                      "currency": {
                        "type": "string"
                      },
                      "amount": {
                        "type": "string"
                      }
                    }
                  },
                  "debtorAccount": {
                    "type": "object",
                    "properties": {
                      "iban": {
                        "type": "string"
                      }
                    }
                  },
                  "creditorAccount": {
                    "type": "object",
                    "properties": {
                      "iban": {
                        "type": "string"
                      }
                    }
                  },
                  "creditorName": {
                    "type": "string"
                  }
                }
              },
              "to_transfer_to_atm": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  },
                  "from": {
                    "type": "object",
                    "properties": {
                      "nickname": {
                        "type": "string"
                      },
                      "mobile_phone_number": {
                        "type": "string"
                      }
                    }
                  },
                  "value": {
                    "type": "object",
                    "properties": {
                      "currency": {
                        "type": "string"
                      },
                      "amount": {
                        "type": "string"
                      }
                    }
                  },
                  "to": {
                    "type": "object",
                    "properties": {
                      "date_of_birth": {
                        "type": "string"
                      },
                      "kyc_document": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string"
                          },
                          "number": {
                            "type": "string"
                          }
                        }
                      },
                      "legal_name": {
                        "type": "string"
                      },
                      "mobile_phone_number": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "start_date": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transaction-request-types/ACCOUNT_OTP/transaction-requests",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv5.0.0-getUserAuthContexts",
      "implemented_by": {
        "version": "OBPv5.0.0",
        "function": "getUserAuthContexts"
      },
      "request_verb": "GET",
      "request_url": "/obp/v5.0.0/users/USER_ID/auth-context",
      "summary": "Get User Auth Contexts",
      "description": "<p>Get User Auth Contexts for a User.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#User.user_id\">USER_ID</a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>consumer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>key</strong></a>: CustomerNumber</p>\n<p><a href=\"/glossary#\"><strong>time_stamp</strong></a>: 1100-01-01T01:01:01.000Z</p>\n<p><a href=\"/glossary#user_auth_context_id\"><strong>user_auth_context_id</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n",
      "description_markdown": "Get User Auth Contexts for a User.\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[USER_ID](/glossary#User.user_id): 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**consumer_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**key**](/glossary#): CustomerNumber\n\n\n\n[**time_stamp**](/glossary#): 1100-01-01T01:01:01.000Z\n\n\n\n[**user_auth_context_id**](/glossary#user_auth_context_id): \n\n\n\n[**user_id**](/glossary#): 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\n\n\n\n[**value**](/glossary#): 5987953\n\n\n",
      "success_response_body": {
        "user_auth_context_id": "613c83ea-80f9-4560-8404-b9cd4ec42a7f",
        "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
        "key": "CUSTOMER_NUMBER",
        "value": "78987432",
        "time_stamp": "1100-01-01T00:00:00Z",
        "consumer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["User", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "consumer_id": {
            "type": "string"
          },
          "time_stamp": {
            "type": "string",
            "format": "date-time"
          },
          "key": {
            "type": "string"
          },
          "user_auth_context_id": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanGetUserAuthContext",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/users/USER_ID/auth-context",
      "connector_methods": ["obp.getUserAuthContexts", "obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv5.1.0-unlockUserByProviderAndUsername",
      "implemented_by": {
        "version": "OBPv5.1.0",
        "function": "unlockUserByProviderAndUsername"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v5.1.0/users/PROVIDER/USERNAME/lock-status",
      "summary": "Unlock the user",
      "description": "<p>Unlock a User.</p>\n<p>(Perhaps the user was locked due to multiple failed login attempts)</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#provider\">PROVIDER</a>: ETHEREUM</p>\n<p><a href=\"/glossary#\">USERNAME</a>: felixsmith</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#bad_attempts_since_last_success_or_reset\"><strong>bad_attempts_since_last_success_or_reset</strong></a>:</p>\n<p><a href=\"/glossary#last_failure_date\"><strong>last_failure_date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#\"><strong>username</strong></a>: felixsmith</p>\n",
      "description_markdown": "Unlock a User.\n\n(Perhaps the user was locked due to multiple failed login attempts)\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[PROVIDER](/glossary#provider): ETHEREUM\n\n\n\n[USERNAME](/glossary#): felixsmith\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**bad_attempts_since_last_success_or_reset**](/glossary#bad_attempts_since_last_success_or_reset): \n\n\n\n[**last_failure_date**](/glossary#last_failure_date): 2020-01-27\n\n\n\n[**username**](/glossary#): felixsmith\n\n\n",
      "success_response_body": {
        "username": "felixsmith",
        "bad_attempts_since_last_success_or_reset": 0,
        "last_failure_date": "1100-01-01T01:01:01Z"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20027: User not found by provider and username.",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["User", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "last_failure_date": {
            "type": "string",
            "format": "date-time"
          },
          "bad_attempts_since_last_success_or_reset": {
            "type": "integer"
          },
          "username": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanUnlockUser",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/users/PROVIDER/USERNAME/lock-status",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv4.0.0-getTransactionRequestAttributeById",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getTransactionRequestAttributeById"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/transaction-requests/TRANSACTION_REQUEST_ID/attributes/ATTRIBUTE_ID",
      "summary": "Get Transaction Request Attribute By Id",
      "description": "<p>Get Transaction Request Attribute By Id</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Adapter.card_attribute_id\">ATTRIBUTE_ID</a>:</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#\">TRANSACTION_REQUEST_ID</a>: 8138a7e4-6d02-40e3-a129-0b2bf89de9f1</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#\"><strong>transaction_request_attribute_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n",
      "description_markdown": "Get Transaction Request Attribute By Id\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[ATTRIBUTE_ID](/glossary#Adapter.card_attribute_id): \n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[TRANSACTION_REQUEST_ID](/glossary#): 8138a7e4-6d02-40e3-a129-0b2bf89de9f1\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**transaction_request_attribute_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**type**](/glossary#type): \n\n\n\n[**value**](/glossary#): 5987953\n\n\n",
      "success_response_body": {
        "transaction_request_attribute_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "name": "HOUSE_RENT",
        "type": "DATE_WITH_DAY",
        "value": "123456789"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["Transaction-Request", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "transaction_request_attribute_id": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanGetTransactionRequestAttributeAtOneBank",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/transaction-requests/TRANSACTION_REQUEST_ID/attributes/ATTRIBUTE_ID",
      "connector_methods": ["obp.getTransactionRequestAttributeById"]
    },
    {
      "operation_id": "OBPv4.0.0-updateAtmSupportedLanguages",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "updateAtmSupportedLanguages"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/atms/ATM_ID/supported-languages",
      "summary": "Update ATM Supported Languages",
      "description": "<p>Update ATM Supported Languages.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#atm_id\">ATM_ID</a>: atme0352a-9a0f-4bfa-b30b-9003aa467f51</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#atm_id\"><strong>atm_id</strong></a>: atme0352a-9a0f-4bfa-b30b-9003aa467f51</p>\n<p><a href=\"/glossary#supported_languages\"><strong>supported_languages</strong></a>: [&quot;es&quot;,&quot;fr&quot;,&quot;de&quot;]</p>\n",
      "description_markdown": "Update ATM Supported Languages.\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ATM_ID](/glossary#atm_id): atme0352a-9a0f-4bfa-b30b-9003aa467f51\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**atm_id**](/glossary#atm_id): atme0352a-9a0f-4bfa-b30b-9003aa467f51\n\n\n\n[**supported_languages**](/glossary#supported_languages): [\"es\",\"fr\",\"de\"]\n\n\n",
      "example_request_body": {
        "supported_languages": ["es", "fr", "de"]
      },
      "success_response_body": {
        "atm_id": "atme0352a-9a0f-4bfa-b30b-9003aa467f51",
        "supported_languages": ["es", "fr", "de"]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["ATM", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "supported_languages": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "atm_id": {
            "type": "string"
          },
          "supported_languages": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/atms/ATM_ID/supported-languages",
      "connector_methods": ["obp.updateAtmSupportedLanguages", "obp.getAtm"]
    },
    {
      "operation_id": "OBPv4.0.0-updateTransactionRequestAttribute",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "updateTransactionRequestAttribute"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/transaction-requests/TRANSACTION_REQUEST_ID/attributes/ATTRIBUTE_ID",
      "summary": "Update Transaction Request Attribute",
      "description": "<p>Update Transaction Request Attribute</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Adapter.card_attribute_id\">ATTRIBUTE_ID</a>:</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#\">TRANSACTION_REQUEST_ID</a>: 8138a7e4-6d02-40e3-a129-0b2bf89de9f1</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#\"><strong>transaction_request_attribute_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n",
      "description_markdown": "Update Transaction Request Attribute\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[ATTRIBUTE_ID](/glossary#Adapter.card_attribute_id): \n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[TRANSACTION_REQUEST_ID](/glossary#): 8138a7e4-6d02-40e3-a129-0b2bf89de9f1\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**transaction_request_attribute_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**type**](/glossary#type): \n\n\n\n[**value**](/glossary#): 5987953\n\n\n",
      "example_request_body": {
        "name": "HOUSE_RENT",
        "type": "DATE_WITH_DAY",
        "value": "123456789"
      },
      "success_response_body": {
        "transaction_request_attribute_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "name": "HOUSE_RENT",
        "type": "DATE_WITH_DAY",
        "value": "123456789"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["Transaction-Request", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "transaction_request_attribute_id": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanUpdateTransactionRequestAttributeAtOneBank",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/transaction-requests/TRANSACTION_REQUEST_ID/attributes/ATTRIBUTE_ID",
      "connector_methods": [
        "obp.createOrUpdateTransactionRequestAttribute",
        "obp.getTransactionRequestAttributeById"
      ]
    },
    {
      "operation_id": "OBPv2.0.0-getSocialMediaHandles",
      "implemented_by": {
        "version": "OBPv2.0.0",
        "function": "getSocialMediaHandles"
      },
      "request_verb": "GET",
      "request_url": "/obp/v2.0.0/banks/BANK_ID/customers/CUSTOMER_ID/social_media_handles",
      "summary": "Get Customer Social Media Handles",
      "description": "<p>Get social media handles for a customer specified by CUSTOMER_ID.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#Customer.customer_id\">CUSTOMER_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#checks\"><strong>checks</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>customer_number</strong></a>: 5987953</p>\n<p><a href=\"/glossary#date_activated\"><strong>date_activated</strong></a>:</p>\n<p><a href=\"/glossary#date_added\"><strong>date_added</strong></a>:</p>\n<p><a href=\"/glossary#handle\"><strong>handle</strong></a>:</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n",
      "description_markdown": "Get social media handles for a customer specified by CUSTOMER_ID.\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[CUSTOMER_ID](/glossary#Customer.customer_id): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**checks**](/glossary#checks): \n\n\n\n[**customer_number**](/glossary#): 5987953\n\n\n\n[**date_activated**](/glossary#date_activated): \n\n\n\n[**date_added**](/glossary#date_added): \n\n\n\n[**handle**](/glossary#handle): \n\n\n\n[**type**](/glossary#type): \n\n\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "checks": [
          {
            "customer_number": "5987953",
            "type": "PlaceholderString",
            "handle": "PlaceholderString",
            "date_added": "1100-01-01T00:00:00Z",
            "date_activated": "1100-01-01T00:00:00Z"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-30046: Customer not found. Please specify a valid value for CUSTOMER_ID.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Customer"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "checks": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "date_added": {
                  "type": "string",
                  "format": "date-time"
                },
                "date_activated": {
                  "type": "string",
                  "format": "date-time"
                },
                "type": {
                  "type": "string"
                },
                "customer_number": {
                  "type": "string"
                },
                "handle": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetSocialMediaHandles",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/customers/CUSTOMER_ID/social_media_handles",
      "connector_methods": ["obp.getBankLegacy"]
    },
    {
      "operation_id": "OBPv4.0.0-createBankAttribute",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "createBankAttribute"
      },
      "request_verb": "POST",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/attribute",
      "summary": "Create Bank Attribute",
      "description": "<p>Create Bank Attribute</p>\n<p>Typical product attributes might be:</p>\n<p>ISIN (for International bonds)<br />\nVKN (for German bonds)<br />\nREDCODE (markit short code for credit derivative)<br />\nLOAN_ID (e.g. used for Anacredit reporting)</p>\n<p>ISSUE_DATE (When the bond was issued in the market)<br />\nMATURITY_DATE (End of life time of a product)<br />\nTRADABLE</p>\n<p>See <a href=\"http://www.fpml.org/\">FPML</a> for more examples.</p>\n<p>The type field must be one of &quot;STRING&quot;, &quot;INTEGER&quot;, &quot;DOUBLE&quot; or DATE_WITH_DAY&quot;</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n<p><a href=\"/glossary#is_active\">is_active</a>: true</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>bank_attribute_id</strong></a>: bank_attribute_id</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n<p><a href=\"/glossary#is_active\">is_active</a>: true</p>\n",
      "description_markdown": "Create Bank Attribute\n\nTypical product attributes might be:\n\nISIN (for International bonds)\nVKN (for German bonds)\nREDCODE (markit short code for credit derivative)\nLOAN_ID (e.g. used for Anacredit reporting)\n\nISSUE_DATE (When the bond was issued in the market)\nMATURITY_DATE (End of life time of a product)\nTRADABLE\n\nSee [FPML](http://www.fpml.org/) for more examples.\n\n\nThe type field must be one of \"STRING\", \"INTEGER\", \"DOUBLE\" or DATE_WITH_DAY\"\n\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON request body fields:**\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**type**](/glossary#type): \n\n\n\n[**value**](/glossary#): 5987953\n\n\n\n[is_active](/glossary#is_active): true\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**bank_attribute_id**](/glossary#): bank_attribute_id\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**type**](/glossary#type): \n\n\n\n[**value**](/glossary#): 5987953\n\n\n\n[is_active](/glossary#is_active): true\n\n\n",
      "example_request_body": {
        "name": "TAX_ID",
        "type": "INTEGER",
        "value": "12345678",
        "is_active": true
      },
      "success_response_body": {
        "bank_id": "gh.29.uk",
        "bank_attribute_id": "613c83ea-80f9-4560-8404-b9cd4ec42a7f",
        "name": "OVERDRAFT_START_DATE",
        "type": "DATE_WITH_DAY",
        "value": "2012-04-23",
        "is_active": true
      },
      "error_response_bodies": [
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error.",
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["Bank", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "is_active": {
            "type": "boolean"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "bank_id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "is_active": {
            "type": "boolean"
          },
          "bank_attribute_id": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateBankAttribute",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/attribute",
      "connector_methods": [
        "obp.createOrUpdateBankAttribute",
        "obp.getBank",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv3.1.0-getCustomerByCustomerNumber",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "getCustomerByCustomerNumber"
      },
      "request_verb": "POST",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/customers/customer-number",
      "summary": "Get Customer by CUSTOMER_NUMBER",
      "description": "<p>Gets the Customer specified by CUSTOMER_NUMBER.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>customer_number</strong></a>: 5987953</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#\"><strong>branch_id</strong></a>: DERBY6</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#\"><strong>customer_attribute_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#customer_attributes\"><strong>customer_attributes</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>customer_number</strong></a>: 5987953</p>\n<p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#\"><strong>date_of_birth</strong></a>: 2018-03-09</p>\n<p><a href=\"/glossary#\"><strong>dependants</strong></a>: 1</p>\n<p><a href=\"/glossary#dob_of_dependants\"><strong>dob_of_dependants</strong></a>: [2019-09-08, 2017-07-12]</p>\n<p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"m&#x61;&#x69;lt&#111;:&#102;e&#108;&#105;&#120;&#x73;&#109;&#x69;&#116;&#x68;&#64;&#x65;&#120;&#97;&#x6d;pl&#x65;&#x2e;&#99;&#111;&#x6d;\">&#102;&#x65;l&#105;&#120;&#x73;&#x6d;&#105;t&#104;&#x40;&#x65;&#x78;&#x61;m&#112;&#108;&#x65;&#x2e;c&#111;m</a></p>\n<p><a href=\"/glossary#\"><strong>employment_status</strong></a>: worker</p>\n<p><a href=\"/glossary#face_image\"><strong>face_image</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>highest_education_attained</strong></a>: Master</p>\n<p><a href=\"/glossary#\"><strong>kyc_status</strong></a>: true</p>\n<p><a href=\"/glossary#last_ok_date\"><strong>last_ok_date</strong></a>: 2022-04-13T04:30:07.985Z</p>\n<p><a href=\"/glossary#\"><strong>legal_name</strong></a>: Eveline Tripman</p>\n<p><a href=\"/glossary#mobile_phone_number\"><strong>mobile_phone_number</strong></a>: +49 30 901820</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#\"><strong>name_suffix</strong></a>: Sr</p>\n<p><a href=\"/glossary#\"><strong>rating</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>relationship_status</strong></a>: single</p>\n<p><a href=\"/glossary#\"><strong>source</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>title</strong></a>: Dr.</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>url</strong></a>: <a href=\"http://www.example.com/id-docs/123/image.png\">http://www.example.com/id-docs/123/image.png</a></p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n<p><a href=\"/glossary#credit_limit\">credit_limit</a>:</p>\n<p><a href=\"/glossary#credit_rating\">credit_rating</a>:</p>\n",
      "description_markdown": "Gets the Customer specified by CUSTOMER_NUMBER.\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON request body fields:**\n\n\n\n[**customer_number**](/glossary#): 5987953\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**amount**](/glossary#): 10.12\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**branch_id**](/glossary#): DERBY6\n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**customer_attribute_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**customer_attributes**](/glossary#customer_attributes): \n\n\n\n[**customer_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**customer_number**](/glossary#): 5987953\n\n\n\n[**date**](/glossary#): 2020-01-27\n\n\n\n[**date_of_birth**](/glossary#): 2018-03-09\n\n\n\n[**dependants**](/glossary#): 1\n\n\n\n[**dob_of_dependants**](/glossary#dob_of_dependants): [2019-09-08, 2017-07-12]\n\n\n\n[**email**](/glossary#): felixsmith@example.com\n\n\n\n[**employment_status**](/glossary#): worker\n\n\n\n[**face_image**](/glossary#face_image): \n\n\n\n[**highest_education_attained**](/glossary#): Master\n\n\n\n[**kyc_status**](/glossary#): true\n\n\n\n[**last_ok_date**](/glossary#last_ok_date): 2022-04-13T04:30:07.985Z\n\n\n\n[**legal_name**](/glossary#): Eveline Tripman\n\n\n\n[**mobile_phone_number**](/glossary#mobile_phone_number): +49 30 901820\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**name_suffix**](/glossary#): Sr\n\n\n\n[**rating**](/glossary#): \n\n\n\n[**relationship_status**](/glossary#): single\n\n\n\n[**source**](/glossary#): \n\n\n\n[**title**](/glossary#): Dr.\n\n\n\n[**type**](/glossary#type): \n\n\n\n[**url**](/glossary#): http://www.example.com/id-docs/123/image.png\n\n\n\n[**value**](/glossary#): 5987953\n\n\n\n[credit_limit](/glossary#credit_limit): \n\n\n\n[credit_rating](/glossary#credit_rating): \n\n\n",
      "example_request_body": {
        "customer_number": "5987953"
      },
      "success_response_body": {
        "bank_id": "gh.29.uk",
        "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "customer_number": "5987953",
        "legal_name": "Eveline Tripman",
        "mobile_phone_number": "+44 07972 444 876",
        "email": "felixsmith@example.com",
        "face_image": {
          "url": "www.openbankproject",
          "date": "1100-01-01T00:00:00Z"
        },
        "date_of_birth": "1100-01-01T00:00:00Z",
        "relationship_status": "single",
        "dependants": 1,
        "dob_of_dependants": ["1100-01-01T00:00:00Z"],
        "credit_rating": {
          "rating": "OBP",
          "source": "OBP"
        },
        "credit_limit": {
          "currency": "EUR",
          "amount": "0"
        },
        "highest_education_attained": "Master",
        "employment_status": "worker",
        "kyc_status": true,
        "last_ok_date": "2022-04-13T04:30:08Z",
        "title": "Dr.",
        "branch_id": "DERBY6",
        "name_suffix": "Sr",
        "customer_attributes": [
          {
            "customer_attribute_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
            "name": "SPECIAL_TAX_NUMBER",
            "type": "STRING",
            "value": "123456789"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30008: User Customer Link not found by USER_ID",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["Customer", "KYC", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "customer_number": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "dependants": {
            "type": "integer"
          },
          "customer_attributes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "customer_attribute_id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "dob_of_dependants": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            }
          },
          "face_image": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string"
              },
              "date": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          "credit_limit": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string"
              },
              "amount": {
                "type": "string"
              }
            }
          },
          "employment_status": {
            "type": "string"
          },
          "last_ok_date": {
            "type": "string",
            "format": "date-time"
          },
          "email": {
            "type": "string"
          },
          "customer_id": {
            "type": "string"
          },
          "relationship_status": {
            "type": "string"
          },
          "bank_id": {
            "type": "string"
          },
          "highest_education_attained": {
            "type": "string"
          },
          "customer_number": {
            "type": "string"
          },
          "credit_rating": {
            "type": "object",
            "properties": {
              "rating": {
                "type": "string"
              },
              "source": {
                "type": "string"
              }
            }
          },
          "name_suffix": {
            "type": "string"
          },
          "legal_name": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "branch_id": {
            "type": "string"
          },
          "date_of_birth": {
            "type": "string",
            "format": "date-time"
          },
          "mobile_phone_number": {
            "type": "string"
          },
          "kyc_status": {
            "type": "boolean"
          }
        }
      },
      "roles": [
        {
          "role": "CanGetCustomer",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/customers/customer-number",
      "connector_methods": [
        "obp.getCustomerAttributes",
        "obp.getCustomerByCustomerNumber",
        "obp.getBank",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv4.0.0-getTransactionRequestAttributeDefinition",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getTransactionRequestAttributeDefinition"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/attribute-definitions/transaction-request",
      "summary": "Get Transaction Request Attribute Definition",
      "description": "<p>Get Transaction Request Attribute Definition</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#alias\"><strong>alias</strong></a>:</p>\n<p><a href=\"/glossary#attribute_definition_id\"><strong>attribute_definition_id</strong></a>:</p>\n<p><a href=\"/glossary#attributes\"><strong>attributes</strong></a>: attribute value in form of (name, value)</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#can_be_seen_on_views\"><strong>can_be_seen_on_views</strong></a>: true</p>\n<p><a href=\"/glossary#category\"><strong>category</strong></a>:</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#is_active\"><strong>is_active</strong></a>: true</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n",
      "description_markdown": "Get Transaction Request Attribute Definition\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**alias**](/glossary#alias): \n\n\n\n[**attribute_definition_id**](/glossary#attribute_definition_id): \n\n\n\n[**attributes**](/glossary#attributes): attribute value in form of (name, value)\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**can_be_seen_on_views**](/glossary#can_be_seen_on_views): true\n\n\n\n[**category**](/glossary#category): \n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**is_active**](/glossary#is_active): true\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**type**](/glossary#type): \n\n\n",
      "success_response_body": {
        "attributes": [
          {
            "attribute_definition_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
            "bank_id": "gh.29.uk",
            "name": "SPECIAL_TAX_NUMBER",
            "category": "TransactionRequest",
            "type": "STRING",
            "description": "description",
            "alias": "STRING",
            "can_be_seen_on_views": ["bank"],
            "is_active": true
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["Transaction-Request", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "attributes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "can_be_seen_on_views": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "attribute_definition_id": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "is_active": {
                  "type": "boolean"
                },
                "bank_id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "category": {
                  "type": "string"
                },
                "alias": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetTransactionRequestAttributeDefinitionAtOneBank",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/attribute-definitions/transaction-request",
      "connector_methods": ["obp.getAttributeDefinition"]
    },
    {
      "operation_id": "OBPv4.0.0-deleteBankLevelDynamicEntity",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "deleteBankLevelDynamicEntity"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v4.0.0/management/banks/BANK_ID/dynamic-entities/DYNAMIC_ENTITY_ID",
      "summary": "Delete Bank Level Dynamic Entity",
      "description": "<p>Delete a Bank Level DynamicEntity specified by DYNAMIC_ENTITY_ID.</p>\n<p>Authentication is Mandatory</p>\n",
      "description_markdown": "Delete a Bank Level DynamicEntity specified by DYNAMIC_ENTITY_ID.\n\n\n\nAuthentication is Mandatory",
      "error_response_bodies": [
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Dynamic-Entity-Manage", "API", "New-Style"],
      "roles": [
        {
          "role": "CanDeleteBankLevelDynamicEntity",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/banks/BANK_ID/dynamic-entities/DYNAMIC_ENTITY_ID",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv3.0.0-getTransactionsForBankAccount",
      "implemented_by": {
        "version": "OBPv3.0.0",
        "function": "getTransactionsForBankAccount"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transactions",
      "summary": "Get Transactions for Account (Full)",
      "description": "<p>Returns transactions list of the account specified by ACCOUNT_ID and <a href=\"#1_2_1-getViewsForBankAccount\">moderated</a> by the view (VIEW_ID).</p>\n<p>Authentication is Optional</p>\n<p>Authentication is required if the view is not public.</p>\n<p>Possible custom url parameters for pagination:</p>\n<ul>\n<li>limit=NUMBER ==&gt; default value: 50</li>\n<li>offset=NUMBER ==&gt; default value: 0</li>\n</ul>\n<p>eg1:?limit=100&amp;offset=0</p>\n<ul>\n<li>sort_direction=ASC/DESC ==&gt; default value: DESC.</li>\n</ul>\n<p>eg2:?limit=100&amp;offset=0&amp;sort_direction=ASC</p>\n<ul>\n<li>from_date=DATE =&gt; example value: 1970-01-01T00:00:00.000Z. NOTE! The default value is one year ago (1970-01-01T00:00:00.000Z).</li>\n<li>to_date=DATE =&gt; example value: 2023-04-13T04:30:11.485Z. NOTE! The default value is now (2023-04-13T04:30:11.485Z).</li>\n</ul>\n<p>Date format parameter: yyyy-MM-dd'T'HH:mm:ss.SSS'Z'(1100-01-01T01:01:01.000Z) ==&gt; time zone is UTC.</p>\n<p>eg3:?sort_direction=ASC&amp;limit=100&amp;offset=0&amp;from_date=1100-01-01T01:01:01.000Z&amp;to_date=1100-01-01T01:01:01.000Z</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>URL</strong></a>: <a href=\"http://www.example.com/id-docs/123/image.png\">http://www.example.com/id-docs/123/image.png</a></p>\n<p><a href=\"/glossary#account_routings\"><strong>account_routings</strong></a>:</p>\n<p><a href=\"/glossary#address\"><strong>address</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p>\n<p><a href=\"/glossary#bank_routing\"><strong>bank_routing</strong></a>:</p>\n<p><a href=\"/glossary#comments\"><strong>comments</strong></a>:</p>\n<p><a href=\"/glossary#completed\"><strong>completed</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#corporate_location\"><strong>corporate_location</strong></a>: 10</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#details\"><strong>details</strong></a>:</p>\n<p><a href=\"/glossary#display_name\"><strong>display_name</strong></a>:</p>\n<p><a href=\"/glossary#holder\"><strong>holder</strong></a>:</p>\n<p><a href=\"/glossary#holders\"><strong>holders</strong></a>:</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#image_url\"><strong>image_URL</strong></a>:</p>\n<p><a href=\"/glossary#images\"><strong>images</strong></a>:</p>\n<p><a href=\"/glossary#is_alias\"><strong>is_alias</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>label</strong></a>: My Account</p>\n<p><a href=\"/glossary#latitude\"><strong>latitude</strong></a>: 38.8951</p>\n<p><a href=\"/glossary#longitude\"><strong>longitude</strong></a>: -77.0364</p>\n<p><a href=\"/glossary#metadata\"><strong>metadata</strong></a>:</p>\n<p><a href=\"/glossary#more_info\"><strong>more_info</strong></a>: More information about this fee</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#narrative\"><strong>narrative</strong></a>:</p>\n<p><a href=\"/glossary#new_balance\"><strong>new_balance</strong></a>: 20</p>\n<p><a href=\"/glossary#open_corporates_url\"><strong>open_corporates_URL</strong></a>:</p>\n<p><a href=\"/glossary#other_account\"><strong>other_account</strong></a>:</p>\n<p><a href=\"/glossary#physical_location\"><strong>physical_location</strong></a>:</p>\n<p><a href=\"/glossary#posted\"><strong>posted</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#private_alias\"><strong>private_alias</strong></a>:</p>\n<p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p>\n<p><a href=\"/glossary#public_alias\"><strong>public_alias</strong></a>:</p>\n<p><a href=\"/glossary#scheme\"><strong>scheme</strong></a>: scheme value</p>\n<p><a href=\"/glossary#tags\"><strong>tags</strong></a>: Create-My-User</p>\n<p><a href=\"/glossary#this_account\"><strong>this_account</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>transaction_attribute_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#transaction_attributes\"><strong>transaction_attributes</strong></a>:</p>\n<p><a href=\"/glossary#transactions\"><strong>transactions</strong></a>:</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n<p><a href=\"/glossary#User\"><strong>user</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n<p><a href=\"/glossary#where\"><strong>where</strong></a>:</p>\n",
      "description_markdown": "Returns transactions list of the account specified by ACCOUNT_ID and [moderated](#1_2_1-getViewsForBankAccount) by the view (VIEW_ID).\n\nAuthentication is Optional\n\nAuthentication is required if the view is not public.\n\n\n\nPossible custom url parameters for pagination:\n\n* limit=NUMBER ==> default value: 50\n* offset=NUMBER ==> default value: 0\n\neg1:?limit=100&offset=0\n\n\n* sort_direction=ASC/DESC ==> default value: DESC.\n\neg2:?limit=100&offset=0&sort_direction=ASC\n\n\n\n* from_date=DATE => example value: 1970-01-01T00:00:00.000Z. NOTE! The default value is one year ago (1970-01-01T00:00:00.000Z).\n* to_date=DATE => example value: 2023-04-13T04:30:11.485Z. NOTE! The default value is now (2023-04-13T04:30:11.485Z).\n\nDate format parameter: yyyy-MM-dd'T'HH:mm:ss.SSS'Z'(1100-01-01T01:01:01.000Z) ==> time zone is UTC.\n\neg3:?sort_direction=ASC&limit=100&offset=0&from_date=1100-01-01T01:01:01.000Z&to_date=1100-01-01T01:01:01.000Z\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[VIEW_ID](/glossary#this_view_id): owner\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**URL**](/glossary#): http://www.example.com/id-docs/123/image.png\n\n\n\n[**account_routings**](/glossary#account_routings): \n\n\n\n[**address**](/glossary#address): \n\n\n\n[**amount**](/glossary#): 10.12\n\n\n\n[**bank_routing**](/glossary#bank_routing): \n\n\n\n[**comments**](/glossary#comments): \n\n\n\n[**completed**](/glossary#completed): 2020-01-27\n\n\n\n[**corporate_location**](/glossary#corporate_location): 10\n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**date**](/glossary#): 2020-01-27\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**details**](/glossary#details): \n\n\n\n[**display_name**](/glossary#display_name): \n\n\n\n[**holder**](/glossary#holder): \n\n\n\n[**holders**](/glossary#holders): \n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**image_URL**](/glossary#image_url): \n\n\n\n[**images**](/glossary#images): \n\n\n\n[**is_alias**](/glossary#is_alias): \n\n\n\n[**label**](/glossary#): My Account\n\n\n\n[**latitude**](/glossary#latitude): 38.8951\n\n\n\n[**longitude**](/glossary#longitude): -77.0364\n\n\n\n[**metadata**](/glossary#metadata): \n\n\n\n[**more_info**](/glossary#more_info): More information about this fee\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**narrative**](/glossary#narrative): \n\n\n\n[**new_balance**](/glossary#new_balance): 20\n\n\n\n[**open_corporates_URL**](/glossary#open_corporates_url): \n\n\n\n[**other_account**](/glossary#other_account): \n\n\n\n[**physical_location**](/glossary#physical_location): \n\n\n\n[**posted**](/glossary#posted): 2020-01-27\n\n\n\n[**private_alias**](/glossary#private_alias): \n\n\n\n[**provider**](/glossary#provider): ETHEREUM\n\n\n\n[**public_alias**](/glossary#public_alias): \n\n\n\n[**scheme**](/glossary#scheme): scheme value\n\n\n\n[**tags**](/glossary#tags): Create-My-User\n\n\n\n[**this_account**](/glossary#this_account): \n\n\n\n[**transaction_attribute_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**transaction_attributes**](/glossary#transaction_attributes): \n\n\n\n[**transactions**](/glossary#transactions): \n\n\n\n[**type**](/glossary#type): \n\n\n\n[**user**](/glossary#User): \n\n\n\n[**value**](/glossary#): 5987953\n\n\n\n[**where**](/glossary#where): \n\n\n",
      "success_response_body": {
        "transactions": [
          {
            "id": "String",
            "this_account": {
              "id": "String",
              "bank_routing": {
                "scheme": "scheme value",
                "address": ""
              },
              "account_routings": [
                {
                  "scheme": "AccountNumber",
                  "address": "4930396"
                }
              ],
              "holders": [
                {
                  "name": "OBP",
                  "is_alias": true
                }
              ]
            },
            "other_account": {
              "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
              "holder": {
                "name": "OBP",
                "is_alias": true
              },
              "bank_routing": {
                "scheme": "scheme value",
                "address": ""
              },
              "account_routings": [
                {
                  "scheme": "AccountNumber",
                  "address": "4930396"
                }
              ],
              "metadata": {
                "public_alias": "NONE",
                "private_alias": "NONE",
                "more_info": "www.openbankproject.com",
                "URL": "www.openbankproject.com",
                "image_URL": "www.openbankproject.com",
                "open_corporates_URL": "www.openbankproject.com",
                "corporate_location": {
                  "latitude": 1.231,
                  "longitude": 1.231,
                  "date": "1100-01-01T00:00:00Z",
                  "user": {
                    "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
                    "provider": "http://127.0.0.1:8080",
                    "display_name": "OBP"
                  }
                },
                "physical_location": {
                  "latitude": 1.231,
                  "longitude": 1.231,
                  "date": "1100-01-01T00:00:00Z",
                  "user": {
                    "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
                    "provider": "http://127.0.0.1:8080",
                    "display_name": "OBP"
                  }
                }
              }
            },
            "details": {
              "type": "AC",
              "description": "this is for family",
              "posted": "1100-01-01T00:00:00Z",
              "completed": "1100-01-01T00:00:00Z",
              "new_balance": {
                "currency": "EUR",
                "amount": "0"
              },
              "value": {
                "currency": "EUR",
                "amount": "0"
              }
            },
            "metadata": {
              "narrative": "NONE",
              "comments": [
                {
                  "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
                  "value": "OBP",
                  "date": "1100-01-01T00:00:00Z",
                  "user": {
                    "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
                    "provider": "http://127.0.0.1:8080",
                    "display_name": "OBP"
                  }
                }
              ],
              "tags": [
                {
                  "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
                  "value": "OBP",
                  "date": "1100-01-01T00:00:00Z",
                  "user": {
                    "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
                    "provider": "http://127.0.0.1:8080",
                    "display_name": "OBP"
                  }
                }
              ],
              "images": [
                {
                  "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
                  "label": "NONE",
                  "URL": "www.openbankproject.com",
                  "date": "1100-01-01T00:00:00Z",
                  "user": {
                    "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
                    "provider": "http://127.0.0.1:8080",
                    "display_name": "OBP"
                  }
                }
              ],
              "where": {
                "latitude": 1.231,
                "longitude": 1.231,
                "date": "1100-01-01T00:00:00Z",
                "user": {
                  "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
                  "provider": "http://127.0.0.1:8080",
                  "display_name": "OBP"
                }
              }
            },
            "transaction_attributes": [
              {
                "transaction_attribute_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
                "name": "HOUSE_RENT",
                "type": "DATE_WITH_DAY",
                "value": "123456789"
              }
            ]
          }
        ]
      },
      "error_response_bodies": [
        "OBP-10023: obp_sort_direction parameter can only take two values: DESC or ASC!",
        "OBP-10024: wrong value for obp_offset parameter. Please send a positive integer (=>0)!",
        "OBP-10025: wrong value for obp_limit parameter. Please send a positive integer (=>1)!",
        "OBP-10026: Failed to parse date string. Please use this format yyyy-MM-dd'T'HH:mm:ss.SSS'Z'!",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-30005: View not found for Account. Please specify a valid value for VIEW_ID",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Transaction", "Account", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "transactions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "metadata": {
                  "type": "object",
                  "properties": {
                    "narrative": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          },
                          "date": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "user": {
                            "type": "object",
                            "properties": {
                              "provider": {
                                "type": "string"
                              },
                              "display_name": {
                                "type": "string"
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "comments": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          },
                          "date": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "user": {
                            "type": "object",
                            "properties": {
                              "provider": {
                                "type": "string"
                              },
                              "display_name": {
                                "type": "string"
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "images": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "URL": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "date": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "user": {
                            "type": "object",
                            "properties": {
                              "provider": {
                                "type": "string"
                              },
                              "display_name": {
                                "type": "string"
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          },
                          "label": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "where": {
                      "type": "object",
                      "properties": {
                        "longitude": {
                          "type": "number"
                        },
                        "date": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "latitude": {
                          "type": "number"
                        },
                        "user": {
                          "type": "object",
                          "properties": {
                            "provider": {
                              "type": "string"
                            },
                            "display_name": {
                              "type": "string"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "details": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "posted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "new_balance": {
                      "type": "object",
                      "properties": {
                        "currency": {
                          "type": "string"
                        },
                        "amount": {
                          "type": "string"
                        }
                      }
                    },
                    "completed": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "value": {
                      "type": "object",
                      "properties": {
                        "currency": {
                          "type": "string"
                        },
                        "amount": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "transaction_attributes": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "transaction_attribute_id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      },
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                "other_account": {
                  "type": "object",
                  "properties": {
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "image_URL": {
                          "type": "string"
                        },
                        "corporate_location": {
                          "type": "object",
                          "properties": {
                            "longitude": {
                              "type": "number"
                            },
                            "date": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "latitude": {
                              "type": "number"
                            },
                            "user": {
                              "type": "object",
                              "properties": {
                                "provider": {
                                  "type": "string"
                                },
                                "display_name": {
                                  "type": "string"
                                },
                                "id": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        "URL": {
                          "type": "string"
                        },
                        "open_corporates_URL": {
                          "type": "string"
                        },
                        "physical_location": {
                          "type": "object",
                          "properties": {
                            "longitude": {
                              "type": "number"
                            },
                            "date": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "latitude": {
                              "type": "number"
                            },
                            "user": {
                              "type": "object",
                              "properties": {
                                "provider": {
                                  "type": "string"
                                },
                                "display_name": {
                                  "type": "string"
                                },
                                "id": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        "public_alias": {
                          "type": "string"
                        },
                        "private_alias": {
                          "type": "string"
                        },
                        "more_info": {
                          "type": "string"
                        }
                      }
                    },
                    "bank_routing": {
                      "type": "object",
                      "properties": {
                        "scheme": {
                          "type": "string"
                        },
                        "address": {
                          "type": "string"
                        }
                      }
                    },
                    "holder": {
                      "type": "object",
                      "properties": {
                        "is_alias": {
                          "type": "boolean"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "id": {
                      "type": "string"
                    },
                    "account_routings": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "scheme": {
                            "type": "string"
                          },
                          "address": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "this_account": {
                  "type": "object",
                  "properties": {
                    "bank_routing": {
                      "type": "object",
                      "properties": {
                        "scheme": {
                          "type": "string"
                        },
                        "address": {
                          "type": "string"
                        }
                      }
                    },
                    "holders": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "is_alias": {
                            "type": "boolean"
                          },
                          "name": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "id": {
                      "type": "string"
                    },
                    "account_routings": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "scheme": {
                            "type": "string"
                          },
                          "address": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transactions",
      "connector_methods": [
        "obp.getTransactionAttributes",
        "obp.getTransactions",
        "obp.checkBankAccountExists",
        "obp.getBank",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv4.0.0-createOrUpdateCardAttributeDefinition",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "createOrUpdateCardAttributeDefinition"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/attribute-definitions/card",
      "summary": "Create or Update Card Attribute Definition",
      "description": "<p>Create or Update Card Attribute Definition</p>\n<p>The category field must be Card</p>\n<p>The type field must be one of; DOUBLE, STRING, INTEGER and DATE_WITH_DAY</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#alias\"><strong>alias</strong></a>:</p>\n<p><a href=\"/glossary#attribute_definition_id\"><strong>attribute_definition_id</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#can_be_seen_on_views\"><strong>can_be_seen_on_views</strong></a>: true</p>\n<p><a href=\"/glossary#category\"><strong>category</strong></a>:</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#is_active\"><strong>is_active</strong></a>: true</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n",
      "description_markdown": "Create or Update Card Attribute Definition\n\nThe category field must be Card\n\nThe type field must be one of; DOUBLE, STRING, INTEGER and DATE_WITH_DAY\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**alias**](/glossary#alias): \n\n\n\n[**attribute_definition_id**](/glossary#attribute_definition_id): \n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**can_be_seen_on_views**](/glossary#can_be_seen_on_views): true\n\n\n\n[**category**](/glossary#category): \n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**is_active**](/glossary#is_active): true\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**type**](/glossary#type): \n\n\n",
      "example_request_body": {
        "name": "SPECIAL_TAX_NUMBER",
        "category": "Card",
        "type": "STRING",
        "description": "description",
        "alias": "STRING",
        "can_be_seen_on_views": ["bank"],
        "is_active": true
      },
      "success_response_body": {
        "attribute_definition_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
        "bank_id": "gh.29.uk",
        "name": "SPECIAL_TAX_NUMBER",
        "category": "Card",
        "type": "STRING",
        "description": "description",
        "alias": "STRING",
        "can_be_seen_on_views": ["bank"],
        "is_active": true
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["Card", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "can_be_seen_on_views": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "description": {
            "type": "string"
          },
          "is_active": {
            "type": "boolean"
          },
          "category": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "alias": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "can_be_seen_on_views": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "attribute_definition_id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "is_active": {
            "type": "boolean"
          },
          "category": {
            "type": "string"
          },
          "bank_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "alias": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateCardAttributeDefinitionAtOneBank",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/attribute-definitions/card",
      "connector_methods": ["obp.createOrUpdateAttributeDefinition"]
    },
    {
      "operation_id": "OBPv4.0.0-getBankAttribute",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getBankAttribute"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/attributes/BANK_ATTRIBUTE_ID",
      "summary": "Get Bank Attribute By BANK_ATTRIBUTE_ID",
      "description": "<p>Get Bank Attribute By BANK_ATTRIBUTE_ID</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#\">BANK_ATTRIBUTE_ID</a>: BANK_ATTRIBUTE_ID</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#\"><strong>transaction_attribute_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#transaction_attributes\"><strong>transaction_attributes</strong></a>:</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n",
      "description_markdown": "Get Bank Attribute By BANK_ATTRIBUTE_ID\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ATTRIBUTE_ID](/glossary#): BANK_ATTRIBUTE_ID\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**transaction_attribute_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**transaction_attributes**](/glossary#transaction_attributes): \n\n\n\n[**type**](/glossary#type): \n\n\n\n[**value**](/glossary#): 5987953\n\n\n",
      "success_response_body": {
        "transaction_attributes": [
          {
            "transaction_attribute_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
            "name": "HOUSE_RENT",
            "type": "DATE_WITH_DAY",
            "value": "123456789"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["Bank", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "transaction_attributes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "transaction_attribute_id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetBankAttribute",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/attributes/BANK_ATTRIBUTE_ID",
      "connector_methods": ["obp.getBankAttributeById"]
    },
    {
      "operation_id": "OBPv4.0.0-updateDynamicEndpointHost",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "updateDynamicEndpointHost"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v4.0.0/management/dynamic-endpoints/DYNAMIC_ENDPOINT_ID/host",
      "summary": " Update Dynamic Endpoint Host",
      "description": "<p>Update dynamic endpoint Host.<br />\nThe value can be obp_mock, dynamic_entity, or some service url.</p>\n<p>Authentication is Mandatory</p>\n",
      "description_markdown": "Update dynamic endpoint Host.\nThe value can be obp_mock, dynamic_entity, or some service url.\n\n\nAuthentication is Mandatory",
      "example_request_body": {
        "host": "dynamic_entity"
      },
      "success_response_body": {
        "host": "dynamic_entity"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-09001: DynamicEntity not found. Please specify a valid value for DYNAMIC_ENTITY_ID.",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Dynamic-Endpoint-Manage", "API", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "host": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "host": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanUpdateDynamicEndpoint",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/dynamic-endpoints/DYNAMIC_ENDPOINT_ID/host",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv4.0.0-updateTransactionAttribute",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "updateTransactionAttribute"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/transactions/TRANSACTION_ID/attributes/ACCOUNT_ATTRIBUTE_ID",
      "summary": "Update Transaction Attribute",
      "description": "<p>Update Transaction Attribute</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#account_attribute_id\">ACCOUNT_ATTRIBUTE_ID</a>:</p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#transaction_ids\">TRANSACTION_ID</a>: 2fg8a7e4-6d02-40e3-a129-0b2bf89de8ub</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#\"><strong>transaction_attribute_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n",
      "description_markdown": "Update Transaction Attribute\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ACCOUNT_ATTRIBUTE_ID](/glossary#account_attribute_id): \n\n\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[TRANSACTION_ID](/glossary#transaction_ids): 2fg8a7e4-6d02-40e3-a129-0b2bf89de8ub\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**transaction_attribute_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**type**](/glossary#type): \n\n\n\n[**value**](/glossary#): 5987953\n\n\n",
      "example_request_body": {
        "name": "HOUSE_RENT",
        "type": "DATE_WITH_DAY",
        "value": "123456789"
      },
      "success_response_body": {
        "transaction_attribute_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "name": "HOUSE_RENT",
        "type": "DATE_WITH_DAY",
        "value": "123456789"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["Transaction", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "transaction_attribute_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanUpdateTransactionAttributeAtOneBank",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/transactions/TRANSACTION_ID/attributes/ACCOUNT_ATTRIBUTE_ID",
      "connector_methods": [
        "obp.createOrUpdateTransactionAttribute",
        "obp.getTransactionAttributeById",
        "obp.getTransaction"
      ]
    },
    {
      "operation_id": "OBPv4.0.0-getAllBankLevelDynamicMessageDocs",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getAllBankLevelDynamicMessageDocs"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/management/banks/BANK_ID/dynamic-message-docs",
      "summary": "Get all Bank Level Dynamic Message Docs",
      "description": "<p>Get all Bank Level Dynamic Message Docs.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#process\"><strong>process</strong></a>: obp.getBank</p>\n",
      "description_markdown": "Get all Bank Level Dynamic Message Docs.\n\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**process**](/glossary#process): obp.getBank\n\n\n",
      "success_response_body": {
        "dynamic-message-docs": [
          {
            "outbound_avro_schema": "",
            "inbound_avro_schema": "",
            "adapter_implementation": "",
            "dynamic_message_doc_id": "",
            "description": "This an optional field. Maximum length is 2000. It can be any characters here.",
            "process": "obp.getBank",
            "outbound_topic": "",
            "method_body": "%20%20%20%20%20%20Future.successful%28%0A%20%20%20%20%20%20%20%20Full%28%28BankCommons%28%0A%20%20%20%20%20%20%20%20%20%20BankId%28%22Hello%20bank%20id%22%29%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%228%22%0A%20%20%20%20%20%20%20%20%29%2C%20None%29%29%0A%20%20%20%20%20%20%29",
            "message_format": "",
            "example_outbound_message": {},
            "inbound_topic": "",
            "example_inbound_message": {},
            "bank_id": "gh.29.uk",
            "programming_lang": "Scala"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Dynamic-Message-Doc", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "dynamic-message-docs": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "description": {
                  "type": "string"
                },
                "example_outbound_message": {
                  "type": "object",
                  "properties": {}
                },
                "outbound_topic": {
                  "type": "string"
                },
                "example_inbound_message": {
                  "type": "object",
                  "properties": {}
                },
                "bank_id": {
                  "type": "string"
                },
                "inbound_topic": {
                  "type": "string"
                },
                "programming_lang": {
                  "type": "string"
                },
                "dynamic_message_doc_id": {
                  "type": "string"
                },
                "process": {
                  "type": "string"
                },
                "outbound_avro_schema": {
                  "type": "string"
                },
                "method_body": {
                  "type": "string"
                },
                "message_format": {
                  "type": "string"
                },
                "adapter_implementation": {
                  "type": "string"
                },
                "inbound_avro_schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetAllDynamicMessageDocs",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/banks/BANK_ID/dynamic-message-docs",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv1.2.1-addTagForViewOnTransaction",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "addTagForViewOnTransaction"
      },
      "request_verb": "POST",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transactions/TRANSACTION_ID/metadata/tags",
      "summary": "Add a Transaction Tag",
      "description": "<p>Posts a tag about a transaction TRANSACTION_ID on a <a href=\"#1_2_1-getViewsForBankAccount\">view</a> VIEW_ID.</p>\n<p>Authentication is Mandatory</p>\n<p>Authentication is required as the tag is linked with the user.</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#transaction_ids\">TRANSACTION_ID</a>: 2fg8a7e4-6d02-40e3-a129-0b2bf89de8ub</p>\n<p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#display_name\"><strong>display_name</strong></a>:</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p>\n<p><a href=\"/glossary#User\"><strong>user</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n",
      "description_markdown": "Posts a tag about a transaction TRANSACTION_ID on a [view](#1_2_1-getViewsForBankAccount) VIEW_ID.\n\nAuthentication is Mandatory\n\nAuthentication is required as the tag is linked with the user.\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[TRANSACTION_ID](/glossary#transaction_ids): 2fg8a7e4-6d02-40e3-a129-0b2bf89de8ub\n\n\n\n[VIEW_ID](/glossary#this_view_id): owner\n\n\n\n\n\n**JSON request body fields:**\n\n\n\n[**value**](/glossary#): 5987953\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**date**](/glossary#): 2020-01-27\n\n\n\n[**display_name**](/glossary#display_name): \n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**provider**](/glossary#provider): ETHEREUM\n\n\n\n[**user**](/glossary#User): \n\n\n\n[**value**](/glossary#): 5987953\n\n\n",
      "example_request_body": {
        "value": "String"
      },
      "success_response_body": {
        "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
        "value": "OBP",
        "date": "1100-01-01T00:00:00Z",
        "user": {
          "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
          "provider": "http://127.0.0.1:8080",
          "display_name": "OBP"
        }
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-10001: Incorrect json format.",
        "OBP-30022: The current view does not have the permission:",
        "OBP-30005: View not found for Account. Please specify a valid value for VIEW_ID",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Transaction-Metadata", "Transaction", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "user": {
            "type": "object",
            "properties": {
              "provider": {
                "type": "string"
              },
              "display_name": {
                "type": "string"
              },
              "id": {
                "type": "string"
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transactions/TRANSACTION_ID/metadata/tags",
      "connector_methods": ["obp.checkBankAccountExists", "obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv5.0.0-deleteCustomerAccountLinkById",
      "implemented_by": {
        "version": "OBPv5.0.0",
        "function": "deleteCustomerAccountLinkById"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v5.0.0/banks/BANK_ID/customer-account-links/CUSTOMER_ACCOUNT_LINK_ID",
      "summary": "Delete Customer Account Link",
      "description": "<p>Delete Customer Account Link by CUSTOMER_ACCOUNT_LINK_ID</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#\">CUSTOMER_ACCOUNT_LINK_ID</a>: xyz8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><strong>JSON response body fields:</strong></p>\n",
      "description_markdown": "Delete Customer Account Link by CUSTOMER_ACCOUNT_LINK_ID\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[CUSTOMER_ACCOUNT_LINK_ID](/glossary#): xyz8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n\n\n**JSON response body fields:**\n\n\n",
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Customer", "New-Style"],
      "roles": [
        {
          "role": "CanDeleteCustomerAccountLink",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/customer-account-links/CUSTOMER_ACCOUNT_LINK_ID",
      "connector_methods": ["obp.deleteCustomerAccountLinkById", "obp.getCustomerAccountLinkById"]
    },
    {
      "operation_id": "OBPv3.1.0-getConsumer",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "getConsumer"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.1.0/management/consumers/CONSUMER_ID",
      "summary": "Get Consumer",
      "description": "<p>Get the Consumer specified by CONSUMER_ID.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#\">CONSUMER_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#app_name\"><strong>app_name</strong></a>:</p>\n<p><a href=\"/glossary#app_type\"><strong>app_type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>consumer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#created\"><strong>created</strong></a>:</p>\n<p><a href=\"/glossary#created_by_user\"><strong>created_by_user</strong></a>:</p>\n<p><a href=\"/glossary#created_by_user_id\"><strong>created_by_user_id</strong></a>:</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#developer_email\"><strong>developer_email</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"&#109;&#97;&#105;&#108;&#116;&#111;&#x3a;&#x66;&#101;&#108;&#x69;&#120;&#115;&#x6d;&#x69;&#x74;h&#64;&#101;&#120;&#x61;&#x6d;p&#x6c;&#x65;&#46;&#99;&#x6f;&#109;\">&#x66;&#x65;&#x6c;&#x69;&#120;&#115;&#x6d;&#105;&#x74;&#104;&#x40;e&#120;&#x61;&#x6d;&#112;&#x6c;&#101;&#x2e;&#99;&#111;&#109;</a></p>\n<p><a href=\"/glossary#enabled\"><strong>enabled</strong></a>: true</p>\n<p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p>\n<p><a href=\"/glossary#provider_id\"><strong>provider_id</strong></a>:</p>\n<p><a href=\"/glossary#redirect_url\"><strong>redirect_url</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p>\n<p><a href=\"/glossary#\"><strong>username</strong></a>: felixsmith</p>\n",
      "description_markdown": "Get the Consumer specified by CONSUMER_ID.\n\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[CONSUMER_ID](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**app_name**](/glossary#app_name): \n\n\n\n[**app_type**](/glossary#app_type): \n\n\n\n[**consumer_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**created**](/glossary#created): \n\n\n\n[**created_by_user**](/glossary#created_by_user): \n\n\n\n[**created_by_user_id**](/glossary#created_by_user_id): \n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**developer_email**](/glossary#developer_email): \n\n\n\n[**email**](/glossary#): felixsmith@example.com\n\n\n\n[**enabled**](/glossary#enabled): true\n\n\n\n[**provider**](/glossary#provider): ETHEREUM\n\n\n\n[**provider_id**](/glossary#provider_id): \n\n\n\n[**redirect_url**](/glossary#redirect_url): \n\n\n\n[**user_id**](/glossary#): 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\n\n\n\n[**username**](/glossary#): felixsmith\n\n\n",
      "success_response_body": {
        "consumer_id": 1213,
        "app_name": "SOFI",
        "app_type": "Web",
        "description": "Account Management",
        "developer_email": "felixsmith@example.com",
        "redirect_url": "www.openbankproject.com",
        "created_by_user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
        "created_by_user": {
          "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
          "email": "felixsmith@example.com",
          "provider_id": "Chris",
          "provider": "http://127.0.0.1:8080",
          "username": "felixsmith"
        },
        "enabled": true,
        "created": "1100-01-01T00:00:00Z"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-30019: Consumer not found. Please specify a valid value for CONSUMER_ID.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Consumer", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "app_name": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "created_by_user_id": {
            "type": "string"
          },
          "created_by_user": {
            "type": "object",
            "properties": {
              "provider": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "provider_id": {
                "type": "string"
              },
              "username": {
                "type": "string"
              },
              "user_id": {
                "type": "string"
              }
            }
          },
          "description": {
            "type": "string"
          },
          "developer_email": {
            "type": "string"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "consumer_id": {
            "type": "integer"
          },
          "redirect_url": {
            "type": "string"
          },
          "app_type": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanGetConsumers",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/consumers/CONSUMER_ID",
      "connector_methods": ["obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv4.0.0-createProductFee",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "createProductFee"
      },
      "request_verb": "POST",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/products/PRODUCT_CODE/fee",
      "summary": "Create Product Fee",
      "description": "<p>Create Product Fee</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#product_code\">PRODUCT_CODE</a>: 1234BW</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#frequency\"><strong>frequency</strong></a>: DAILY</p>\n<p><a href=\"/glossary#is_active\"><strong>is_active</strong></a>: true</p>\n<p><a href=\"/glossary#more_info\"><strong>more_info</strong></a>: More information about this fee</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n<p><a href=\"/glossary#product_fee_id\">product_fee_id</a>: 696hlAHLFKUHE37469287634</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#frequency\"><strong>frequency</strong></a>: DAILY</p>\n<p><a href=\"/glossary#is_active\"><strong>is_active</strong></a>: true</p>\n<p><a href=\"/glossary#more_info\"><strong>more_info</strong></a>: More information about this fee</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#product_code\"><strong>product_code</strong></a>: 1234BW</p>\n<p><a href=\"/glossary#product_fee_id\"><strong>product_fee_id</strong></a>: 696hlAHLFKUHE37469287634</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n",
      "description_markdown": "Create Product Fee\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[PRODUCT_CODE](/glossary#product_code): 1234BW\n\n\n\n\n\n**JSON request body fields:**\n\n\n\n[**amount**](/glossary#): 10.12\n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**frequency**](/glossary#frequency): DAILY\n\n\n\n[**is_active**](/glossary#is_active): true\n\n\n\n[**more_info**](/glossary#more_info): More information about this fee\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**type**](/glossary#type): \n\n\n\n[**value**](/glossary#): 5987953\n\n\n\n[product_fee_id](/glossary#product_fee_id): 696hlAHLFKUHE37469287634\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**amount**](/glossary#): 10.12\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**frequency**](/glossary#frequency): DAILY\n\n\n\n[**is_active**](/glossary#is_active): true\n\n\n\n[**more_info**](/glossary#more_info): More information about this fee\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**product_code**](/glossary#product_code): 1234BW\n\n\n\n[**product_fee_id**](/glossary#product_fee_id): 696hlAHLFKUHE37469287634\n\n\n\n[**type**](/glossary#type): \n\n\n\n[**value**](/glossary#): 5987953\n\n\n",
      "example_request_body": {
        "name": "ACCOUNT_MANAGEMENT_FEE",
        "is_active": true,
        "more_info": "More information about this fee",
        "value": {
          "currency": "EUR",
          "amount": "10.12",
          "frequency": "DAILY",
          "type": ""
        }
      },
      "success_response_body": {
        "bank_id": "gh.29.uk",
        "product_code": "1234BW",
        "product_fee_id": "696hlAHLFKUHE37469287634",
        "name": "ACCOUNT_MANAGEMENT_FEE",
        "is_active": true,
        "more_info": "More information about this fee",
        "value": {
          "currency": "EUR",
          "amount": "10.12",
          "frequency": "DAILY",
          "type": ""
        }
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["Product", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "is_active": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "more_info": {
            "type": "string"
          },
          "value": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "currency": {
                "type": "string"
              },
              "frequency": {
                "type": "string"
              },
              "amount": {
                "type": "number"
              }
            }
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "product_code": {
            "type": "string"
          },
          "is_active": {
            "type": "boolean"
          },
          "bank_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "more_info": {
            "type": "string"
          },
          "value": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "currency": {
                "type": "string"
              },
              "frequency": {
                "type": "string"
              },
              "amount": {
                "type": "number"
              }
            }
          },
          "product_fee_id": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateProductFee",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/products/PRODUCT_CODE/fee",
      "connector_methods": ["obp.createOrUpdateProductFee"]
    },
    {
      "operation_id": "OBPv1.2.1-deleteCounterpartyUrl",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "deleteCounterpartyUrl"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/metadata/url",
      "summary": "Delete url of other bank account",
      "description": "<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#other_account_id\">OTHER_ACCOUNT_ID</a>:</p>\n<p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p>\n<p><strong>JSON response body fields:</strong></p>\n",
      "description_markdown": "Authentication is Mandatory\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[OTHER_ACCOUNT_ID](/glossary#other_account_id): \n\n\n\n[VIEW_ID](/glossary#this_view_id): owner\n\n\n\n\n\n**JSON response body fields:**\n\n\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "jsonString": "{}"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "the view does not allow metadata access",
        "the view does not allow deleting a url",
        "URL cannot be deleted",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Counterparty-Metadata", "Counterparty", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/metadata/url",
      "connector_methods": [
        "obp.checkBankAccountExists",
        "obp.getBank",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv1.2.1-getOtherAccountPrivateAlias",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "getOtherAccountPrivateAlias"
      },
      "request_verb": "GET",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/private_alias",
      "summary": "Get Other Account Private Alias",
      "description": "<p>Returns the private alias of the other account OTHER_ACCOUNT_ID.</p>\n<p>Authentication is Optional<br />\nAuthentication is required if the view is not public.</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#other_account_id\">OTHER_ACCOUNT_ID</a>:</p>\n<p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#alias\"><strong>alias</strong></a>:</p>\n",
      "description_markdown": "Returns the private alias of the other account OTHER_ACCOUNT_ID.\n\nAuthentication is Optional\nAuthentication is required if the view is not public.\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[OTHER_ACCOUNT_ID](/glossary#other_account_id): \n\n\n\n[VIEW_ID](/glossary#this_view_id): owner\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**alias**](/glossary#alias): \n\n\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "alias": "String"
      },
      "error_response_bodies": [
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "the view does not allow metadata access",
        "the view does not allow private alias access",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Counterparty-Metadata", "Counterparty", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "alias": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/private_alias",
      "connector_methods": ["obp.checkBankAccountExists", "obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv4.0.0-getAllDynamicMessageDocs",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getAllDynamicMessageDocs"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/management/dynamic-message-docs",
      "summary": "Get all Dynamic Message Docs",
      "description": "<p>Get all Dynamic Message Docs.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#process\"><strong>process</strong></a>: obp.getBank</p>\n",
      "description_markdown": "Get all Dynamic Message Docs.\n\n\n\nAuthentication is Mandatory\n\n\n**JSON response body fields:**\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**process**](/glossary#process): obp.getBank\n\n\n",
      "success_response_body": {
        "dynamic-message-docs": [
          {
            "outbound_avro_schema": "",
            "inbound_avro_schema": "",
            "adapter_implementation": "",
            "dynamic_message_doc_id": "",
            "description": "This an optional field. Maximum length is 2000. It can be any characters here.",
            "process": "obp.getBank",
            "outbound_topic": "",
            "method_body": "%20%20%20%20%20%20Future.successful%28%0A%20%20%20%20%20%20%20%20Full%28%28BankCommons%28%0A%20%20%20%20%20%20%20%20%20%20BankId%28%22Hello%20bank%20id%22%29%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%228%22%0A%20%20%20%20%20%20%20%20%29%2C%20None%29%29%0A%20%20%20%20%20%20%29",
            "message_format": "",
            "example_outbound_message": {},
            "inbound_topic": "",
            "example_inbound_message": {},
            "bank_id": "gh.29.uk",
            "programming_lang": "Scala"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Dynamic-Message-Doc", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "dynamic-message-docs": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "description": {
                  "type": "string"
                },
                "example_outbound_message": {
                  "type": "object",
                  "properties": {}
                },
                "outbound_topic": {
                  "type": "string"
                },
                "example_inbound_message": {
                  "type": "object",
                  "properties": {}
                },
                "bank_id": {
                  "type": "string"
                },
                "inbound_topic": {
                  "type": "string"
                },
                "programming_lang": {
                  "type": "string"
                },
                "dynamic_message_doc_id": {
                  "type": "string"
                },
                "process": {
                  "type": "string"
                },
                "outbound_avro_schema": {
                  "type": "string"
                },
                "method_body": {
                  "type": "string"
                },
                "message_format": {
                  "type": "string"
                },
                "adapter_implementation": {
                  "type": "string"
                },
                "inbound_avro_schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetAllDynamicMessageDocs",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/dynamic-message-docs",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv3.1.0-createMeeting",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "createMeeting"
      },
      "request_verb": "POST",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/meetings",
      "summary": "Create Meeting (video conference/call)",
      "description": "<p>Create Meeting: Initiate a video conference/call with the bank.</p>\n<p>The Meetings resource contains meta data about video/other conference sessions</p>\n<p>provider_id determines the provider of the meeting / video chat service. MUST be url friendly (no spaces).</p>\n<p>purpose_id explains the purpose of the chat. onboarding | mortgage | complaint etc. MUST be url friendly (no spaces).</p>\n<p>Login is required.</p>\n<p>This call is <strong>experimental</strong>. Currently staff_user_id is not set. Further calls will be needed to correctly set this.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#contact_details\"><strong>contact_details</strong></a>:</p>\n<p><a href=\"/glossary#creator\"><strong>creator</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#email_address\"><strong>email_address</strong></a>:</p>\n<p><a href=\"/glossary#invitees\"><strong>invitees</strong></a>:</p>\n<p><a href=\"/glossary#mobile_phone\"><strong>mobile_phone</strong></a>:</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#provider_id\"><strong>provider_id</strong></a>:</p>\n<p><a href=\"/glossary#purpose_id\"><strong>purpose_id</strong></a>:</p>\n<p><a href=\"/glossary#status\"><strong>status</strong></a>:</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#contact_details\"><strong>contact_details</strong></a>:</p>\n<p><a href=\"/glossary#creator\"><strong>creator</strong></a>:</p>\n<p><a href=\"/glossary#customer_token\"><strong>customer_token</strong></a>:</p>\n<p><a href=\"/glossary#customer_user_id\"><strong>customer_user_id</strong></a>:</p>\n<p><a href=\"/glossary#email_address\"><strong>email_address</strong></a>:</p>\n<p><a href=\"/glossary#invitees\"><strong>invitees</strong></a>:</p>\n<p><a href=\"/glossary#keys\"><strong>keys</strong></a>:</p>\n<p><a href=\"/glossary#meeting_id\"><strong>meeting_id</strong></a>:</p>\n<p><a href=\"/glossary#mobile_phone\"><strong>mobile_phone</strong></a>:</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#present\"><strong>present</strong></a>:</p>\n<p><a href=\"/glossary#provider_id\"><strong>provider_id</strong></a>:</p>\n<p><a href=\"/glossary#purpose_id\"><strong>purpose_id</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>session_id</strong></a>: b4e0352a-9a0f-4bfa-b30b-9003aa467f50</p>\n<p><a href=\"/glossary#staff_token\"><strong>staff_token</strong></a>:</p>\n<p><a href=\"/glossary#staff_user_id\"><strong>staff_user_id</strong></a>:</p>\n<p><a href=\"/glossary#status\"><strong>status</strong></a>:</p>\n<p><a href=\"/glossary#when\"><strong>when</strong></a>: 2020-01-27</p>\n",
      "description_markdown": "Create Meeting: Initiate a video conference/call with the bank.\n\nThe Meetings resource contains meta data about video/other conference sessions\n\nprovider_id determines the provider of the meeting / video chat service. MUST be url friendly (no spaces).\n\npurpose_id explains the purpose of the chat. onboarding | mortgage | complaint etc. MUST be url friendly (no spaces).\n\nLogin is required.\n\nThis call is **experimental**. Currently staff_user_id is not set. Further calls will be needed to correctly set this.\n      \n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON request body fields:**\n\n\n\n[**contact_details**](/glossary#contact_details): \n\n\n\n[**creator**](/glossary#creator): \n\n\n\n[**date**](/glossary#): 2020-01-27\n\n\n\n[**email_address**](/glossary#email_address): \n\n\n\n[**invitees**](/glossary#invitees): \n\n\n\n[**mobile_phone**](/glossary#mobile_phone): \n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**provider_id**](/glossary#provider_id): \n\n\n\n[**purpose_id**](/glossary#purpose_id): \n\n\n\n[**status**](/glossary#status): \n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**contact_details**](/glossary#contact_details): \n\n\n\n[**creator**](/glossary#creator): \n\n\n\n[**customer_token**](/glossary#customer_token): \n\n\n\n[**customer_user_id**](/glossary#customer_user_id): \n\n\n\n[**email_address**](/glossary#email_address): \n\n\n\n[**invitees**](/glossary#invitees): \n\n\n\n[**keys**](/glossary#keys): \n\n\n\n[**meeting_id**](/glossary#meeting_id): \n\n\n\n[**mobile_phone**](/glossary#mobile_phone): \n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**present**](/glossary#present): \n\n\n\n[**provider_id**](/glossary#provider_id): \n\n\n\n[**purpose_id**](/glossary#purpose_id): \n\n\n\n[**session_id**](/glossary#): b4e0352a-9a0f-4bfa-b30b-9003aa467f50\n\n\n\n[**staff_token**](/glossary#staff_token): \n\n\n\n[**staff_user_id**](/glossary#staff_user_id): \n\n\n\n[**status**](/glossary#status): \n\n\n\n[**when**](/glossary#when): 2020-01-27\n\n\n",
      "example_request_body": {
        "provider_id": "Chris",
        "purpose_id": "String, eg: onboarding",
        "date": "1100-01-01T01:01:01Z",
        "creator": {
          "name": "Simon ",
          "mobile_phone": "+44 07972 444 876",
          "email_address": "felixsmith@example.com"
        },
        "invitees": [
          {
            "contact_details": {
              "name": "Simon ",
              "mobile_phone": "+44 07972 444 876",
              "email_address": "felixsmith@example.com"
            },
            "status": "String, eg: Good"
          }
        ]
      },
      "success_response_body": {
        "meeting_id": "UUID-String",
        "provider_id": "Chris",
        "purpose_id": "String, eg: onboarding",
        "bank_id": "gh.29.uk",
        "present": {
          "staff_user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
          "customer_user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
        },
        "keys": {
          "session_id": "String",
          "staff_token": "String",
          "customer_token": "String"
        },
        "when": "1100-01-01T00:00:00Z",
        "creator": {
          "name": "Simon ",
          "mobile_phone": "+44 07972 444 876",
          "email_address": "felixsmith@example.com"
        },
        "invitees": [
          {
            "contact_details": {
              "name": "Simon ",
              "mobile_phone": "+44 07972 444 876",
              "email_address": "felixsmith@example.com"
            },
            "status": "String, eg: Good"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Customer-Meeting", "Customer", "Experimental", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "invitees": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string"
                },
                "contact_details": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "mobile_phone": {
                      "type": "string"
                    },
                    "email_address": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "provider_id": {
            "type": "string"
          },
          "purpose_id": {
            "type": "string"
          },
          "creator": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "mobile_phone": {
                "type": "string"
              },
              "email_address": {
                "type": "string"
              }
            }
          },
          "date": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "present": {
            "type": "object",
            "properties": {
              "staff_user_id": {
                "type": "string"
              },
              "customer_user_id": {
                "type": "string"
              }
            }
          },
          "invitees": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string"
                },
                "contact_details": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "mobile_phone": {
                      "type": "string"
                    },
                    "email_address": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "bank_id": {
            "type": "string"
          },
          "when": {
            "type": "string",
            "format": "date-time"
          },
          "provider_id": {
            "type": "string"
          },
          "purpose_id": {
            "type": "string"
          },
          "keys": {
            "type": "object",
            "properties": {
              "customer_token": {
                "type": "string"
              },
              "session_id": {
                "type": "string"
              },
              "staff_token": {
                "type": "string"
              }
            }
          },
          "creator": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "mobile_phone": {
                "type": "string"
              },
              "email_address": {
                "type": "string"
              }
            }
          },
          "meeting_id": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/meetings",
      "connector_methods": ["obp.createMeeting", "obp.getBank", "obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv3.0.0-getCoreTransactionsForBankAccount",
      "implemented_by": {
        "version": "OBPv3.0.0",
        "function": "getCoreTransactionsForBankAccount"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.0.0/my/banks/BANK_ID/accounts/ACCOUNT_ID/transactions",
      "summary": "Get Transactions for Account (Core)",
      "description": "<p>Returns transactions list (Core info) of the account specified by ACCOUNT_ID.</p>\n<p>Authentication is Mandatory</p>\n<p>Possible custom url parameters for pagination:</p>\n<ul>\n<li>limit=NUMBER ==&gt; default value: 50</li>\n<li>offset=NUMBER ==&gt; default value: 0</li>\n</ul>\n<p>eg1:?limit=100&amp;offset=0</p>\n<ul>\n<li>sort_direction=ASC/DESC ==&gt; default value: DESC.</li>\n</ul>\n<p>eg2:?limit=100&amp;offset=0&amp;sort_direction=ASC</p>\n<ul>\n<li>from_date=DATE =&gt; example value: 1970-01-01T00:00:00.000Z. NOTE! The default value is one year ago (1970-01-01T00:00:00.000Z).</li>\n<li>to_date=DATE =&gt; example value: 2023-04-13T04:30:11.485Z. NOTE! The default value is now (2023-04-13T04:30:11.485Z).</li>\n</ul>\n<p>Date format parameter: yyyy-MM-dd'T'HH:mm:ss.SSS'Z'(1100-01-01T01:01:01.000Z) ==&gt; time zone is UTC.</p>\n<p>eg3:?sort_direction=ASC&amp;limit=100&amp;offset=0&amp;from_date=1100-01-01T01:01:01.000Z&amp;to_date=1100-01-01T01:01:01.000Z</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#account_routings\"><strong>account_routings</strong></a>:</p>\n<p><a href=\"/glossary#address\"><strong>address</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p>\n<p><a href=\"/glossary#bank_routing\"><strong>bank_routing</strong></a>:</p>\n<p><a href=\"/glossary#completed\"><strong>completed</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#details\"><strong>details</strong></a>:</p>\n<p><a href=\"/glossary#holder\"><strong>holder</strong></a>:</p>\n<p><a href=\"/glossary#holders\"><strong>holders</strong></a>:</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#is_alias\"><strong>is_alias</strong></a>:</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#new_balance\"><strong>new_balance</strong></a>: 20</p>\n<p><a href=\"/glossary#other_account\"><strong>other_account</strong></a>:</p>\n<p><a href=\"/glossary#posted\"><strong>posted</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#scheme\"><strong>scheme</strong></a>: scheme value</p>\n<p><a href=\"/glossary#this_account\"><strong>this_account</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>transaction_attribute_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#transaction_attributes\"><strong>transaction_attributes</strong></a>:</p>\n<p><a href=\"/glossary#transactions\"><strong>transactions</strong></a>:</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n",
      "description_markdown": "Returns transactions list (Core info) of the account specified by ACCOUNT_ID.\n\nAuthentication is Mandatory\n\n\n\nPossible custom url parameters for pagination:\n\n* limit=NUMBER ==> default value: 50\n* offset=NUMBER ==> default value: 0\n\neg1:?limit=100&offset=0\n\n\n* sort_direction=ASC/DESC ==> default value: DESC.\n\neg2:?limit=100&offset=0&sort_direction=ASC\n\n\n\n* from_date=DATE => example value: 1970-01-01T00:00:00.000Z. NOTE! The default value is one year ago (1970-01-01T00:00:00.000Z).\n* to_date=DATE => example value: 2023-04-13T04:30:11.485Z. NOTE! The default value is now (2023-04-13T04:30:11.485Z).\n\nDate format parameter: yyyy-MM-dd'T'HH:mm:ss.SSS'Z'(1100-01-01T01:01:01.000Z) ==> time zone is UTC.\n\neg3:?sort_direction=ASC&limit=100&offset=0&from_date=1100-01-01T01:01:01.000Z&to_date=1100-01-01T01:01:01.000Z\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**account_routings**](/glossary#account_routings): \n\n\n\n[**address**](/glossary#address): \n\n\n\n[**amount**](/glossary#): 10.12\n\n\n\n[**bank_routing**](/glossary#bank_routing): \n\n\n\n[**completed**](/glossary#completed): 2020-01-27\n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**details**](/glossary#details): \n\n\n\n[**holder**](/glossary#holder): \n\n\n\n[**holders**](/glossary#holders): \n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**is_alias**](/glossary#is_alias): \n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**new_balance**](/glossary#new_balance): 20\n\n\n\n[**other_account**](/glossary#other_account): \n\n\n\n[**posted**](/glossary#posted): 2020-01-27\n\n\n\n[**scheme**](/glossary#scheme): scheme value\n\n\n\n[**this_account**](/glossary#this_account): \n\n\n\n[**transaction_attribute_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**transaction_attributes**](/glossary#transaction_attributes): \n\n\n\n[**transactions**](/glossary#transactions): \n\n\n\n[**type**](/glossary#type): \n\n\n\n[**value**](/glossary#): 5987953\n\n\n",
      "success_response_body": {
        "transactions": [
          {
            "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
            "this_account": {
              "id": "String",
              "bank_routing": {
                "scheme": "scheme value",
                "address": ""
              },
              "account_routings": [
                {
                  "scheme": "AccountNumber",
                  "address": "4930396"
                }
              ],
              "holders": [
                {
                  "name": "OBP",
                  "is_alias": true
                }
              ]
            },
            "other_account": {
              "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
              "holder": {
                "name": "OBP",
                "is_alias": true
              },
              "bank_routing": {
                "scheme": "scheme value",
                "address": ""
              },
              "account_routings": [
                {
                  "scheme": "AccountNumber",
                  "address": "4930396"
                }
              ]
            },
            "details": {
              "type": "AC",
              "description": "OBP",
              "posted": "1100-01-01T00:00:00Z",
              "completed": "1100-01-01T00:00:00Z",
              "new_balance": {
                "currency": "EUR",
                "amount": "0"
              },
              "value": {
                "currency": "EUR",
                "amount": "0"
              }
            },
            "transaction_attributes": [
              {
                "transaction_attribute_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
                "name": "HOUSE_RENT",
                "type": "DATE_WITH_DAY",
                "value": "123456789"
              }
            ]
          }
        ]
      },
      "error_response_bodies": [
        "OBP-10023: obp_sort_direction parameter can only take two values: DESC or ASC!",
        "OBP-10024: wrong value for obp_offset parameter. Please send a positive integer (=>0)!",
        "OBP-10025: wrong value for obp_limit parameter. Please send a positive integer (=>1)!",
        "OBP-10026: Failed to parse date string. Please use this format yyyy-MM-dd'T'HH:mm:ss.SSS'Z'!",
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-30005: View not found for Account. Please specify a valid value for VIEW_ID",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Transaction", "Account Information Service (AIS)", "Account", "PSD2", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "transactions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "details": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "posted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "new_balance": {
                      "type": "object",
                      "properties": {
                        "currency": {
                          "type": "string"
                        },
                        "amount": {
                          "type": "string"
                        }
                      }
                    },
                    "completed": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "value": {
                      "type": "object",
                      "properties": {
                        "currency": {
                          "type": "string"
                        },
                        "amount": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "other_account": {
                  "type": "object",
                  "properties": {
                    "bank_routing": {
                      "type": "object",
                      "properties": {
                        "scheme": {
                          "type": "string"
                        },
                        "address": {
                          "type": "string"
                        }
                      }
                    },
                    "holder": {
                      "type": "object",
                      "properties": {
                        "is_alias": {
                          "type": "boolean"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "id": {
                      "type": "string"
                    },
                    "account_routings": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "scheme": {
                            "type": "string"
                          },
                          "address": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "id": {
                  "type": "string"
                },
                "transaction_attributes": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "transaction_attribute_id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      },
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                "this_account": {
                  "type": "object",
                  "properties": {
                    "bank_routing": {
                      "type": "object",
                      "properties": {
                        "scheme": {
                          "type": "string"
                        },
                        "address": {
                          "type": "string"
                        }
                      }
                    },
                    "holders": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "is_alias": {
                            "type": "boolean"
                          },
                          "name": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "id": {
                      "type": "string"
                    },
                    "account_routings": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "scheme": {
                            "type": "string"
                          },
                          "address": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/my/banks/BANK_ID/accounts/ACCOUNT_ID/transactions",
      "connector_methods": [
        "obp.getTransactionAttributes",
        "obp.getTransactionsCore",
        "obp.checkBankAccountExists",
        "obp.getBank",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv4.0.0-getPrivateAccountsAtOneBank",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getPrivateAccountsAtOneBank"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/accounts",
      "summary": "Get Accounts at Bank",
      "description": "<p>Returns the list of accounts at BANK_ID that the user has access to.<br />\nFor each account the API returns the account ID and the views available to the user..<br />\nEach account must have at least one private View.</p>\n<p>optional request parameters for filter with attributes<br />\nURL params example: /banks/some-bank-id/accounts?manager=John&amp;count=8</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#accounts\"><strong>accounts</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#is_public\"><strong>is_public</strong></a>: true</p>\n<p><a href=\"/glossary#\"><strong>label</strong></a>: My Account</p>\n<p><a href=\"/glossary#short_name\"><strong>short_name</strong></a>:</p>\n<p><a href=\"/glossary#views_available\"><strong>views_available</strong></a>:</p>\n",
      "description_markdown": "Returns the list of accounts at BANK_ID that the user has access to.\nFor each account the API returns the account ID and the views available to the user..\nEach account must have at least one private View.\n\noptional request parameters for filter with attributes\nURL params example: /banks/some-bank-id/accounts?manager=John&count=8\n\n\n      \n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**accounts**](/glossary#accounts): \n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**is_public**](/glossary#is_public): true\n\n\n\n[**label**](/glossary#): My Account\n\n\n\n[**short_name**](/glossary#short_name): \n\n\n\n[**views_available**](/glossary#views_available): \n\n\n",
      "success_response_body": {
        "accounts": [
          {
            "id": "8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0",
            "label": "NoneLabel",
            "bank_id": "gh.29.uk",
            "views_available": [
              {
                "id": "1",
                "short_name": "HHH",
                "is_public": true
              }
            ]
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Account", "PrivateData", "PublicData", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "accounts": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "label": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "bank_id": {
                  "type": "string"
                },
                "views_available": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "short_name": {
                        "type": "string"
                      },
                      "id": {
                        "type": "string"
                      },
                      "is_public": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts",
      "connector_methods": ["obp.getBankAccounts"]
    },
    {
      "operation_id": "OBPv3.1.0-deleteWebUiProps",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "deleteWebUiProps"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v3.1.0/management/webui_props/WEB_UI_PROPS_ID",
      "summary": "Delete WebUiProps",
      "description": "<p>Delete a WebUiProps specified by WEB_UI_PROPS_ID.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#web_ui_props_id\">WEB_UI_PROPS_ID</a>:</p>\n<p><strong>JSON response body fields:</strong></p>\n",
      "description_markdown": "Delete a WebUiProps specified by WEB_UI_PROPS_ID.\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[WEB_UI_PROPS_ID](/glossary#web_ui_props_id): \n\n\n\n\n\n**JSON response body fields:**\n\n\n",
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["WebUi-Props", "New-Style"],
      "roles": [
        {
          "role": "CanDeleteWebUiProps",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/webui_props/WEB_UI_PROPS_ID",
      "connector_methods": ["obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv5.0.0-getAdapterInfo",
      "implemented_by": {
        "version": "OBPv5.0.0",
        "function": "getAdapterInfo"
      },
      "request_verb": "GET",
      "request_url": "/obp/v5.0.0/adapter",
      "summary": "Get Adapter Info",
      "description": "<p>Get basic information about the Adapter.</p>\n<p>Authentication is Optional</p>\n<p>Authentication is Mandatory</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>backend_messages</strong></a>: backend_messages</p>\n<p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#errorCode\"><strong>errorCode</strong></a>: errorCode</p>\n<p><a href=\"/glossary#\"><strong>git_commit</strong></a>: 59623811dd8a41f6ffe67be46954eee11913dc28</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#\"><strong>source</strong></a>:</p>\n<p><a href=\"/glossary#status\"><strong>status</strong></a>:</p>\n<p><a href=\"/glossary#text\"><strong>text</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>total_duration</strong></a>: total_duration</p>\n<p><a href=\"/glossary#version\"><strong>version</strong></a>:</p>\n<p><a href=\"/glossary#duration\">duration</a>: 5.123</p>\n",
      "description_markdown": "Get basic information about the Adapter.\n\nAuthentication is Optional\n\n      \n\nAuthentication is Mandatory\n\n\n**JSON response body fields:**\n\n\n\n[**backend_messages**](/glossary#): backend_messages\n\n\n\n[**date**](/glossary#): 2020-01-27\n\n\n\n[**errorCode**](/glossary#errorCode): errorCode\n\n\n\n[**git_commit**](/glossary#): 59623811dd8a41f6ffe67be46954eee11913dc28\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**source**](/glossary#): \n\n\n\n[**status**](/glossary#status): \n\n\n\n[**text**](/glossary#text): \n\n\n\n[**total_duration**](/glossary#): total_duration\n\n\n\n[**version**](/glossary#version): \n\n\n\n[duration](/glossary#duration): 5.123\n\n\n",
      "success_response_body": {
        "name": "ACCOUNT_MANAGEMENT_FEE",
        "version": "ACCOUNT_MANAGEMENT_FEE",
        "git_commit": "59623811dd8a41f6ffe67be46954eee11913dc28",
        "date": "2020-01-27",
        "total_duration": "5.123",
        "backend_messages": [
          {
            "source": "",
            "status": "",
            "errorCode": "",
            "text": "",
            "duration": "5.123"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["API", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string"
          },
          "git_commit": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          },
          "total_duration": {
            "type": "number"
          },
          "backend_messages": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "source": {
                  "type": "string"
                },
                "text": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                },
                "errorCode": {
                  "type": "string"
                },
                "duration": {
                  "type": "number"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetAdapterInfo",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/adapter",
      "connector_methods": ["obp.getAdapterInfo"]
    },
    {
      "operation_id": "OBPv4.0.0-getUserCustomerLinksByUserId",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getUserCustomerLinksByUserId"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/user_customer_links/users/USER_ID",
      "summary": "Get User Customer Links by User",
      "description": "<p>Get User Customer Links by USER_ID</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#User.user_id\">USER_ID</a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#date_inserted\"><strong>date_inserted</strong></a>:</p>\n<p><a href=\"/glossary#is_active\"><strong>is_active</strong></a>: true</p>\n<p><a href=\"/glossary#user_customer_link_id\"><strong>user_customer_link_id</strong></a>:</p>\n<p><a href=\"/glossary#user_customer_links\"><strong>user_customer_links</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p>\n",
      "description_markdown": "Get User Customer Links by USER_ID\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[USER_ID](/glossary#User.user_id): 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**customer_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**date_inserted**](/glossary#date_inserted): \n\n\n\n[**is_active**](/glossary#is_active): true\n\n\n\n[**user_customer_link_id**](/glossary#user_customer_link_id): \n\n\n\n[**user_customer_links**](/glossary#user_customer_links): \n\n\n\n[**user_id**](/glossary#): 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\n\n\n",
      "success_response_body": {
        "user_customer_links": [
          {
            "user_customer_link_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
            "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
            "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
            "date_inserted": "1100-01-01T00:00:00Z",
            "is_active": true
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["Customer", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "user_customer_links": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "user_customer_link_id": {
                  "type": "string"
                },
                "customer_id": {
                  "type": "string"
                },
                "is_active": {
                  "type": "boolean"
                },
                "date_inserted": {
                  "type": "string",
                  "format": "date-time"
                },
                "user_id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetUserCustomerLink",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/user_customer_links/users/USER_ID",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv2.1.0-sandboxDataImport",
      "implemented_by": {
        "version": "OBPv2.1.0",
        "function": "sandboxDataImport"
      },
      "request_verb": "POST",
      "request_url": "/obp/v2.1.0/sandbox/data-import",
      "summary": "Create sandbox",
      "description": "<p>Import bulk data into the sandbox (Authenticated access).</p>\n<p>This call can be used to create banks, users, accounts and transactions which are stored in the local RDBMS.</p>\n<p>The user needs to have CanCreateSandbox entitlement.</p>\n<p>Note: This is a monolithic call. You could also use a combination of endpoints including create bank, create user, create account and create transaction request to create similar data.</p>\n<p>An example of an import set of data (json) can be found <a href=\"https://raw.githubusercontent.com/OpenBankProject/OBP-API/develop/obp-api/src/main/scala/code/api/sandbox/example_data/2016-04-28/example_import.json\">here</a><br />\nAuthentication is Mandatory</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>IBAN</strong></a>: DE91 1000 0000 0123 4567 89</p>\n<p><a href=\"/glossary#accounts\"><strong>accounts</strong></a>:</p>\n<p><a href=\"/glossary#actual_date\"><strong>actual_date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#address\"><strong>address</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p>\n<p><a href=\"/glossary#atms\"><strong>atms</strong></a>:</p>\n<p><a href=\"/glossary#balance\"><strong>balance</strong></a>: 10</p>\n<p><a href=\"/glossary#Bank\"><strong>bank</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#banks\"><strong>banks</strong></a>:</p>\n<p><a href=\"/glossary#branches\"><strong>branches</strong></a>:</p>\n<p><a href=\"/glossary#category\"><strong>category</strong></a>:</p>\n<p><a href=\"/glossary#channel\"><strong>channel</strong></a>:</p>\n<p><a href=\"/glossary#city\"><strong>city</strong></a>:</p>\n<p><a href=\"/glossary#code\"><strong>code</strong></a>: 125</p>\n<p><a href=\"/glossary#completed\"><strong>completed</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#country_code\"><strong>country_code</strong></a>: 1254</p>\n<p><a href=\"/glossary#county\"><strong>county</strong></a>:</p>\n<p><a href=\"/glossary#crm_events\"><strong>crm_events</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#Customer\"><strong>customer</strong></a>:</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#detail\"><strong>detail</strong></a>:</p>\n<p><a href=\"/glossary#details\"><strong>details</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"&#x6d;&#97;i&#108;&#x74;&#111;&#x3a;&#x66;&#x65;&#x6c;&#105;&#120;&#x73;&#109;i&#x74;&#x68;&#x40;&#101;xa&#x6d;&#112;&#108;&#101;.&#x63;&#x6f;m\">&#x66;&#x65;&#108;&#x69;&#x78;sm&#x69;&#x74;&#x68;&#64;ex&#97;&#109;&#x70;&#x6c;&#x65;&#46;&#99;&#x6f;&#109;</a></p>\n<p><a href=\"/glossary#family\"><strong>family</strong></a>:</p>\n<p><a href=\"/glossary#full_name\"><strong>full_name</strong></a>: full name string</p>\n<p><a href=\"/glossary#generate_accountants_view\"><strong>generate_accountants_view</strong></a>:</p>\n<p><a href=\"/glossary#generate_auditors_view\"><strong>generate_auditors_view</strong></a>:</p>\n<p><a href=\"/glossary#generate_public_view\"><strong>generate_public_view</strong></a>:</p>\n<p><a href=\"/glossary#hours\"><strong>hours</strong></a>:</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#\"><strong>label</strong></a>: My Account</p>\n<p><a href=\"/glossary#latitude\"><strong>latitude</strong></a>: 38.8951</p>\n<p><a href=\"/glossary#license\"><strong>license</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>line_1</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>line_2</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>line_3</strong></a>:</p>\n<p><a href=\"/glossary#location\"><strong>location</strong></a>:</p>\n<p><a href=\"/glossary#logo\"><strong>logo</strong></a>: logo url</p>\n<p><a href=\"/glossary#longitude\"><strong>longitude</strong></a>: -77.0364</p>\n<p><a href=\"/glossary#meta\"><strong>meta</strong></a>:</p>\n<p><a href=\"/glossary#more_info_url\"><strong>more_info_url</strong></a>: <a href=\"http://www.example.com/abc\">www.example.com/abc</a></p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#new_balance\"><strong>new_balance</strong></a>: 20</p>\n<p><a href=\"/glossary#number\"><strong>number</strong></a>:</p>\n<p><a href=\"/glossary#owners\"><strong>owners</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>password</strong></a>: password</p>\n<p><a href=\"/glossary#post_code\"><strong>post_code</strong></a>: 789</p>\n<p><a href=\"/glossary#posted\"><strong>posted</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#products\"><strong>products</strong></a>:</p>\n<p><a href=\"/glossary#short_name\"><strong>short_name</strong></a>:</p>\n<p><a href=\"/glossary#state\"><strong>state</strong></a>:</p>\n<p><a href=\"/glossary#super_family\"><strong>super_family</strong></a>:</p>\n<p><a href=\"/glossary#this_account\"><strong>this_account</strong></a>:</p>\n<p><a href=\"/glossary#transactions\"><strong>transactions</strong></a>:</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>user_name</strong></a>: felixsmith</p>\n<p><a href=\"/glossary#users\"><strong>users</strong></a>: user list</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n<p><a href=\"/glossary#website\"><strong>website</strong></a>: <a href=\"http://www.openbankproject.com\">www.openbankproject.com</a></p>\n<p><a href=\"/glossary#\">account_number</a>: 546387432</p>\n<p><a href=\"/glossary#counterparty\">counterparty</a>:</p>\n<p><a href=\"/glossary#driveup\">driveUp</a>:</p>\n<p><a href=\"/glossary#lobby\">lobby</a>:</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#success\"><strong>success</strong></a>:</p>\n",
      "description_markdown": "Import bulk data into the sandbox (Authenticated access).\n\nThis call can be used to create banks, users, accounts and transactions which are stored in the local RDBMS.\n\nThe user needs to have CanCreateSandbox entitlement.\n\nNote: This is a monolithic call. You could also use a combination of endpoints including create bank, create user, create account and create transaction request to create similar data.\n\nAn example of an import set of data (json) can be found [here](https://raw.githubusercontent.com/OpenBankProject/OBP-API/develop/obp-api/src/main/scala/code/api/sandbox/example_data/2016-04-28/example_import.json)\nAuthentication is Mandatory\n\n\n**JSON request body fields:**\n\n\n\n[**IBAN**](/glossary#): DE91 1000 0000 0123 4567 89\n\n\n\n[**accounts**](/glossary#accounts): \n\n\n\n[**actual_date**](/glossary#actual_date): 2020-01-27\n\n\n\n[**address**](/glossary#address): \n\n\n\n[**amount**](/glossary#): 10.12\n\n\n\n[**atms**](/glossary#atms): \n\n\n\n[**balance**](/glossary#balance): 10\n\n\n\n[**bank**](/glossary#Bank): \n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**banks**](/glossary#banks): \n\n\n\n[**branches**](/glossary#branches): \n\n\n\n[**category**](/glossary#category): \n\n\n\n[**channel**](/glossary#channel): \n\n\n\n[**city**](/glossary#city): \n\n\n\n[**code**](/glossary#code): 125\n\n\n\n[**completed**](/glossary#completed): 2020-01-27\n\n\n\n[**country_code**](/glossary#country_code): 1254\n\n\n\n[**county**](/glossary#county): \n\n\n\n[**crm_events**](/glossary#crm_events): \n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**customer**](/glossary#Customer): \n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**detail**](/glossary#detail): \n\n\n\n[**details**](/glossary#details): \n\n\n\n[**email**](/glossary#): felixsmith@example.com\n\n\n\n[**family**](/glossary#family): \n\n\n\n[**full_name**](/glossary#full_name): full name string\n\n\n\n[**generate_accountants_view**](/glossary#generate_accountants_view): \n\n\n\n[**generate_auditors_view**](/glossary#generate_auditors_view): \n\n\n\n[**generate_public_view**](/glossary#generate_public_view): \n\n\n\n[**hours**](/glossary#hours): \n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**label**](/glossary#): My Account\n\n\n\n[**latitude**](/glossary#latitude): 38.8951\n\n\n\n[**license**](/glossary#license): \n\n\n\n[**line_1**](/glossary#): \n\n\n\n[**line_2**](/glossary#): \n\n\n\n[**line_3**](/glossary#): \n\n\n\n[**location**](/glossary#location): \n\n\n\n[**logo**](/glossary#logo): logo url\n\n\n\n[**longitude**](/glossary#longitude): -77.0364\n\n\n\n[**meta**](/glossary#meta): \n\n\n\n[**more_info_url**](/glossary#more_info_url): www.example.com/abc\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**new_balance**](/glossary#new_balance): 20\n\n\n\n[**number**](/glossary#number): \n\n\n\n[**owners**](/glossary#owners): \n\n\n\n[**password**](/glossary#): password\n\n\n\n[**post_code**](/glossary#post_code): 789\n\n\n\n[**posted**](/glossary#posted): 2020-01-27\n\n\n\n[**products**](/glossary#products): \n\n\n\n[**short_name**](/glossary#short_name): \n\n\n\n[**state**](/glossary#state): \n\n\n\n[**super_family**](/glossary#super_family): \n\n\n\n[**this_account**](/glossary#this_account): \n\n\n\n[**transactions**](/glossary#transactions): \n\n\n\n[**type**](/glossary#type): \n\n\n\n[**user_name**](/glossary#): felixsmith\n\n\n\n[**users**](/glossary#users): user list\n\n\n\n[**value**](/glossary#): 5987953\n\n\n\n[**website**](/glossary#website): www.openbankproject.com\n\n\n\n[account_number](/glossary#): 546387432\n\n\n\n[counterparty](/glossary#counterparty): \n\n\n\n[driveUp](/glossary#driveup): \n\n\n\n[lobby](/glossary#lobby): \n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**success**](/glossary#success): \n\n\n",
      "example_request_body": {
        "banks": [
          {
            "id": "bank1",
            "short_name": "bank 1",
            "full_name": "Bank 1 Inc.",
            "logo": "http://example.com/logo",
            "website": "http://example.com"
          },
          {
            "id": "bank2",
            "short_name": "bank 2",
            "full_name": "Bank 2 Inc.",
            "logo": "http://example.com/logo2",
            "website": "http://example.com/2"
          }
        ],
        "users": [
          {
            "email": "user1@example.com",
            "password": "TESOBE520berlin123!",
            "user_name": "User 1"
          },
          {
            "email": "user2@example.com",
            "password": "TESOBE520berlin123!",
            "user_name": "User 2"
          }
        ],
        "accounts": [
          {
            "id": "account1",
            "bank": "bank1",
            "label": "Account 1 at Bank 1",
            "number": "1",
            "type": "savings",
            "balance": {
              "currency": "EUR",
              "amount": "1000.00"
            },
            "IBAN": "1234567890",
            "owners": ["User 1"],
            "generate_public_view": true,
            "generate_accountants_view": true,
            "generate_auditors_view": true
          },
          {
            "id": "account2",
            "bank": "bank1",
            "label": "Account 2 at Bank 1",
            "number": "2",
            "type": "current",
            "balance": {
              "currency": "EUR",
              "amount": "1000.00"
            },
            "IBAN": "91234567890",
            "owners": ["User 2"],
            "generate_public_view": false,
            "generate_accountants_view": true,
            "generate_auditors_view": true
          },
          {
            "id": "account1",
            "bank": "bank2",
            "label": "Account 1 at Bank 2",
            "number": "22",
            "type": "savings",
            "balance": {
              "currency": "EUR",
              "amount": "1000.00"
            },
            "IBAN": "21234567890",
            "owners": ["User 1", "User 2"],
            "generate_public_view": false,
            "generate_accountants_view": true,
            "generate_auditors_view": true
          }
        ],
        "transactions": [
          {
            "id": "transaction-without-counterparty",
            "this_account": {
              "id": "account1",
              "bank": "bank2"
            },
            "details": {
              "type": "SEPA",
              "description": "some description",
              "posted": "2012-03-07T00:00:00.001Z",
              "completed": "2012-04-07T00:00:00.001Z",
              "new_balance": "1244.00",
              "value": "-135.33"
            }
          },
          {
            "id": "blankCounterpartNameTransaction",
            "this_account": {
              "id": "account1",
              "bank": "bank1"
            },
            "counterparty": {
              "account_number": "123456-AVB"
            },
            "details": {
              "type": "SEPA",
              "description": "some description",
              "posted": "2012-03-07T00:00:00.001Z",
              "completed": "2012-04-07T00:00:00.001Z",
              "new_balance": "1244.00",
              "value": "-135.33"
            }
          },
          {
            "id": "blankCounterpartAccountNumberTransaction",
            "this_account": {
              "id": "account1",
              "bank": "bank1"
            },
            "counterparty": {
              "name": "Piano Repair"
            },
            "details": {
              "type": "SEPA",
              "description": "some description",
              "posted": "2012-03-07T00:00:00.001Z",
              "completed": "2012-04-07T00:00:00.001Z",
              "new_balance": "1244.00",
              "value": "-135.33"
            }
          },
          {
            "id": "transaction-with-counterparty",
            "this_account": {
              "id": "account1",
              "bank": "bank1"
            },
            "counterparty": {
              "name": "Acme Inc.",
              "account_number": "12345-B"
            },
            "details": {
              "type": "SEPA",
              "description": "some description",
              "posted": "2012-03-07T00:00:00.001Z",
              "completed": "2012-04-07T00:00:00.001Z",
              "new_balance": "1244.00",
              "value": "-135.33"
            }
          },
          {
            "id": "transaction-without-counterparty",
            "this_account": {
              "id": "account1",
              "bank": "bank1"
            },
            "details": {
              "type": "SEPA",
              "description": "some description",
              "posted": "2012-03-07T00:00:00.001Z",
              "completed": "2012-04-07T00:00:00.001Z",
              "new_balance": "1244.00",
              "value": "-135.33"
            }
          }
        ],
        "branches": [
          {
            "id": "branch1",
            "bank_id": "bank1",
            "name": "Genel Müdürlük",
            "address": {
              "line_1": "5 Some Street",
              "line_2": "Rosy Place",
              "line_3": "Sunny Village",
              "city": "Ashbourne",
              "county": "Derbyshire",
              "state": "",
              "post_code": "WHY RU4",
              "country_code": "UK"
            },
            "location": {
              "latitude": 52.556198,
              "longitude": 13.384099
            },
            "meta": {
              "license": {
                "id": "pddl",
                "name": "Open Data Commons Public Domain Dedication and License (PDDL)"
              }
            },
            "lobby": {
              "hours": "M-TH 8:30-3:30, F 9-5"
            },
            "driveUp": {
              "hours": "M-Th 8:30-5:30, F-8:30-6, Sat 9-12"
            }
          },
          {
            "id": "branch2",
            "bank_id": "bank1",
            "name": "Manchester",
            "address": {
              "line_1": "5 Some Street",
              "line_2": "Rosy Place",
              "line_3": "Sunny Village",
              "city": "Ashbourne",
              "county": "Derbyshire",
              "state": "",
              "post_code": "WHY RU4",
              "country_code": "UK"
            },
            "location": {
              "latitude": 52.556198,
              "longitude": 13.384099
            },
            "meta": {
              "license": {
                "id": "pddl",
                "name": "Open Data Commons Public Domain Dedication and License (PDDL)"
              }
            },
            "lobby": {
              "hours": "M-TH 8:30-3:30, F 9-5"
            },
            "driveUp": {
              "hours": "M-Th 8:30-5:30, F-8:30-6, Sat 9-12"
            }
          }
        ],
        "atms": [
          {
            "id": "atm1",
            "bank_id": "bank1",
            "name": "Ashbourne Atm 1",
            "address": {
              "line_1": "5 Some Street",
              "line_2": "Rosy Place",
              "line_3": "Sunny Village",
              "city": "Ashbourne",
              "county": "Derbyshire",
              "state": "",
              "post_code": "WHY RU4",
              "country_code": "UK"
            },
            "location": {
              "latitude": 52.556198,
              "longitude": 13.384099
            },
            "meta": {
              "license": {
                "id": "pddl",
                "name": "Open Data Commons Public Domain Dedication and License (PDDL)"
              }
            }
          },
          {
            "id": "atm2",
            "bank_id": "bank1",
            "name": "Manchester Atm 1",
            "address": {
              "line_1": "5 Some Street",
              "line_2": "Rosy Place",
              "line_3": "Sunny Village",
              "city": "Ashbourne",
              "county": "Derbyshire",
              "state": "",
              "post_code": "WHY RU4",
              "country_code": "UK"
            },
            "location": {
              "latitude": 52.556198,
              "longitude": 13.384099
            },
            "meta": {
              "license": {
                "id": "pddl",
                "name": "Open Data Commons Public Domain Dedication and License (PDDL)"
              }
            }
          }
        ],
        "products": [
          {
            "bank_id": "bank1",
            "code": "prd1",
            "name": "product 1",
            "category": "cat1",
            "family": "fam1",
            "super_family": "sup fam 1",
            "more_info_url": "www.example.com/index1",
            "meta": {
              "license": {
                "id": "pddl",
                "name": "Open Data Commons Public Domain Dedication and License (PDDL)"
              }
            }
          },
          {
            "bank_id": "bank1",
            "code": "prd2",
            "name": "Product 2",
            "category": "cat2",
            "family": "fam2",
            "super_family": "sup fam 2",
            "more_info_url": "www.example.com/index2",
            "meta": {
              "license": {
                "id": "pddl",
                "name": "Open Data Commons Public Domain Dedication and License (PDDL)"
              }
            }
          }
        ],
        "crm_events": [
          {
            "id": "ASDFHJ47YKJH",
            "bank_id": "bank1",
            "customer": {
              "name": "James Brown",
              "number": "698761728934"
            },
            "category": "Call",
            "detail": "Check mortgage",
            "channel": "Phone",
            "actual_date": "1100-01-01T01:01:01.000Z"
          },
          {
            "id": "KIFJA76876AS",
            "bank_id": "bank1",
            "customer": {
              "name": "James Brown",
              "number": "698761728934"
            },
            "category": "Call",
            "detail": "Check mortgage",
            "channel": "Phone",
            "actual_date": "1100-01-01T01:01:01.000Z"
          }
        ]
      },
      "success_response_body": {
        "success": "Success"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-10001: Incorrect json format.",
        "OBP-00002: Data import is disabled for this API instance.",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Sandbox"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "accounts": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "IBAN": {
                  "type": "string"
                },
                "generate_accountants_view": {
                  "type": "boolean"
                },
                "owners": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "generate_public_view": {
                  "type": "boolean"
                },
                "bank": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "generate_auditors_view": {
                  "type": "boolean"
                },
                "label": {
                  "type": "string"
                },
                "number": {
                  "type": "string"
                },
                "balance": {
                  "type": "object",
                  "properties": {
                    "amount": {
                      "type": "string"
                    },
                    "currency": {
                      "type": "string"
                    }
                  }
                },
                "type": {
                  "type": "string"
                }
              }
            }
          },
          "branches": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "location": {
                  "type": "object",
                  "properties": {
                    "longitude": {
                      "type": "number"
                    },
                    "latitude": {
                      "type": "number"
                    }
                  }
                },
                "address": {
                  "type": "object",
                  "properties": {
                    "line_2": {
                      "type": "string"
                    },
                    "county": {
                      "type": "string"
                    },
                    "line_3": {
                      "type": "string"
                    },
                    "state": {
                      "type": "string"
                    },
                    "country_code": {
                      "type": "string"
                    },
                    "post_code": {
                      "type": "string"
                    },
                    "line_1": {
                      "type": "string"
                    },
                    "city": {
                      "type": "string"
                    }
                  }
                },
                "driveUp": {
                  "type": "object",
                  "properties": {
                    "hours": {
                      "type": "string"
                    }
                  }
                },
                "lobby": {
                  "type": "object",
                  "properties": {
                    "hours": {
                      "type": "string"
                    }
                  }
                },
                "bank_id": {
                  "type": "string"
                },
                "meta": {
                  "type": "object",
                  "properties": {
                    "license": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "id": {
                  "type": "string"
                }
              }
            }
          },
          "transactions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "this_account": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "bank": {
                      "type": "string"
                    }
                  }
                },
                "details": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string"
                    },
                    "new_balance": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "completed": {
                      "type": "string"
                    },
                    "posted": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "products": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "family": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "category": {
                  "type": "string"
                },
                "bank_id": {
                  "type": "string"
                },
                "super_family": {
                  "type": "string"
                },
                "meta": {
                  "type": "object",
                  "properties": {
                    "license": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "code": {
                  "type": "string"
                },
                "more_info_url": {
                  "type": "string"
                }
              }
            }
          },
          "atms": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "location": {
                  "type": "object",
                  "properties": {
                    "longitude": {
                      "type": "number"
                    },
                    "latitude": {
                      "type": "number"
                    }
                  }
                },
                "address": {
                  "type": "object",
                  "properties": {
                    "line_2": {
                      "type": "string"
                    },
                    "county": {
                      "type": "string"
                    },
                    "line_3": {
                      "type": "string"
                    },
                    "state": {
                      "type": "string"
                    },
                    "country_code": {
                      "type": "string"
                    },
                    "post_code": {
                      "type": "string"
                    },
                    "line_1": {
                      "type": "string"
                    },
                    "city": {
                      "type": "string"
                    }
                  }
                },
                "bank_id": {
                  "type": "string"
                },
                "meta": {
                  "type": "object",
                  "properties": {
                    "license": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "id": {
                  "type": "string"
                }
              }
            }
          },
          "crm_events": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "channel": {
                  "type": "string"
                },
                "actual_date": {
                  "type": "string",
                  "format": "date-time"
                },
                "bank_id": {
                  "type": "string"
                },
                "customer": {
                  "type": "object",
                  "properties": {
                    "number": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  }
                },
                "category": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "detail": {
                  "type": "string"
                }
              }
            }
          },
          "users": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                },
                "user_name": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              }
            }
          },
          "banks": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "full_name": {
                  "type": "string"
                },
                "short_name": {
                  "type": "string"
                },
                "logo": {
                  "type": "string"
                },
                "website": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "success": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateSandbox",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/sandbox/data-import",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv3.1.0-createCardAttribute",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "createCardAttribute"
      },
      "request_verb": "POST",
      "request_url": "/obp/v3.1.0/management/banks/BANK_ID/cards/CARD_ID/attribute",
      "summary": "Create Card Attribute",
      "description": "<p>Create Card Attribute</p>\n<p>Card Attributes are used to describe a financial Product with a list of typed key value pairs.</p>\n<p>Each Card Attribute is linked to its Card by CARD_ID</p>\n<p>The type field must be one of &quot;STRING&quot;, &quot;INTEGER&quot;, &quot;DOUBLE&quot; or DATE_WITH_DAY&quot;</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#\">CARD_ID</a>: 36f8a9e6-c2b1-407a-8bd0-421b7119307e</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n",
      "description_markdown": "Create Card Attribute\n\nCard Attributes are used to describe a financial Product with a list of typed key value pairs.\n\nEach Card Attribute is linked to its Card by CARD_ID\n\nThe type field must be one of \"STRING\", \"INTEGER\", \"DOUBLE\" or DATE_WITH_DAY\"\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[CARD_ID](/glossary#): 36f8a9e6-c2b1-407a-8bd0-421b7119307e \n\n\n\n\n\n**JSON request body fields:**\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**type**](/glossary#type): \n\n\n\n[**value**](/glossary#): 5987953\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**value**](/glossary#): 5987953\n\n\n",
      "example_request_body": {
        "name": "OVERDRAFT_START_DATE",
        "type": "DOUBLE",
        "value": "2012-04-23"
      },
      "success_response_body": {
        "name": "OVERDRAFT_START_DATE",
        "card_id": "36f8a9e6-c2b1-407a-8bd0-421b7119307e ",
        "attribute_type": "DOUBLE",
        "bank_id": {
          "value": "gh.29.uk"
        },
        "value": "2012-04-23",
        "card_attribute_id": "b4e0352a-9a0f-4bfa-b30b-9003aa467f50"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Card", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "bank_id": {
            "type": "object",
            "properties": {
              "value": {
                "type": "string"
              }
            }
          },
          "card_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "card_attribute_id": {
            "type": "string"
          },
          "attribute_type": {
            "type": "string",
            "enum": ["STRING", "INTEGER", "DOUBLE", "DATE_WITH_DAY"]
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/banks/BANK_ID/cards/CARD_ID/attribute",
      "connector_methods": [
        "obp.createOrUpdateCardAttribute",
        "obp.getPhysicalCardForBank",
        "obp.getBank",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv1.2.1-deleteCounterpartyPhysicalLocation",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "deleteCounterpartyPhysicalLocation"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/metadata/physical_location",
      "summary": "Delete Counterparty Physical Location",
      "description": "<p>Delete physical location of other bank account</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#other_account_id\">OTHER_ACCOUNT_ID</a>:</p>\n<p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p>\n<p><strong>JSON response body fields:</strong></p>\n",
      "description_markdown": "Delete physical location of other bank account\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[OTHER_ACCOUNT_ID](/glossary#other_account_id): \n\n\n\n[VIEW_ID](/glossary#this_view_id): owner\n\n\n\n\n\n**JSON response body fields:**\n\n\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "jsonString": "{}"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-30022: The current view does not have the permission:",
        "Physical Location cannot be deleted",
        "Delete not completed",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Counterparty-Metadata", "Counterparty", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/metadata/physical_location",
      "connector_methods": [
        "obp.checkBankAccountExists",
        "obp.getBank",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv3.1.0-updateAccountAttribute",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "updateAccountAttribute"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/products/PRODUCT_CODE/attributes/ACCOUNT_ATTRIBUTE_ID",
      "summary": "Update Account Attribute",
      "description": "<p>Update Account Attribute</p>\n<p>Account Attributes are used to describe a financial Product with a list of typed key value pairs.</p>\n<p>Each Account Attribute is linked to its Account by ACCOUNT_ID</p>\n<p>Typical account attributes might be:</p>\n<p>ISIN (for International bonds)<br />\nVKN (for German bonds)<br />\nREDCODE (markit short code for credit derivative)<br />\nLOAN_ID (e.g. used for Anacredit reporting)</p>\n<p>ISSUE_DATE (When the bond was issued in the market)<br />\nMATURITY_DATE (End of life time of a product)<br />\nTRADABLE</p>\n<p>See <a href=\"http://www.fpml.org/\">FPML</a> for more examples.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#account_attribute_id\">ACCOUNT_ATTRIBUTE_ID</a>:</p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#product_code\">PRODUCT_CODE</a>: 1234BW</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#account_attribute_id\"><strong>account_attribute_id</strong></a>:</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#product_code\"><strong>product_code</strong></a>: 1234BW</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n<p><a href=\"/glossary#\">product_instance_code</a>: product_instance_code</p>\n",
      "description_markdown": "Update Account Attribute\n\n\nAccount Attributes are used to describe a financial Product with a list of typed key value pairs.\n\nEach Account Attribute is linked to its Account by ACCOUNT_ID\n\n\n       \n\nTypical account attributes might be:\n\nISIN (for International bonds)\nVKN (for German bonds)\nREDCODE (markit short code for credit derivative)\nLOAN_ID (e.g. used for Anacredit reporting)\n\nISSUE_DATE (When the bond was issued in the market)\nMATURITY_DATE (End of life time of a product)\nTRADABLE\n\nSee [FPML](http://www.fpml.org/) for more examples.\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ACCOUNT_ATTRIBUTE_ID](/glossary#account_attribute_id): \n\n\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[PRODUCT_CODE](/glossary#product_code): 1234BW\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**account_attribute_id**](/glossary#account_attribute_id): \n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**product_code**](/glossary#product_code): 1234BW\n\n\n\n[**type**](/glossary#type): \n\n\n\n[**value**](/glossary#): 5987953\n\n\n\n[product_instance_code](/glossary#): product_instance_code\n\n\n",
      "example_request_body": {
        "name": "OVERDRAFT_START_DATE",
        "type": "DATE_WITH_DAY",
        "value": "2012-04-23",
        "product_instance_code": "LKJL98769F"
      },
      "success_response_body": {
        "product_code": "1234BW",
        "account_attribute_id": "613c83ea-80f9-4560-8404-b9cd4ec42a7f",
        "name": "OVERDRAFT_START_DATE",
        "type": "DATE_WITH_DAY",
        "value": "2012-04-23",
        "product_instance_code": "LKJL98769F"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["Account", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "product_instance_code": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "product_code": {
            "type": "string"
          },
          "account_attribute_id": {
            "type": "string"
          },
          "product_instance_code": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanUpdateAccountAttribute",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/products/PRODUCT_CODE/attributes/ACCOUNT_ATTRIBUTE_ID",
      "connector_methods": [
        "obp.createOrUpdateAccountAttribute",
        "obp.getAccountAttributeById",
        "obp.checkBankAccountExists",
        "obp.getBank",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv3.1.0-getConsumers",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "getConsumers"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.1.0/management/consumers",
      "summary": "Get Consumers",
      "description": "<p>Get the all Consumers.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#app_name\"><strong>app_name</strong></a>:</p>\n<p><a href=\"/glossary#app_type\"><strong>app_type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>consumer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#consumers\"><strong>consumers</strong></a>:</p>\n<p><a href=\"/glossary#created\"><strong>created</strong></a>:</p>\n<p><a href=\"/glossary#created_by_user\"><strong>created_by_user</strong></a>:</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#developer_email\"><strong>developer_email</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"&#x6d;&#97;&#x69;&#x6c;t&#111;&#58;&#x66;&#x65;l&#x69;&#x78;&#115;&#x6d;i&#x74;&#104;&#64;ex&#97;&#x6d;&#112;&#108;&#101;.c&#x6f;&#109;\">fe&#108;&#105;x&#x73;&#x6d;&#105;&#x74;&#x68;&#x40;&#x65;&#x78;&#97;&#109;p&#108;&#101;&#x2e;&#99;&#x6f;m</a></p>\n<p><a href=\"/glossary#enabled\"><strong>enabled</strong></a>: true</p>\n<p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p>\n<p><a href=\"/glossary#provider_id\"><strong>provider_id</strong></a>:</p>\n<p><a href=\"/glossary#redirect_url\"><strong>redirect_url</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p>\n<p><a href=\"/glossary#\"><strong>username</strong></a>: felixsmith</p>\n",
      "description_markdown": "Get the all Consumers.\n\n\n\nAuthentication is Mandatory\n\n\n**JSON response body fields:**\n\n\n\n[**app_name**](/glossary#app_name): \n\n\n\n[**app_type**](/glossary#app_type): \n\n\n\n[**consumer_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**consumers**](/glossary#consumers): \n\n\n\n[**created**](/glossary#created): \n\n\n\n[**created_by_user**](/glossary#created_by_user): \n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**developer_email**](/glossary#developer_email): \n\n\n\n[**email**](/glossary#): felixsmith@example.com\n\n\n\n[**enabled**](/glossary#enabled): true\n\n\n\n[**provider**](/glossary#provider): ETHEREUM\n\n\n\n[**provider_id**](/glossary#provider_id): \n\n\n\n[**redirect_url**](/glossary#redirect_url): \n\n\n\n[**user_id**](/glossary#): 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\n\n\n\n[**username**](/glossary#): felixsmith\n\n\n",
      "success_response_body": {
        "consumers": [
          {
            "consumer_id": "8e716299-4668-4efd-976a-67f57a9984ec",
            "app_name": "SOFI",
            "app_type": "Web",
            "description": "Account Management",
            "developer_email": "felixsmith@example.com",
            "redirect_url": "www.openbankproject.com",
            "created_by_user": {
              "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
              "email": "felixsmith@example.com",
              "provider_id": "Chris",
              "provider": "http://127.0.0.1:8080",
              "username": "felixsmith"
            },
            "enabled": true,
            "created": "1100-01-01T00:00:00Z"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Consumer", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "consumers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "app_name": {
                  "type": "string"
                },
                "enabled": {
                  "type": "boolean"
                },
                "created_by_user": {
                  "type": "object",
                  "properties": {
                    "provider": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "provider_id": {
                      "type": "string"
                    },
                    "username": {
                      "type": "string"
                    },
                    "user_id": {
                      "type": "string"
                    }
                  }
                },
                "description": {
                  "type": "string"
                },
                "developer_email": {
                  "type": "string"
                },
                "created": {
                  "type": "string",
                  "format": "date-time"
                },
                "consumer_id": {
                  "type": "string"
                },
                "redirect_url": {
                  "type": "string"
                },
                "app_type": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetConsumers",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/consumers",
      "connector_methods": ["obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv4.0.0-createCurrentUserAttribute",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "createCurrentUserAttribute"
      },
      "request_verb": "POST",
      "request_url": "/obp/v4.0.0/my/user/attributes",
      "summary": "Create User Attribute for current user",
      "description": "<p>Create User Attribute for current user</p>\n<p>The type field must be one of &quot;STRING&quot;, &quot;INTEGER&quot;, &quot;DOUBLE&quot; or DATE_WITH_DAY&quot;</p>\n<p>Authentication is Mandatory</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>insert_date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>user_attribute_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n",
      "description_markdown": "Create User Attribute for current user\n\nThe type field must be one of \"STRING\", \"INTEGER\", \"DOUBLE\" or DATE_WITH_DAY\"\n\nAuthentication is Mandatory\n\n\n**JSON request body fields:**\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**type**](/glossary#type): \n\n\n\n[**value**](/glossary#): 5987953\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**insert_date**](/glossary#): 2020-01-27\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**type**](/glossary#type): \n\n\n\n[**user_attribute_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**value**](/glossary#): 5987953\n\n\n",
      "example_request_body": {
        "name": "BATTERY_LEVEL",
        "type": "STRING",
        "value": "90"
      },
      "success_response_body": {
        "user_attribute_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "name": "BATTERY_LEVEL",
        "type": "STRING",
        "value": "90",
        "insert_date": "2023-04-13T04:30:08Z"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["User", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "user_attribute_id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "insert_date": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "roles": [],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/my/user/attributes",
      "connector_methods": ["obp.createOrUpdateUserAttribute", "obp.getUserAttributes"]
    },
    {
      "operation_id": "OBPv3.0.0-getAllEntitlementRequests",
      "implemented_by": {
        "version": "OBPv3.0.0",
        "function": "getAllEntitlementRequests"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.0.0/entitlement-requests",
      "summary": "Get all Entitlement Requests",
      "description": "<p>Get all Entitlement Requests</p>\n<p>Authentication is Mandatory</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#created\"><strong>created</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"&#109;&#x61;&#x69;&#108;&#x74;o&#58;&#x66;&#x65;&#x6c;&#105;&#120;&#115;&#109;&#105;t&#x68;&#x40;&#101;xa&#109;&#x70;l&#x65;&#46;&#99;&#111;&#109;\">f&#x65;&#x6c;&#105;&#x78;s&#x6d;&#x69;t&#x68;&#64;&#x65;&#x78;&#x61;&#109;&#x70;&#108;&#101;&#46;&#x63;&#x6f;&#x6d;</a></p>\n<p><a href=\"/glossary#entitlement_id\"><strong>entitlement_id</strong></a>:</p>\n<p><a href=\"/glossary#entitlement_request_id\"><strong>entitlement_request_id</strong></a>:</p>\n<p><a href=\"/glossary#entitlement_requests\"><strong>entitlement_requests</strong></a>:</p>\n<p><a href=\"/glossary#entitlements\"><strong>entitlements</strong></a>:</p>\n<p><a href=\"/glossary#list\"><strong>list</strong></a>:</p>\n<p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p>\n<p><a href=\"/glossary#provider_id\"><strong>provider_id</strong></a>:</p>\n<p><a href=\"/glossary#role_name\"><strong>role_name</strong></a>:</p>\n<p><a href=\"/glossary#User\"><strong>user</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p>\n<p><a href=\"/glossary#\"><strong>username</strong></a>: felixsmith</p>\n",
      "description_markdown": "Get all Entitlement Requests\n\nAuthentication is Mandatory\n\n\n**JSON response body fields:**\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**created**](/glossary#created): \n\n\n\n[**email**](/glossary#): felixsmith@example.com\n\n\n\n[**entitlement_id**](/glossary#entitlement_id): \n\n\n\n[**entitlement_request_id**](/glossary#entitlement_request_id): \n\n\n\n[**entitlement_requests**](/glossary#entitlement_requests): \n\n\n\n[**entitlements**](/glossary#entitlements): \n\n\n\n[**list**](/glossary#list): \n\n\n\n[**provider**](/glossary#provider): ETHEREUM\n\n\n\n[**provider_id**](/glossary#provider_id): \n\n\n\n[**role_name**](/glossary#role_name): \n\n\n\n[**user**](/glossary#User): \n\n\n\n[**user_id**](/glossary#): 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\n\n\n\n[**username**](/glossary#): felixsmith\n\n\n",
      "success_response_body": {
        "entitlement_requests": [
          {
            "entitlement_request_id": "6fb17583-1e49-4435-bb74-a14fe0996723",
            "user": {
              "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
              "email": "felixsmith@example.com",
              "provider_id": "Chris",
              "provider": "http://127.0.0.1:8080",
              "username": "felixsmith",
              "entitlements": {
                "list": [
                  {
                    "entitlement_id": "6fb17583-1e49-4435-bb74-a14fe0996723",
                    "role_name": "CanQueryOtherUser",
                    "bank_id": "gh.29.uk"
                  }
                ]
              }
            },
            "role_name": "CanQueryOtherUser",
            "bank_id": "gh.29.uk",
            "created": "1100-01-01T00:00:00Z"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-50200: Connector cannot return the data we requested.",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["Role", "Entitlement", "User", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "entitlement_requests": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "entitlement_request_id": {
                  "type": "string"
                },
                "role_name": {
                  "type": "string"
                },
                "bank_id": {
                  "type": "string"
                },
                "user": {
                  "type": "object",
                  "properties": {
                    "provider": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "provider_id": {
                      "type": "string"
                    },
                    "entitlements": {
                      "type": "object",
                      "properties": {
                        "list": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "role_name": {
                                "type": "string"
                              },
                              "bank_id": {
                                "type": "string"
                              },
                              "entitlement_id": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "username": {
                      "type": "string"
                    },
                    "user_id": {
                      "type": "string"
                    }
                  }
                },
                "created": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetEntitlementRequestsAtAnyBank",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/entitlement-requests",
      "connector_methods": ["obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv3.1.0-createWebUiProps",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "createWebUiProps"
      },
      "request_verb": "POST",
      "request_url": "/obp/v3.1.0/management/webui_props",
      "summary": "Create WebUiProps",
      "description": "<p>Create a WebUiProps.</p>\n<p>Authentication is Mandatory</p>\n<p>Explaination of Fields:</p>\n<ul>\n<li>name is required String value</li>\n<li>value is required String value</li>\n</ul>\n<p>The line break and double quotations should do escape, example:</p>\n<pre><code>\n{&quot;name&quot;: &quot;webui_some&quot;, &quot;value&quot;: &quot;this value\nhave &quot;line break&quot; and double quotations.&quot;}\n\n</code></pre>\n<p>should do escape like this:</p>\n<pre><code>\n{&quot;name&quot;: &quot;webui_some&quot;, &quot;value&quot;: &quot;this value\\nhave \\&quot;line break\\&quot; and double quotations.&quot;}\n\n</code></pre>\n<p>Insert image examples:</p>\n<pre><code>// set width=100 and height=50\n{&quot;name&quot;: &quot;webui_some_pic&quot;, &quot;value&quot;: &quot;here is a picture &lt;img alt=&quot;hello&quot; src=&quot;http://somedomain.com/images/pic.png&quot; width=&quot;100&quot; height=&quot;50&quot; /&gt;&quot;}\n\n// only set height=50\n{&quot;name&quot;: &quot;webui_some_pic&quot;, &quot;value&quot;: &quot;here is a picture &lt;img alt=&quot;hello&quot; src=&quot;http://somedomain.com/images/pic.png&quot; width=&quot;&quot; height=&quot;50&quot; /&gt;&quot;}\n\n// only width=20%\n{&quot;name&quot;: &quot;webui_some_pic&quot;, &quot;value&quot;: &quot;here is a picture &lt;img alt=&quot;hello&quot; src=&quot;http://somedomain.com/images/pic.png&quot; width=&quot;20%&quot; height=&quot;&quot; /&gt;&quot;}\n\n</code></pre>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n",
      "description_markdown": "Create a WebUiProps.\n\n\nAuthentication is Mandatory\n\nExplaination of Fields:\n\n* name is required String value\n* value is required String value\n\nThe line break and double quotations should do escape, example:\n\n```\n\n{\"name\": \"webui_some\", \"value\": \"this value\nhave \"line break\" and double quotations.\"}\n\n```\nshould do escape like this:\n\n```\n\n{\"name\": \"webui_some\", \"value\": \"this value\\nhave \\\"line break\\\" and double quotations.\"}\n\n```\n\nInsert image examples:\n\n```\n// set width=100 and height=50\n{\"name\": \"webui_some_pic\", \"value\": \"here is a picture ![hello](http://somedomain.com/images/pic.png =100x50)\"}\n\n// only set height=50\n{\"name\": \"webui_some_pic\", \"value\": \"here is a picture ![hello](http://somedomain.com/images/pic.png =x50)\"}\n\n// only width=20%\n{\"name\": \"webui_some_pic\", \"value\": \"here is a picture ![hello](http://somedomain.com/images/pic.png =20%x)\"}\n\n```\n\n\n**JSON request body fields:**\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**value**](/glossary#): 5987953\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**value**](/glossary#): 5987953\n\n\n",
      "example_request_body": {
        "name": "webui_api_explorer_url",
        "value": "https://apiexplorer.openbankproject.com"
      },
      "success_response_body": {
        "name": "webui_api_explorer_url",
        "value": "https://apiexplorer.openbankproject.com",
        "web_ui_props_id": "some-web-ui-props-id"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["WebUi-Props", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "web_ui_props_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateWebUiProps",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/webui_props",
      "connector_methods": ["obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv3.1.0-deleteCustomerAddress",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "deleteCustomerAddress"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/customers/CUSTOMER_ID/addresses/CUSTOMER_ADDRESS_ID",
      "summary": "Delete Customer Address",
      "description": "<p>Delete an Address of the Customer specified by CUSTOMER_ADDRESS_ID.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#customer_address_id\">CUSTOMER_ADDRESS_ID</a>:</p>\n<p><a href=\"/glossary#Customer.customer_id\">CUSTOMER_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><strong>JSON response body fields:</strong></p>\n",
      "description_markdown": "Delete an Address of the Customer specified by CUSTOMER_ADDRESS_ID.\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[CUSTOMER_ADDRESS_ID](/glossary#customer_address_id): \n\n\n\n[CUSTOMER_ID](/glossary#Customer.customer_id): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n\n\n**JSON response body fields:**\n\n\n",
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Customer", "KYC", "New-Style"],
      "roles": [
        {
          "role": "CanDeleteCustomerAddress",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/customers/CUSTOMER_ID/addresses/CUSTOMER_ADDRESS_ID",
      "connector_methods": [
        "obp.deleteCustomerAddress",
        "obp.getCustomerByCustomerId",
        "obp.getBank",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv4.0.0-getCustomersByCustomerPhoneNumber",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getCustomersByCustomerPhoneNumber"
      },
      "request_verb": "POST",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/search/customers/mobile-phone-number",
      "summary": "Get Customers by MOBILE_PHONE_NUMBER",
      "description": "<p>Gets the Customers specified by MOBILE_PHONE_NUMBER.</p>\n<p>There are two wildcards often used in conjunction with the LIKE operator:<br />\n% - The percent sign represents zero, one, or multiple characters<br />\n_ - The underscore represents a single character<br />\nFor example {&quot;customer_phone_number&quot;:&quot;%381%&quot;} lists all numbers which contain 381 sequence</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#mobile_phone_number\"><strong>mobile_phone_number</strong></a>: +49 30 901820</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#\"><strong>branch_id</strong></a>: DERBY6</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>customer_number</strong></a>: 5987953</p>\n<p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#\"><strong>date_of_birth</strong></a>: 2018-03-09</p>\n<p><a href=\"/glossary#\"><strong>dependants</strong></a>: 1</p>\n<p><a href=\"/glossary#dob_of_dependants\"><strong>dob_of_dependants</strong></a>: [2019-09-08, 2017-07-12]</p>\n<p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"&#x6d;&#x61;&#x69;&#x6c;&#116;&#111;&#58;&#x66;&#x65;li&#120;&#115;&#109;&#105;&#116;&#104;&#x40;&#x65;&#x78;&#x61;mp&#x6c;&#x65;&#46;&#99;&#111;&#x6d;\">&#102;&#x65;l&#x69;&#120;&#x73;&#109;i&#x74;&#x68;&#64;&#x65;&#120;&#97;&#109;&#112;&#108;&#101;&#46;&#99;&#111;&#109;</a></p>\n<p><a href=\"/glossary#\"><strong>employment_status</strong></a>: worker</p>\n<p><a href=\"/glossary#face_image\"><strong>face_image</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>highest_education_attained</strong></a>: Master</p>\n<p><a href=\"/glossary#\"><strong>kyc_status</strong></a>: true</p>\n<p><a href=\"/glossary#last_ok_date\"><strong>last_ok_date</strong></a>: 2022-04-13T04:30:07.985Z</p>\n<p><a href=\"/glossary#\"><strong>legal_name</strong></a>: Eveline Tripman</p>\n<p><a href=\"/glossary#mobile_phone_number\"><strong>mobile_phone_number</strong></a>: +49 30 901820</p>\n<p><a href=\"/glossary#\"><strong>name_suffix</strong></a>: Sr</p>\n<p><a href=\"/glossary#\"><strong>rating</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>relationship_status</strong></a>: single</p>\n<p><a href=\"/glossary#\"><strong>source</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>title</strong></a>: Dr.</p>\n<p><a href=\"/glossary#\"><strong>url</strong></a>: <a href=\"http://www.example.com/id-docs/123/image.png\">http://www.example.com/id-docs/123/image.png</a></p>\n<p><a href=\"/glossary#credit_limit\">credit_limit</a>:</p>\n<p><a href=\"/glossary#credit_rating\">credit_rating</a>:</p>\n",
      "description_markdown": "Gets the Customers specified by MOBILE_PHONE_NUMBER.\n\nThere are two wildcards often used in conjunction with the LIKE operator:\n    % - The percent sign represents zero, one, or multiple characters\n    _ - The underscore represents a single character\nFor example {\"customer_phone_number\":\"%381%\"} lists all numbers which contain 381 sequence\n\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON request body fields:**\n\n\n\n[**mobile_phone_number**](/glossary#mobile_phone_number): +49 30 901820\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**amount**](/glossary#): 10.12\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**branch_id**](/glossary#): DERBY6\n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**customer_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**customer_number**](/glossary#): 5987953\n\n\n\n[**date**](/glossary#): 2020-01-27\n\n\n\n[**date_of_birth**](/glossary#): 2018-03-09\n\n\n\n[**dependants**](/glossary#): 1\n\n\n\n[**dob_of_dependants**](/glossary#dob_of_dependants): [2019-09-08, 2017-07-12]\n\n\n\n[**email**](/glossary#): felixsmith@example.com\n\n\n\n[**employment_status**](/glossary#): worker\n\n\n\n[**face_image**](/glossary#face_image): \n\n\n\n[**highest_education_attained**](/glossary#): Master\n\n\n\n[**kyc_status**](/glossary#): true\n\n\n\n[**last_ok_date**](/glossary#last_ok_date): 2022-04-13T04:30:07.985Z\n\n\n\n[**legal_name**](/glossary#): Eveline Tripman\n\n\n\n[**mobile_phone_number**](/glossary#mobile_phone_number): +49 30 901820\n\n\n\n[**name_suffix**](/glossary#): Sr\n\n\n\n[**rating**](/glossary#): \n\n\n\n[**relationship_status**](/glossary#): single\n\n\n\n[**source**](/glossary#): \n\n\n\n[**title**](/glossary#): Dr.\n\n\n\n[**url**](/glossary#): http://www.example.com/id-docs/123/image.png\n\n\n\n[credit_limit](/glossary#credit_limit): \n\n\n\n[credit_rating](/glossary#credit_rating): \n\n\n",
      "example_request_body": {
        "mobile_phone_number": "+44 07972 444 876"
      },
      "success_response_body": {
        "bank_id": "gh.29.uk",
        "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "customer_number": "5987953",
        "legal_name": "Eveline Tripman",
        "mobile_phone_number": "+44 07972 444 876",
        "email": "felixsmith@example.com",
        "face_image": {
          "url": "www.openbankproject",
          "date": "1100-01-01T00:00:00Z"
        },
        "date_of_birth": "1100-01-01T00:00:00Z",
        "relationship_status": "single",
        "dependants": 1,
        "dob_of_dependants": ["1100-01-01T00:00:00Z"],
        "credit_rating": {
          "rating": "OBP",
          "source": "OBP"
        },
        "credit_limit": {
          "currency": "EUR",
          "amount": "0"
        },
        "highest_education_attained": "Master",
        "employment_status": "worker",
        "kyc_status": true,
        "last_ok_date": "2022-04-13T04:30:08Z",
        "title": "Dr.",
        "branch_id": "DERBY6",
        "name_suffix": "Sr"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30008: User Customer Link not found by USER_ID",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Customer", "KYC", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "mobile_phone_number": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "dependants": {
            "type": "integer"
          },
          "dob_of_dependants": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            }
          },
          "face_image": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string"
              },
              "date": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          "credit_limit": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string"
              },
              "amount": {
                "type": "string"
              }
            }
          },
          "employment_status": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "customer_id": {
            "type": "string"
          },
          "relationship_status": {
            "type": "string"
          },
          "bank_id": {
            "type": "string"
          },
          "highest_education_attained": {
            "type": "string"
          },
          "customer_number": {
            "type": "string"
          },
          "credit_rating": {
            "type": "object",
            "properties": {
              "rating": {
                "type": "string"
              },
              "source": {
                "type": "string"
              }
            }
          },
          "name_suffix": {
            "type": "string"
          },
          "last_ok_date": {
            "type": "string",
            "format": "date-time"
          },
          "legal_name": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "branch_id": {
            "type": "string"
          },
          "date_of_birth": {
            "type": "string",
            "format": "date-time"
          },
          "mobile_phone_number": {
            "type": "string"
          },
          "kyc_status": {
            "type": "boolean"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/search/customers/mobile-phone-number",
      "connector_methods": ["obp.getCustomersByCustomerPhoneNumber"]
    },
    {
      "operation_id": "OBPv4.0.0-deleteBankLevelDynamicResourceDoc",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "deleteBankLevelDynamicResourceDoc"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v4.0.0/management/banks/BANK_ID/dynamic-resource-docs/DYNAMIC-RESOURCE-DOC-ID",
      "summary": "Delete Bank Level Dynamic Resource Doc",
      "description": "<p>Delete a Bank Level Dynamic Resource Doc.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON response body fields:</strong></p>\n",
      "description_markdown": "Delete a Bank Level Dynamic Resource Doc.\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON response body fields:**\n\n\n",
      "success_response_body": true,
      "error_response_bodies": [
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Dynamic-Resource-Doc", "New-Style"],
      "roles": [
        {
          "role": "CanDeleteBankLevelDynamicResourceDoc",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/banks/BANK_ID/dynamic-resource-docs/DYNAMIC-RESOURCE-DOC-ID",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv5.0.0-getConsentRequest",
      "implemented_by": {
        "version": "OBPv5.0.0",
        "function": "getConsentRequest"
      },
      "request_verb": "GET",
      "request_url": "/obp/v5.0.0/consumer/consent-requests/CONSENT_REQUEST_ID",
      "summary": "Get Consent Request",
      "description": "<p>Authentication is Optional</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#consent_request_id\">CONSENT_REQUEST_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#consent_request_id\"><strong>consent_request_id</strong></a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#\"><strong>consumer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#payload\"><strong>payload</strong></a>: payload</p>\n",
      "description_markdown": "Authentication is Optional\n\n\n**URL Parameters:**\n\n[CONSENT_REQUEST_ID](/glossary#consent_request_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**consent_request_id**](/glossary#consent_request_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[**consumer_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**payload**](/glossary#payload): payload\n\n\n",
      "success_response_body": {
        "consent_request_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0",
        "payload": {
          "everything": false,
          "account_access": [
            {
              "account_routing": {
                "scheme": "AccountNumber",
                "address": "4930396"
              },
              "view_id": "owner"
            }
          ],
          "phone_number": "+44 07972 444 876",
          "valid_from": "2022-06-14T12:42:00Z",
          "time_to_live": 3600
        },
        "consumer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      },
      "error_response_bodies": [
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-35028: Consent Request not found by CONSENT_REQUEST_ID. ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Consent", "Account Information Service (AIS)", "PSD2", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "consumer_id": {
            "type": "string"
          },
          "payload": {
            "type": "object",
            "properties": {
              "phone_number": {
                "type": "string"
              },
              "everything": {
                "type": "boolean"
              },
              "valid_from": {
                "type": "string"
              },
              "time_to_live": {
                "type": "integer"
              },
              "account_access": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "account_routing": {
                      "type": "object",
                      "properties": {
                        "scheme": {
                          "type": "string"
                        },
                        "address": {
                          "type": "string"
                        }
                      }
                    },
                    "view_id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "consent_request_id": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/consumer/consent-requests/CONSENT_REQUEST_ID",
      "connector_methods": ["obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv3.1.0-getCustomerByCustomerId",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "getCustomerByCustomerId"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/customers/CUSTOMER_ID",
      "summary": "Get Customer by CUSTOMER_ID",
      "description": "<p>Gets the Customer specified by CUSTOMER_ID.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#Customer.customer_id\">CUSTOMER_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#\"><strong>branch_id</strong></a>: DERBY6</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#\"><strong>customer_attribute_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#customer_attributes\"><strong>customer_attributes</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>customer_number</strong></a>: 5987953</p>\n<p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#\"><strong>date_of_birth</strong></a>: 2018-03-09</p>\n<p><a href=\"/glossary#\"><strong>dependants</strong></a>: 1</p>\n<p><a href=\"/glossary#dob_of_dependants\"><strong>dob_of_dependants</strong></a>: [2019-09-08, 2017-07-12]</p>\n<p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"&#109;&#97;&#x69;&#108;&#x74;&#x6f;&#x3a;&#x66;&#x65;&#108;i&#120;&#x73;m&#105;&#x74;&#104;&#x40;e&#x78;&#x61;&#x6d;pl&#x65;&#46;&#x63;&#x6f;&#x6d;\">&#102;e&#108;&#105;&#120;&#x73;&#x6d;&#105;&#116;&#x68;&#64;e&#x78;&#x61;&#109;&#112;&#108;e&#46;c&#x6f;&#109;</a></p>\n<p><a href=\"/glossary#\"><strong>employment_status</strong></a>: worker</p>\n<p><a href=\"/glossary#face_image\"><strong>face_image</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>highest_education_attained</strong></a>: Master</p>\n<p><a href=\"/glossary#\"><strong>kyc_status</strong></a>: true</p>\n<p><a href=\"/glossary#last_ok_date\"><strong>last_ok_date</strong></a>: 2022-04-13T04:30:07.985Z</p>\n<p><a href=\"/glossary#\"><strong>legal_name</strong></a>: Eveline Tripman</p>\n<p><a href=\"/glossary#mobile_phone_number\"><strong>mobile_phone_number</strong></a>: +49 30 901820</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#\"><strong>name_suffix</strong></a>: Sr</p>\n<p><a href=\"/glossary#\"><strong>rating</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>relationship_status</strong></a>: single</p>\n<p><a href=\"/glossary#\"><strong>source</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>title</strong></a>: Dr.</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>url</strong></a>: <a href=\"http://www.example.com/id-docs/123/image.png\">http://www.example.com/id-docs/123/image.png</a></p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n<p><a href=\"/glossary#credit_limit\">credit_limit</a>:</p>\n<p><a href=\"/glossary#credit_rating\">credit_rating</a>:</p>\n",
      "description_markdown": "Gets the Customer specified by CUSTOMER_ID.\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[CUSTOMER_ID](/glossary#Customer.customer_id): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**amount**](/glossary#): 10.12\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**branch_id**](/glossary#): DERBY6\n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**customer_attribute_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**customer_attributes**](/glossary#customer_attributes): \n\n\n\n[**customer_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**customer_number**](/glossary#): 5987953\n\n\n\n[**date**](/glossary#): 2020-01-27\n\n\n\n[**date_of_birth**](/glossary#): 2018-03-09\n\n\n\n[**dependants**](/glossary#): 1\n\n\n\n[**dob_of_dependants**](/glossary#dob_of_dependants): [2019-09-08, 2017-07-12]\n\n\n\n[**email**](/glossary#): felixsmith@example.com\n\n\n\n[**employment_status**](/glossary#): worker\n\n\n\n[**face_image**](/glossary#face_image): \n\n\n\n[**highest_education_attained**](/glossary#): Master\n\n\n\n[**kyc_status**](/glossary#): true\n\n\n\n[**last_ok_date**](/glossary#last_ok_date): 2022-04-13T04:30:07.985Z\n\n\n\n[**legal_name**](/glossary#): Eveline Tripman\n\n\n\n[**mobile_phone_number**](/glossary#mobile_phone_number): +49 30 901820\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**name_suffix**](/glossary#): Sr\n\n\n\n[**rating**](/glossary#): \n\n\n\n[**relationship_status**](/glossary#): single\n\n\n\n[**source**](/glossary#): \n\n\n\n[**title**](/glossary#): Dr.\n\n\n\n[**type**](/glossary#type): \n\n\n\n[**url**](/glossary#): http://www.example.com/id-docs/123/image.png\n\n\n\n[**value**](/glossary#): 5987953\n\n\n\n[credit_limit](/glossary#credit_limit): \n\n\n\n[credit_rating](/glossary#credit_rating): \n\n\n",
      "success_response_body": {
        "bank_id": "gh.29.uk",
        "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "customer_number": "5987953",
        "legal_name": "Eveline Tripman",
        "mobile_phone_number": "+44 07972 444 876",
        "email": "felixsmith@example.com",
        "face_image": {
          "url": "www.openbankproject",
          "date": "1100-01-01T00:00:00Z"
        },
        "date_of_birth": "1100-01-01T00:00:00Z",
        "relationship_status": "single",
        "dependants": 1,
        "dob_of_dependants": ["1100-01-01T00:00:00Z"],
        "credit_rating": {
          "rating": "OBP",
          "source": "OBP"
        },
        "credit_limit": {
          "currency": "EUR",
          "amount": "0"
        },
        "highest_education_attained": "Master",
        "employment_status": "worker",
        "kyc_status": true,
        "last_ok_date": "2022-04-13T04:30:08Z",
        "title": "Dr.",
        "branch_id": "DERBY6",
        "name_suffix": "Sr",
        "customer_attributes": [
          {
            "customer_attribute_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
            "name": "SPECIAL_TAX_NUMBER",
            "type": "STRING",
            "value": "123456789"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-30008: User Customer Link not found by USER_ID",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Customer", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "dependants": {
            "type": "integer"
          },
          "customer_attributes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "customer_attribute_id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "dob_of_dependants": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            }
          },
          "face_image": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string"
              },
              "date": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          "credit_limit": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string"
              },
              "amount": {
                "type": "string"
              }
            }
          },
          "employment_status": {
            "type": "string"
          },
          "last_ok_date": {
            "type": "string",
            "format": "date-time"
          },
          "email": {
            "type": "string"
          },
          "customer_id": {
            "type": "string"
          },
          "relationship_status": {
            "type": "string"
          },
          "bank_id": {
            "type": "string"
          },
          "highest_education_attained": {
            "type": "string"
          },
          "customer_number": {
            "type": "string"
          },
          "credit_rating": {
            "type": "object",
            "properties": {
              "rating": {
                "type": "string"
              },
              "source": {
                "type": "string"
              }
            }
          },
          "name_suffix": {
            "type": "string"
          },
          "legal_name": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "branch_id": {
            "type": "string"
          },
          "date_of_birth": {
            "type": "string",
            "format": "date-time"
          },
          "mobile_phone_number": {
            "type": "string"
          },
          "kyc_status": {
            "type": "boolean"
          }
        }
      },
      "roles": [
        {
          "role": "CanGetCustomer",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/customers/CUSTOMER_ID",
      "connector_methods": [
        "obp.getCustomerAttributes",
        "obp.getCustomerByCustomerId",
        "obp.getBank",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv4.0.0-getTransactionAttributeById",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getTransactionAttributeById"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/transactions/TRANSACTION_ID/attributes/ATTRIBUTE_ID",
      "summary": "Get Transaction Attribute By Id",
      "description": "<p>Get Transaction Attribute By Id</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Adapter.card_attribute_id\">ATTRIBUTE_ID</a>:</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#transaction_ids\">TRANSACTION_ID</a>: 2fg8a7e4-6d02-40e3-a129-0b2bf89de8ub</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#\"><strong>transaction_attribute_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n",
      "description_markdown": "Get Transaction Attribute By Id\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[ATTRIBUTE_ID](/glossary#Adapter.card_attribute_id): \n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[TRANSACTION_ID](/glossary#transaction_ids): 2fg8a7e4-6d02-40e3-a129-0b2bf89de8ub\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**transaction_attribute_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**type**](/glossary#type): \n\n\n\n[**value**](/glossary#): 5987953\n\n\n",
      "success_response_body": {
        "transaction_attribute_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "name": "HOUSE_RENT",
        "type": "DATE_WITH_DAY",
        "value": "123456789"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["Transaction", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "transaction_attribute_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanGetTransactionAttributeAtOneBank",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/transactions/TRANSACTION_ID/attributes/ATTRIBUTE_ID",
      "connector_methods": ["obp.getTransactionAttributeById", "obp.getTransaction"]
    },
    {
      "operation_id": "OBPv5.0.0-getConsentByConsentRequestId",
      "implemented_by": {
        "version": "OBPv5.0.0",
        "function": "getConsentByConsentRequestId"
      },
      "request_verb": "GET",
      "request_url": "/obp/v5.0.0/consumer/consent-requests/CONSENT_REQUEST_ID/consents",
      "summary": "Get Consent By Consent Request Id",
      "description": "<p>This endpoint gets the Consent By consent request id.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#consent_request_id\">CONSENT_REQUEST_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#consent_id\"><strong>consent_id</strong></a>:</p>\n<p><a href=\"/glossary#jwt\"><strong>jwt</strong></a>:</p>\n<p><a href=\"/glossary#status\"><strong>status</strong></a>:</p>\n<p><a href=\"/glossary#consent_request_id\">consent_request_id</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n",
      "description_markdown": "This endpoint gets the Consent By consent request id.\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[CONSENT_REQUEST_ID](/glossary#consent_request_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**consent_id**](/glossary#consent_id): \n\n\n\n[**jwt**](/glossary#jwt): \n\n\n\n[**status**](/glossary#status): \n\n\n\n[consent_request_id](/glossary#consent_request_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n",
      "success_response_body": {
        "consent_id": "9d429899-24f5-42c8-8565-943ffa6a7945",
        "jwt": "eyJhbGciOiJIUzI1NiJ9.eyJlbnRpdGxlbWVudHMiOltdLCJjcmVhdGVkQnlVc2VySWQiOiJhYjY1MzlhOS1iMTA1LTQ0ODktYTg4My0wYWQ4ZDZjNjE2NTciLCJzdWIiOiIyMWUxYzhjYy1mOTE4LTRlYWMtYjhlMy01ZTVlZWM2YjNiNGIiLCJhdWQiOiJlanpuazUwNWQxMzJyeW9tbmhieDFxbXRvaHVyYnNiYjBraWphanNrIiwibmJmIjoxNTUzNTU0ODk5LCJpc3MiOiJodHRwczpcL1wvd3d3Lm9wZW5iYW5rcHJvamVjdC5jb20iLCJleHAiOjE1NTM1NTg0OTksImlhdCI6MTU1MzU1NDg5OSwianRpIjoiMDlmODhkNWYtZWNlNi00Mzk4LThlOTktNjYxMWZhMWNkYmQ1Iiwidmlld3MiOlt7ImFjY291bnRfaWQiOiJtYXJrb19wcml2aXRlXzAxIiwiYmFua19pZCI6ImdoLjI5LnVrLngiLCJ2aWV3X2lkIjoib3duZXIifSx7ImFjY291bnRfaWQiOiJtYXJrb19wcml2aXRlXzAyIiwiYmFua19pZCI6ImdoLjI5LnVrLngiLCJ2aWV3X2lkIjoib3duZXIifV19.8cc7cBEf2NyQvJoukBCmDLT7LXYcuzTcSYLqSpbxLp4",
        "status": "INITIATED",
        "consent_request_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Consent", "Account Information Service (AIS)", "PSD2", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "consent_request_id": {
            "type": "string"
          },
          "consent_id": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "jwt": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/consumer/consent-requests/CONSENT_REQUEST_ID/consents",
      "connector_methods": ["obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv2.1.0-getMetrics",
      "implemented_by": {
        "version": "OBPv2.1.0",
        "function": "getMetrics"
      },
      "request_verb": "GET",
      "request_url": "/obp/v2.1.0/management/metrics",
      "summary": "Get Metrics",
      "description": "<p>Get the all metrics</p>\n<p>require CanReadMetrics role</p>\n<p>Filters Part 1.<em>filtering</em> (no wilde cards etc.) parameters to GET /management/metrics</p>\n<p>Should be able to filter on the following metrics fields</p>\n<p>eg: /management/metrics?from_date=1100-01-01T01:01:01.000Z&amp;to_date=1100-01-01T01:01:01.000Z&amp;limit=50&amp;offset=2</p>\n<p>1 from_date (defaults to one week before current date): eg:from_date=1100-01-01T01:01:01.000Z</p>\n<p>2 to_date (defaults to current date) eg:to_date=1100-01-01T01:01:01.000Z</p>\n<p>3 limit (for pagination: defaults to 50)  eg:limit=200</p>\n<p>4 offset (for pagination: zero index, defaults to 0) eg: offset=10</p>\n<p>5 sort_by (defaults to date field) eg: sort_by=date<br />\npossible values:<br />\n&quot;url&quot;,<br />\n&quot;date&quot;,<br />\n&quot;user_name&quot;,<br />\n&quot;app_name&quot;,<br />\n&quot;developer_email&quot;,<br />\n&quot;implemented_by_partial_function&quot;,<br />\n&quot;implemented_in_version&quot;,<br />\n&quot;consumer_id&quot;,<br />\n&quot;verb&quot;</p>\n<p>6 direction (defaults to date desc) eg: direction=desc</p>\n<p>eg: /management/metrics?from_date=1100-01-01T01:01:01.000Z&amp;to_date=1100-01-01T01:01:<a href=\"m&#x61;&#105;&#108;&#x74;o:&#48;&#x31;&#46;0&#48;0Z&amp;&#108;&#105;&#x6d;&#x69;&#116;&#61;&#x31;0&#x30;&#x30;&#x30;&#x26;&#x6f;f&#x66;&#115;e&#116;&#61;&#x30;&#x26;a&#110;on&#x3d;f&#97;&#108;&#115;&#x65;&#38;a&#x70;&#112;&#95;n&#97;m&#101;=&#x54;&#x65;&#97;&#x74;&#x41;p&#112;&#x26;&#105;&#109;&#x70;l&#x65;&#x6d;&#101;n&#x74;&#101;&#100;_&#105;&#x6e;&#x5f;&#118;&#x65;&#x72;&#115;&#105;&#111;&#110;&#61;&#x76;2&#46;&#49;&#x2e;0&#x26;v&#x65;&#x72;&#x62;=&#80;O&#83;&#x54;&#38;&#x75;&#115;&#x65;r&#x5f;id&#x3d;&#99;&#55;&#98;&#x36;&#x63;b&#52;7-c&#98;&#x39;&#54;-44&#52;&#x31;-&#56;8&#x30;1&#x2d;&#51;&#53;b5&#x37;&#52;&#53;&#54;&#x37;5&#51;&#x61;&#38;&#x75;se&#x72;_&#x6e;&#x61;&#x6d;&#101;=&#115;&#117;&#x73;&#x61;&#x6e;.&#117;&#x6b;&#46;&#x32;&#x39;&#64;&#x65;xa&#109;&#x70;&#x6c;e.&#99;&#111;&#x6d;\">0&#49;&#46;&#x30;&#x30;0&#x5a;&#x26;&#x6c;&#x69;&#109;&#105;t&#61;&#49;&#x30;&#48;&#x30;&#x30;&#38;&#x6f;&#x66;f&#x73;e&#x74;&#x3d;&#48;&#x26;an&#111;&#x6e;=&#x66;&#x61;&#108;&#x73;&#101;&#38;&#x61;&#112;&#112;&#95;n&#x61;&#109;&#101;&#61;&#x54;&#101;a&#116;&#x41;&#x70;&#112;&#38;&#x69;&#x6d;&#112;l&#101;m&#101;&#x6e;&#116;&#x65;&#x64;&#95;&#105;&#x6e;&#x5f;&#x76;&#x65;r&#x73;&#105;&#111;&#x6e;=&#x76;&#x32;&#46;&#x31;&#46;&#48;&#38;&#118;&#x65;&#114;&#98;&#61;&#x50;&#79;&#x53;&#x54;&#38;&#x75;&#115;&#101;r&#x5f;&#105;d&#x3d;&#x63;7&#98;&#54;&#99;&#98;&#x34;7&#x2d;&#x63;&#98;&#57;&#x36;&#x2d;4&#x34;&#x34;&#x31;&#x2d;&#56;&#x38;&#48;&#49;-&#51;&#53;&#x62;&#x35;&#55;&#x34;&#53;&#x36;&#x37;53&#x61;&amp;u&#x73;e&#114;&#95;&#110;&#97;m&#x65;&#61;&#x73;&#117;&#115;&#97;&#110;&#46;&#x75;&#107;&#x2e;&#50;9&#64;&#101;&#120;&#x61;&#x6d;&#112;&#108;&#101;&#46;c&#111;m</a>&amp;consumer_id=78</p>\n<p>Other filters:</p>\n<p>7 consumer_id  (if null ignore)</p>\n<p>8 user_id (if null ignore)</p>\n<p>9 anon (if null ignore) only support two value : true (return where user_id is null.) or false (return where user_id is not null.)</p>\n<p>10 url (if null ignore), note: can not contain '&amp;'.</p>\n<p>11 app_name (if null ignore)</p>\n<p>12 implemented_by_partial_function (if null ignore),</p>\n<p>13 implemented_in_version (if null ignore)</p>\n<p>14 verb (if null ignore)</p>\n<p>15 correlation_id (if null ignore)</p>\n<p>16 duration (if null ignore) non digit chars will be silently omitted</p>\n<p>Authentication is Mandatory</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#app_name\"><strong>app_name</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>consumer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>correlation_id</strong></a>: 1flssoftxq0cr1nssr68u0mioj</p>\n<p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#developer_email\"><strong>developer_email</strong></a>:</p>\n<p><a href=\"/glossary#duration\"><strong>duration</strong></a>: 5.123</p>\n<p><a href=\"/glossary#implemented_by_partial_function\"><strong>implemented_by_partial_function</strong></a>:</p>\n<p><a href=\"/glossary#implemented_in_version\"><strong>implemented_in_version</strong></a>:</p>\n<p><a href=\"/glossary#metrics\"><strong>metrics</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>url</strong></a>: <a href=\"http://www.example.com/id-docs/123/image.png\">http://www.example.com/id-docs/123/image.png</a></p>\n<p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p>\n<p><a href=\"/glossary#\"><strong>user_name</strong></a>: felixsmith</p>\n<p><a href=\"/glossary#verb\"><strong>verb</strong></a>:</p>\n",
      "description_markdown": "Get the all metrics\n\nrequire CanReadMetrics role\n\nFilters Part 1.*filtering* (no wilde cards etc.) parameters to GET /management/metrics\n\nShould be able to filter on the following metrics fields\n\neg: /management/metrics?from_date=1100-01-01T01:01:01.000Z&to_date=1100-01-01T01:01:01.000Z&limit=50&offset=2\n\n1 from_date (defaults to one week before current date): eg:from_date=1100-01-01T01:01:01.000Z\n\n2 to_date (defaults to current date) eg:to_date=1100-01-01T01:01:01.000Z\n\n3 limit (for pagination: defaults to 50)  eg:limit=200\n\n4 offset (for pagination: zero index, defaults to 0) eg: offset=10\n\n5 sort_by (defaults to date field) eg: sort_by=date\n  possible values:\n    \"url\",\n    \"date\",\n    \"user_name\",\n    \"app_name\",\n    \"developer_email\",\n    \"implemented_by_partial_function\",\n    \"implemented_in_version\",\n    \"consumer_id\",\n    \"verb\"\n\n6 direction (defaults to date desc) eg: direction=desc\n\neg: /management/metrics?from_date=1100-01-01T01:01:01.000Z&to_date=1100-01-01T01:01:01.000Z&limit=10000&offset=0&anon=false&app_name=TeatApp&implemented_in_version=v2.1.0&verb=POST&user_id=c7b6cb47-cb96-4441-8801-35b57456753a&user_name=susan.uk.29@example.com&consumer_id=78\n\nOther filters:\n\n7 consumer_id  (if null ignore)\n\n8 user_id (if null ignore)\n\n9 anon (if null ignore) only support two value : true (return where user_id is null.) or false (return where user_id is not null.)\n\n10 url (if null ignore), note: can not contain '&'.\n\n11 app_name (if null ignore)\n\n12 implemented_by_partial_function (if null ignore),\n\n13 implemented_in_version (if null ignore)\n\n14 verb (if null ignore)\n\n15 correlation_id (if null ignore)\n\n16 duration (if null ignore) non digit chars will be silently omitted\n\n      \n\nAuthentication is Mandatory\n\n\n**JSON response body fields:**\n\n\n\n[**app_name**](/glossary#app_name): \n\n\n\n[**consumer_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**correlation_id**](/glossary#): 1flssoftxq0cr1nssr68u0mioj\n\n\n\n[**date**](/glossary#): 2020-01-27\n\n\n\n[**developer_email**](/glossary#developer_email): \n\n\n\n[**duration**](/glossary#duration): 5.123\n\n\n\n[**implemented_by_partial_function**](/glossary#implemented_by_partial_function): \n\n\n\n[**implemented_in_version**](/glossary#implemented_in_version): \n\n\n\n[**metrics**](/glossary#metrics): \n\n\n\n[**url**](/glossary#): http://www.example.com/id-docs/123/image.png\n\n\n\n[**user_id**](/glossary#): 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\n\n\n\n[**user_name**](/glossary#): felixsmith\n\n\n\n[**verb**](/glossary#verb): \n\n\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "metrics": [
          {
            "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
            "url": "www.openbankproject.com",
            "date": "1100-01-01T00:00:00Z",
            "user_name": "OBP",
            "app_name": "SOFI",
            "developer_email": "felixsmith@example.com",
            "implemented_by_partial_function": "getBanks",
            "implemented_in_version": "v210",
            "consumer_id": "123",
            "verb": "get",
            "correlation_id": "v8ho6h5ivel3uq7a5zcnv0w1",
            "duration": 39
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Metric", "API", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "metrics": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "app_name": {
                  "type": "string"
                },
                "implemented_in_version": {
                  "type": "string"
                },
                "developer_email": {
                  "type": "string"
                },
                "consumer_id": {
                  "type": "string"
                },
                "verb": {
                  "type": "string"
                },
                "implemented_by_partial_function": {
                  "type": "string"
                },
                "date": {
                  "type": "string",
                  "format": "date-time"
                },
                "user_name": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                },
                "duration": {
                  "type": "integer"
                },
                "correlation_id": {
                  "type": "string"
                },
                "user_id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanReadMetrics",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/metrics",
      "connector_methods": ["obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv5.0.0-getCustomersAtOneBank",
      "implemented_by": {
        "version": "OBPv5.0.0",
        "function": "getCustomersAtOneBank"
      },
      "request_verb": "GET",
      "request_url": "/obp/v5.0.0/banks/BANK_ID/customers",
      "summary": "Get Customers at Bank",
      "description": "<p>Get Customers at Bank.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#\"><strong>branch_id</strong></a>: DERBY6</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>customer_number</strong></a>: 5987953</p>\n<p><a href=\"/glossary#customers\"><strong>customers</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#\"><strong>date_of_birth</strong></a>: 2018-03-09</p>\n<p><a href=\"/glossary#\"><strong>dependants</strong></a>: 1</p>\n<p><a href=\"/glossary#dob_of_dependants\"><strong>dob_of_dependants</strong></a>: [2019-09-08, 2017-07-12]</p>\n<p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"&#x6d;&#97;&#105;&#x6c;&#x74;&#x6f;:&#102;&#x65;&#108;&#x69;x&#x73;m&#105;&#x74;&#x68;@&#101;x&#97;&#x6d;&#x70;l&#101;&#46;&#x63;&#111;m\">fe&#108;&#105;x&#x73;&#x6d;&#x69;&#x74;h&#x40;&#x65;&#120;&#x61;&#x6d;&#112;&#108;&#101;&#x2e;&#x63;&#111;&#x6d;</a></p>\n<p><a href=\"/glossary#\"><strong>employment_status</strong></a>: worker</p>\n<p><a href=\"/glossary#face_image\"><strong>face_image</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>highest_education_attained</strong></a>: Master</p>\n<p><a href=\"/glossary#\"><strong>kyc_status</strong></a>: true</p>\n<p><a href=\"/glossary#last_ok_date\"><strong>last_ok_date</strong></a>: 2022-04-13T04:30:07.985Z</p>\n<p><a href=\"/glossary#\"><strong>legal_name</strong></a>: Eveline Tripman</p>\n<p><a href=\"/glossary#mobile_phone_number\"><strong>mobile_phone_number</strong></a>: +49 30 901820</p>\n<p><a href=\"/glossary#\"><strong>name_suffix</strong></a>: Sr</p>\n<p><a href=\"/glossary#\"><strong>rating</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>relationship_status</strong></a>: single</p>\n<p><a href=\"/glossary#\"><strong>source</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>title</strong></a>: Dr.</p>\n<p><a href=\"/glossary#\"><strong>url</strong></a>: <a href=\"http://www.example.com/id-docs/123/image.png\">http://www.example.com/id-docs/123/image.png</a></p>\n<p><a href=\"/glossary#credit_limit\">credit_limit</a>:</p>\n<p><a href=\"/glossary#credit_rating\">credit_rating</a>:</p>\n",
      "description_markdown": "Get Customers at Bank.\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**amount**](/glossary#): 10.12\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**branch_id**](/glossary#): DERBY6\n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**customer_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**customer_number**](/glossary#): 5987953\n\n\n\n[**customers**](/glossary#customers): \n\n\n\n[**date**](/glossary#): 2020-01-27\n\n\n\n[**date_of_birth**](/glossary#): 2018-03-09\n\n\n\n[**dependants**](/glossary#): 1\n\n\n\n[**dob_of_dependants**](/glossary#dob_of_dependants): [2019-09-08, 2017-07-12]\n\n\n\n[**email**](/glossary#): felixsmith@example.com\n\n\n\n[**employment_status**](/glossary#): worker\n\n\n\n[**face_image**](/glossary#face_image): \n\n\n\n[**highest_education_attained**](/glossary#): Master\n\n\n\n[**kyc_status**](/glossary#): true\n\n\n\n[**last_ok_date**](/glossary#last_ok_date): 2022-04-13T04:30:07.985Z\n\n\n\n[**legal_name**](/glossary#): Eveline Tripman\n\n\n\n[**mobile_phone_number**](/glossary#mobile_phone_number): +49 30 901820\n\n\n\n[**name_suffix**](/glossary#): Sr\n\n\n\n[**rating**](/glossary#): \n\n\n\n[**relationship_status**](/glossary#): single\n\n\n\n[**source**](/glossary#): \n\n\n\n[**title**](/glossary#): Dr.\n\n\n\n[**url**](/glossary#): http://www.example.com/id-docs/123/image.png\n\n\n\n[credit_limit](/glossary#credit_limit): \n\n\n\n[credit_rating](/glossary#credit_rating): \n\n\n",
      "success_response_body": {
        "customers": [
          {
            "bank_id": "gh.29.uk",
            "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
            "customer_number": "5987953",
            "legal_name": "Eveline Tripman",
            "mobile_phone_number": "+44 07972 444 876",
            "email": "felixsmith@example.com",
            "face_image": {
              "url": "www.openbankproject",
              "date": "1100-01-01T00:00:00Z"
            },
            "date_of_birth": "19900101",
            "relationship_status": "single",
            "dependants": 1,
            "dob_of_dependants": ["19900101"],
            "credit_rating": {
              "rating": "OBP",
              "source": "OBP"
            },
            "credit_limit": {
              "currency": "EUR",
              "amount": "0"
            },
            "highest_education_attained": "Master",
            "employment_status": "worker",
            "kyc_status": true,
            "last_ok_date": "2022-04-13T04:30:08Z",
            "title": "Dr.",
            "branch_id": "DERBY6",
            "name_suffix": "Sr"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30008: User Customer Link not found by USER_ID",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["Customer", "User", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "customers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "dependants": {
                  "type": "integer"
                },
                "face_image": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "type": "string"
                    },
                    "date": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                },
                "credit_limit": {
                  "type": "object",
                  "properties": {
                    "currency": {
                      "type": "string"
                    },
                    "amount": {
                      "type": "string"
                    }
                  }
                },
                "employment_status": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "customer_id": {
                  "type": "string"
                },
                "relationship_status": {
                  "type": "string"
                },
                "bank_id": {
                  "type": "string"
                },
                "highest_education_attained": {
                  "type": "string"
                },
                "customer_number": {
                  "type": "string"
                },
                "credit_rating": {
                  "type": "object",
                  "properties": {
                    "rating": {
                      "type": "string"
                    },
                    "source": {
                      "type": "string"
                    }
                  }
                },
                "name_suffix": {
                  "type": "string"
                },
                "last_ok_date": {
                  "type": "string",
                  "format": "date-time"
                },
                "date_of_birth": {
                  "type": "string"
                },
                "legal_name": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "dob_of_dependants": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "branch_id": {
                  "type": "string"
                },
                "mobile_phone_number": {
                  "type": "string"
                },
                "kyc_status": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetCustomers",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/customers",
      "connector_methods": ["obp.getCustomers"]
    },
    {
      "operation_id": "OBPv4.0.0-deleteExplicitCounterparty",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "deleteExplicitCounterparty"
      },
      "request_verb": "POST",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/counterparties/COUNTERPARTY_ID",
      "summary": "Delete Counterparty (Explicit)",
      "description": "<p>Delete Counterparty (Explicit) for an Account.<br />\nand also delete the Metadata for its counterparty.</p>\n<p>need the view permission <code>can_delete_counterparty</code><br />\nAuthentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#\">COUNTERPARTY_ID</a>: 9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><strong>JSON response body fields:</strong></p>\n",
      "description_markdown": "Delete Counterparty (Explicit) for an Account.\nand also delete the Metadata for its counterparty.\n\nneed the view permission `can_delete_counterparty`\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[COUNTERPARTY_ID](/glossary#): 9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[VIEW_ID](/glossary#this_view_id): owner\n\n\n\n\n\n**JSON request body fields:**\n\n\n\n\n\n**JSON response body fields:**\n\n\n",
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30110: Invalid Account Id. The ACCOUNT_ID should only contain 0-9/a-z/A-Z/'-'/'.'/'_', the length should be smaller than 255.",
        "OBP-30111: Invalid Bank Id. The BANK_ID should only contain 0-9/a-z/A-Z/'-'/'.'/'_', the length should be smaller than 255.",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-20017: Current user does not have access to the view. Please specify a valid value for VIEW_ID.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Counterparty", "Account", "New-Style"],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/counterparties/COUNTERPARTY_ID",
      "connector_methods": ["obp.deleteCounterpartyByCounterpartyId"]
    },
    {
      "operation_id": "OBPv5.0.0-getCustomerOverviewFlat",
      "implemented_by": {
        "version": "OBPv5.0.0",
        "function": "getCustomerOverviewFlat"
      },
      "request_verb": "POST",
      "request_url": "/obp/v5.0.0/banks/BANK_ID/customers/customer-number-query/overview-flat",
      "summary": "Get Customer Overview Flat",
      "description": "<p>Gets the Customer Overview Flat specified by customer_number and bank_code.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>customer_number</strong></a>: 5987953</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#account_attribute_id\"><strong>account_attribute_id</strong></a>:</p>\n<p><a href=\"/glossary#account_attributes\"><strong>account_attributes</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>account_id</strong></a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#account_routings\"><strong>account_routings</strong></a>:</p>\n<p><a href=\"/glossary#accounts\"><strong>accounts</strong></a>:</p>\n<p><a href=\"/glossary#address\"><strong>address</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p>\n<p><a href=\"/glossary#balance\"><strong>balance</strong></a>: 10</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#\"><strong>branch_id</strong></a>: DERBY6</p>\n<p><a href=\"/glossary#\"><strong>contract_code</strong></a>: contract_code</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#\"><strong>customer_attribute_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#customer_attributes\"><strong>customer_attributes</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>customer_number</strong></a>: 5987953</p>\n<p><a href=\"/glossary#\"><strong>date_of_birth</strong></a>: 2018-03-09</p>\n<p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"&#109;&#97;&#105;&#x6c;t&#111;&#x3a;&#102;&#101;li&#x78;s&#109;i&#x74;h&#64;&#101;x&#97;&#x6d;&#112;&#108;&#101;&#46;&#x63;&#111;&#x6d;\">f&#101;&#x6c;&#x69;&#x78;sm&#x69;t&#104;&#64;&#x65;x&#x61;&#109;&#x70;&#x6c;&#101;.&#x63;&#111;&#x6d;</a></p>\n<p><a href=\"/glossary#\"><strong>label</strong></a>: My Account</p>\n<p><a href=\"/glossary#\"><strong>legal_name</strong></a>: Eveline Tripman</p>\n<p><a href=\"/glossary#mobile_phone_number\"><strong>mobile_phone_number</strong></a>: +49 30 901820</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#\"><strong>name_suffix</strong></a>: Sr</p>\n<p><a href=\"/glossary#product_code\"><strong>product_code</strong></a>: 1234BW</p>\n<p><a href=\"/glossary#scheme\"><strong>scheme</strong></a>: scheme value</p>\n<p><a href=\"/glossary#\"><strong>title</strong></a>: Dr.</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n<p><a href=\"/glossary#\">branch_code</a>: branch_code</p>\n<p><a href=\"/glossary#\">cancellation_date</a>: cancellation_date</p>\n<p><a href=\"/glossary#\"><strong>contract_code</strong></a>: contract_code</p>\n<p><a href=\"/glossary#\">contracts</a>: contracts</p>\n<p><a href=\"/glossary#\">form_of_payment</a>: form_of_payment</p>\n<p><a href=\"/glossary#\">instrument_status_code</a>: instrument_status_code</p>\n<p><a href=\"/glossary#\">instrument_status_definition</a>: instrument_status_definition</p>\n<p><a href=\"/glossary#\">interest_amount</a>: interest_amount</p>\n<p><a href=\"/glossary#\">interest_rate</a>: interest_rate</p>\n<p><a href=\"/glossary#\">is_substituted</a>: is_substituted</p>\n<p><a href=\"/glossary#\">issuance_amount</a>: issuance_amount</p>\n<p><a href=\"/glossary#\">maturity_date</a>: maturity_date</p>\n<p><a href=\"/glossary#\">opening_date</a>: opening_date</p>\n<p><a href=\"/glossary#\">payment_method</a>: payment_method</p>\n<p><a href=\"/glossary#\">product_description</a>: product_description</p>\n<p><a href=\"/glossary#\">renewal_date</a>: renewal_date</p>\n<p><a href=\"/glossary#\">term</a>: term</p>\n",
      "description_markdown": "Gets the Customer Overview Flat specified by customer_number and bank_code.\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON request body fields:**\n\n\n\n[**customer_number**](/glossary#): 5987953\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**account_attribute_id**](/glossary#account_attribute_id): \n\n\n\n[**account_attributes**](/glossary#account_attributes): \n\n\n\n[**account_id**](/glossary#): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[**account_routings**](/glossary#account_routings): \n\n\n\n[**accounts**](/glossary#accounts): \n\n\n\n[**address**](/glossary#address): \n\n\n\n[**amount**](/glossary#): 10.12\n\n\n\n[**balance**](/glossary#balance): 10\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**branch_id**](/glossary#): DERBY6\n\n\n\n[**contract_code**](/glossary#): contract_code\n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**customer_attribute_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**customer_attributes**](/glossary#customer_attributes): \n\n\n\n[**customer_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**customer_number**](/glossary#): 5987953\n\n\n\n[**date_of_birth**](/glossary#): 2018-03-09\n\n\n\n[**email**](/glossary#): felixsmith@example.com\n\n\n\n[**label**](/glossary#): My Account\n\n\n\n[**legal_name**](/glossary#): Eveline Tripman\n\n\n\n[**mobile_phone_number**](/glossary#mobile_phone_number): +49 30 901820\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**name_suffix**](/glossary#): Sr\n\n\n\n[**product_code**](/glossary#product_code): 1234BW\n\n\n\n[**scheme**](/glossary#scheme): scheme value\n\n\n\n[**title**](/glossary#): Dr.\n\n\n\n[**type**](/glossary#type): \n\n\n\n[**value**](/glossary#): 5987953\n\n\n\n[branch_code](/glossary#): branch_code\n\n\n\n[cancellation_date](/glossary#): cancellation_date\n\n\n\n[**contract_code**](/glossary#): contract_code\n\n\n\n[contracts](/glossary#): contracts\n\n\n\n[form_of_payment](/glossary#): form_of_payment\n\n\n\n[instrument_status_code](/glossary#): instrument_status_code\n\n\n\n[instrument_status_definition](/glossary#): instrument_status_definition\n\n\n\n[interest_amount](/glossary#): interest_amount\n\n\n\n[interest_rate](/glossary#): interest_rate\n\n\n\n[is_substituted](/glossary#): is_substituted\n\n\n\n[issuance_amount](/glossary#): issuance_amount\n\n\n\n[maturity_date](/glossary#): maturity_date\n\n\n\n[opening_date](/glossary#): opening_date\n\n\n\n[payment_method](/glossary#): payment_method\n\n\n\n[product_description](/glossary#): product_description\n\n\n\n[renewal_date](/glossary#): renewal_date\n\n\n\n[term](/glossary#): term\n\n\n",
      "example_request_body": {
        "customer_number": "5987953"
      },
      "success_response_body": {
        "bank_id": "gh.29.uk",
        "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "customer_number": "5987953",
        "legal_name": "Eveline Tripman",
        "mobile_phone_number": "+44 07972 444 876",
        "email": "felixsmith@example.com",
        "date_of_birth": "1100-01-01T00:00:00Z",
        "title": "Dr.",
        "branch_id": "DERBY6",
        "name_suffix": "Sr",
        "customer_attributes": [
          {
            "customer_attribute_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
            "name": "SPECIAL_TAX_NUMBER",
            "type": "STRING",
            "value": "123456789"
          }
        ],
        "accounts": [
          {
            "account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0",
            "label": "My Account",
            "product_code": "787LOW",
            "balance": {
              "currency": "EUR",
              "amount": "0"
            },
            "branch_id": "DERBY6",
            "contracts": [
              {
                "product_code": "787LOW",
                "contract_code": "LKJL98769F",
                "payment_method": "cache"
              }
            ],
            "account_routings": [
              {
                "scheme": "AccountNumber",
                "address": "4930396"
              }
            ],
            "account_attributes": [
              {
                "contract_code": "LKJL98769F",
                "product_code": "1234BW",
                "account_attribute_id": "613c83ea-80f9-4560-8404-b9cd4ec42a7f",
                "name": "OVERDRAFT_START_DATE",
                "type": "DATE_WITH_DAY",
                "value": "2012-04-23"
              }
            ]
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30008: User Customer Link not found by USER_ID",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["Customer", "KYC", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "customer_number": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "customer_attributes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "customer_attribute_id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "email": {
            "type": "string"
          },
          "accounts": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "contracts": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "payment_method": {
                        "type": "string"
                      },
                      "product_code": {
                        "type": "string"
                      },
                      "contract_code": {
                        "type": "string"
                      }
                    }
                  }
                },
                "product_code": {
                  "type": "string"
                },
                "label": {
                  "type": "string"
                },
                "balance": {
                  "type": "object",
                  "properties": {
                    "currency": {
                      "type": "string"
                    },
                    "amount": {
                      "type": "string"
                    }
                  }
                },
                "account_routings": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "scheme": {
                        "type": "string"
                      },
                      "address": {
                        "type": "string"
                      }
                    }
                  }
                },
                "branch_id": {
                  "type": "string"
                },
                "account_attributes": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "value": {
                        "type": "string"
                      },
                      "product_code": {
                        "type": "string"
                      },
                      "account_attribute_id": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "contract_code": {
                        "type": "string"
                      }
                    }
                  }
                },
                "account_id": {
                  "type": "string"
                }
              }
            }
          },
          "customer_id": {
            "type": "string"
          },
          "bank_id": {
            "type": "string"
          },
          "customer_number": {
            "type": "string"
          },
          "name_suffix": {
            "type": "string"
          },
          "legal_name": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "branch_id": {
            "type": "string"
          },
          "date_of_birth": {
            "type": "string",
            "format": "date-time"
          },
          "mobile_phone_number": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanGetCustomerOverviewFlat",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/customers/customer-number-query/overview-flat",
      "connector_methods": [
        "obp.getBankAccounts",
        "obp.getCustomerAttributes",
        "obp.getCustomerByCustomerNumber"
      ]
    },
    {
      "operation_id": "OBPv4.0.0-getSharableApiCollectionById",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getSharableApiCollectionById"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/api-collections/sharable/API_COLLECTION_ID",
      "summary": "Get Sharable Api Collection By Id",
      "description": "<p>Get Sharable Api Collection By Id.<br />\nAuthentication is Optional</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#\">API_COLLECTION_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>api_collection_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>api_collection_name</strong></a>: Favourites</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#\"><strong>is_sharable</strong></a>: is_sharable</p>\n<p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p>\n",
      "description_markdown": "Get Sharable Api Collection By Id.\nAuthentication is Optional\n\n\n**URL Parameters:**\n\n[API_COLLECTION_ID](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**api_collection_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**api_collection_name**](/glossary#): Favourites\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**is_sharable**](/glossary#): is_sharable\n\n\n\n[**user_id**](/glossary#): 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\n\n\n",
      "success_response_body": {
        "api_collection_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
        "api_collection_name": "Favourites",
        "is_sharable": true,
        "description": "This an optional field. Maximum length is 2000. It can be any characters here."
      },
      "error_response_bodies": ["OBP-50000: Unknown Error."],
      "tags": ["Api-Collection", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "api_collection_id": {
            "type": "string"
          },
          "api_collection_name": {
            "type": "string"
          },
          "is_sharable": {
            "type": "boolean"
          },
          "user_id": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/api-collections/sharable/API_COLLECTION_ID",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv3.1.0-getWebUiProps",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "getWebUiProps"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.1.0/management/webui_props",
      "summary": "Get WebUiProps",
      "description": "<p>Get the all WebUiProps key values, those props key with &quot;webui_&quot; can be stored in DB, this endpoint get all from DB.</p>\n<p>url query parameter:<br />\nactive: It must be a boolean string. and If active = true, it will show<br />\ncombination of explicit (inserted) + implicit (default)  method_routings.</p>\n<p>eg:<br />\n<a href=\"https://obp-apisandbox.joinfincubator.com/obp/v3.1.0/management/webui_props\">https://obp-apisandbox.joinfincubator.com/obp/v3.1.0/management/webui_props</a><br />\n<a href=\"https://obp-apisandbox.joinfincubator.com/obp/v3.1.0/management/webui_props?active=true\">https://obp-apisandbox.joinfincubator.com/obp/v3.1.0/management/webui_props?active=true</a></p>\n<p>Authentication is Mandatory</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n",
      "description_markdown": "Get the all WebUiProps key values, those props key with \"webui_\" can be stored in DB, this endpoint get all from DB.\n\nurl query parameter: \nactive: It must be a boolean string. and If active = true, it will show\n          combination of explicit (inserted) + implicit (default)  method_routings.\n\neg:  \nhttps://obp-apisandbox.joinfincubator.com/obp/v3.1.0/management/webui_props\nhttps://obp-apisandbox.joinfincubator.com/obp/v3.1.0/management/webui_props?active=true\n\n\n\nAuthentication is Mandatory\n\n\n**JSON response body fields:**\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**value**](/glossary#): 5987953\n\n\n",
      "success_response_body": {
        "webui_props": [
          {
            "name": "webui_api_explorer_url",
            "value": "https://apiexplorer.openbankproject.com",
            "web_ui_props_id": "web-ui-props-id"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["WebUi-Props", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "webui_props": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "web_ui_props_id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetWebUiProps",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/webui_props",
      "connector_methods": ["obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv4.0.0-getAllBankLevelDynamicResourceDocs",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getAllBankLevelDynamicResourceDocs"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/management/banks/BANK_ID/dynamic-resource-docs",
      "summary": "Get all Bank Level Dynamic Resource Docs",
      "description": "<p>Get all Bank Level Dynamic Resource Docs.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#roles\"><strong>roles</strong></a>: CanCreateMyUser</p>\n<p><a href=\"/glossary#summary\"><strong>summary</strong></a>:</p>\n<p><a href=\"/glossary#tags\"><strong>tags</strong></a>: Create-My-User</p>\n",
      "description_markdown": "Get all Bank Level Dynamic Resource Docs.\n\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**roles**](/glossary#roles): CanCreateMyUser\n\n\n\n[**summary**](/glossary#summary): \n\n\n\n[**tags**](/glossary#tags): Create-My-User\n\n\n",
      "success_response_body": {
        "dynamic-resource-docs": [
          {
            "error_response_bodies": "OBP-50000: Unknown Error.,OBP-20001: User not logged in. Authentication is required!,OBP-20006: User is missing one or more roles: ,OBP-10001: Incorrect json format.",
            "description": "Create one User",
            "tags": "Create-My-User",
            "dynamic_resource_doc_id": "vce035ca-9a0f-4bfa-b30b-9003aa467f51",
            "request_verb": "POST",
            "method_body": "%20%20%20%20val%20Some(resourceDoc)%20%3D%20callContext.resourceDocument%0A%20%20%20%20val%20hasRequestBody%20%3D%20request.body.isDefined%0A%0A%20%20%20%20%2F%2F%20get%20Path%20Parameters%2C%20example%3A%0A%20%20%20%20%2F%2F%20if%20the%20requestUrl%20of%20resourceDoc%20is%20%2Fhello%2Fbanks%2FBANK_ID%2Fworld%0A%20%20%20%20%2F%2F%20the%20request%20path%20is%20%2Fhello%2Fbanks%2Fbank_x%2Fworld%0A%20%20%20%20%2F%2FpathParams.get(%22BANK_ID%22)%20will%20get%20Option(%22bank_x%22)%20value%0A%0A%20%20%20%20val%20myUserId%20%3D%20pathParams(%22MY_USER_ID%22)%0A%0A%0A%20%20%20%20val%20requestEntity%20%3D%20request.json%20match%20%7B%0A%20%20%20%20%20%20case%20Full(zson)%20%3D%3E%0A%20%20%20%20%20%20%20%20try%20%7B%0A%20%20%20%20%20%20%20%20%20%20zson.extract%5BRequestRootJsonClass%5D%0A%20%20%20%20%20%20%20%20%7D%20catch%20%7B%0A%20%20%20%20%20%20%20%20%20%20case%20e%3A%20MappingException%20%3D%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20return%20Full(errorJsonResponse(s%22%24InvalidJsonFormat%20%24%7Be.msg%7D%22))%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20case%20_%3A%20EmptyBox%20%3D%3E%0A%20%20%20%20%20%20%20%20return%20Full(errorJsonResponse(s%22%24InvalidRequestPayload%20Current%20request%20has%20no%20payload%22))%0A%20%20%20%20%7D%0A%0A%0A%20%20%20%20%2F%2F%20please%20add%20business%20logic%20here%0A%20%20%20%20val%20responseBody%3AResponseRootJsonClass%20%3D%20ResponseRootJsonClass(s%22%24%7BmyUserId%7D_from_path%22%2C%20requestEntity.name%2C%20requestEntity.age%2C%20requestEntity.hobby)%0A%20%20%20%20Future.successful%20%7B%0A%20%20%20%20%20%20(responseBody%2C%20HttpCode.%60200%60(callContext.callContext))%0A%20%20%20%20%7D",
            "roles": "CanCreateMyUser",
            "example_request_body": {
              "name": "Jhon",
              "age": 12,
              "hobby": ["coding"],
              "_optional_fields_": ["hobby"]
            },
            "request_url": "/my_user/MY_USER_ID",
            "bank_id": "gh.29.uk",
            "partial_function_name": "createUser",
            "summary": "Create My User",
            "success_response_body": {
              "my_user_id": "some_id_value",
              "name": "Jhon",
              "age": 12,
              "hobby": ["coding"],
              "_optional_fields_": ["hobby"]
            }
          }
        ]
      },
      "error_response_bodies": [
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Dynamic-Resource-Doc", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "dynamic-resource-docs": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "tags": {
                  "type": "string"
                },
                "request_verb": {
                  "type": "string"
                },
                "example_request_body": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "age": {
                      "type": "integer"
                    },
                    "hobby": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "s": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "_optional_fields_": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "s": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "bank_id": {
                  "type": "string"
                },
                "partial_function_name": {
                  "type": "string"
                },
                "success_response_body": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "hobby": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "s": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "my_user_id": {
                      "type": "string"
                    },
                    "age": {
                      "type": "integer"
                    },
                    "_optional_fields_": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "s": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "roles": {
                  "type": "string"
                },
                "dynamic_resource_doc_id": {
                  "type": "string"
                },
                "summary": {
                  "type": "string"
                },
                "request_url": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "method_body": {
                  "type": "string"
                },
                "error_response_bodies": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetAllBankLevelDynamicResourceDocs",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/banks/BANK_ID/dynamic-resource-docs",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv5.0.0-deleteSystemView",
      "implemented_by": {
        "version": "OBPv5.0.0",
        "function": "deleteSystemView"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v5.0.0/system-views/VIEW_ID",
      "summary": "Delete System View",
      "description": "<p>Deletes the system view specified by VIEW_ID</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p>\n<p><strong>JSON response body fields:</strong></p>\n",
      "description_markdown": "Deletes the system view specified by VIEW_ID\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[VIEW_ID](/glossary#this_view_id): owner\n\n\n\n\n\n**JSON response body fields:**\n\n\n",
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-50000: Unknown Error.",
        "user does not have owner access",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["View-System", "New-Style"],
      "roles": [
        {
          "role": "CanDeleteSystemView",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/system-views/VIEW_ID",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv2.1.0-createTransactionType",
      "implemented_by": {
        "version": "OBPv2.1.0",
        "function": "createTransactionType"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v2.1.0/banks/BANK_ID/transaction-types",
      "summary": "Create Transaction Type at bank",
      "description": "<p>Create Transaction Types for the bank specified by BANK_ID:</p>\n<ul>\n<li>id : Unique transaction type id across the API instance. SHOULD be a UUID. MUST be unique.</li>\n<li>bank_id : The bank that supports this TransactionType</li>\n<li>short_code : A short code (SHOULD have no-spaces) which MUST be unique across the bank. May be stored with Transactions to link here</li>\n<li>summary : A succinct summary</li>\n<li>description : A longer description</li>\n<li>charge : The charge to the customer for each one of these</li>\n</ul>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p>\n<p><a href=\"/glossary#bankid\"><strong>bankId</strong></a>:</p>\n<p><a href=\"/glossary#charge\"><strong>charge</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#shortcode\"><strong>shortCode</strong></a>:</p>\n<p><a href=\"/glossary#summary\"><strong>summary</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n",
      "description_markdown": "Create Transaction Types for the bank specified by BANK_ID:\n\n  * id : Unique transaction type id across the API instance. SHOULD be a UUID. MUST be unique.\n  * bank_id : The bank that supports this TransactionType\n  * short_code : A short code (SHOULD have no-spaces) which MUST be unique across the bank. May be stored with Transactions to link here\n  * summary : A succinct summary\n  * description : A longer description\n  * charge : The charge to the customer for each one of these\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**amount**](/glossary#): 10.12\n\n\n\n[**bankId**](/glossary#bankid): \n\n\n\n[**charge**](/glossary#charge): \n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**shortCode**](/glossary#shortcode): \n\n\n\n[**summary**](/glossary#summary): \n\n\n\n[**value**](/glossary#): 5987953\n\n\n",
      "example_request_body": {
        "id": {
          "value": "123"
        },
        "bank_id": "gh.29.uk",
        "short_code": "PlaceholderString",
        "summary": "PlaceholderString",
        "description": "PlaceholderString",
        "charge": {
          "currency": "EUR",
          "amount": "0"
        }
      },
      "success_response_body": {
        "id": {
          "value": "123"
        },
        "bankId": {
          "value": "gh.uk.9j"
        },
        "shortCode": "80080",
        "summary": "SANDBOX_TAN",
        "description": "This is the sandbox mode, charging litter money.",
        "charge": {
          "currency": "EUR",
          "amount": "100"
        }
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-10001: Incorrect json format.",
        "OBP-40005: Insufficient authorisation to Create Transaction Type offered by the bank. The Request could not be created because you don't have access to CanCreateTransactionType.",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["Bank"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "short_code": {
            "type": "string"
          },
          "bank_id": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          },
          "charge": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string"
              },
              "amount": {
                "type": "string"
              }
            }
          },
          "id": {
            "type": "object",
            "properties": {
              "value": {
                "type": "string"
              }
            }
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "bankId": {
            "type": "object",
            "properties": {
              "value": {
                "type": "string"
              }
            }
          },
          "charge": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string"
              },
              "amount": {
                "type": "string"
              }
            }
          },
          "summary": {
            "type": "string"
          },
          "shortCode": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "id": {
            "type": "object",
            "properties": {
              "value": {
                "type": "string"
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateTransactionType",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/transaction-types",
      "connector_methods": ["obp.getBank", "obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv4.0.0-getCurrentUserId",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getCurrentUserId"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/users/current/user_id",
      "summary": "Get User Id (Current)",
      "description": "<p>Get the USER_ID of the logged in user</p>\n<p>Authentication is Mandatory</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p>\n",
      "description_markdown": "Get the USER_ID of the logged in user\n\nAuthentication is Mandatory\n\n\n**JSON response body fields:**\n\n\n\n[**user_id**](/glossary#): 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\n\n\n",
      "success_response_body": {
        "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["User", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/users/current/user_id",
      "connector_methods": ["obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv4.0.0-deleteMyDynamicEntity",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "deleteMyDynamicEntity"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v4.0.0/my/dynamic-entities/DYNAMIC_ENTITY_ID",
      "summary": "Delete My Dynamic Entity",
      "description": "<p>Delete my DynamicEntity specified by DYNAMIC_ENTITY_ID.</p>\n<p>Authentication is Mandatory</p>\n",
      "description_markdown": "Delete my DynamicEntity specified by DYNAMIC_ENTITY_ID.\n\n\n\nAuthentication is Mandatory",
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Dynamic-Entity-Manage", "API", "New-Style"],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/my/dynamic-entities/DYNAMIC_ENTITY_ID",
      "connector_methods": ["obp.dynamicEntityProcess"]
    },
    {
      "operation_id": "OBPv4.0.0-deleteSystemLevelEndpointTag",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "deleteSystemLevelEndpointTag"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v4.0.0/management/endpoints/OPERATION_ID/tags/ENDPOINT_TAG_ID",
      "summary": "Delete System Level Endpoint Tag",
      "description": "<p>Delete System Level Endpoint Tag.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#\">ENDPOINT_TAG_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\">OPERATION_ID</a>: OBPv4.0.0-getBanks</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n",
      "description_markdown": "Delete System Level Endpoint Tag.\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ENDPOINT_TAG_ID](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[OPERATION_ID](/glossary#): OBPv4.0.0-getBanks\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**value**](/glossary#): 5987953\n\n\n",
      "success_response_body": {
        "value": true
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["API", "API", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "value": {
            "type": "boolean"
          }
        }
      },
      "roles": [
        {
          "role": "CanDeleteSystemLevelEndpointTag",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/endpoints/OPERATION_ID/tags/ENDPOINT_TAG_ID",
      "connector_methods": ["obp.deleteEndpointTag", "obp.getEndpointTagById"]
    },
    {
      "operation_id": "OBPv4.0.0-updateAccountLabel",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "updateAccountLabel"
      },
      "request_verb": "POST",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID",
      "summary": "Update Account Label",
      "description": "<p>Update the label for the account. The label is how the account is known to the account owner e.g. 'My savings account'</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>label</strong></a>: My Account</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#success\"><strong>success</strong></a>:</p>\n",
      "description_markdown": "Update the label for the account. The label is how the account is known to the account owner e.g. 'My savings account'\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON request body fields:**\n\n\n\n[**label**](/glossary#): My Account\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**success**](/glossary#success): \n\n\n",
      "example_request_body": {
        "label": "updated label"
      },
      "success_response_body": {
        "success": "Success"
      },
      "error_response_bodies": [
        "OBP-10001: Incorrect json format.",
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-50000: Unknown Error.",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "user does not have access to owner view on account"
      ],
      "tags": ["Account", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "success": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID",
      "connector_methods": ["obp.updateAccountLabel"]
    },
    {
      "operation_id": "OBPv4.0.0-getConsentInfos",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getConsentInfos"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/my/consent-infos",
      "summary": "Get Consents Info",
      "description": "<p>This endpoint gets the Consents that the current User created.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>api_standard</strong></a>: api_standard</p>\n<p><a href=\"/glossary#api_version\"><strong>api_version</strong></a>:</p>\n<p><a href=\"/glossary#consent_id\"><strong>consent_id</strong></a>:</p>\n<p><a href=\"/glossary#consents\"><strong>consents</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>consumer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#created_by_user_id\"><strong>created_by_user_id</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>last_action_date</strong></a>: last_action_date</p>\n<p><a href=\"/glossary#\"><strong>last_usage_date</strong></a>: last_usage_date</p>\n<p><a href=\"/glossary#status\"><strong>status</strong></a>:</p>\n",
      "description_markdown": "This endpoint gets the Consents that the current User created.\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**api_standard**](/glossary#): api_standard\n\n\n\n[**api_version**](/glossary#api_version): \n\n\n\n[**consent_id**](/glossary#consent_id): \n\n\n\n[**consents**](/glossary#consents): \n\n\n\n[**consumer_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**created_by_user_id**](/glossary#created_by_user_id): \n\n\n\n[**last_action_date**](/glossary#): last_action_date\n\n\n\n[**last_usage_date**](/glossary#): last_usage_date\n\n\n\n[**status**](/glossary#status): \n\n\n",
      "success_response_body": {
        "consents": [
          {
            "consent_id": "9d429899-24f5-42c8-8565-943ffa6a7945",
            "consumer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
            "created_by_user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
            "last_action_date": "2020-01-27",
            "last_usage_date": "2021-04-08T09:12:27Z",
            "status": "INITIATED",
            "api_standard": "Berlin Group",
            "api_version": "v1.3"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Consent", "Account Information Service (AIS)", "PSD2", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "consents": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "created_by_user_id": {
                  "type": "string"
                },
                "api_standard": {
                  "type": "string"
                },
                "consumer_id": {
                  "type": "string"
                },
                "last_usage_date": {
                  "type": "string",
                  "format": "date-time"
                },
                "last_action_date": {
                  "type": "string",
                  "format": "date-time"
                },
                "consent_id": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                },
                "api_version": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/my/consent-infos",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv4.0.0-getSystemLevelEndpointTags",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getSystemLevelEndpointTags"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/management/endpoints/OPERATION_ID/tags",
      "summary": "Get System Level Endpoint Tags",
      "description": "<p>Get System Level Endpoint Tags.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#\">OPERATION_ID</a>: OBPv4.0.0-getBanks</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#\"><strong>endpoint_tag_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>operation_id</strong></a>: OBPv4.0.0-getBanks</p>\n<p><a href=\"/glossary#\"><strong>tag_name</strong></a>: BankAccountTag1</p>\n",
      "description_markdown": "Get System Level Endpoint Tags.\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[OPERATION_ID](/glossary#): OBPv4.0.0-getBanks\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**endpoint_tag_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**operation_id**](/glossary#): OBPv4.0.0-getBanks\n\n\n\n[**tag_name**](/glossary#): BankAccountTag1\n\n\n",
      "success_response_body": [
        {
          "bank_id": "gh.29.uk",
          "endpoint_tag_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
          "operation_id": "OBPv4.0.0-getBanks",
          "tag_name": "BankAccountTag1"
        }
      ],
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["API", "API", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "tl": {
            "type": "object",
            "properties": {}
          },
          "head": {
            "type": "object",
            "properties": {
              "operation_id": {
                "type": "string"
              },
              "tag_name": {
                "type": "string"
              },
              "bank_id": {
                "type": "string"
              },
              "endpoint_tag_id": {
                "type": "string"
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetSystemLevelEndpointTag",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/endpoints/OPERATION_ID/tags",
      "connector_methods": ["obp.getSystemLevelEndpointTags"]
    },
    {
      "operation_id": "OBPv3.1.0-deleteCardForBank",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "deleteCardForBank"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v3.1.0/management/banks/BANK_ID/cards/CARD_ID",
      "summary": "Delete Card",
      "description": "<p>Delete a Card at bank specified by CARD_ID .</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#\">CARD_ID</a>: 36f8a9e6-c2b1-407a-8bd0-421b7119307e</p>\n<p><strong>JSON response body fields:</strong></p>\n",
      "description_markdown": "Delete a Card at bank specified by CARD_ID .\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[CARD_ID](/glossary#): 36f8a9e6-c2b1-407a-8bd0-421b7119307e \n\n\n\n\n\n**JSON response body fields:**\n\n\n",
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-10015: Allowed values are:",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Card", "New-Style"],
      "roles": [
        {
          "role": "CanCreateCardsForBank",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/banks/BANK_ID/cards/CARD_ID",
      "connector_methods": [
        "obp.deletePhysicalCardForBank",
        "obp.getBank",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv4.0.0-getUserInvitationAnonymous",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getUserInvitationAnonymous"
      },
      "request_verb": "POST",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/user-invitations",
      "summary": "Get User Invitation Information",
      "description": "<p>Create User Invitation Information.</p>\n<p>Authentication is Optional</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>secret_key</strong></a>: secret_key</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>company</strong></a>: company</p>\n<p><a href=\"/glossary#\"><strong>country</strong></a>: country</p>\n<p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"&#109;&#x61;&#105;l&#x74;o&#x3a;&#x66;&#101;&#x6c;&#x69;&#120;&#x73;&#x6d;i&#x74;&#x68;&#x40;e&#x78;&#97;&#x6d;&#x70;&#x6c;&#101;&#46;co&#109;\">fe&#108;&#x69;&#120;s&#x6d;&#105;&#116;&#x68;&#64;&#x65;&#120;&#97;&#x6d;&#112;l&#x65;&#46;&#x63;&#x6f;&#109;</a></p>\n<p><a href=\"/glossary#first_name\"><strong>first_name</strong></a>:</p>\n<p><a href=\"/glossary#last_name\"><strong>last_name</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>purpose</strong></a>: purpose</p>\n<p><a href=\"/glossary#status\"><strong>status</strong></a>:</p>\n",
      "description_markdown": "Create User Invitation Information.\n\nAuthentication is Optional\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON request body fields:**\n\n\n\n[**secret_key**](/glossary#): secret_key\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**company**](/glossary#): company\n\n\n\n[**country**](/glossary#): country\n\n\n\n[**email**](/glossary#): felixsmith@example.com\n\n\n\n[**first_name**](/glossary#first_name): \n\n\n\n[**last_name**](/glossary#last_name): \n\n\n\n[**purpose**](/glossary#): purpose\n\n\n\n[**status**](/glossary#status): \n\n\n",
      "example_request_body": {
        "secret_key": 5819479115482092878
      },
      "success_response_body": {
        "first_name": "ACCOUNT_MANAGEMENT_FEE",
        "last_name": "ACCOUNT_MANAGEMENT_FEE",
        "email": "felixsmith@example.com",
        "company": "TESOBE",
        "country": "Germany",
        "purpose": "Developer",
        "status": "CREATED"
      },
      "error_response_bodies": [
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30008: User Customer Link not found by USER_ID",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["User-Invitation", "KYC", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "secret_key": {
            "type": "integer"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "company": {
            "type": "string"
          },
          "purpose": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/user-invitations",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv4.0.0-updateBankLevelDynamicEndpointHost",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "updateBankLevelDynamicEndpointHost"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v4.0.0/management/banks/BANK_ID/dynamic-endpoints/DYNAMIC_ENDPOINT_ID/host",
      "summary": " Update Bank Level Dynamic Endpoint Host",
      "description": "<p>Update Bank Level  dynamic endpoint Host.<br />\nThe value can be obp_mock, dynamic_entity, or some service url.</p>\n<p>Authentication is Mandatory</p>\n",
      "description_markdown": "Update Bank Level  dynamic endpoint Host.\nThe value can be obp_mock, dynamic_entity, or some service url.\n\n\nAuthentication is Mandatory",
      "example_request_body": {
        "host": "dynamic_entity"
      },
      "success_response_body": {
        "host": "dynamic_entity"
      },
      "error_response_bodies": [
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-09001: DynamicEntity not found. Please specify a valid value for DYNAMIC_ENTITY_ID.",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Dynamic-Endpoint-Manage", "API", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "host": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "host": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanUpdateBankLevelDynamicEndpoint",
          "requires_bank_id": true
        },
        {
          "role": "CanUpdateDynamicEndpoint",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/banks/BANK_ID/dynamic-endpoints/DYNAMIC_ENDPOINT_ID/host",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv4.0.0-getCallContext",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getCallContext"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/development/call_context",
      "summary": "Get the Call Context of a current call",
      "description": "<p>Get the Call Context of the current call.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>JSON response body fields:</strong></p>\n",
      "description_markdown": "Get the Call Context of the current call.\n\n      \n\nAuthentication is Mandatory\n\n\n**JSON response body fields:**\n\n\n",
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["API", "New-Style"],
      "roles": [
        {
          "role": "CanGetCallContext",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/development/call_context",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv4.0.0-createTransactionRequestAccount",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "createTransactionRequestAccount"
      },
      "request_verb": "POST",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transaction-request-types/ACCOUNT/transaction-requests",
      "summary": "Create Transaction Request (ACCOUNT)",
      "description": "<p>When using ACCOUNT, the payee is set in the request body.</p>\n<p>Money goes into the BANK_ID and ACCOUNT_ID specified in the request body.</p>\n<p>Initiate a Payment via creating a Transaction Request.</p>\n<p>In OBP, a <code>transaction request</code> may or may not result in a <code>transaction</code>. However, a <code>transaction</code> only has one possible state: completed.</p>\n<p>A <code>Transaction Request</code> can have one of several states: INITIATED, NEXT_CHALLENGE_PENDING etc.</p>\n<p><code>Transactions</code> are modeled on items in a bank statement that represent the movement of money.</p>\n<p><code>Transaction Requests</code> are requests to move money which may or may not succeed and thus result in a <code>Transaction</code>.</p>\n<p>A <code>Transaction Request</code> might create a security challenge that needs to be answered before the <code>Transaction Request</code> proceeds.<br />\nIn case 1 person needs to answer security challenge we have next flow of state of an <code>transaction request</code>:<br />\nINITIATED =&gt; COMPLETED<br />\nIn case n persons needs to answer security challenge we have next flow of state of an <code>transaction request</code>:<br />\nINITIATED =&gt; NEXT_CHALLENGE_PENDING =&gt; ... =&gt; NEXT_CHALLENGE_PENDING =&gt; COMPLETED</p>\n<p>The security challenge is bound to a user i.e. in case of right answer and the user is different than expected one the challenge will fail.</p>\n<p>Rule for calculating number of security challenges:<br />\nIf product Account attribute REQUIRED_CHALLENGE_ANSWERS=N then create N challenges<br />\n(one for every user that has a View where permission &quot;can_add_transaction_request_to_any_account&quot;=true)<br />\nIn case REQUIRED_CHALLENGE_ANSWERS is not defined as an account attribute default value is 1.</p>\n<p>Transaction Requests contain charge information giving the client the opportunity to proceed or not (as long as the challenge level is appropriate).</p>\n<p>Transaction Requests can have one of several Transaction Request Types which expect different bodies. The escaped body is returned in the details key of the GET response.<br />\nThis provides some commonality and one URL for many different payment or transfer types with enough flexibility to validate them differently.</p>\n<p>The payer is set in the URL. Money comes out of the BANK_ID and ACCOUNT_ID specified in the URL.</p>\n<p>In sandbox mode, TRANSACTION_REQUEST_TYPE is commonly set to ACCOUNT. See getTransactionRequestTypesSupportedByBank for all supported types.</p>\n<p>In sandbox mode, if the amount is less than 1000 EUR (any currency, unless it is set differently on this server), the transaction request will create a transaction without a challenge, else the Transaction Request will be set to INITIALISED and a challenge will need to be answered.</p>\n<p>If a challenge is created you must answer it using Answer Transaction Request Challenge before the Transaction is created.</p>\n<p>You can transfer between different currency accounts. (new in 2.0.0). The currency in body must match the sending account.</p>\n<p>The following static FX rates are available in sandbox mode:</p>\n<p><a href=\"https://obp-apiexplorer.joinfincubator.com/more?version=OBPv4.0.0&amp;list-all-banks=false&amp;core=&amp;psd2=&amp;obwg=#OBPv2_2_0-getCurrentFxRate\">https://obp-apiexplorer.joinfincubator.com/more?version=OBPv4.0.0&amp;list-all-banks=false&amp;core=&amp;psd2=&amp;obwg=#OBPv2_2_0-getCurrentFxRate</a></p>\n<p>Transaction Requests satisfy PSD2 requirements thus:</p>\n<p>1) A transaction can be initiated by a third party application.</p>\n<p>2) The customer is informed of the charge that will incurred.</p>\n<p>3) The call supports delegated authentication (OAuth)</p>\n<p>See <a href=\"https://github.com/OpenBankProject/Hello-OBP-DirectLogin-Python/blob/master/hello_payments.py\">this python code</a> for a complete example of this flow.</p>\n<p>There is further documentation <a href=\"https://github.com/OpenBankProject/OBP-API/wiki/Transaction-Requests\">here</a></p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account\">ACCOUNT</a>:</p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>account_id</strong></a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#to\"><strong>to</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#Account\"><strong>account</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>account_id</strong></a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#allowed_attempts\"><strong>allowed_attempts</strong></a>: 5</p>\n<p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p>\n<p><a href=\"/glossary#bank_code\"><strong>bank_code</strong></a>: CGHZ</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#branch_number\"><strong>branch_number</strong></a>:</p>\n<p><a href=\"/glossary#challenge_type\"><strong>challenge_type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>challenges</strong></a>: challenges</p>\n<p><a href=\"/glossary#charge\"><strong>charge</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>counterparty_id</strong></a>: 9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#creditoraccount\"><strong>creditorAccount</strong></a>:</p>\n<p><a href=\"/glossary#creditorname\"><strong>creditorName</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#\"><strong>date_of_birth</strong></a>: 2018-03-09</p>\n<p><a href=\"/glossary#debtoraccount\"><strong>debtorAccount</strong></a>:</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#details\"><strong>details</strong></a>:</p>\n<p><a href=\"/glossary#end_date\"><strong>end_date</strong></a>:</p>\n<p><a href=\"/glossary#from\"><strong>from</strong></a>:</p>\n<p><a href=\"/glossary#future_date\"><strong>future_date</strong></a>: 20200127</p>\n<p><a href=\"/glossary#\"><strong>iban</strong></a>: DE91 1000 0000 0123 4567 89</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#instructedamount\"><strong>instructedAmount</strong></a>: 100</p>\n<p><a href=\"/glossary#kyc_document\"><strong>kyc_document</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>legal_name</strong></a>: Eveline Tripman</p>\n<p><a href=\"/glossary#link\"><strong>link</strong></a>:</p>\n<p><a href=\"/glossary#message\"><strong>message</strong></a>: 123456</p>\n<p><a href=\"/glossary#mobile_phone_number\"><strong>mobile_phone_number</strong></a>: +49 30 901820</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#nickname\"><strong>nickname</strong></a>:</p>\n<p><a href=\"/glossary#number\"><strong>number</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>start_date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#status\"><strong>status</strong></a>:</p>\n<p><a href=\"/glossary#summary\"><strong>summary</strong></a>:</p>\n<p><a href=\"/glossary#to\"><strong>to</strong></a>:</p>\n<p><a href=\"/glossary#transaction_ids\"><strong>transaction_ids</strong></a>:</p>\n<p><a href=\"/glossary#transfer_type\"><strong>transfer_type</strong></a>:</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n<p><a href=\"/glossary#to_counterparty\">to_counterparty</a>:</p>\n<p><a href=\"/glossary#to_sandbox_tan\">to_sandbox_tan</a>:</p>\n<p><a href=\"/glossary#to_sepa\">to_sepa</a>:</p>\n<p><a href=\"/glossary#to_sepa_credit_transfers\">to_sepa_credit_transfers</a>:</p>\n<p><a href=\"/glossary#\">to_simple</a>: to_simple</p>\n<p><a href=\"/glossary#to_transfer_to_account\">to_transfer_to_account</a>:</p>\n<p><a href=\"/glossary#to_transfer_to_atm\">to_transfer_to_atm</a>:</p>\n<p><a href=\"/glossary#to_transfer_to_phone\">to_transfer_to_phone</a>:</p>\n",
      "description_markdown": "When using ACCOUNT, the payee is set in the request body.\n\nMoney goes into the BANK_ID and ACCOUNT_ID specified in the request body.\n\nInitiate a Payment via creating a Transaction Request.\n\nIn OBP, a `transaction request` may or may not result in a `transaction`. However, a `transaction` only has one possible state: completed.\n\nA `Transaction Request` can have one of several states: INITIATED, NEXT_CHALLENGE_PENDING etc.\n\n`Transactions` are modeled on items in a bank statement that represent the movement of money.\n\n`Transaction Requests` are requests to move money which may or may not succeed and thus result in a `Transaction`.\n\nA `Transaction Request` might create a security challenge that needs to be answered before the `Transaction Request` proceeds.\nIn case 1 person needs to answer security challenge we have next flow of state of an `transaction request`:\n  INITIATED => COMPLETED\nIn case n persons needs to answer security challenge we have next flow of state of an `transaction request`:\n  INITIATED => NEXT_CHALLENGE_PENDING => ... => NEXT_CHALLENGE_PENDING => COMPLETED\n\nThe security challenge is bound to a user i.e. in case of right answer and the user is different than expected one the challenge will fail.\n\nRule for calculating number of security challenges:\nIf product Account attribute REQUIRED_CHALLENGE_ANSWERS=N then create N challenges\n(one for every user that has a View where permission \"can_add_transaction_request_to_any_account\"=true)\nIn case REQUIRED_CHALLENGE_ANSWERS is not defined as an account attribute default value is 1.\n\nTransaction Requests contain charge information giving the client the opportunity to proceed or not (as long as the challenge level is appropriate).\n\nTransaction Requests can have one of several Transaction Request Types which expect different bodies. The escaped body is returned in the details key of the GET response.\nThis provides some commonality and one URL for many different payment or transfer types with enough flexibility to validate them differently.\n\nThe payer is set in the URL. Money comes out of the BANK_ID and ACCOUNT_ID specified in the URL.\n\nIn sandbox mode, TRANSACTION_REQUEST_TYPE is commonly set to ACCOUNT. See getTransactionRequestTypesSupportedByBank for all supported types.\n\nIn sandbox mode, if the amount is less than 1000 EUR (any currency, unless it is set differently on this server), the transaction request will create a transaction without a challenge, else the Transaction Request will be set to INITIALISED and a challenge will need to be answered.\n\nIf a challenge is created you must answer it using Answer Transaction Request Challenge before the Transaction is created.\n\nYou can transfer between different currency accounts. (new in 2.0.0). The currency in body must match the sending account.\n\nThe following static FX rates are available in sandbox mode:\n\nhttps://obp-apiexplorer.joinfincubator.com/more?version=OBPv4.0.0&list-all-banks=false&core=&psd2=&obwg=#OBPv2_2_0-getCurrentFxRate\n\n\nTransaction Requests satisfy PSD2 requirements thus:\n\n1) A transaction can be initiated by a third party application.\n\n2) The customer is informed of the charge that will incurred.\n\n3) The call supports delegated authentication (OAuth)\n\nSee [this python code](https://github.com/OpenBankProject/Hello-OBP-DirectLogin-Python/blob/master/hello_payments.py) for a complete example of this flow.\n\nThere is further documentation [here](https://github.com/OpenBankProject/OBP-API/wiki/Transaction-Requests)\n\n\n\n       \n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ACCOUNT](/glossary#Account): \n\n\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[VIEW_ID](/glossary#this_view_id): owner\n\n\n\n\n\n**JSON request body fields:**\n\n\n\n[**account_id**](/glossary#): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[**amount**](/glossary#): 10.12\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**to**](/glossary#to): \n\n\n\n[**value**](/glossary#): 5987953\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**account**](/glossary#Account): \n\n\n\n[**account_id**](/glossary#): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[**allowed_attempts**](/glossary#allowed_attempts): 5\n\n\n\n[**amount**](/glossary#): 10.12\n\n\n\n[**bank_code**](/glossary#bank_code): CGHZ\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**branch_number**](/glossary#branch_number): \n\n\n\n[**challenge_type**](/glossary#challenge_type): \n\n\n\n[**challenges**](/glossary#): challenges\n\n\n\n[**charge**](/glossary#charge): \n\n\n\n[**counterparty_id**](/glossary#): 9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**creditorAccount**](/glossary#creditoraccount): \n\n\n\n[**creditorName**](/glossary#creditorname): \n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**date_of_birth**](/glossary#): 2018-03-09\n\n\n\n[**debtorAccount**](/glossary#debtoraccount): \n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**details**](/glossary#details): \n\n\n\n[**end_date**](/glossary#end_date): \n\n\n\n[**from**](/glossary#from): \n\n\n\n[**future_date**](/glossary#future_date): 20200127\n\n\n\n[**iban**](/glossary#): DE91 1000 0000 0123 4567 89\n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**instructedAmount**](/glossary#instructedamount): 100\n\n\n\n[**kyc_document**](/glossary#kyc_document): \n\n\n\n[**legal_name**](/glossary#): Eveline Tripman\n\n\n\n[**link**](/glossary#link): \n\n\n\n[**message**](/glossary#message): 123456\n\n\n\n[**mobile_phone_number**](/glossary#mobile_phone_number): +49 30 901820\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**nickname**](/glossary#nickname): \n\n\n\n[**number**](/glossary#number): \n\n\n\n[**start_date**](/glossary#): 2020-01-27\n\n\n\n[**status**](/glossary#status): \n\n\n\n[**summary**](/glossary#summary): \n\n\n\n[**to**](/glossary#to): \n\n\n\n[**transaction_ids**](/glossary#transaction_ids): \n\n\n\n[**transfer_type**](/glossary#transfer_type): \n\n\n\n[**type**](/glossary#type): \n\n\n\n[**user_id**](/glossary#): 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\n\n\n\n[**value**](/glossary#): 5987953\n\n\n\n[to_counterparty](/glossary#to_counterparty): \n\n\n\n[to_sandbox_tan](/glossary#to_sandbox_tan): \n\n\n\n[to_sepa](/glossary#to_sepa): \n\n\n\n[to_sepa_credit_transfers](/glossary#to_sepa_credit_transfers): \n\n\n\n[to_simple](/glossary#): to_simple\n\n\n\n[to_transfer_to_account](/glossary#to_transfer_to_account): \n\n\n\n[to_transfer_to_atm](/glossary#to_transfer_to_atm): \n\n\n\n[to_transfer_to_phone](/glossary#to_transfer_to_phone): \n\n\n",
      "example_request_body": {
        "to": {
          "bank_id": "gh.29.uk",
          "account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
        },
        "value": {
          "currency": "EUR",
          "amount": "0"
        },
        "description": "this is for work"
      },
      "success_response_body": {
        "id": "4050046c-63b3-4868-8a22-14b4181d33a6",
        "type": "SANDBOX_TAN",
        "from": {
          "bank_id": "gh.29.uk",
          "account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
        },
        "details": {
          "to_sandbox_tan": {
            "bank_id": "String",
            "account_id": "String"
          },
          "to_sepa": {
            "iban": "String"
          },
          "to_counterparty": {
            "counterparty_id": "9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh"
          },
          "to_transfer_to_phone": {
            "value": {
              "currency": "EUR",
              "amount": "0"
            },
            "description": "String",
            "message": "String",
            "from": {
              "mobile_phone_number": "+44 07972 444 876",
              "nickname": "String"
            },
            "to": {
              "mobile_phone_number": "+44 07972 444 876"
            }
          },
          "to_transfer_to_atm": {
            "value": {
              "currency": "EUR",
              "amount": "0"
            },
            "description": "String",
            "message": "String",
            "from": {
              "mobile_phone_number": "+44 07972 444 876",
              "nickname": "String"
            },
            "to": {
              "legal_name": "Eveline Tripman",
              "date_of_birth": "20181230",
              "mobile_phone_number": "+44 07972 444 876",
              "kyc_document": {
                "type": "String",
                "number": "String"
              }
            }
          },
          "to_transfer_to_account": {
            "value": {
              "currency": "EUR",
              "amount": "0"
            },
            "description": "String",
            "transfer_type": "String",
            "future_date": "20181230",
            "to": {
              "name": "String",
              "bank_code": "String",
              "branch_number": "String",
              "account": {
                "number": "String",
                "iban": "String"
              }
            }
          },
          "to_sepa_credit_transfers": {
            "debtorAccount": {
              "iban": "12345"
            },
            "instructedAmount": {
              "currency": "EUR",
              "amount": "0"
            },
            "creditorAccount": {
              "iban": "54321"
            },
            "creditorName": "John Miles"
          },
          "value": {
            "currency": "EUR",
            "amount": "100"
          },
          "description": "String"
        },
        "transaction_ids": ["902ba3bb-dedd-45e7-9319-2fd3f2cd98a1"],
        "status": "COMPLETED",
        "start_date": "1100-01-01T00:00:00Z",
        "end_date": "1100-01-01T00:00:00Z",
        "challenges": [
          {
            "id": "2fg8a7e4-6d02-40e3-a129-0b2bf89de8ub",
            "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
            "allowed_attempts": 3,
            "challenge_type": "OBP_TRANSACTION_REQUEST_CHALLENGE",
            "link": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transaction-request-types/TRANSACTION_REQUEST_TYPE/transaction-requests/TRANSACTION_REQUEST_ID/challenge"
          }
        ],
        "charge": {
          "summary": "Rent the flat",
          "value": {
            "currency": "EUR",
            "amount": "0"
          }
        }
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30111: Invalid Bank Id. The BANK_ID should only contain 0-9/a-z/A-Z/'-'/'.'/'_', the length should be smaller than 255.",
        "OBP-30110: Invalid Account Id. The ACCOUNT_ID should only contain 0-9/a-z/A-Z/'-'/'.'/'_', the length should be smaller than 255.",
        "OBP-10001: Incorrect json format.",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30003: Account not found. Please specify a valid value for ACCOUNT_ID.",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-40002: Insufficient authorisation to create TransactionRequest. The Transaction Request could not be created because the login user doesn't have access to the view of the from account or the view don't have the `canAddTransactionRequestToAnyAccount` permission or your consumer doesn't not have the access to the view of the from account or you don't have the role CanCreateAnyTransactionRequest.",
        "OBP-40001: Invalid value for TRANSACTION_REQUEST_TYPE",
        "OBP-10001: Incorrect json format.",
        "OBP-10002: Invalid Number. Could not convert value to a number.",
        "OBP-40008: Can't send a payment with a value of 0 or less.",
        "OBP-40003: Transaction Request Currency must be the same as From Account Currency.",
        "OBP-00003: Transaction Requests is disabled in this API instance.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Transaction-Request", "Payment Initiation Service (PIS)", "PSD2", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "to": {
            "type": "object",
            "properties": {
              "bank_id": {
                "type": "string"
              },
              "account_id": {
                "type": "string"
              }
            }
          },
          "description": {
            "type": "string"
          },
          "value": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string"
              },
              "amount": {
                "type": "string"
              }
            }
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "challenges": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "challenge_type": {
                  "type": "string"
                },
                "link": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "allowed_attempts": {
                  "type": "integer"
                },
                "user_id": {
                  "type": "string"
                }
              }
            }
          },
          "status": {
            "type": "string"
          },
          "end_date": {
            "type": "string",
            "format": "date-time"
          },
          "charge": {
            "type": "object",
            "properties": {
              "summary": {
                "type": "string"
              },
              "value": {
                "type": "object",
                "properties": {
                  "currency": {
                    "type": "string"
                  },
                  "amount": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "transaction_ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "from": {
            "type": "object",
            "properties": {
              "bank_id": {
                "type": "string"
              },
              "account_id": {
                "type": "string"
              }
            }
          },
          "details": {
            "type": "object",
            "properties": {
              "to_sandbox_tan": {
                "type": "object",
                "properties": {
                  "account_id": {
                    "type": "string"
                  },
                  "bank_id": {
                    "type": "string"
                  }
                }
              },
              "value": {
                "type": "object",
                "properties": {
                  "currency": {
                    "type": "string"
                  },
                  "amount": {
                    "type": "string"
                  }
                }
              },
              "to_transfer_to_phone": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  },
                  "from": {
                    "type": "object",
                    "properties": {
                      "nickname": {
                        "type": "string"
                      },
                      "mobile_phone_number": {
                        "type": "string"
                      }
                    }
                  },
                  "to": {
                    "type": "object",
                    "properties": {
                      "mobile_phone_number": {
                        "type": "string"
                      }
                    }
                  },
                  "value": {
                    "type": "object",
                    "properties": {
                      "currency": {
                        "type": "string"
                      },
                      "amount": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "to_sepa": {
                "type": "object",
                "properties": {
                  "iban": {
                    "type": "string"
                  }
                }
              },
              "description": {
                "type": "string"
              },
              "to_counterparty": {
                "type": "object",
                "properties": {
                  "counterparty_id": {
                    "type": "string"
                  }
                }
              },
              "to_transfer_to_account": {
                "type": "object",
                "properties": {
                  "to": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "account": {
                        "type": "object",
                        "properties": {
                          "number": {
                            "type": "string"
                          },
                          "iban": {
                            "type": "string"
                          }
                        }
                      },
                      "bank_code": {
                        "type": "string"
                      },
                      "branch_number": {
                        "type": "string"
                      }
                    }
                  },
                  "transfer_type": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "future_date": {
                    "type": "string"
                  },
                  "value": {
                    "type": "object",
                    "properties": {
                      "currency": {
                        "type": "string"
                      },
                      "amount": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "to_sepa_credit_transfers": {
                "type": "object",
                "properties": {
                  "instructedAmount": {
                    "type": "object",
                    "properties": {
                      "currency": {
                        "type": "string"
                      },
                      "amount": {
                        "type": "string"
                      }
                    }
                  },
                  "debtorAccount": {
                    "type": "object",
                    "properties": {
                      "iban": {
                        "type": "string"
                      }
                    }
                  },
                  "creditorAccount": {
                    "type": "object",
                    "properties": {
                      "iban": {
                        "type": "string"
                      }
                    }
                  },
                  "creditorName": {
                    "type": "string"
                  }
                }
              },
              "to_transfer_to_atm": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  },
                  "from": {
                    "type": "object",
                    "properties": {
                      "nickname": {
                        "type": "string"
                      },
                      "mobile_phone_number": {
                        "type": "string"
                      }
                    }
                  },
                  "value": {
                    "type": "object",
                    "properties": {
                      "currency": {
                        "type": "string"
                      },
                      "amount": {
                        "type": "string"
                      }
                    }
                  },
                  "to": {
                    "type": "object",
                    "properties": {
                      "date_of_birth": {
                        "type": "string"
                      },
                      "kyc_document": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string"
                          },
                          "number": {
                            "type": "string"
                          }
                        }
                      },
                      "legal_name": {
                        "type": "string"
                      },
                      "mobile_phone_number": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "start_date": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transaction-request-types/ACCOUNT/transaction-requests",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv3.0.0-getApiGlossary",
      "implemented_by": {
        "version": "OBPv3.0.0",
        "function": "getApiGlossary"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.0.0/api/glossary",
      "summary": "Get Glossary of the API",
      "description": "<p>Get API Glossary</p>\n<p>Returns the glossary of the API</p>\n<p>Authentication is Optional</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#glossary_items\"><strong>glossary_items</strong></a>:</p>\n<p><a href=\"/glossary#html\"><strong>html</strong></a>: html format content</p>\n<p><a href=\"/glossary#markdown\"><strong>markdown</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>title</strong></a>: Dr.</p>\n",
      "description_markdown": "Get API Glossary\n\nReturns the glossary of the API\n\n\n\nAuthentication is Optional\n\n\n**JSON response body fields:**\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**glossary_items**](/glossary#glossary_items): \n\n\n\n[**html**](/glossary#html): html format content\n\n\n\n[**markdown**](/glossary#markdown): \n\n\n\n[**title**](/glossary#): Dr.\n\n\n",
      "success_response_body": {
        "glossary_items": [
          {
            "title": "Dr.",
            "description": {
              "markdown": "String",
              "html": "String"
            }
          }
        ]
      },
      "error_response_bodies": ["OBP-50000: Unknown Error."],
      "tags": ["Documentation", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "glossary_items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "description": {
                  "type": "object",
                  "properties": {
                    "html": {
                      "type": "string"
                    },
                    "markdown": {
                      "type": "string"
                    }
                  }
                },
                "title": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/api/glossary",
      "connector_methods": ["obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv4.0.0-createAtm",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "createAtm"
      },
      "request_verb": "POST",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/atms",
      "summary": "Create ATM",
      "description": "<p>Create ATM.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#accessibility_features\"><strong>accessibility_features</strong></a>: [&quot;ATAC&quot;,&quot;ATAD&quot;]</p>\n<p><a href=\"/glossary#address\"><strong>address</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>balance_inquiry_fee</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#\"><strong>branch_identification</strong></a>: branch_identification</p>\n<p><a href=\"/glossary#\"><strong>cash_withdrawal_international_fee</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>cash_withdrawal_national_fee</strong></a>:</p>\n<p><a href=\"/glossary#city\"><strong>city</strong></a>:</p>\n<p><a href=\"/glossary#closing_time\"><strong>closing_time</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#country_code\"><strong>country_code</strong></a>: 1254</p>\n<p><a href=\"/glossary#county\"><strong>county</strong></a>:</p>\n<p><a href=\"/glossary#friday\"><strong>friday</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>has_deposit_capability</strong></a>: true</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#\"><strong>is_accessible</strong></a>: true</p>\n<p><a href=\"/glossary#latitude\"><strong>latitude</strong></a>: 38.8951</p>\n<p><a href=\"/glossary#license\"><strong>license</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>line_1</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>line_2</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>line_3</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>located_at</strong></a>:</p>\n<p><a href=\"/glossary#location\"><strong>location</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>location_categories</strong></a>: location_categories</p>\n<p><a href=\"/glossary#longitude\"><strong>longitude</strong></a>: -77.0364</p>\n<p><a href=\"/glossary#meta\"><strong>meta</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>minimum_withdrawal</strong></a>: minimum_withdrawal</p>\n<p><a href=\"/glossary#monday\"><strong>monday</strong></a>:</p>\n<p><a href=\"/glossary#more_info\"><strong>more_info</strong></a>: More information about this fee</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#\"><strong>notes</strong></a>: notes</p>\n<p><a href=\"/glossary#opening_time\"><strong>opening_time</strong></a>:</p>\n<p><a href=\"/glossary#postcode\"><strong>postcode</strong></a>:</p>\n<p><a href=\"/glossary#saturday\"><strong>saturday</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>services</strong></a>: services</p>\n<p><a href=\"/glossary#\"><strong>site_identification</strong></a>: site_identification</p>\n<p><a href=\"/glossary#\"><strong>site_name</strong></a>: site_name</p>\n<p><a href=\"/glossary#state\"><strong>state</strong></a>:</p>\n<p><a href=\"/glossary#sunday\"><strong>sunday</strong></a>:</p>\n<p><a href=\"/glossary#supported_currencies\"><strong>supported_currencies</strong></a>: [&quot;EUR&quot;,&quot;MXN&quot;,&quot;USD&quot;]</p>\n<p><a href=\"/glossary#supported_languages\"><strong>supported_languages</strong></a>: [&quot;es&quot;,&quot;fr&quot;,&quot;de&quot;]</p>\n<p><a href=\"/glossary#thursday\"><strong>thursday</strong></a>:</p>\n<p><a href=\"/glossary#tuesday\"><strong>tuesday</strong></a>:</p>\n<p><a href=\"/glossary#wednesday\"><strong>wednesday</strong></a>:</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#accessibility_features\"><strong>accessibility_features</strong></a>: [&quot;ATAC&quot;,&quot;ATAD&quot;]</p>\n<p><a href=\"/glossary#address\"><strong>address</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>balance_inquiry_fee</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#\"><strong>branch_identification</strong></a>: branch_identification</p>\n<p><a href=\"/glossary#\"><strong>cash_withdrawal_international_fee</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>cash_withdrawal_national_fee</strong></a>:</p>\n<p><a href=\"/glossary#city\"><strong>city</strong></a>:</p>\n<p><a href=\"/glossary#closing_time\"><strong>closing_time</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#country_code\"><strong>country_code</strong></a>: 1254</p>\n<p><a href=\"/glossary#county\"><strong>county</strong></a>:</p>\n<p><a href=\"/glossary#friday\"><strong>friday</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>has_deposit_capability</strong></a>: true</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#\"><strong>is_accessible</strong></a>: true</p>\n<p><a href=\"/glossary#latitude\"><strong>latitude</strong></a>: 38.8951</p>\n<p><a href=\"/glossary#license\"><strong>license</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>line_1</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>line_2</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>line_3</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>located_at</strong></a>:</p>\n<p><a href=\"/glossary#location\"><strong>location</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>location_categories</strong></a>: location_categories</p>\n<p><a href=\"/glossary#longitude\"><strong>longitude</strong></a>: -77.0364</p>\n<p><a href=\"/glossary#meta\"><strong>meta</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>minimum_withdrawal</strong></a>: minimum_withdrawal</p>\n<p><a href=\"/glossary#monday\"><strong>monday</strong></a>:</p>\n<p><a href=\"/glossary#more_info\"><strong>more_info</strong></a>: More information about this fee</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#\"><strong>notes</strong></a>: notes</p>\n<p><a href=\"/glossary#opening_time\"><strong>opening_time</strong></a>:</p>\n<p><a href=\"/glossary#postcode\"><strong>postcode</strong></a>:</p>\n<p><a href=\"/glossary#saturday\"><strong>saturday</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>services</strong></a>: services</p>\n<p><a href=\"/glossary#\"><strong>site_identification</strong></a>: site_identification</p>\n<p><a href=\"/glossary#\"><strong>site_name</strong></a>: site_name</p>\n<p><a href=\"/glossary#state\"><strong>state</strong></a>:</p>\n<p><a href=\"/glossary#sunday\"><strong>sunday</strong></a>:</p>\n<p><a href=\"/glossary#supported_currencies\"><strong>supported_currencies</strong></a>: [&quot;EUR&quot;,&quot;MXN&quot;,&quot;USD&quot;]</p>\n<p><a href=\"/glossary#supported_languages\"><strong>supported_languages</strong></a>: [&quot;es&quot;,&quot;fr&quot;,&quot;de&quot;]</p>\n<p><a href=\"/glossary#thursday\"><strong>thursday</strong></a>:</p>\n<p><a href=\"/glossary#tuesday\"><strong>tuesday</strong></a>:</p>\n<p><a href=\"/glossary#wednesday\"><strong>wednesday</strong></a>:</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n",
      "description_markdown": "Create ATM.\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON request body fields:**\n\n\n\n[**accessibility_features**](/glossary#accessibility_features): [\"ATAC\",\"ATAD\"]\n\n\n\n[**address**](/glossary#address): \n\n\n\n[**balance_inquiry_fee**](/glossary#): \n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**branch_identification**](/glossary#): branch_identification\n\n\n\n[**cash_withdrawal_international_fee**](/glossary#): \n\n\n\n[**cash_withdrawal_national_fee**](/glossary#): \n\n\n\n[**city**](/glossary#city): \n\n\n\n[**closing_time**](/glossary#closing_time): 2020-01-27\n\n\n\n[**country_code**](/glossary#country_code): 1254\n\n\n\n[**county**](/glossary#county): \n\n\n\n[**friday**](/glossary#friday): \n\n\n\n[**has_deposit_capability**](/glossary#): true\n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**is_accessible**](/glossary#): true\n\n\n\n[**latitude**](/glossary#latitude): 38.8951\n\n\n\n[**license**](/glossary#license): \n\n\n\n[**line_1**](/glossary#): \n\n\n\n[**line_2**](/glossary#): \n\n\n\n[**line_3**](/glossary#): \n\n\n\n[**located_at**](/glossary#): \n\n\n\n[**location**](/glossary#location): \n\n\n\n[**location_categories**](/glossary#): location_categories\n\n\n\n[**longitude**](/glossary#longitude): -77.0364\n\n\n\n[**meta**](/glossary#meta): \n\n\n\n[**minimum_withdrawal**](/glossary#): minimum_withdrawal\n\n\n\n[**monday**](/glossary#monday): \n\n\n\n[**more_info**](/glossary#more_info): More information about this fee\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**notes**](/glossary#): notes\n\n\n\n[**opening_time**](/glossary#opening_time): \n\n\n\n[**postcode**](/glossary#postcode): \n\n\n\n[**saturday**](/glossary#saturday): \n\n\n\n[**services**](/glossary#): services\n\n\n\n[**site_identification**](/glossary#): site_identification\n\n\n\n[**site_name**](/glossary#): site_name\n\n\n\n[**state**](/glossary#state): \n\n\n\n[**sunday**](/glossary#sunday): \n\n\n\n[**supported_currencies**](/glossary#supported_currencies): [\"EUR\",\"MXN\",\"USD\"]\n\n\n\n[**supported_languages**](/glossary#supported_languages): [\"es\",\"fr\",\"de\"]\n\n\n\n[**thursday**](/glossary#thursday): \n\n\n\n[**tuesday**](/glossary#tuesday): \n\n\n\n[**wednesday**](/glossary#wednesday): \n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**accessibility_features**](/glossary#accessibility_features): [\"ATAC\",\"ATAD\"]\n\n\n\n[**address**](/glossary#address): \n\n\n\n[**balance_inquiry_fee**](/glossary#): \n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**branch_identification**](/glossary#): branch_identification\n\n\n\n[**cash_withdrawal_international_fee**](/glossary#): \n\n\n\n[**cash_withdrawal_national_fee**](/glossary#): \n\n\n\n[**city**](/glossary#city): \n\n\n\n[**closing_time**](/glossary#closing_time): 2020-01-27\n\n\n\n[**country_code**](/glossary#country_code): 1254\n\n\n\n[**county**](/glossary#county): \n\n\n\n[**friday**](/glossary#friday): \n\n\n\n[**has_deposit_capability**](/glossary#): true\n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**is_accessible**](/glossary#): true\n\n\n\n[**latitude**](/glossary#latitude): 38.8951\n\n\n\n[**license**](/glossary#license): \n\n\n\n[**line_1**](/glossary#): \n\n\n\n[**line_2**](/glossary#): \n\n\n\n[**line_3**](/glossary#): \n\n\n\n[**located_at**](/glossary#): \n\n\n\n[**location**](/glossary#location): \n\n\n\n[**location_categories**](/glossary#): location_categories\n\n\n\n[**longitude**](/glossary#longitude): -77.0364\n\n\n\n[**meta**](/glossary#meta): \n\n\n\n[**minimum_withdrawal**](/glossary#): minimum_withdrawal\n\n\n\n[**monday**](/glossary#monday): \n\n\n\n[**more_info**](/glossary#more_info): More information about this fee\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**notes**](/glossary#): notes\n\n\n\n[**opening_time**](/glossary#opening_time): \n\n\n\n[**postcode**](/glossary#postcode): \n\n\n\n[**saturday**](/glossary#saturday): \n\n\n\n[**services**](/glossary#): services\n\n\n\n[**site_identification**](/glossary#): site_identification\n\n\n\n[**site_name**](/glossary#): site_name\n\n\n\n[**state**](/glossary#state): \n\n\n\n[**sunday**](/glossary#sunday): \n\n\n\n[**supported_currencies**](/glossary#supported_currencies): [\"EUR\",\"MXN\",\"USD\"]\n\n\n\n[**supported_languages**](/glossary#supported_languages): [\"es\",\"fr\",\"de\"]\n\n\n\n[**thursday**](/glossary#thursday): \n\n\n\n[**tuesday**](/glossary#tuesday): \n\n\n\n[**wednesday**](/glossary#wednesday): \n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n",
      "example_request_body": {
        "id": "atme0352a-9a0f-4bfa-b30b-9003aa467f51",
        "bank_id": "gh.29.uk",
        "name": "Atm by the Lake",
        "address": {
          "line_1": "No 1 the Road",
          "line_2": "The Place",
          "line_3": "The Hill",
          "city": "Berlin",
          "county": "",
          "state": "Brandenburg",
          "postcode": "13359",
          "country_code": "DE"
        },
        "location": {
          "latitude": 11.45,
          "longitude": 11.45
        },
        "meta": {
          "license": {
            "id": "ODbL-1.0",
            "name": "Open Database License"
          }
        },
        "monday": {
          "opening_time": "10:00",
          "closing_time": "18:00"
        },
        "tuesday": {
          "opening_time": "10:00",
          "closing_time": "18:00"
        },
        "wednesday": {
          "opening_time": "10:00",
          "closing_time": "18:00"
        },
        "thursday": {
          "opening_time": "10:00",
          "closing_time": "18:00"
        },
        "friday": {
          "opening_time": "10:00",
          "closing_time": "18:00"
        },
        "saturday": {
          "opening_time": "10:00",
          "closing_time": "18:00"
        },
        "sunday": {
          "opening_time": "10:00",
          "closing_time": "18:00"
        },
        "is_accessible": "true",
        "located_at": "",
        "more_info": "More information about this fee",
        "has_deposit_capability": "true",
        "supported_languages": ["es", "fr", "de"],
        "services": ["ATBP", "ATBA"],
        "accessibility_features": ["ATAC", "ATAD"],
        "supported_currencies": ["EUR", "MXN", "USD"],
        "notes": ["String1", "String2"],
        "location_categories": ["ATBI", "ATBE"],
        "minimum_withdrawal": "5",
        "branch_identification": "",
        "site_identification": "",
        "site_name": "",
        "cash_withdrawal_national_fee": "",
        "cash_withdrawal_international_fee": "",
        "balance_inquiry_fee": ""
      },
      "success_response_body": {
        "id": "atme0352a-9a0f-4bfa-b30b-9003aa467f51",
        "bank_id": "gh.29.uk",
        "name": "Atm by the Lake",
        "address": {
          "line_1": "No 1 the Road",
          "line_2": "The Place",
          "line_3": "The Hill",
          "city": "Berlin",
          "county": "",
          "state": "Brandenburg",
          "postcode": "13359",
          "country_code": "DE"
        },
        "location": {
          "latitude": 11.45,
          "longitude": 11.45
        },
        "meta": {
          "license": {
            "id": "ODbL-1.0",
            "name": "Open Database License"
          }
        },
        "monday": {
          "opening_time": "10:00",
          "closing_time": "18:00"
        },
        "tuesday": {
          "opening_time": "10:00",
          "closing_time": "18:00"
        },
        "wednesday": {
          "opening_time": "10:00",
          "closing_time": "18:00"
        },
        "thursday": {
          "opening_time": "10:00",
          "closing_time": "18:00"
        },
        "friday": {
          "opening_time": "10:00",
          "closing_time": "18:00"
        },
        "saturday": {
          "opening_time": "10:00",
          "closing_time": "18:00"
        },
        "sunday": {
          "opening_time": "10:00",
          "closing_time": "18:00"
        },
        "is_accessible": "true",
        "located_at": "",
        "more_info": "More information about this fee",
        "has_deposit_capability": "true",
        "supported_languages": ["es", "fr", "de"],
        "services": ["ATBP", "ATBA"],
        "accessibility_features": ["ATAC", "ATAD"],
        "supported_currencies": ["EUR", "MXN", "USD"],
        "notes": ["String1", "String2"],
        "location_categories": ["ATBI", "ATBE"],
        "minimum_withdrawal": "5",
        "branch_identification": "",
        "site_identification": "",
        "site_name": "",
        "cash_withdrawal_national_fee": "",
        "cash_withdrawal_international_fee": "",
        "balance_inquiry_fee": ""
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["ATM", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "has_deposit_capability": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "site_name": {
            "type": "string"
          },
          "friday": {
            "type": "object",
            "properties": {
              "closing_time": {
                "type": "string"
              },
              "opening_time": {
                "type": "string"
              }
            }
          },
          "id": {
            "type": "string"
          },
          "site_identification": {
            "type": "string"
          },
          "is_accessible": {
            "type": "string"
          },
          "accessibility_features": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "supported_currencies": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "bank_id": {
            "type": "string"
          },
          "monday": {
            "type": "object",
            "properties": {
              "closing_time": {
                "type": "string"
              },
              "opening_time": {
                "type": "string"
              }
            }
          },
          "cash_withdrawal_international_fee": {
            "type": "string"
          },
          "supported_languages": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "balance_inquiry_fee": {
            "type": "string"
          },
          "meta": {
            "type": "object",
            "properties": {
              "license": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "notes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "saturday": {
            "type": "object",
            "properties": {
              "closing_time": {
                "type": "string"
              },
              "opening_time": {
                "type": "string"
              }
            }
          },
          "thursday": {
            "type": "object",
            "properties": {
              "closing_time": {
                "type": "string"
              },
              "opening_time": {
                "type": "string"
              }
            }
          },
          "tuesday": {
            "type": "object",
            "properties": {
              "closing_time": {
                "type": "string"
              },
              "opening_time": {
                "type": "string"
              }
            }
          },
          "wednesday": {
            "type": "object",
            "properties": {
              "closing_time": {
                "type": "string"
              },
              "opening_time": {
                "type": "string"
              }
            }
          },
          "sunday": {
            "type": "object",
            "properties": {
              "closing_time": {
                "type": "string"
              },
              "opening_time": {
                "type": "string"
              }
            }
          },
          "located_at": {
            "type": "string"
          },
          "more_info": {
            "type": "string"
          },
          "address": {
            "type": "object",
            "properties": {
              "city": {
                "type": "string"
              },
              "postcode": {
                "type": "string"
              },
              "line_1": {
                "type": "string"
              },
              "line_2": {
                "type": "string"
              },
              "line_3": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "country_code": {
                "type": "string"
              },
              "county": {
                "type": "string"
              }
            }
          },
          "minimum_withdrawal": {
            "type": "string"
          },
          "branch_identification": {
            "type": "string"
          },
          "location": {
            "type": "object",
            "properties": {
              "longitude": {
                "type": "number"
              },
              "latitude": {
                "type": "number"
              }
            }
          },
          "services": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "cash_withdrawal_national_fee": {
            "type": "string"
          },
          "location_categories": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "has_deposit_capability": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "site_name": {
            "type": "string"
          },
          "friday": {
            "type": "object",
            "properties": {
              "closing_time": {
                "type": "string"
              },
              "opening_time": {
                "type": "string"
              }
            }
          },
          "id": {
            "type": "string"
          },
          "site_identification": {
            "type": "string"
          },
          "is_accessible": {
            "type": "string"
          },
          "accessibility_features": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "supported_currencies": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "bank_id": {
            "type": "string"
          },
          "monday": {
            "type": "object",
            "properties": {
              "closing_time": {
                "type": "string"
              },
              "opening_time": {
                "type": "string"
              }
            }
          },
          "cash_withdrawal_international_fee": {
            "type": "string"
          },
          "supported_languages": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "balance_inquiry_fee": {
            "type": "string"
          },
          "meta": {
            "type": "object",
            "properties": {
              "license": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "notes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "saturday": {
            "type": "object",
            "properties": {
              "closing_time": {
                "type": "string"
              },
              "opening_time": {
                "type": "string"
              }
            }
          },
          "thursday": {
            "type": "object",
            "properties": {
              "closing_time": {
                "type": "string"
              },
              "opening_time": {
                "type": "string"
              }
            }
          },
          "tuesday": {
            "type": "object",
            "properties": {
              "closing_time": {
                "type": "string"
              },
              "opening_time": {
                "type": "string"
              }
            }
          },
          "wednesday": {
            "type": "object",
            "properties": {
              "closing_time": {
                "type": "string"
              },
              "opening_time": {
                "type": "string"
              }
            }
          },
          "sunday": {
            "type": "object",
            "properties": {
              "closing_time": {
                "type": "string"
              },
              "opening_time": {
                "type": "string"
              }
            }
          },
          "located_at": {
            "type": "string"
          },
          "more_info": {
            "type": "string"
          },
          "address": {
            "type": "object",
            "properties": {
              "city": {
                "type": "string"
              },
              "postcode": {
                "type": "string"
              },
              "line_1": {
                "type": "string"
              },
              "line_2": {
                "type": "string"
              },
              "line_3": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "country_code": {
                "type": "string"
              },
              "county": {
                "type": "string"
              }
            }
          },
          "minimum_withdrawal": {
            "type": "string"
          },
          "branch_identification": {
            "type": "string"
          },
          "location": {
            "type": "object",
            "properties": {
              "longitude": {
                "type": "number"
              },
              "latitude": {
                "type": "number"
              }
            }
          },
          "services": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "cash_withdrawal_national_fee": {
            "type": "string"
          },
          "location_categories": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateAtm",
          "requires_bank_id": true
        },
        {
          "role": "CanCreateAtmAtAnyBank",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/atms",
      "connector_methods": ["obp.createOrUpdateAtm"]
    },
    {
      "operation_id": "OBPv3.0.0-getAdapterInfoForBank",
      "implemented_by": {
        "version": "OBPv3.0.0",
        "function": "getAdapterInfoForBank"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.0.0/banks/BANK_ID/adapter",
      "summary": "Get Adapter Info for a bank",
      "description": "<p>Get basic information about the Adapter listening on behalf of this bank.</p>\n<p>Authentication is Optional</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#\"><strong>git_commit</strong></a>: 59623811dd8a41f6ffe67be46954eee11913dc28</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#version\"><strong>version</strong></a>:</p>\n",
      "description_markdown": "Get basic information about the Adapter listening on behalf of this bank.\n\nAuthentication is Optional\n\n      \n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**date**](/glossary#): 2020-01-27\n\n\n\n[**git_commit**](/glossary#): 59623811dd8a41f6ffe67be46954eee11913dc28\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**version**](/glossary#version): \n\n\n",
      "success_response_body": {
        "name": "String",
        "version": "String",
        "git_commit": "String",
        "date": "2013-01-21T23:08:00Z"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["API", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "git_commit": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanGetAdapterInfoAtOneBank",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/adapter",
      "connector_methods": ["obp.getAdapterInfo", "obp.getBank", "obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv4.0.0-getAllJsonSchemaValidationsPublic",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getAllJsonSchemaValidationsPublic"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/endpoints/json-schema-validations",
      "summary": "Get all JSON Schema Validations - public",
      "description": "<p>Get all JSON Schema Validations - public.</p>\n<p>Authentication is Optional</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>$schema</strong></a>: $schema</p>\n<p><a href=\"/glossary#\"><strong>additionalProperties</strong></a>: additionalProperties</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#\"><strong>examples</strong></a>: examples</p>\n<p><a href=\"/glossary#\"><strong>json_schema</strong></a>: json_schema</p>\n<p><a href=\"/glossary#\"><strong>maxLength</strong></a>: maxLength</p>\n<p><a href=\"/glossary#\"><strong>minLength</strong></a>: minLength</p>\n<p><a href=\"/glossary#\"><strong>operation_id</strong></a>: OBPv4.0.0-getBanks</p>\n<p><a href=\"/glossary#\"><strong>properties</strong></a>: properties</p>\n<p><a href=\"/glossary#\"><strong>required</strong></a>: required</p>\n<p><a href=\"/glossary#\"><strong>title</strong></a>: Dr.</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>xxx_id</strong></a>: xxx_id</p>\n",
      "description_markdown": "Get all JSON Schema Validations - public.\n\n\n\nAuthentication is Optional\n\n\n**JSON response body fields:**\n\n\n\n[**$schema**](/glossary#): $schema\n\n\n\n[**additionalProperties**](/glossary#): additionalProperties\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**examples**](/glossary#): examples\n\n\n\n[**json_schema**](/glossary#): json_schema\n\n\n\n[**maxLength**](/glossary#): maxLength\n\n\n\n[**minLength**](/glossary#): minLength\n\n\n\n[**operation_id**](/glossary#): OBPv4.0.0-getBanks\n\n\n\n[**properties**](/glossary#): properties\n\n\n\n[**required**](/glossary#): required\n\n\n\n[**title**](/glossary#): Dr.\n\n\n\n[**type**](/glossary#type): \n\n\n\n[**xxx_id**](/glossary#): xxx_id\n\n\n",
      "success_response_body": {
        "json_schema_validations": [
          {
            "operation_id": "OBPv4.0.0-createXxx",
            "json_schema": {
              "$schema": "http://json-schema.org/draft-07/schema",
              "description": "The demo json-schema",
              "title": "The demo schema",
              "required": ["xxx_id"],
              "type": "object",
              "properties": {
                "xxx_id": {
                  "type": "string",
                  "minLength": 2,
                  "maxLength": 50,
                  "examples": ["xxx_id_demo_value"]
                }
              },
              "additionalProperties": true
            }
          }
        ]
      },
      "error_response_bodies": ["OBP-10001: Incorrect json format.", "OBP-50000: Unknown Error."],
      "tags": ["JSON-Schema-Validation", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "json_schema_validations": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "json_schema": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string"
                    },
                    "required": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$schema": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "properties": {
                      "type": "object",
                      "properties": {
                        "xxx_id": {
                          "type": "object",
                          "properties": {
                            "minLength": {
                              "type": "integer"
                            },
                            "maxLength": {
                              "type": "integer"
                            },
                            "type": {
                              "type": "string"
                            },
                            "examples": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "additionalProperties": {
                      "type": "boolean"
                    }
                  }
                },
                "operation_id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/endpoints/json-schema-validations",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv4.0.0-updateConnectorMethod",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "updateConnectorMethod"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v4.0.0/management/connector-methods/CONNECTOR_METHOD_ID",
      "summary": "Update Connector Method",
      "description": "<p>Update an internal connector.</p>\n<p>The method_body is URL-encoded format String</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#\">CONNECTOR_METHOD_ID</a>: ace0352a-9a0f-4bfa-b30b-9003aa467f51</p>\n<p><strong>JSON response body fields:</strong></p>\n",
      "description_markdown": "Update an internal connector.\n\nThe method_body is URL-encoded format String\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[CONNECTOR_METHOD_ID](/glossary#): ace0352a-9a0f-4bfa-b30b-9003aa467f51\n\n\n\n\n\n**JSON response body fields:**\n\n\n",
      "example_request_body": {
        "method_body": "%20%20%20%20%20%20Future.successful%28%0A%20%20%20%20%20%20%20%20Full%28%28BankCommons%28%0A%20%20%20%20%20%20%20%20%20%20BankId%28%22Hello%20bank%20id%22%29%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%228%22%0A%20%20%20%20%20%20%20%20%29%2C%20None%29%29%0A%20%20%20%20%20%20%29",
        "programming_lang": "Scala"
      },
      "success_response_body": {
        "connector_method_id": "ace0352a-9a0f-4bfa-b30b-9003aa467f51",
        "method_name": "getBank",
        "method_body": "%20%20%20%20%20%20Future.successful%28%0A%20%20%20%20%20%20%20%20Full%28%28BankCommons%28%0A%20%20%20%20%20%20%20%20%20%20BankId%28%22Hello%20bank%20id%22%29%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%228%22%0A%20%20%20%20%20%20%20%20%29%2C%20None%29%29%0A%20%20%20%20%20%20%29",
        "programming_lang": "Scala"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Connector-Method", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "programming_lang": {
            "type": "string"
          },
          "method_body": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "connector_method_id": {
            "type": "string"
          },
          "method_name": {
            "type": "string"
          },
          "programming_lang": {
            "type": "string"
          },
          "method_body": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanUpdateConnectorMethod",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/connector-methods/CONNECTOR_METHOD_ID",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv4.0.0-createTransactionRequestAttribute",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "createTransactionRequestAttribute"
      },
      "request_verb": "POST",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/transaction-requests/TRANSACTION_REQUEST_ID/attribute",
      "summary": "Create Transaction Request Attribute",
      "description": "<p>Create Transaction Request Attribute</p>\n<p>The type field must be one of &quot;STRING&quot;, &quot;INTEGER&quot;, &quot;DOUBLE&quot; or DATE_WITH_DAY&quot;</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#\">TRANSACTION_REQUEST_ID</a>: 8138a7e4-6d02-40e3-a129-0b2bf89de9f1</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#\"><strong>transaction_request_attribute_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n",
      "description_markdown": "Create Transaction Request Attribute\n\nThe type field must be one of \"STRING\", \"INTEGER\", \"DOUBLE\" or DATE_WITH_DAY\"\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[TRANSACTION_REQUEST_ID](/glossary#): 8138a7e4-6d02-40e3-a129-0b2bf89de9f1\n\n\n\n\n\n**JSON request body fields:**\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**type**](/glossary#type): \n\n\n\n[**value**](/glossary#): 5987953\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**transaction_request_attribute_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**type**](/glossary#type): \n\n\n\n[**value**](/glossary#): 5987953\n\n\n",
      "example_request_body": {
        "name": "HOUSE_RENT",
        "type": "DATE_WITH_DAY",
        "value": "123456789"
      },
      "success_response_body": {
        "transaction_request_attribute_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "name": "HOUSE_RENT",
        "type": "DATE_WITH_DAY",
        "value": "123456789"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["Transaction-Request", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "transaction_request_attribute_id": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateTransactionRequestAttributeAtOneBank",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/transaction-requests/TRANSACTION_REQUEST_ID/attribute",
      "connector_methods": ["obp.createOrUpdateTransactionRequestAttribute"]
    },
    {
      "operation_id": "OBPv1.2.1-updateCounterpartyPrivateAlias",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "updateCounterpartyPrivateAlias"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/private_alias",
      "summary": "Update Counterparty Private Alias",
      "description": "<p>Updates the private alias of the counterparty (AKA other account) OTHER_ACCOUNT_ID.</p>\n<p>Authentication is Optional<br />\nAuthentication is required if the view is not public.</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#other_account_id\">OTHER_ACCOUNT_ID</a>:</p>\n<p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#success\"><strong>success</strong></a>:</p>\n",
      "description_markdown": "Updates the private alias of the counterparty (AKA other account) OTHER_ACCOUNT_ID.\n\nAuthentication is Optional\nAuthentication is required if the view is not public.\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[OTHER_ACCOUNT_ID](/glossary#other_account_id): \n\n\n\n[VIEW_ID](/glossary#this_view_id): owner\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**success**](/glossary#success): \n\n\n",
      "example_request_body": {
        "alias": "String"
      },
      "success_response_body": {
        "success": "Success"
      },
      "error_response_bodies": [
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-10001: Incorrect json format.",
        "the view does not allow metadata access",
        "the view does not allow updating the private alias",
        "Alias cannot be updated",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Counterparty-Metadata", "Counterparty", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "alias": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "success": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/private_alias",
      "connector_methods": [
        "obp.checkBankAccountExists",
        "obp.getBank",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv5.0.0-createCustomerAccountLink",
      "implemented_by": {
        "version": "OBPv5.0.0",
        "function": "createCustomerAccountLink"
      },
      "request_verb": "POST",
      "request_url": "/obp/v5.0.0/banks/BANK_ID/customer-account-links",
      "summary": "Create Customer Account Link",
      "description": "<p>Link a Customer to a Account</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>account_id</strong></a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>relationship_type</strong></a>: Owner</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>account_id</strong></a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#\"><strong>customer_account_link_id</strong></a>: xyz8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>relationship_type</strong></a>: Owner</p>\n",
      "description_markdown": "Link a Customer to a Account\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON request body fields:**\n\n\n\n[**account_id**](/glossary#): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**customer_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**relationship_type**](/glossary#): Owner\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**account_id**](/glossary#): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**customer_account_link_id**](/glossary#): xyz8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**customer_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**relationship_type**](/glossary#): Owner\n\n\n",
      "example_request_body": {
        "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "bank_id": "gh.29.uk",
        "account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0",
        "relationship_type": "Owner"
      },
      "success_response_body": {
        "customer_account_link_id": "xyz8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "bank_id": "gh.29.uk",
        "account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0",
        "relationship_type": "Owner"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-10001: Incorrect json format.",
        "OBP-30046: Customer not found. Please specify a valid value for CUSTOMER_ID.",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-30223: The Account is already linked to a Customer at the bank specified by BANK_ID",
        "OBP-30224: Could not create the customer account link.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Customer", "Account"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "customer_id": {
            "type": "string"
          },
          "bank_id": {
            "type": "string"
          },
          "account_id": {
            "type": "string"
          },
          "relationship_type": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "customer_account_link_id": {
            "type": "string"
          },
          "customer_id": {
            "type": "string"
          },
          "bank_id": {
            "type": "string"
          },
          "account_id": {
            "type": "string"
          },
          "relationship_type": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateCustomerAccountLink",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/customer-account-links",
      "connector_methods": [
        "obp.createCustomerAccountLink",
        "obp.getCustomerAccountLink",
        "obp.checkBankAccountExists",
        "obp.getCustomerByCustomerId"
      ]
    },
    {
      "operation_id": "OBPv4.0.0-answerTransactionRequestChallenge",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "answerTransactionRequestChallenge"
      },
      "request_verb": "POST",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transaction-request-types/TRANSACTION_REQUEST_TYPE/transaction-requests/TRANSACTION_REQUEST_ID/challenge",
      "summary": "Answer Transaction Request Challenge",
      "description": "<p>In Sandbox mode, any string that can be converted to a positive integer will be accepted as an answer.</p>\n<p>This endpoint totally depends on createTransactionRequest, it need get the following data from createTransactionRequest response body.</p>\n<p>1)<code>TRANSACTION_REQUEST_TYPE</code> : is the same as createTransactionRequest request URL .</p>\n<p>2)<code>TRANSACTION_REQUEST_ID</code> : is the <code>id</code> field in createTransactionRequest response body.</p>\n<p>3) <code>id</code> :  is <code>challenge.id</code> field in createTransactionRequest response body.</p>\n<p>4) <code>answer</code> : must be <code>123</code> in case that Strong Customer Authentication method for OTP challenge is dummy.<br />\nFor instance: SANDBOX_TAN_OTP_INSTRUCTION_TRANSPORT=dummy<br />\nPossible values are dummy,email and sms<br />\nIn kafka mode, the answer can be got by phone message or other SCA methods.</p>\n<p>Note that each Transaction Request Type can have its own OTP_INSTRUCTION_TRANSPORT method.<br />\nOTP_INSTRUCTION_TRANSPORT methods are set in Props. See sample.props.template for instructions.</p>\n<p>Single or Multiple authorisations</p>\n<p>OBP allows single or multi party authorisations.</p>\n<p>Single party authorisation:</p>\n<p>In the case that only one person needs to authorise i.e. answer a security challenge we have the following change of state of a <code>transaction request</code>:<br />\nINITIATED =&gt; COMPLETED</p>\n<p>Multiparty authorisation:</p>\n<p>In the case that multiple parties (n persons) need to authorise a transaction request i.e. answer security challenges, we have the followings state flow for a <code>transaction request</code>:<br />\nINITIATED =&gt; NEXT_CHALLENGE_PENDING =&gt; ... =&gt; NEXT_CHALLENGE_PENDING =&gt; COMPLETED</p>\n<p>The security challenge is bound to a user i.e. in the case of a correct answer but the user is different than expected the challenge will fail.</p>\n<p>Rule for calculating number of security challenges:<br />\nIf Product Account attribute REQUIRED_CHALLENGE_ANSWERS=N then create N challenges<br />\n(one for every user that has a View where permission &quot;can_add_transaction_request_to_any_account&quot;=true)<br />\nIn the case REQUIRED_CHALLENGE_ANSWERS is not defined as an account attribute, the default number of security challenges created is one.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#\">TRANSACTION_REQUEST_ID</a>: 8138a7e4-6d02-40e3-a129-0b2bf89de9f1</p>\n<p><a href=\"/glossary#\">TRANSACTION_REQUEST_TYPE</a>: SEPA</p>\n<p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#answer\"><strong>answer</strong></a>:</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#\">additional_information</a>: additional_information</p>\n<p><a href=\"/glossary#\">reason_code</a>: reason_code</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#Account\"><strong>account</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>account_id</strong></a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#allowed_attempts\"><strong>allowed_attempts</strong></a>: 5</p>\n<p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p>\n<p><a href=\"/glossary#bank_code\"><strong>bank_code</strong></a>: CGHZ</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#branch_number\"><strong>branch_number</strong></a>:</p>\n<p><a href=\"/glossary#challenge\"><strong>challenge</strong></a>:</p>\n<p><a href=\"/glossary#challenge_type\"><strong>challenge_type</strong></a>:</p>\n<p><a href=\"/glossary#charge\"><strong>charge</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>counterparty_id</strong></a>: 9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#creditoraccount\"><strong>creditorAccount</strong></a>:</p>\n<p><a href=\"/glossary#creditorname\"><strong>creditorName</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#\"><strong>date_of_birth</strong></a>: 2018-03-09</p>\n<p><a href=\"/glossary#debtoraccount\"><strong>debtorAccount</strong></a>:</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#details\"><strong>details</strong></a>:</p>\n<p><a href=\"/glossary#end_date\"><strong>end_date</strong></a>:</p>\n<p><a href=\"/glossary#from\"><strong>from</strong></a>:</p>\n<p><a href=\"/glossary#future_date\"><strong>future_date</strong></a>: 20200127</p>\n<p><a href=\"/glossary#\"><strong>iban</strong></a>: DE91 1000 0000 0123 4567 89</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#instructedamount\"><strong>instructedAmount</strong></a>: 100</p>\n<p><a href=\"/glossary#kyc_document\"><strong>kyc_document</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>legal_name</strong></a>: Eveline Tripman</p>\n<p><a href=\"/glossary#message\"><strong>message</strong></a>: 123456</p>\n<p><a href=\"/glossary#mobile_phone_number\"><strong>mobile_phone_number</strong></a>: +49 30 901820</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#nickname\"><strong>nickname</strong></a>:</p>\n<p><a href=\"/glossary#number\"><strong>number</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>start_date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#status\"><strong>status</strong></a>:</p>\n<p><a href=\"/glossary#summary\"><strong>summary</strong></a>:</p>\n<p><a href=\"/glossary#to\"><strong>to</strong></a>:</p>\n<p><a href=\"/glossary#transaction_ids\"><strong>transaction_ids</strong></a>:</p>\n<p><a href=\"/glossary#transfer_type\"><strong>transfer_type</strong></a>:</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n<p><a href=\"/glossary#to_counterparty\">to_counterparty</a>:</p>\n<p><a href=\"/glossary#to_sandbox_tan\">to_sandbox_tan</a>:</p>\n<p><a href=\"/glossary#to_sepa\">to_sepa</a>:</p>\n<p><a href=\"/glossary#to_sepa_credit_transfers\">to_sepa_credit_transfers</a>:</p>\n<p><a href=\"/glossary#\">to_simple</a>: to_simple</p>\n<p><a href=\"/glossary#to_transfer_to_account\">to_transfer_to_account</a>:</p>\n<p><a href=\"/glossary#to_transfer_to_atm\">to_transfer_to_atm</a>:</p>\n<p><a href=\"/glossary#to_transfer_to_phone\">to_transfer_to_phone</a>:</p>\n",
      "description_markdown": "In Sandbox mode, any string that can be converted to a positive integer will be accepted as an answer.\n\nThis endpoint totally depends on createTransactionRequest, it need get the following data from createTransactionRequest response body.\n\n1)`TRANSACTION_REQUEST_TYPE` : is the same as createTransactionRequest request URL .\n\n2)`TRANSACTION_REQUEST_ID` : is the `id` field in createTransactionRequest response body.\n\n3) `id` :  is `challenge.id` field in createTransactionRequest response body.\n\n4) `answer` : must be `123` in case that Strong Customer Authentication method for OTP challenge is dummy.\n    For instance: SANDBOX_TAN_OTP_INSTRUCTION_TRANSPORT=dummy\n    Possible values are dummy,email and sms\n    In kafka mode, the answer can be got by phone message or other SCA methods.\n\nNote that each Transaction Request Type can have its own OTP_INSTRUCTION_TRANSPORT method.\nOTP_INSTRUCTION_TRANSPORT methods are set in Props. See sample.props.template for instructions.\n\nSingle or Multiple authorisations\n\nOBP allows single or multi party authorisations.\n\nSingle party authorisation:\n\nIn the case that only one person needs to authorise i.e. answer a security challenge we have the following change of state of a `transaction request`:\n  INITIATED => COMPLETED\n\n\nMultiparty authorisation:\n\nIn the case that multiple parties (n persons) need to authorise a transaction request i.e. answer security challenges, we have the followings state flow for a `transaction request`:\n  INITIATED => NEXT_CHALLENGE_PENDING => ... => NEXT_CHALLENGE_PENDING => COMPLETED\n\nThe security challenge is bound to a user i.e. in the case of a correct answer but the user is different than expected the challenge will fail.\n\nRule for calculating number of security challenges:\nIf Product Account attribute REQUIRED_CHALLENGE_ANSWERS=N then create N challenges\n(one for every user that has a View where permission \"can_add_transaction_request_to_any_account\"=true)\nIn the case REQUIRED_CHALLENGE_ANSWERS is not defined as an account attribute, the default number of security challenges created is one.\n\n      \n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[TRANSACTION_REQUEST_ID](/glossary#): 8138a7e4-6d02-40e3-a129-0b2bf89de9f1\n\n\n\n[TRANSACTION_REQUEST_TYPE](/glossary#): SEPA\n\n\n\n[VIEW_ID](/glossary#this_view_id): owner\n\n\n\n\n\n**JSON request body fields:**\n\n\n\n[**answer**](/glossary#answer): \n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[additional_information](/glossary#): additional_information\n\n\n\n[reason_code](/glossary#): reason_code\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**account**](/glossary#Account): \n\n\n\n[**account_id**](/glossary#): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[**allowed_attempts**](/glossary#allowed_attempts): 5\n\n\n\n[**amount**](/glossary#): 10.12\n\n\n\n[**bank_code**](/glossary#bank_code): CGHZ\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**branch_number**](/glossary#branch_number): \n\n\n\n[**challenge**](/glossary#challenge): \n\n\n\n[**challenge_type**](/glossary#challenge_type): \n\n\n\n[**charge**](/glossary#charge): \n\n\n\n[**counterparty_id**](/glossary#): 9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**creditorAccount**](/glossary#creditoraccount): \n\n\n\n[**creditorName**](/glossary#creditorname): \n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**date_of_birth**](/glossary#): 2018-03-09\n\n\n\n[**debtorAccount**](/glossary#debtoraccount): \n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**details**](/glossary#details): \n\n\n\n[**end_date**](/glossary#end_date): \n\n\n\n[**from**](/glossary#from): \n\n\n\n[**future_date**](/glossary#future_date): 20200127\n\n\n\n[**iban**](/glossary#): DE91 1000 0000 0123 4567 89\n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**instructedAmount**](/glossary#instructedamount): 100\n\n\n\n[**kyc_document**](/glossary#kyc_document): \n\n\n\n[**legal_name**](/glossary#): Eveline Tripman\n\n\n\n[**message**](/glossary#message): 123456\n\n\n\n[**mobile_phone_number**](/glossary#mobile_phone_number): +49 30 901820\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**nickname**](/glossary#nickname): \n\n\n\n[**number**](/glossary#number): \n\n\n\n[**start_date**](/glossary#): 2020-01-27\n\n\n\n[**status**](/glossary#status): \n\n\n\n[**summary**](/glossary#summary): \n\n\n\n[**to**](/glossary#to): \n\n\n\n[**transaction_ids**](/glossary#transaction_ids): \n\n\n\n[**transfer_type**](/glossary#transfer_type): \n\n\n\n[**type**](/glossary#type): \n\n\n\n[**value**](/glossary#): 5987953\n\n\n\n[to_counterparty](/glossary#to_counterparty): \n\n\n\n[to_sandbox_tan](/glossary#to_sandbox_tan): \n\n\n\n[to_sepa](/glossary#to_sepa): \n\n\n\n[to_sepa_credit_transfers](/glossary#to_sepa_credit_transfers): \n\n\n\n[to_simple](/glossary#): to_simple\n\n\n\n[to_transfer_to_account](/glossary#to_transfer_to_account): \n\n\n\n[to_transfer_to_atm](/glossary#to_transfer_to_atm): \n\n\n\n[to_transfer_to_phone](/glossary#to_transfer_to_phone): \n\n\n",
      "example_request_body": {
        "id": "This is challenge.id, you can get it from `Create Transaction Request.` response, only is useful if status ==`INITIATED` there.",
        "answer": "123",
        "reason_code": "[Optional] Reason code for REJECT answer (e.g. 'CUST')",
        "additional_information": "[Optional] Additional description for REJECT answer"
      },
      "success_response_body": {
        "id": "4050046c-63b3-4868-8a22-14b4181d33a6",
        "type": "SANDBOX_TAN",
        "from": {
          "bank_id": "gh.29.uk",
          "account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
        },
        "details": {
          "to_sandbox_tan": {
            "bank_id": "String",
            "account_id": "String"
          },
          "to_sepa": {
            "iban": "String"
          },
          "to_counterparty": {
            "counterparty_id": "9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh"
          },
          "to_transfer_to_phone": {
            "value": {
              "currency": "EUR",
              "amount": "0"
            },
            "description": "String",
            "message": "String",
            "from": {
              "mobile_phone_number": "+44 07972 444 876",
              "nickname": "String"
            },
            "to": {
              "mobile_phone_number": "+44 07972 444 876"
            }
          },
          "to_transfer_to_atm": {
            "value": {
              "currency": "EUR",
              "amount": "0"
            },
            "description": "String",
            "message": "String",
            "from": {
              "mobile_phone_number": "+44 07972 444 876",
              "nickname": "String"
            },
            "to": {
              "legal_name": "Eveline Tripman",
              "date_of_birth": "20181230",
              "mobile_phone_number": "+44 07972 444 876",
              "kyc_document": {
                "type": "String",
                "number": "String"
              }
            }
          },
          "to_transfer_to_account": {
            "value": {
              "currency": "EUR",
              "amount": "0"
            },
            "description": "String",
            "transfer_type": "String",
            "future_date": "20181230",
            "to": {
              "name": "String",
              "bank_code": "String",
              "branch_number": "String",
              "account": {
                "number": "String",
                "iban": "String"
              }
            }
          },
          "to_sepa_credit_transfers": {
            "debtorAccount": {
              "iban": "12345"
            },
            "instructedAmount": {
              "currency": "EUR",
              "amount": "0"
            },
            "creditorAccount": {
              "iban": "54321"
            },
            "creditorName": "John Miles"
          },
          "value": {
            "currency": "EUR",
            "amount": "100"
          },
          "description": "String"
        },
        "transaction_ids": ["902ba3bb-dedd-45e7-9319-2fd3f2cd98a1"],
        "status": "COMPLETED",
        "start_date": "1100-01-01T00:00:00Z",
        "end_date": "1100-01-01T00:00:00Z",
        "challenge": {
          "id": "be1a183d-b301-4b83-b855-5eeffdd3526f",
          "allowed_attempts": 3,
          "challenge_type": "SANDBOX_TAN"
        },
        "charge": {
          "summary": "Rent the flat",
          "value": {
            "currency": "EUR",
            "amount": "0"
          }
        }
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30111: Invalid Bank Id. The BANK_ID should only contain 0-9/a-z/A-Z/'-'/'.'/'_', the length should be smaller than 255.",
        "OBP-30110: Invalid Account Id. The ACCOUNT_ID should only contain 0-9/a-z/A-Z/'-'/'.'/'_', the length should be smaller than 255.",
        "OBP-10001: Incorrect json format.",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-40011: Transaction Request Status is not INITIATED.",
        "OBP-40009: The TRANSACTION_REQUEST_TYPE has changed.",
        "OBP-40014: Sorry, you've used up your allowed attempts. ",
        "OBP-00003: Transaction Requests is disabled in this API instance.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Transaction-Request", "Payment Initiation Service (PIS)", "PSD2", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "additional_information": {
            "type": "string"
          },
          "answer": {
            "type": "string"
          },
          "reason_code": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "challenge": {
            "type": "object",
            "properties": {
              "challenge_type": {
                "type": "string"
              },
              "allowed_attempts": {
                "type": "integer"
              },
              "id": {
                "type": "string"
              }
            }
          },
          "status": {
            "type": "string"
          },
          "end_date": {
            "type": "string",
            "format": "date-time"
          },
          "charge": {
            "type": "object",
            "properties": {
              "summary": {
                "type": "string"
              },
              "value": {
                "type": "object",
                "properties": {
                  "currency": {
                    "type": "string"
                  },
                  "amount": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "transaction_ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "from": {
            "type": "object",
            "properties": {
              "bank_id": {
                "type": "string"
              },
              "account_id": {
                "type": "string"
              }
            }
          },
          "details": {
            "type": "object",
            "properties": {
              "to_sandbox_tan": {
                "type": "object",
                "properties": {
                  "account_id": {
                    "type": "string"
                  },
                  "bank_id": {
                    "type": "string"
                  }
                }
              },
              "value": {
                "type": "object",
                "properties": {
                  "currency": {
                    "type": "string"
                  },
                  "amount": {
                    "type": "string"
                  }
                }
              },
              "to_transfer_to_phone": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  },
                  "from": {
                    "type": "object",
                    "properties": {
                      "nickname": {
                        "type": "string"
                      },
                      "mobile_phone_number": {
                        "type": "string"
                      }
                    }
                  },
                  "to": {
                    "type": "object",
                    "properties": {
                      "mobile_phone_number": {
                        "type": "string"
                      }
                    }
                  },
                  "value": {
                    "type": "object",
                    "properties": {
                      "currency": {
                        "type": "string"
                      },
                      "amount": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "to_sepa": {
                "type": "object",
                "properties": {
                  "iban": {
                    "type": "string"
                  }
                }
              },
              "description": {
                "type": "string"
              },
              "to_counterparty": {
                "type": "object",
                "properties": {
                  "counterparty_id": {
                    "type": "string"
                  }
                }
              },
              "to_transfer_to_account": {
                "type": "object",
                "properties": {
                  "to": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "account": {
                        "type": "object",
                        "properties": {
                          "number": {
                            "type": "string"
                          },
                          "iban": {
                            "type": "string"
                          }
                        }
                      },
                      "bank_code": {
                        "type": "string"
                      },
                      "branch_number": {
                        "type": "string"
                      }
                    }
                  },
                  "transfer_type": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "future_date": {
                    "type": "string"
                  },
                  "value": {
                    "type": "object",
                    "properties": {
                      "currency": {
                        "type": "string"
                      },
                      "amount": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "to_sepa_credit_transfers": {
                "type": "object",
                "properties": {
                  "instructedAmount": {
                    "type": "object",
                    "properties": {
                      "currency": {
                        "type": "string"
                      },
                      "amount": {
                        "type": "string"
                      }
                    }
                  },
                  "debtorAccount": {
                    "type": "object",
                    "properties": {
                      "iban": {
                        "type": "string"
                      }
                    }
                  },
                  "creditorAccount": {
                    "type": "object",
                    "properties": {
                      "iban": {
                        "type": "string"
                      }
                    }
                  },
                  "creditorName": {
                    "type": "string"
                  }
                }
              },
              "to_transfer_to_atm": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  },
                  "from": {
                    "type": "object",
                    "properties": {
                      "nickname": {
                        "type": "string"
                      },
                      "mobile_phone_number": {
                        "type": "string"
                      }
                    }
                  },
                  "value": {
                    "type": "object",
                    "properties": {
                      "currency": {
                        "type": "string"
                      },
                      "amount": {
                        "type": "string"
                      }
                    }
                  },
                  "to": {
                    "type": "object",
                    "properties": {
                      "date_of_birth": {
                        "type": "string"
                      },
                      "kyc_document": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string"
                          },
                          "number": {
                            "type": "string"
                          }
                        }
                      },
                      "legal_name": {
                        "type": "string"
                      },
                      "mobile_phone_number": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "start_date": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transaction-request-types/TRANSACTION_REQUEST_TYPE/transaction-requests/TRANSACTION_REQUEST_ID/challenge",
      "connector_methods": [
        "obp.saveTransactionRequestStatusImpl",
        "obp.notifyTransactionRequest",
        "obp.createOrUpdateTransactionRequestAttribute",
        "obp.createTransactionAfterChallengev300",
        "obp.createTransactionAfterChallengeV210",
        "obp.allChallengesSuccessfullyAnswered",
        "obp.getCounterpartyByIbanAndBankAccountId",
        "obp.validateChallengeAnswer",
        "obp.getChallengesByTransactionRequestId"
      ]
    },
    {
      "operation_id": "OBPv4.0.0-getMyApiCollections",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getMyApiCollections"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/my/api-collections",
      "summary": "Get My Api Collections",
      "description": "<p>Get all the apiCollections for logged in user.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>api_collection_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>api_collection_name</strong></a>: Favourites</p>\n<p><a href=\"/glossary#\"><strong>api_collections</strong></a>: api_collections</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#\"><strong>is_sharable</strong></a>: is_sharable</p>\n<p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p>\n",
      "description_markdown": "Get all the apiCollections for logged in user.\n\nAuthentication is Mandatory\n\n\n**JSON response body fields:**\n\n\n\n[**api_collection_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**api_collection_name**](/glossary#): Favourites\n\n\n\n[**api_collections**](/glossary#): api_collections\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**is_sharable**](/glossary#): is_sharable\n\n\n\n[**user_id**](/glossary#): 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\n\n\n",
      "success_response_body": {
        "api_collections": [
          {
            "api_collection_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
            "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
            "api_collection_name": "Favourites",
            "is_sharable": true,
            "description": "This an optional field. Maximum length is 2000. It can be any characters here."
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Api-Collection", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "api_collections": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "description": {
                  "type": "string"
                },
                "api_collection_id": {
                  "type": "string"
                },
                "api_collection_name": {
                  "type": "string"
                },
                "is_sharable": {
                  "type": "boolean"
                },
                "user_id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/my/api-collections",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv3.0.0-getBranches",
      "implemented_by": {
        "version": "OBPv3.0.0",
        "function": "getBranches"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.0.0/banks/BANK_ID/branches",
      "summary": "Get Branches for a Bank",
      "description": "<p>Returns information about branches for a single bank specified by BANK_ID including:</p>\n<ul>\n<li>Name</li>\n<li>Address</li>\n<li>Geo Location</li>\n<li>License the data under this endpoint is released under</li>\n<li>Structured opening hours</li>\n<li>Accessible flag</li>\n<li>Branch Type</li>\n<li>More Info</li>\n</ul>\n<p>Pagination:</p>\n<p>By default, 50 records are returned.</p>\n<p>You can use the url query parameters <em>limit</em> and <em>offset</em> for pagination<br />\nYou can also use the follow url query parameters:</p>\n<ul>\n<li>\n<p>city - string, find Branches those in this city, optional</p>\n</li>\n<li>\n<p>withinMetersOf - number, find Branches within given meters distance, optional</p>\n</li>\n<li>nearLatitude - number, a position of latitude value, cooperate with withMetersOf do query filter, optional</li>\n<li>nearLongitude - number, a position of longitude value, cooperate with withMetersOf do query filter, optional</li>\n</ul>\n<p>note: withinMetersOf, nearLatitude and nearLongitude either all empty or all have value.</p>\n<p>Authentication is Optional</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#accessiblefeatures\"><strong>accessibleFeatures</strong></a>:</p>\n<p><a href=\"/glossary#address\"><strong>address</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#branch_routing\"><strong>branch_routing</strong></a>:</p>\n<p><a href=\"/glossary#branch_type\"><strong>branch_type</strong></a>:</p>\n<p><a href=\"/glossary#branches\"><strong>branches</strong></a>:</p>\n<p><a href=\"/glossary#city\"><strong>city</strong></a>:</p>\n<p><a href=\"/glossary#closing_time\"><strong>closing_time</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#country_code\"><strong>country_code</strong></a>: 1254</p>\n<p><a href=\"/glossary#county\"><strong>county</strong></a>:</p>\n<p><a href=\"/glossary#drive_up\"><strong>drive_up</strong></a>:</p>\n<p><a href=\"/glossary#friday\"><strong>friday</strong></a>:</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#\"><strong>is_accessible</strong></a>: true</p>\n<p><a href=\"/glossary#latitude\"><strong>latitude</strong></a>: 38.8951</p>\n<p><a href=\"/glossary#license\"><strong>license</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>line_1</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>line_2</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>line_3</strong></a>:</p>\n<p><a href=\"/glossary#lobby\"><strong>lobby</strong></a>:</p>\n<p><a href=\"/glossary#location\"><strong>location</strong></a>:</p>\n<p><a href=\"/glossary#longitude\"><strong>longitude</strong></a>: -77.0364</p>\n<p><a href=\"/glossary#meta\"><strong>meta</strong></a>:</p>\n<p><a href=\"/glossary#monday\"><strong>monday</strong></a>:</p>\n<p><a href=\"/glossary#more_info\"><strong>more_info</strong></a>: More information about this fee</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#opening_time\"><strong>opening_time</strong></a>:</p>\n<p><a href=\"/glossary#phone_number\"><strong>phone_number</strong></a>:</p>\n<p><a href=\"/glossary#postcode\"><strong>postcode</strong></a>:</p>\n<p><a href=\"/glossary#saturday\"><strong>saturday</strong></a>:</p>\n<p><a href=\"/glossary#scheme\"><strong>scheme</strong></a>: scheme value</p>\n<p><a href=\"/glossary#state\"><strong>state</strong></a>:</p>\n<p><a href=\"/glossary#sunday\"><strong>sunday</strong></a>:</p>\n<p><a href=\"/glossary#thursday\"><strong>thursday</strong></a>:</p>\n<p><a href=\"/glossary#tuesday\"><strong>tuesday</strong></a>:</p>\n<p><a href=\"/glossary#wednesday\"><strong>wednesday</strong></a>:</p>\n",
      "description_markdown": "Returns information about branches for a single bank specified by BANK_ID including:\n\n* Name\n* Address\n* Geo Location\n* License the data under this endpoint is released under\n* Structured opening hours\n* Accessible flag\n* Branch Type\n* More Info\n\nPagination:\n\nBy default, 50 records are returned.\n\nYou can use the url query parameters *limit* and *offset* for pagination\nYou can also use the follow url query parameters:\n\n  - city - string, find Branches those in this city, optional\n\n\n  - withinMetersOf - number, find Branches within given meters distance, optional\n  - nearLatitude - number, a position of latitude value, cooperate with withMetersOf do query filter, optional\n  - nearLongitude - number, a position of longitude value, cooperate with withMetersOf do query filter, optional\n\nnote: withinMetersOf, nearLatitude and nearLongitude either all empty or all have value.\n\nAuthentication is Optional\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**accessibleFeatures**](/glossary#accessiblefeatures): \n\n\n\n[**address**](/glossary#address): \n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**branch_routing**](/glossary#branch_routing): \n\n\n\n[**branch_type**](/glossary#branch_type): \n\n\n\n[**branches**](/glossary#branches): \n\n\n\n[**city**](/glossary#city): \n\n\n\n[**closing_time**](/glossary#closing_time): 2020-01-27\n\n\n\n[**country_code**](/glossary#country_code): 1254\n\n\n\n[**county**](/glossary#county): \n\n\n\n[**drive_up**](/glossary#drive_up): \n\n\n\n[**friday**](/glossary#friday): \n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**is_accessible**](/glossary#): true\n\n\n\n[**latitude**](/glossary#latitude): 38.8951\n\n\n\n[**license**](/glossary#license): \n\n\n\n[**line_1**](/glossary#): \n\n\n\n[**line_2**](/glossary#): \n\n\n\n[**line_3**](/glossary#): \n\n\n\n[**lobby**](/glossary#lobby): \n\n\n\n[**location**](/glossary#location): \n\n\n\n[**longitude**](/glossary#longitude): -77.0364\n\n\n\n[**meta**](/glossary#meta): \n\n\n\n[**monday**](/glossary#monday): \n\n\n\n[**more_info**](/glossary#more_info): More information about this fee\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**opening_time**](/glossary#opening_time): \n\n\n\n[**phone_number**](/glossary#phone_number): \n\n\n\n[**postcode**](/glossary#postcode): \n\n\n\n[**saturday**](/glossary#saturday): \n\n\n\n[**scheme**](/glossary#scheme): scheme value\n\n\n\n[**state**](/glossary#state): \n\n\n\n[**sunday**](/glossary#sunday): \n\n\n\n[**thursday**](/glossary#thursday): \n\n\n\n[**tuesday**](/glossary#tuesday): \n\n\n\n[**wednesday**](/glossary#wednesday): \n\n\n",
      "success_response_body": {
        "branches": [
          {
            "id": "branch-id-123",
            "bank_id": "bank-id-123",
            "name": "Branch by the Lake",
            "address": {
              "line_1": "No 1 the Road",
              "line_2": "The Place",
              "line_3": "The Hill",
              "city": "Berlin",
              "county": "String",
              "state": "Brandenburg",
              "postcode": "13359",
              "country_code": "DE"
            },
            "location": {
              "latitude": 10.0,
              "longitude": 10.0
            },
            "meta": {
              "license": {
                "id": "ODbL-1.0",
                "name": "Open Database License"
              }
            },
            "lobby": {
              "monday": [
                {
                  "opening_time": "10:00",
                  "closing_time": "18:00"
                }
              ],
              "tuesday": [
                {
                  "opening_time": "10:00",
                  "closing_time": "18:00"
                }
              ],
              "wednesday": [
                {
                  "opening_time": "10:00",
                  "closing_time": "18:00"
                }
              ],
              "thursday": [
                {
                  "opening_time": "10:00",
                  "closing_time": "18:00"
                }
              ],
              "friday": [
                {
                  "opening_time": "10:00",
                  "closing_time": "18:00"
                }
              ],
              "saturday": [
                {
                  "opening_time": "10:00",
                  "closing_time": "18:00"
                }
              ],
              "sunday": [
                {
                  "opening_time": "10:00",
                  "closing_time": "18:00"
                }
              ]
            },
            "drive_up": {
              "monday": {
                "opening_time": "10:00",
                "closing_time": "18:00"
              },
              "tuesday": {
                "opening_time": "10:00",
                "closing_time": "18:00"
              },
              "wednesday": {
                "opening_time": "10:00",
                "closing_time": "18:00"
              },
              "thursday": {
                "opening_time": "10:00",
                "closing_time": "18:00"
              },
              "friday": {
                "opening_time": "10:00",
                "closing_time": "18:00"
              },
              "saturday": {
                "opening_time": "10:00",
                "closing_time": "18:00"
              },
              "sunday": {
                "opening_time": "10:00",
                "closing_time": "18:00"
              }
            },
            "branch_routing": {
              "scheme": "OBP",
              "address": "123abc"
            },
            "is_accessible": "true",
            "accessibleFeatures": "wheelchair, atm usuable by the visually impaired",
            "branch_type": "Full service store",
            "more_info": "short walk to the lake from here",
            "phone_number": "+381631954907"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-32001: No branches available. License may not be set.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Branch", "Bank", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "branches": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "accessibleFeatures": {
                  "type": "string"
                },
                "more_info": {
                  "type": "string"
                },
                "branch_type": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "bank_id": {
                  "type": "string"
                },
                "location": {
                  "type": "object",
                  "properties": {
                    "latitude": {
                      "type": "number"
                    },
                    "longitude": {
                      "type": "number"
                    }
                  }
                },
                "id": {
                  "type": "string"
                },
                "is_accessible": {
                  "type": "string"
                },
                "address": {
                  "type": "object",
                  "properties": {
                    "city": {
                      "type": "string"
                    },
                    "county": {
                      "type": "string"
                    },
                    "postcode": {
                      "type": "string"
                    },
                    "line_1": {
                      "type": "string"
                    },
                    "line_2": {
                      "type": "string"
                    },
                    "line_3": {
                      "type": "string"
                    },
                    "state": {
                      "type": "string"
                    },
                    "country_code": {
                      "type": "string"
                    }
                  }
                },
                "drive_up": {
                  "type": "object",
                  "properties": {
                    "friday": {
                      "type": "object",
                      "properties": {
                        "closing_time": {
                          "type": "string"
                        },
                        "opening_time": {
                          "type": "string"
                        }
                      }
                    },
                    "monday": {
                      "type": "object",
                      "properties": {
                        "closing_time": {
                          "type": "string"
                        },
                        "opening_time": {
                          "type": "string"
                        }
                      }
                    },
                    "saturday": {
                      "type": "object",
                      "properties": {
                        "closing_time": {
                          "type": "string"
                        },
                        "opening_time": {
                          "type": "string"
                        }
                      }
                    },
                    "thursday": {
                      "type": "object",
                      "properties": {
                        "closing_time": {
                          "type": "string"
                        },
                        "opening_time": {
                          "type": "string"
                        }
                      }
                    },
                    "tuesday": {
                      "type": "object",
                      "properties": {
                        "closing_time": {
                          "type": "string"
                        },
                        "opening_time": {
                          "type": "string"
                        }
                      }
                    },
                    "wednesday": {
                      "type": "object",
                      "properties": {
                        "closing_time": {
                          "type": "string"
                        },
                        "opening_time": {
                          "type": "string"
                        }
                      }
                    },
                    "sunday": {
                      "type": "object",
                      "properties": {
                        "closing_time": {
                          "type": "string"
                        },
                        "opening_time": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "branch_routing": {
                  "type": "object",
                  "properties": {
                    "address": {
                      "type": "string"
                    },
                    "scheme": {
                      "type": "string"
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "properties": {
                    "license": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "phone_number": {
                  "type": "string"
                },
                "lobby": {
                  "type": "object",
                  "properties": {
                    "saturday": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "closing_time": {
                            "type": "string"
                          },
                          "opening_time": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "tuesday": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "closing_time": {
                            "type": "string"
                          },
                          "opening_time": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "monday": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "closing_time": {
                            "type": "string"
                          },
                          "opening_time": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "friday": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "closing_time": {
                            "type": "string"
                          },
                          "opening_time": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "sunday": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "closing_time": {
                            "type": "string"
                          },
                          "opening_time": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "wednesday": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "closing_time": {
                            "type": "string"
                          },
                          "opening_time": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "thursday": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "closing_time": {
                            "type": "string"
                          },
                          "opening_time": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/branches",
      "connector_methods": ["obp.getBranches", "obp.getBank", "obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv4.0.0-getProductAttributeDefinition",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getProductAttributeDefinition"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/attribute-definitions/product",
      "summary": "Get Product Attribute Definition",
      "description": "<p>Get Product Attribute Definition</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#alias\"><strong>alias</strong></a>:</p>\n<p><a href=\"/glossary#attribute_definition_id\"><strong>attribute_definition_id</strong></a>:</p>\n<p><a href=\"/glossary#attributes\"><strong>attributes</strong></a>: attribute value in form of (name, value)</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#can_be_seen_on_views\"><strong>can_be_seen_on_views</strong></a>: true</p>\n<p><a href=\"/glossary#category\"><strong>category</strong></a>:</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#is_active\"><strong>is_active</strong></a>: true</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n",
      "description_markdown": "Get Product Attribute Definition\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**alias**](/glossary#alias): \n\n\n\n[**attribute_definition_id**](/glossary#attribute_definition_id): \n\n\n\n[**attributes**](/glossary#attributes): attribute value in form of (name, value)\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**can_be_seen_on_views**](/glossary#can_be_seen_on_views): true\n\n\n\n[**category**](/glossary#category): \n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**is_active**](/glossary#is_active): true\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**type**](/glossary#type): \n\n\n",
      "success_response_body": {
        "attributes": [
          {
            "attribute_definition_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
            "bank_id": "gh.29.uk",
            "name": "SPECIAL_TAX_NUMBER",
            "category": "Product",
            "type": "STRING",
            "description": "description",
            "alias": "STRING",
            "can_be_seen_on_views": ["bank"],
            "is_active": true
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["Product", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "attributes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "can_be_seen_on_views": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "attribute_definition_id": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "is_active": {
                  "type": "boolean"
                },
                "bank_id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "category": {
                  "type": "string"
                },
                "alias": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetProductAttributeDefinitionAtOneBank",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/attribute-definitions/product",
      "connector_methods": ["obp.getAttributeDefinition"]
    },
    {
      "operation_id": "OBPv3.1.0-updateCustomerIdentity",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "updateCustomerIdentity"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/customers/CUSTOMER_ID/identity",
      "summary": "Update the identity data of a Customer",
      "description": "<p>Update the identity data of the Customer specified by CUSTOMER_ID.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#Customer.customer_id\">CUSTOMER_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#\"><strong>branch_id</strong></a>: DERBY6</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>customer_number</strong></a>: 5987953</p>\n<p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#\"><strong>date_of_birth</strong></a>: 2018-03-09</p>\n<p><a href=\"/glossary#\"><strong>dependants</strong></a>: 1</p>\n<p><a href=\"/glossary#dob_of_dependants\"><strong>dob_of_dependants</strong></a>: [2019-09-08, 2017-07-12]</p>\n<p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"&#x6d;&#97;&#x69;l&#x74;&#111;&#x3a;&#102;e&#x6c;i&#x78;&#x73;&#109;&#105;&#116;&#104;&#64;&#x65;xa&#x6d;&#x70;&#108;&#x65;.&#x63;o&#109;\">&#102;&#101;&#108;&#x69;&#120;&#115;&#x6d;&#x69;&#x74;&#x68;&#64;e&#120;&#97;&#109;&#x70;&#108;&#101;&#x2e;&#x63;&#111;&#109;</a></p>\n<p><a href=\"/glossary#\"><strong>employment_status</strong></a>: worker</p>\n<p><a href=\"/glossary#face_image\"><strong>face_image</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>highest_education_attained</strong></a>: Master</p>\n<p><a href=\"/glossary#\"><strong>kyc_status</strong></a>: true</p>\n<p><a href=\"/glossary#last_ok_date\"><strong>last_ok_date</strong></a>: 2022-04-13T04:30:07.985Z</p>\n<p><a href=\"/glossary#\"><strong>legal_name</strong></a>: Eveline Tripman</p>\n<p><a href=\"/glossary#mobile_phone_number\"><strong>mobile_phone_number</strong></a>: +49 30 901820</p>\n<p><a href=\"/glossary#\"><strong>name_suffix</strong></a>: Sr</p>\n<p><a href=\"/glossary#\"><strong>rating</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>relationship_status</strong></a>: single</p>\n<p><a href=\"/glossary#\"><strong>source</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>title</strong></a>: Dr.</p>\n<p><a href=\"/glossary#\"><strong>url</strong></a>: <a href=\"http://www.example.com/id-docs/123/image.png\">http://www.example.com/id-docs/123/image.png</a></p>\n<p><a href=\"/glossary#credit_limit\">credit_limit</a>:</p>\n<p><a href=\"/glossary#credit_rating\">credit_rating</a>:</p>\n",
      "description_markdown": "Update the identity data of the Customer specified by CUSTOMER_ID.\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[CUSTOMER_ID](/glossary#Customer.customer_id): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**amount**](/glossary#): 10.12\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**branch_id**](/glossary#): DERBY6\n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**customer_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**customer_number**](/glossary#): 5987953\n\n\n\n[**date**](/glossary#): 2020-01-27\n\n\n\n[**date_of_birth**](/glossary#): 2018-03-09\n\n\n\n[**dependants**](/glossary#): 1\n\n\n\n[**dob_of_dependants**](/glossary#dob_of_dependants): [2019-09-08, 2017-07-12]\n\n\n\n[**email**](/glossary#): felixsmith@example.com\n\n\n\n[**employment_status**](/glossary#): worker\n\n\n\n[**face_image**](/glossary#face_image): \n\n\n\n[**highest_education_attained**](/glossary#): Master\n\n\n\n[**kyc_status**](/glossary#): true\n\n\n\n[**last_ok_date**](/glossary#last_ok_date): 2022-04-13T04:30:07.985Z\n\n\n\n[**legal_name**](/glossary#): Eveline Tripman\n\n\n\n[**mobile_phone_number**](/glossary#mobile_phone_number): +49 30 901820\n\n\n\n[**name_suffix**](/glossary#): Sr\n\n\n\n[**rating**](/glossary#): \n\n\n\n[**relationship_status**](/glossary#): single\n\n\n\n[**source**](/glossary#): \n\n\n\n[**title**](/glossary#): Dr.\n\n\n\n[**url**](/glossary#): http://www.example.com/id-docs/123/image.png\n\n\n\n[credit_limit](/glossary#credit_limit): \n\n\n\n[credit_rating](/glossary#credit_rating): \n\n\n",
      "example_request_body": {
        "legal_name": "Eveline Tripman",
        "date_of_birth": "1100-01-01T00:00:00Z",
        "title": "Dr.",
        "name_suffix": "Sr"
      },
      "success_response_body": {
        "bank_id": "gh.29.uk",
        "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "customer_number": "5987953",
        "legal_name": "Eveline Tripman",
        "mobile_phone_number": "+44 07972 444 876",
        "email": "felixsmith@example.com",
        "face_image": {
          "url": "www.openbankproject",
          "date": "1100-01-01T00:00:00Z"
        },
        "date_of_birth": "1100-01-01T00:00:00Z",
        "relationship_status": "single",
        "dependants": 1,
        "dob_of_dependants": ["1100-01-01T00:00:00Z"],
        "credit_rating": {
          "rating": "OBP",
          "source": "OBP"
        },
        "credit_limit": {
          "currency": "EUR",
          "amount": "0"
        },
        "highest_education_attained": "Master",
        "employment_status": "worker",
        "kyc_status": true,
        "last_ok_date": "2022-04-13T04:30:08Z",
        "title": "Dr.",
        "branch_id": "DERBY6",
        "name_suffix": "Sr"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Customer", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "name_suffix": {
            "type": "string"
          },
          "legal_name": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "date_of_birth": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "dependants": {
            "type": "integer"
          },
          "dob_of_dependants": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            }
          },
          "face_image": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string"
              },
              "date": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          "credit_limit": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string"
              },
              "amount": {
                "type": "string"
              }
            }
          },
          "employment_status": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "customer_id": {
            "type": "string"
          },
          "relationship_status": {
            "type": "string"
          },
          "bank_id": {
            "type": "string"
          },
          "highest_education_attained": {
            "type": "string"
          },
          "customer_number": {
            "type": "string"
          },
          "credit_rating": {
            "type": "object",
            "properties": {
              "rating": {
                "type": "string"
              },
              "source": {
                "type": "string"
              }
            }
          },
          "name_suffix": {
            "type": "string"
          },
          "last_ok_date": {
            "type": "string",
            "format": "date-time"
          },
          "legal_name": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "branch_id": {
            "type": "string"
          },
          "date_of_birth": {
            "type": "string",
            "format": "date-time"
          },
          "mobile_phone_number": {
            "type": "string"
          },
          "kyc_status": {
            "type": "boolean"
          }
        }
      },
      "roles": [
        {
          "role": "CanUpdateCustomerIdentity",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/customers/CUSTOMER_ID/identity",
      "connector_methods": [
        "obp.updateCustomerGeneralData",
        "obp.getCustomerByCustomerId",
        "obp.getBank",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv3.1.0-updateCustomerAddress",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "updateCustomerAddress"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/customers/CUSTOMER_ID/addresses/CUSTOMER_ADDRESS_ID",
      "summary": "Update the Address of a Customer",
      "description": "<p>Update an Address of the Customer specified by CUSTOMER_ADDRESS_ID.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#customer_address_id\">CUSTOMER_ADDRESS_ID</a>:</p>\n<p><a href=\"/glossary#Customer.customer_id\">CUSTOMER_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#city\"><strong>city</strong></a>:</p>\n<p><a href=\"/glossary#country_code\"><strong>country_code</strong></a>: 1254</p>\n<p><a href=\"/glossary#county\"><strong>county</strong></a>:</p>\n<p><a href=\"/glossary#customer_address_id\"><strong>customer_address_id</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>insert_date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#\"><strong>line_1</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>line_2</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>line_3</strong></a>:</p>\n<p><a href=\"/glossary#postcode\"><strong>postcode</strong></a>:</p>\n<p><a href=\"/glossary#state\"><strong>state</strong></a>:</p>\n<p><a href=\"/glossary#status\"><strong>status</strong></a>:</p>\n<p><a href=\"/glossary#tags\"><strong>tags</strong></a>: Create-My-User</p>\n",
      "description_markdown": "Update an Address of the Customer specified by CUSTOMER_ADDRESS_ID.\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[CUSTOMER_ADDRESS_ID](/glossary#customer_address_id): \n\n\n\n[CUSTOMER_ID](/glossary#Customer.customer_id): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**city**](/glossary#city): \n\n\n\n[**country_code**](/glossary#country_code): 1254\n\n\n\n[**county**](/glossary#county): \n\n\n\n[**customer_address_id**](/glossary#customer_address_id): \n\n\n\n[**customer_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**insert_date**](/glossary#): 2020-01-27\n\n\n\n[**line_1**](/glossary#): \n\n\n\n[**line_2**](/glossary#): \n\n\n\n[**line_3**](/glossary#): \n\n\n\n[**postcode**](/glossary#postcode): \n\n\n\n[**state**](/glossary#state): \n\n\n\n[**status**](/glossary#status): \n\n\n\n[**tags**](/glossary#tags): Create-My-User\n\n\n",
      "example_request_body": {
        "line_1": "No 1 the Road",
        "line_2": "The Place",
        "line_3": "The Hill",
        "city": "Berlin",
        "county": "",
        "state": "Brandenburg",
        "postcode": "13359",
        "country_code": "DE",
        "tags": ["mailing", "home"],
        "status": "OK"
      },
      "success_response_body": {
        "customer_address_id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
        "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "line_1": "No 1 the Road",
        "line_2": "The Place",
        "line_3": "The Hill",
        "city": "Berlin",
        "county": "",
        "state": "Brandenburg",
        "postcode": "13359",
        "country_code": "DE",
        "tags": ["mailing", "home"],
        "status": "OK",
        "insert_date": "1100-01-01T00:00:00Z"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Customer", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "city": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "postcode": {
            "type": "string"
          },
          "line_1": {
            "type": "string"
          },
          "line_2": {
            "type": "string"
          },
          "line_3": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "country_code": {
            "type": "string"
          },
          "county": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "city": {
            "type": "string"
          },
          "customer_id": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "postcode": {
            "type": "string"
          },
          "line_1": {
            "type": "string"
          },
          "line_2": {
            "type": "string"
          },
          "line_3": {
            "type": "string"
          },
          "customer_address_id": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "insert_date": {
            "type": "string",
            "format": "date-time"
          },
          "country_code": {
            "type": "string"
          },
          "county": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/customers/CUSTOMER_ID/addresses/CUSTOMER_ADDRESS_ID",
      "connector_methods": [
        "obp.updateCustomerAddress",
        "obp.getCustomerByCustomerId",
        "obp.getBank",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv2.0.0-addKycStatus",
      "implemented_by": {
        "version": "OBPv2.0.0",
        "function": "addKycStatus"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v2.0.0/banks/BANK_ID/customers/CUSTOMER_ID/kyc_statuses",
      "summary": "Add KYC Status",
      "description": "<p>Add a kyc_status for the customer specified by CUSTOMER_ID. KYC Status is a timeline of the KYC status of the customer</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#Customer.customer_id\">CUSTOMER_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>customer_number</strong></a>: 5987953</p>\n<p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#ok\"><strong>ok</strong></a>: true</p>\n",
      "description_markdown": "Add a kyc_status for the customer specified by CUSTOMER_ID. KYC Status is a timeline of the KYC status of the customer\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[CUSTOMER_ID](/glossary#Customer.customer_id): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**customer_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**customer_number**](/glossary#): 5987953\n\n\n\n[**date**](/glossary#): 2020-01-27\n\n\n\n[**ok**](/glossary#ok): true\n\n\n",
      "example_request_body": {
        "customer_number": "5987953",
        "ok": true,
        "date": "1100-01-01T00:00:00Z"
      },
      "success_response_body": {
        "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "customer_number": "5987953",
        "ok": true,
        "date": "1100-01-01T00:00:00Z"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-10001: Incorrect json format.",
        "OBP-30111: Invalid Bank Id. The BANK_ID should only contain 0-9/a-z/A-Z/'-'/'.'/'_', the length should be smaller than 255.",
        "OBP-50000: Unknown Error.",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-00004: Server error: could not add message",
        "OBP-30046: Customer not found. Please specify a valid value for CUSTOMER_ID.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["KYC", "Customer", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "customer_number": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "ok": {
            "type": "boolean"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "customer_id": {
            "type": "string"
          },
          "customer_number": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "ok": {
            "type": "boolean"
          }
        }
      },
      "roles": [
        {
          "role": "CanAddKycStatus",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/customers/CUSTOMER_ID/kyc_statuses",
      "connector_methods": [
        "obp.createOrUpdateKycStatus",
        "obp.getCustomerByCustomerId",
        "obp.getBank",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv4.0.0-getBankAttributes",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getBankAttributes"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/attributes",
      "summary": "Get Bank Attributes",
      "description": "<p>Get Bank Attributes</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#\"><strong>transaction_attribute_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#transaction_attributes\"><strong>transaction_attributes</strong></a>:</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n",
      "description_markdown": "Get Bank Attributes\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**transaction_attribute_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**transaction_attributes**](/glossary#transaction_attributes): \n\n\n\n[**type**](/glossary#type): \n\n\n\n[**value**](/glossary#): 5987953\n\n\n",
      "success_response_body": {
        "transaction_attributes": [
          {
            "transaction_attribute_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
            "name": "HOUSE_RENT",
            "type": "DATE_WITH_DAY",
            "value": "123456789"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["Bank", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "transaction_attributes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "transaction_attribute_id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetBankAttribute",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/attributes",
      "connector_methods": ["obp.getBankAttributesByBank"]
    },
    {
      "operation_id": "OBPv3.1.0-getObpConnectorLoopback",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "getObpConnectorLoopback"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.1.0/connector/loopback",
      "summary": "Get Connector Status (Loopback)",
      "description": "<p>This endpoint makes a call to the Connector to check the backend transport (e.g. Kafka) is reachable.</p>\n<p>Currently this is only implemented for Kafka based connectors.</p>\n<p>For Kafka based connectors, this endpoint writes a message to Kafka and reads it again.</p>\n<p>In the future, this endpoint may also return information about database connections etc.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#connector_version\"><strong>connector_version</strong></a>:</p>\n<p><a href=\"/glossary#duration_time\"><strong>duration_time</strong></a>: 60</p>\n<p><a href=\"/glossary#\"><strong>git_commit</strong></a>: 59623811dd8a41f6ffe67be46954eee11913dc28</p>\n",
      "description_markdown": "This endpoint makes a call to the Connector to check the backend transport (e.g. Kafka) is reachable.\n\nCurrently this is only implemented for Kafka based connectors.\n\nFor Kafka based connectors, this endpoint writes a message to Kafka and reads it again.\n\nIn the future, this endpoint may also return information about database connections etc.\n\n\nAuthentication is Mandatory\n\n\n**JSON response body fields:**\n\n\n\n[**connector_version**](/glossary#connector_version): \n\n\n\n[**duration_time**](/glossary#duration_time): 60\n\n\n\n[**git_commit**](/glossary#): 59623811dd8a41f6ffe67be46954eee11913dc28\n\n\n",
      "success_response_body": {
        "connector_version": "kafka_vSept2018",
        "git_commit": "f0acd4be14cdcb94be3433ec95c1ad65228812a0",
        "duration_time": "10 ms"
      },
      "error_response_bodies": [
        "OBP-50000: Unknown Error.",
        "OBP-20001: User not logged in. Authentication is required!"
      ],
      "tags": ["API", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "connector_version": {
            "type": "string"
          },
          "git_commit": {
            "type": "string"
          },
          "duration_time": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/connector/loopback",
      "connector_methods": ["obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv4.0.0-getUsersByEmail",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getUsersByEmail"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/users/email/EMAIL/terminator",
      "summary": "Get Users by Email Address",
      "description": "<p>Get users by email address</p>\n<p>Authentication is Mandatory<br />\nCanGetAnyUser entitlement is required,</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#\">EMAIL</a>: <a href=\"&#109;&#x61;&#x69;&#x6c;t&#x6f;:&#x66;&#101;&#x6c;&#x69;&#x78;&#115;mit&#x68;&#64;&#101;&#x78;&#97;m&#x70;&#x6c;&#x65;&#46;&#x63;o&#109;\">&#102;&#x65;l&#105;&#120;&#x73;&#109;&#105;&#x74;&#104;&#64;&#x65;&#120;&#x61;&#x6d;&#112;&#108;e&#46;&#99;&#111;&#x6d;</a></p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"m&#97;il&#116;&#x6f;:&#102;e&#x6c;i&#120;&#115;&#109;it&#104;&#x40;&#101;&#x78;&#x61;&#109;&#x70;&#108;&#101;&#x2e;c&#111;&#x6d;\">&#102;&#101;&#108;i&#x78;&#x73;m&#x69;&#x74;&#104;@&#101;&#x78;&#97;&#x6d;&#x70;&#108;&#x65;&#46;&#x63;&#x6f;&#109;</a></p>\n<p><a href=\"/glossary#entitlement_id\"><strong>entitlement_id</strong></a>:</p>\n<p><a href=\"/glossary#entitlements\"><strong>entitlements</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>is_deleted</strong></a>: is_deleted</p>\n<p><a href=\"/glossary#\"><strong>is_locked</strong></a>: is_locked</p>\n<p><a href=\"/glossary#list\"><strong>list</strong></a>:</p>\n<p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p>\n<p><a href=\"/glossary#provider_id\"><strong>provider_id</strong></a>:</p>\n<p><a href=\"/glossary#role_name\"><strong>role_name</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p>\n<p><a href=\"/glossary#\"><strong>username</strong></a>: felixsmith</p>\n<p><a href=\"/glossary#users\"><strong>users</strong></a>: user list</p>\n<p><a href=\"/glossary#\">agreements</a>: agreements</p>\n<p><a href=\"/glossary#\">last_marketing_agreement_signed_date</a>: last_marketing_agreement_signed_date</p>\n<p><a href=\"/glossary#views\">views</a>:</p>\n",
      "description_markdown": "Get users by email address\n\nAuthentication is Mandatory\nCanGetAnyUser entitlement is required,\n\n\n**URL Parameters:**\n\n[EMAIL](/glossary#): felixsmith@example.com\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**email**](/glossary#): felixsmith@example.com\n\n\n\n[**entitlement_id**](/glossary#entitlement_id): \n\n\n\n[**entitlements**](/glossary#entitlements): \n\n\n\n[**is_deleted**](/glossary#): is_deleted\n\n\n\n[**is_locked**](/glossary#): is_locked\n\n\n\n[**list**](/glossary#list): \n\n\n\n[**provider**](/glossary#provider): ETHEREUM\n\n\n\n[**provider_id**](/glossary#provider_id): \n\n\n\n[**role_name**](/glossary#role_name): \n\n\n\n[**user_id**](/glossary#): 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\n\n\n\n[**username**](/glossary#): felixsmith\n\n\n\n[**users**](/glossary#users): user list\n\n\n\n[agreements](/glossary#): agreements\n\n\n\n[last_marketing_agreement_signed_date](/glossary#): last_marketing_agreement_signed_date\n\n\n\n[views](/glossary#views): \n\n\n",
      "success_response_body": {
        "users": [
          {
            "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
            "email": "felixsmith@example.com",
            "provider_id": "Chris",
            "provider": "http://127.0.0.1:8080",
            "username": "felixsmith",
            "entitlements": {
              "list": [
                {
                  "entitlement_id": "6fb17583-1e49-4435-bb74-a14fe0996723",
                  "role_name": "CanQueryOtherUser",
                  "bank_id": "gh.29.uk"
                }
              ]
            },
            "is_deleted": false,
            "last_marketing_agreement_signed_date": "1100-01-01T00:00:00Z",
            "is_locked": false
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-20007: User not found by email.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["User", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "users": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "provider": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "last_marketing_agreement_signed_date": {
                  "type": "string",
                  "format": "date-time"
                },
                "provider_id": {
                  "type": "string"
                },
                "entitlements": {
                  "type": "object",
                  "properties": {
                    "list": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "role_name": {
                            "type": "string"
                          },
                          "bank_id": {
                            "type": "string"
                          },
                          "entitlement_id": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "is_deleted": {
                  "type": "boolean"
                },
                "is_locked": {
                  "type": "boolean"
                },
                "username": {
                  "type": "string"
                },
                "user_id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetAnyUser",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/users/email/EMAIL/terminator",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv3.1.0-saveHistoricalTransaction",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "saveHistoricalTransaction"
      },
      "request_verb": "POST",
      "request_url": "/obp/v3.1.0/management/historical/transactions ",
      "summary": "Save Historical Transactions ",
      "description": "<p>Import the historical transactions.</p>\n<p>The fields bank_id, account_id, counterparty_id in the json body are all optional ones.<br />\nIt support transfer money from account to account, account to counterparty and counterparty to counterparty<br />\nBoth bank_id + account_id and counterparty_id can identify the account, so OBP only need one of them to make the payment.<br />\nSo:<br />\nWhen you need the account to account, just omit counterparty_id field.eg:<br />\n{<br />\n&quot;from&quot;: {<br />\n&quot;bank_id&quot;: &quot;gh.29.uk&quot;,<br />\n&quot;account_id&quot;: &quot;1ca8a7e4-6d02-48e3-a029-0b2bf89de9f0&quot;,<br />\n},<br />\n&quot;to&quot;: {<br />\n&quot;bank_id&quot;: &quot;gh.29.uk&quot;,<br />\n&quot;account_id&quot;: &quot;2ca8a7e4-6d02-48e3-a029-0b2bf89de9f0&quot;,<br />\n},<br />\n&quot;value&quot;: {<br />\n&quot;currency&quot;: &quot;GBP&quot;,<br />\n&quot;amount&quot;: &quot;10&quot;<br />\n},<br />\n&quot;description&quot;: &quot;this is for work&quot;,<br />\n&quot;posted&quot;: &quot;2017-09-19T02:31:05Z&quot;,<br />\n&quot;completed&quot;: &quot;2017-09-19T02:31:05Z&quot;,<br />\n&quot;type&quot;: &quot;SANDBOX_TAN&quot;,<br />\n&quot;charge_policy&quot;: &quot;SHARED&quot;<br />\n}</p>\n<p>When you need the counterparty to counterparty, need to omit bank_id and account_id field.eg:<br />\n{<br />\n&quot;from&quot;: {<br />\n&quot;counterparty_id&quot;: &quot;f6392b7d-4218-45ea-b9a7-eaa71c0202f9&quot;<br />\n},<br />\n&quot;to&quot;: {<br />\n&quot;counterparty_id&quot;: &quot;26392b7d-4218-45ea-b9a7-eaa71c0202f9&quot;<br />\n},<br />\n&quot;value&quot;: {<br />\n&quot;currency&quot;: &quot;GBP&quot;,<br />\n&quot;amount&quot;: &quot;10&quot;<br />\n},<br />\n&quot;description&quot;: &quot;this is for work&quot;,<br />\n&quot;posted&quot;: &quot;2017-09-19T02:31:05Z&quot;,<br />\n&quot;completed&quot;: &quot;2017-09-19T02:31:05Z&quot;,<br />\n&quot;type&quot;: &quot;SANDBOX_TAN&quot;,<br />\n&quot;charge_policy&quot;: &quot;SHARED&quot;<br />\n}</p>\n<p>or, you can counterparty to account<br />\n{<br />\n&quot;from&quot;: {<br />\n&quot;counterparty_id&quot;: &quot;f6392b7d-4218-45ea-b9a7-eaa71c0202f9&quot;<br />\n},<br />\n&quot;to&quot;: {<br />\n&quot;bank_id&quot;: &quot;gh.29.uk&quot;,<br />\n&quot;account_id&quot;: &quot;8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0&quot;,<br />\n},<br />\n&quot;value&quot;: {<br />\n&quot;currency&quot;: &quot;GBP&quot;,<br />\n&quot;amount&quot;: &quot;10&quot;<br />\n},<br />\n&quot;description&quot;: &quot;this is for work&quot;,<br />\n&quot;posted&quot;: &quot;2017-09-19T02:31:05Z&quot;,<br />\n&quot;completed&quot;: &quot;2017-09-19T02:31:05Z&quot;,<br />\n&quot;type&quot;: &quot;SANDBOX_TAN&quot;,<br />\n&quot;charge_policy&quot;: &quot;SHARED&quot;<br />\n}</p>\n<p>This call is experimental.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p>\n<p><a href=\"/glossary#\"><strong>charge_policy</strong></a>: SHARED</p>\n<p><a href=\"/glossary#completed\"><strong>completed</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#from\"><strong>from</strong></a>:</p>\n<p><a href=\"/glossary#posted\"><strong>posted</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#to\"><strong>to</strong></a>:</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n<p><a href=\"/glossary#\">account_id</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#\">bank_id</a>: gh.29.uk</p>\n<p><a href=\"/glossary#\">counterparty_id</a>: 9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p>\n<p><a href=\"/glossary#\"><strong>charge_policy</strong></a>: SHARED</p>\n<p><a href=\"/glossary#completed\"><strong>completed</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#from\"><strong>from</strong></a>:</p>\n<p><a href=\"/glossary#posted\"><strong>posted</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#to\"><strong>to</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>transaction_id</strong></a>: 2fg8a7e4-6d02-40e3-a129-0b2bf89de8ub</p>\n<p><a href=\"/glossary#\"><strong>transaction_request_type</strong></a>: SEPA</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n<p><a href=\"/glossary#\">account_id</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#\">bank_id</a>: gh.29.uk</p>\n<p><a href=\"/glossary#\">counterparty_id</a>: 9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n",
      "description_markdown": "Import the historical transactions.\n\nThe fields bank_id, account_id, counterparty_id in the json body are all optional ones.\nIt support transfer money from account to account, account to counterparty and counterparty to counterparty\nBoth bank_id + account_id and counterparty_id can identify the account, so OBP only need one of them to make the payment.\nSo: \nWhen you need the account to account, just omit counterparty_id field.eg:\n{\n  \"from\": {\n    \"bank_id\": \"gh.29.uk\",\n    \"account_id\": \"1ca8a7e4-6d02-48e3-a029-0b2bf89de9f0\",\n  },\n  \"to\": {\n    \"bank_id\": \"gh.29.uk\",\n    \"account_id\": \"2ca8a7e4-6d02-48e3-a029-0b2bf89de9f0\",\n  },\n  \"value\": {\n    \"currency\": \"GBP\",\n    \"amount\": \"10\"\n  },\n  \"description\": \"this is for work\",\n  \"posted\": \"2017-09-19T02:31:05Z\",\n  \"completed\": \"2017-09-19T02:31:05Z\",\n  \"type\": \"SANDBOX_TAN\",\n  \"charge_policy\": \"SHARED\"\n}\n\nWhen you need the counterparty to counterparty, need to omit bank_id and account_id field.eg:\n{\n  \"from\": {\n    \"counterparty_id\": \"f6392b7d-4218-45ea-b9a7-eaa71c0202f9\"\n  },\n  \"to\": {\n    \"counterparty_id\": \"26392b7d-4218-45ea-b9a7-eaa71c0202f9\"\n  },\n  \"value\": {\n    \"currency\": \"GBP\",\n    \"amount\": \"10\"\n  },\n  \"description\": \"this is for work\",\n  \"posted\": \"2017-09-19T02:31:05Z\",\n  \"completed\": \"2017-09-19T02:31:05Z\",\n  \"type\": \"SANDBOX_TAN\",\n  \"charge_policy\": \"SHARED\"\n}\n\nor, you can counterparty to account\n{\n  \"from\": {\n    \"counterparty_id\": \"f6392b7d-4218-45ea-b9a7-eaa71c0202f9\"\n  },\n  \"to\": {\n    \"bank_id\": \"gh.29.uk\",\n    \"account_id\": \"8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0\",\n  },\n  \"value\": {\n    \"currency\": \"GBP\",\n    \"amount\": \"10\"\n  },\n  \"description\": \"this is for work\",\n  \"posted\": \"2017-09-19T02:31:05Z\",\n  \"completed\": \"2017-09-19T02:31:05Z\",\n  \"type\": \"SANDBOX_TAN\",\n  \"charge_policy\": \"SHARED\"\n}\n\nThis call is experimental.\n       \n\nAuthentication is Mandatory\n\n\n**JSON request body fields:**\n\n\n\n[**amount**](/glossary#): 10.12\n\n\n\n[**charge_policy**](/glossary#): SHARED\n\n\n\n[**completed**](/glossary#completed): 2020-01-27\n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**from**](/glossary#from): \n\n\n\n[**posted**](/glossary#posted): 2020-01-27\n\n\n\n[**to**](/glossary#to): \n\n\n\n[**type**](/glossary#type): \n\n\n\n[**value**](/glossary#): 5987953\n\n\n\n[account_id](/glossary#): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[bank_id](/glossary#): gh.29.uk\n\n\n\n[counterparty_id](/glossary#): 9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**amount**](/glossary#): 10.12\n\n\n\n[**charge_policy**](/glossary#): SHARED\n\n\n\n[**completed**](/glossary#completed): 2020-01-27\n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**from**](/glossary#from): \n\n\n\n[**posted**](/glossary#posted): 2020-01-27\n\n\n\n[**to**](/glossary#to): \n\n\n\n[**transaction_id**](/glossary#): 2fg8a7e4-6d02-40e3-a129-0b2bf89de8ub\n\n\n\n[**transaction_request_type**](/glossary#): SEPA\n\n\n\n[**value**](/glossary#): 5987953\n\n\n\n[account_id](/glossary#): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[bank_id](/glossary#): gh.29.uk\n\n\n\n[counterparty_id](/glossary#): 9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n",
      "example_request_body": {
        "from": {
          "bank_id": "gh.29.uk",
          "account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0",
          "counterparty_id": "9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh"
        },
        "to": {
          "bank_id": "gh.29.uk",
          "account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0",
          "counterparty_id": "9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh"
        },
        "value": {
          "currency": "EUR",
          "amount": "0"
        },
        "description": "this is for work",
        "posted": "1100-01-01T01:01:01Z",
        "completed": "1100-01-01T01:01:01Z",
        "type": "SANDBOX_TAN",
        "charge_policy": "SHARED"
      },
      "success_response_body": {
        "transaction_id": "2fg8a7e4-6d02-40e3-a129-0b2bf89de8ub",
        "from": {
          "bank_id": "gh.29.uk",
          "account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0",
          "counterparty_id": "9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh"
        },
        "to": {
          "bank_id": "gh.29.uk",
          "account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0",
          "counterparty_id": "9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh"
        },
        "value": {
          "currency": "EUR",
          "amount": "0"
        },
        "description": "this is for work",
        "posted": "1100-01-01T01:01:01Z",
        "completed": "1100-01-01T01:01:01Z",
        "transaction_request_type": "SANDBOX_TAN",
        "charge_policy": "SHARED"
      },
      "error_response_bodies": [
        "OBP-10001: Incorrect json format.",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30003: Account not found. Please specify a valid value for ACCOUNT_ID.",
        "OBP-30017: Counterparty not found. Please specify a valid value for COUNTERPARTY_ID.",
        "OBP-10002: Invalid Number. Could not convert value to a number.",
        "OBP-40008: Can't send a payment with a value of 0 or less.",
        "OBP-40003: Transaction Request Currency must be the same as From Account Currency.",
        "OBP-50000: Unknown Error.",
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["Transaction-Request", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "completed": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "from": {
            "type": "object",
            "properties": {
              "bank_id": {
                "type": "string"
              },
              "account_id": {
                "type": "string"
              },
              "counterparty_id": {
                "type": "string"
              }
            }
          },
          "to": {
            "type": "object",
            "properties": {
              "bank_id": {
                "type": "string"
              },
              "account_id": {
                "type": "string"
              },
              "counterparty_id": {
                "type": "string"
              }
            }
          },
          "value": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string"
              },
              "amount": {
                "type": "string"
              }
            }
          },
          "charge_policy": {
            "type": "string"
          },
          "posted": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "completed": {
            "type": "string",
            "format": "date-time"
          },
          "from": {
            "type": "object",
            "properties": {
              "bank_id": {
                "type": "string"
              },
              "account_id": {
                "type": "string"
              },
              "counterparty_id": {
                "type": "string"
              }
            }
          },
          "transaction_request_type": {
            "type": "string"
          },
          "to": {
            "type": "object",
            "properties": {
              "bank_id": {
                "type": "string"
              },
              "account_id": {
                "type": "string"
              },
              "counterparty_id": {
                "type": "string"
              }
            }
          },
          "value": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string"
              },
              "amount": {
                "type": "string"
              }
            }
          },
          "charge_policy": {
            "type": "string"
          },
          "transaction_id": {
            "type": "string"
          },
          "posted": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateHistoricalTransaction",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/historical/transactions ",
      "connector_methods": [
        "obp.checkBankAccountExists",
        "obp.makeHistoricalPayment",
        "obp.getBank",
        "obp.getCounterpartyByCounterpartyId",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv4.0.0-createBankLevelDynamicEntity",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "createBankLevelDynamicEntity"
      },
      "request_verb": "POST",
      "request_url": "/obp/v4.0.0/management/banks/BANK_ID/dynamic-entities",
      "summary": "Create Bank Level Dynamic Entity",
      "description": "<p>Create a Bank Level DynamicEntity.</p>\n<p>Authentication is Mandatory</p>\n<p>Create a DynamicEntity. If creation is successful, the corresponding POST, GET, PUT and DELETE (Create, Read, Update, Delete or CRUD for short) endpoints will be generated automatically</p>\n<p>The following field types are as supported:<br />\n[number, integer, boolean, string, DATE_WITH_DAY, reference]</p>\n<p>The DATE_WITH_DAY format is: yyyy-MM-dd</p>\n<p>Reference types are like foreign keys and composite foreign keys are supported. The value you need to supply as the (composite) foreign key is a UUID (or several UUIDs in the case of a composite key) that match value in another Entity..<br />\nThe following list shows all the possible reference types in the system with corresponding examples values so you can see how to construct each reference type value.</p>\n<pre><code>&quot;someField0&quot;: {\n    &quot;type&quot;: &quot;reference:FooBar&quot;,\n    &quot;example&quot;: &quot;7ba5c7ab-e3a5-43d4-8b51-1a0c320d81a3&quot;\n}\n\n&quot;someField1&quot;: {\n    &quot;type&quot;: &quot;reference:risk_checks&quot;,\n    &quot;example&quot;: &quot;7ba5c7ab-e3a5-43d4-8b51-1a0c320d81a3&quot;\n}\n\n&quot;someField2&quot;: {\n    &quot;type&quot;: &quot;reference:BookMarkBankAndAccount&quot;,\n    &quot;example&quot;: &quot;7ba5c7ab-e3a5-43d4-8b51-1a0c320d81a3&quot;\n}\n\n&quot;someField3&quot;: {\n    &quot;type&quot;: &quot;reference:risk_check&quot;,\n    &quot;example&quot;: &quot;7ba5c7ab-e3a5-43d4-8b51-1a0c320d81a3&quot;\n}\n\n&quot;someField4&quot;: {\n    &quot;type&quot;: &quot;reference:BookMarkBankAndAccount_system&quot;,\n    &quot;example&quot;: &quot;7ba5c7ab-e3a5-43d4-8b51-1a0c320d81a3&quot;\n}\n\n&quot;someField5&quot;: {\n    &quot;type&quot;: &quot;reference:Hospital&quot;,\n    &quot;example&quot;: &quot;7ba5c7ab-e3a5-43d4-8b51-1a0c320d81a3&quot;\n}\n\n&quot;someField6&quot;: {\n    &quot;type&quot;: &quot;reference:Bank&quot;,\n    &quot;example&quot;: &quot;7ba5c7ab-e3a5-43d4-8b51-1a0c320d81a3&quot;\n}\n\n&quot;someField7&quot;: {\n    &quot;type&quot;: &quot;reference:Consumer&quot;,\n    &quot;example&quot;: &quot;7ba5c7ab-e3a5-43d4-8b51-1a0c320d81a3&quot;\n}\n\n&quot;someField8&quot;: {\n    &quot;type&quot;: &quot;reference:Customer&quot;,\n    &quot;example&quot;: &quot;7ba5c7ab-e3a5-43d4-8b51-1a0c320d81a3&quot;\n}\n\n&quot;someField9&quot;: {\n    &quot;type&quot;: &quot;reference:MethodRouting&quot;,\n    &quot;example&quot;: &quot;7ba5c7ab-e3a5-43d4-8b51-1a0c320d81a3&quot;\n}\n\n&quot;someField10&quot;: {\n    &quot;type&quot;: &quot;reference:DynamicEntity&quot;,\n    &quot;example&quot;: &quot;7ba5c7ab-e3a5-43d4-8b51-1a0c320d81a3&quot;\n}\n\n&quot;someField11&quot;: {\n    &quot;type&quot;: &quot;reference:TransactionRequest&quot;,\n    &quot;example&quot;: &quot;7ba5c7ab-e3a5-43d4-8b51-1a0c320d81a3&quot;\n}\n\n&quot;someField12&quot;: {\n    &quot;type&quot;: &quot;reference:ProductAttribute&quot;,\n    &quot;example&quot;: &quot;7ba5c7ab-e3a5-43d4-8b51-1a0c320d81a3&quot;\n}\n\n&quot;someField13&quot;: {\n    &quot;type&quot;: &quot;reference:AccountAttribute&quot;,\n    &quot;example&quot;: &quot;7ba5c7ab-e3a5-43d4-8b51-1a0c320d81a3&quot;\n}\n\n&quot;someField14&quot;: {\n    &quot;type&quot;: &quot;reference:TransactionAttribute&quot;,\n    &quot;example&quot;: &quot;7ba5c7ab-e3a5-43d4-8b51-1a0c320d81a3&quot;\n}\n\n&quot;someField15&quot;: {\n    &quot;type&quot;: &quot;reference:CustomerAttribute&quot;,\n    &quot;example&quot;: &quot;7ba5c7ab-e3a5-43d4-8b51-1a0c320d81a3&quot;\n}\n\n&quot;someField16&quot;: {\n    &quot;type&quot;: &quot;reference:AccountApplication&quot;,\n    &quot;example&quot;: &quot;7ba5c7ab-e3a5-43d4-8b51-1a0c320d81a3&quot;\n}\n\n&quot;someField17&quot;: {\n    &quot;type&quot;: &quot;reference:CardAttribute&quot;,\n    &quot;example&quot;: &quot;7ba5c7ab-e3a5-43d4-8b51-1a0c320d81a3&quot;\n}\n\n&quot;someField18&quot;: {\n    &quot;type&quot;: &quot;reference:Counterparty&quot;,\n    &quot;example&quot;: &quot;7ba5c7ab-e3a5-43d4-8b51-1a0c320d81a3&quot;\n}\n\n&quot;someField19&quot;: {\n    &quot;type&quot;: &quot;reference:Branch:bankId&amp;branchId&quot;,\n    &quot;example&quot;: &quot;bankId=7ba5c7ab-e3a5-43d4-8b51-1a0c320d81a3&amp;branchId=8594f461-f534-4288-b99c-98d23e437473&quot;\n}\n\n&quot;someField20&quot;: {\n    &quot;type&quot;: &quot;reference:Atm:bankId&amp;atmId&quot;,\n    &quot;example&quot;: &quot;bankId=7ba5c7ab-e3a5-43d4-8b51-1a0c320d81a3&amp;atmId=8594f461-f534-4288-b99c-98d23e437473&quot;\n}\n\n&quot;someField21&quot;: {\n    &quot;type&quot;: &quot;reference:BankAccount:bankId&amp;accountId&quot;,\n    &quot;example&quot;: &quot;bankId=7ba5c7ab-e3a5-43d4-8b51-1a0c320d81a3&amp;accountId=8594f461-f534-4288-b99c-98d23e437473&quot;\n}\n\n&quot;someField22&quot;: {\n    &quot;type&quot;: &quot;reference:Product:bankId&amp;productCode&quot;,\n    &quot;example&quot;: &quot;bankId=7ba5c7ab-e3a5-43d4-8b51-1a0c320d81a3&amp;productCode=8594f461-f534-4288-b99c-98d23e437473&quot;\n}\n\n&quot;someField23&quot;: {\n    &quot;type&quot;: &quot;reference:PhysicalCard:bankId&amp;cardId&quot;,\n    &quot;example&quot;: &quot;bankId=7ba5c7ab-e3a5-43d4-8b51-1a0c320d81a3&amp;cardId=8594f461-f534-4288-b99c-98d23e437473&quot;\n}\n\n&quot;someField24&quot;: {\n    &quot;type&quot;: &quot;reference:Transaction:bankId&amp;accountId&amp;transactionId&quot;,\n    &quot;example&quot;: &quot;bankId=7ba5c7ab-e3a5-43d4-8b51-1a0c320d81a3&amp;accountId=8594f461-f534-4288-b99c-98d23e437473&amp;transactionId=7ff33e81-2d1b-4196-a627-30e7f447ce52&quot;\n}\n\n&quot;someField25&quot;: {\n    &quot;type&quot;: &quot;reference:Counterparty:bankId&amp;accountId&amp;counterpartyId&quot;,\n    &quot;example&quot;: &quot;bankId=7ba5c7ab-e3a5-43d4-8b51-1a0c320d81a3&amp;accountId=8594f461-f534-4288-b99c-98d23e437473&amp;counterpartyId=7ff33e81-2d1b-4196-a627-30e7f447ce52&quot;\n}\n\n</code></pre>\n<p>Note: if you set <code>hasPersonalEntity</code> = false, then OBP will not generate the CRUD my FooBar endpoints.</p>\n",
      "description_markdown": "Create a Bank Level DynamicEntity.\n\nAuthentication is Mandatory\n\nCreate a DynamicEntity. If creation is successful, the corresponding POST, GET, PUT and DELETE (Create, Read, Update, Delete or CRUD for short) endpoints will be generated automatically\n\nThe following field types are as supported:\n[number, integer, boolean, string, DATE_WITH_DAY, reference]\n\nThe DATE_WITH_DAY format is: yyyy-MM-dd\n\nReference types are like foreign keys and composite foreign keys are supported. The value you need to supply as the (composite) foreign key is a UUID (or several UUIDs in the case of a composite key) that match value in another Entity..\nThe following list shows all the possible reference types in the system with corresponding examples values so you can see how to construct each reference type value.\n```\n\"someField0\": {\n    \"type\": \"reference:FooBar\",\n    \"example\": \"7ba5c7ab-e3a5-43d4-8b51-1a0c320d81a3\"\n}\n\n\"someField1\": {\n    \"type\": \"reference:risk_checks\",\n    \"example\": \"7ba5c7ab-e3a5-43d4-8b51-1a0c320d81a3\"\n}\n\n\"someField2\": {\n    \"type\": \"reference:BookMarkBankAndAccount\",\n    \"example\": \"7ba5c7ab-e3a5-43d4-8b51-1a0c320d81a3\"\n}\n\n\"someField3\": {\n    \"type\": \"reference:risk_check\",\n    \"example\": \"7ba5c7ab-e3a5-43d4-8b51-1a0c320d81a3\"\n}\n\n\"someField4\": {\n    \"type\": \"reference:BookMarkBankAndAccount_system\",\n    \"example\": \"7ba5c7ab-e3a5-43d4-8b51-1a0c320d81a3\"\n}\n\n\"someField5\": {\n    \"type\": \"reference:Hospital\",\n    \"example\": \"7ba5c7ab-e3a5-43d4-8b51-1a0c320d81a3\"\n}\n\n\"someField6\": {\n    \"type\": \"reference:Bank\",\n    \"example\": \"7ba5c7ab-e3a5-43d4-8b51-1a0c320d81a3\"\n}\n\n\"someField7\": {\n    \"type\": \"reference:Consumer\",\n    \"example\": \"7ba5c7ab-e3a5-43d4-8b51-1a0c320d81a3\"\n}\n\n\"someField8\": {\n    \"type\": \"reference:Customer\",\n    \"example\": \"7ba5c7ab-e3a5-43d4-8b51-1a0c320d81a3\"\n}\n\n\"someField9\": {\n    \"type\": \"reference:MethodRouting\",\n    \"example\": \"7ba5c7ab-e3a5-43d4-8b51-1a0c320d81a3\"\n}\n\n\"someField10\": {\n    \"type\": \"reference:DynamicEntity\",\n    \"example\": \"7ba5c7ab-e3a5-43d4-8b51-1a0c320d81a3\"\n}\n\n\"someField11\": {\n    \"type\": \"reference:TransactionRequest\",\n    \"example\": \"7ba5c7ab-e3a5-43d4-8b51-1a0c320d81a3\"\n}\n\n\"someField12\": {\n    \"type\": \"reference:ProductAttribute\",\n    \"example\": \"7ba5c7ab-e3a5-43d4-8b51-1a0c320d81a3\"\n}\n\n\"someField13\": {\n    \"type\": \"reference:AccountAttribute\",\n    \"example\": \"7ba5c7ab-e3a5-43d4-8b51-1a0c320d81a3\"\n}\n\n\"someField14\": {\n    \"type\": \"reference:TransactionAttribute\",\n    \"example\": \"7ba5c7ab-e3a5-43d4-8b51-1a0c320d81a3\"\n}\n\n\"someField15\": {\n    \"type\": \"reference:CustomerAttribute\",\n    \"example\": \"7ba5c7ab-e3a5-43d4-8b51-1a0c320d81a3\"\n}\n\n\"someField16\": {\n    \"type\": \"reference:AccountApplication\",\n    \"example\": \"7ba5c7ab-e3a5-43d4-8b51-1a0c320d81a3\"\n}\n\n\"someField17\": {\n    \"type\": \"reference:CardAttribute\",\n    \"example\": \"7ba5c7ab-e3a5-43d4-8b51-1a0c320d81a3\"\n}\n\n\"someField18\": {\n    \"type\": \"reference:Counterparty\",\n    \"example\": \"7ba5c7ab-e3a5-43d4-8b51-1a0c320d81a3\"\n}\n\n\"someField19\": {\n    \"type\": \"reference:Branch:bankId&branchId\",\n    \"example\": \"bankId=7ba5c7ab-e3a5-43d4-8b51-1a0c320d81a3&branchId=8594f461-f534-4288-b99c-98d23e437473\"\n}\n\n\"someField20\": {\n    \"type\": \"reference:Atm:bankId&atmId\",\n    \"example\": \"bankId=7ba5c7ab-e3a5-43d4-8b51-1a0c320d81a3&atmId=8594f461-f534-4288-b99c-98d23e437473\"\n}\n\n\"someField21\": {\n    \"type\": \"reference:BankAccount:bankId&accountId\",\n    \"example\": \"bankId=7ba5c7ab-e3a5-43d4-8b51-1a0c320d81a3&accountId=8594f461-f534-4288-b99c-98d23e437473\"\n}\n\n\"someField22\": {\n    \"type\": \"reference:Product:bankId&productCode\",\n    \"example\": \"bankId=7ba5c7ab-e3a5-43d4-8b51-1a0c320d81a3&productCode=8594f461-f534-4288-b99c-98d23e437473\"\n}\n\n\"someField23\": {\n    \"type\": \"reference:PhysicalCard:bankId&cardId\",\n    \"example\": \"bankId=7ba5c7ab-e3a5-43d4-8b51-1a0c320d81a3&cardId=8594f461-f534-4288-b99c-98d23e437473\"\n}\n\n\"someField24\": {\n    \"type\": \"reference:Transaction:bankId&accountId&transactionId\",\n    \"example\": \"bankId=7ba5c7ab-e3a5-43d4-8b51-1a0c320d81a3&accountId=8594f461-f534-4288-b99c-98d23e437473&transactionId=7ff33e81-2d1b-4196-a627-30e7f447ce52\"\n}\n\n\"someField25\": {\n    \"type\": \"reference:Counterparty:bankId&accountId&counterpartyId\",\n    \"example\": \"bankId=7ba5c7ab-e3a5-43d4-8b51-1a0c320d81a3&accountId=8594f461-f534-4288-b99c-98d23e437473&counterpartyId=7ff33e81-2d1b-4196-a627-30e7f447ce52\"\n}\n\n```\n Note: if you set `hasPersonalEntity` = false, then OBP will not generate the CRUD my FooBar endpoints.",
      "example_request_body": {
        "FooBar": {
          "description": "description of this entity, can be markdown text.",
          "required": ["name"],
          "properties": {
            "name": {
              "type": "string",
              "minLength": 3,
              "maxLength": 20,
              "example": "James Brown",
              "description": "description of **name** field, can be markdown text."
            },
            "number": {
              "type": "integer",
              "example": 698761728,
              "description": "description of **number** field, can be markdown text."
            }
          }
        },
        "hasPersonalEntity": true
      },
      "success_response_body": {
        "bankId": "gh.29.uk",
        "FooBar": {
          "description": "description of this entity, can be markdown text.",
          "required": ["name"],
          "properties": {
            "name": {
              "type": "string",
              "minLength": 3,
              "maxLength": 20,
              "example": "James Brown",
              "description": "description of **name** field, can be markdown text."
            },
            "number": {
              "type": "integer",
              "example": 698761728,
              "description": "description of **number** field, can be markdown text."
            }
          }
        },
        "dynamicEntityId": "dynamic-entity-id",
        "userId": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
        "hasPersonalEntity": true
      },
      "error_response_bodies": [
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Dynamic-Entity-Manage", "API", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "hasPersonalEntity": {
            "type": "boolean"
          },
          "FooBar": {
            "type": "object",
            "properties": {
              "required": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "description": {
                "type": "string"
              },
              "properties": {
                "type": "object",
                "properties": {
                  "number": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": ["number", "integer", "boolean", "string", "DATE_WITH_DAY"]
                      },
                      "example": {
                        "type": "integer"
                      },
                      "description": {
                        "type": "string"
                      }
                    }
                  },
                  "name": {
                    "type": "object",
                    "properties": {
                      "minLength": {
                        "type": "integer"
                      },
                      "type": {
                        "type": "string",
                        "enum": ["number", "integer", "boolean", "string", "DATE_WITH_DAY"]
                      },
                      "maxLength": {
                        "type": "integer"
                      },
                      "example": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "dynamicEntityId": {
            "type": "string"
          },
          "bankId": {
            "type": "string"
          },
          "hasPersonalEntity": {
            "type": "boolean"
          },
          "userId": {
            "type": "string"
          },
          "FooBar": {
            "type": "object",
            "properties": {
              "required": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "description": {
                "type": "string"
              },
              "properties": {
                "type": "object",
                "properties": {
                  "number": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": ["number", "integer", "boolean", "string", "DATE_WITH_DAY"]
                      },
                      "example": {
                        "type": "integer"
                      },
                      "description": {
                        "type": "string"
                      }
                    }
                  },
                  "name": {
                    "type": "object",
                    "properties": {
                      "minLength": {
                        "type": "integer"
                      },
                      "type": {
                        "type": "string",
                        "enum": ["number", "integer", "boolean", "string", "DATE_WITH_DAY"]
                      },
                      "maxLength": {
                        "type": "integer"
                      },
                      "example": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateBankLevelDynamicEntity",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/banks/BANK_ID/dynamic-entities",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv4.0.0-getCorrelatedUsersInfoByCustomerId",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getCorrelatedUsersInfoByCustomerId"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/customers/CUSTOMER_ID/correlated-users",
      "summary": "Get Correlated User Info by Customer",
      "description": "<p>Get Correlated User Info by CUSTOMER_ID</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#Customer.customer_id\">CUSTOMER_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#\"><strong>branch_id</strong></a>: DERBY6</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#Customer\"><strong>customer</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>customer_number</strong></a>: 5987953</p>\n<p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#\"><strong>date_of_birth</strong></a>: 2018-03-09</p>\n<p><a href=\"/glossary#\"><strong>dependants</strong></a>: 1</p>\n<p><a href=\"/glossary#dob_of_dependants\"><strong>dob_of_dependants</strong></a>: [2019-09-08, 2017-07-12]</p>\n<p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"&#109;&#97;&#105;&#108;t&#x6f;:&#x66;&#101;&#108;&#x69;&#120;&#x73;m&#x69;t&#104;&#64;&#x65;x&#97;&#109;&#x70;l&#101;.c&#111;&#109;\">&#x66;e&#108;&#105;&#120;&#115;&#x6d;&#x69;&#116;&#104;&#x40;&#x65;xam&#112;&#x6c;&#101;&#x2e;&#x63;&#111;&#109;</a></p>\n<p><a href=\"/glossary#\"><strong>employment_status</strong></a>: worker</p>\n<p><a href=\"/glossary#face_image\"><strong>face_image</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>highest_education_attained</strong></a>: Master</p>\n<p><a href=\"/glossary#\"><strong>insert_date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#\"><strong>kyc_status</strong></a>: true</p>\n<p><a href=\"/glossary#last_ok_date\"><strong>last_ok_date</strong></a>: 2022-04-13T04:30:07.985Z</p>\n<p><a href=\"/glossary#\"><strong>legal_name</strong></a>: Eveline Tripman</p>\n<p><a href=\"/glossary#mobile_phone_number\"><strong>mobile_phone_number</strong></a>: +49 30 901820</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#\"><strong>name_suffix</strong></a>: Sr</p>\n<p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p>\n<p><a href=\"/glossary#provider_id\"><strong>provider_id</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>rating</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>relationship_status</strong></a>: single</p>\n<p><a href=\"/glossary#\"><strong>source</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>title</strong></a>: Dr.</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>url</strong></a>: <a href=\"http://www.example.com/id-docs/123/image.png\">http://www.example.com/id-docs/123/image.png</a></p>\n<p><a href=\"/glossary#\"><strong>user_attribute_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>user_attributes</strong></a>: user_attributes</p>\n<p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p>\n<p><a href=\"/glossary#\"><strong>username</strong></a>: felixsmith</p>\n<p><a href=\"/glossary#users\"><strong>users</strong></a>: user list</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n<p><a href=\"/glossary#credit_limit\">credit_limit</a>:</p>\n<p><a href=\"/glossary#credit_rating\">credit_rating</a>:</p>\n",
      "description_markdown": "Get Correlated User Info by CUSTOMER_ID\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[CUSTOMER_ID](/glossary#Customer.customer_id): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**amount**](/glossary#): 10.12\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**branch_id**](/glossary#): DERBY6\n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**customer**](/glossary#Customer): \n\n\n\n[**customer_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**customer_number**](/glossary#): 5987953\n\n\n\n[**date**](/glossary#): 2020-01-27\n\n\n\n[**date_of_birth**](/glossary#): 2018-03-09\n\n\n\n[**dependants**](/glossary#): 1\n\n\n\n[**dob_of_dependants**](/glossary#dob_of_dependants): [2019-09-08, 2017-07-12]\n\n\n\n[**email**](/glossary#): felixsmith@example.com\n\n\n\n[**employment_status**](/glossary#): worker\n\n\n\n[**face_image**](/glossary#face_image): \n\n\n\n[**highest_education_attained**](/glossary#): Master\n\n\n\n[**insert_date**](/glossary#): 2020-01-27\n\n\n\n[**kyc_status**](/glossary#): true\n\n\n\n[**last_ok_date**](/glossary#last_ok_date): 2022-04-13T04:30:07.985Z\n\n\n\n[**legal_name**](/glossary#): Eveline Tripman\n\n\n\n[**mobile_phone_number**](/glossary#mobile_phone_number): +49 30 901820\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**name_suffix**](/glossary#): Sr\n\n\n\n[**provider**](/glossary#provider): ETHEREUM\n\n\n\n[**provider_id**](/glossary#provider_id): \n\n\n\n[**rating**](/glossary#): \n\n\n\n[**relationship_status**](/glossary#): single\n\n\n\n[**source**](/glossary#): \n\n\n\n[**title**](/glossary#): Dr.\n\n\n\n[**type**](/glossary#type): \n\n\n\n[**url**](/glossary#): http://www.example.com/id-docs/123/image.png\n\n\n\n[**user_attribute_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**user_attributes**](/glossary#): user_attributes\n\n\n\n[**user_id**](/glossary#): 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\n\n\n\n[**username**](/glossary#): felixsmith\n\n\n\n[**users**](/glossary#users): user list\n\n\n\n[**value**](/glossary#): 5987953\n\n\n\n[credit_limit](/glossary#credit_limit): \n\n\n\n[credit_rating](/glossary#credit_rating): \n\n\n",
      "success_response_body": {
        "customer": {
          "bank_id": "gh.29.uk",
          "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
          "customer_number": "5987953",
          "legal_name": "Eveline Tripman",
          "mobile_phone_number": "+44 07972 444 876",
          "email": "felixsmith@example.com",
          "face_image": {
            "url": "www.openbankproject",
            "date": "1100-01-01T00:00:00Z"
          },
          "date_of_birth": "1100-01-01T00:00:00Z",
          "relationship_status": "single",
          "dependants": 1,
          "dob_of_dependants": ["1100-01-01T00:00:00Z"],
          "credit_rating": {
            "rating": "OBP",
            "source": "OBP"
          },
          "credit_limit": {
            "currency": "EUR",
            "amount": "0"
          },
          "highest_education_attained": "Master",
          "employment_status": "worker",
          "kyc_status": true,
          "last_ok_date": "2022-04-13T04:30:08Z",
          "title": "Dr.",
          "branch_id": "DERBY6",
          "name_suffix": "Sr"
        },
        "users": [
          {
            "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
            "email": "felixsmith@example.com",
            "provider_id": "Chris",
            "provider": "http://127.0.0.1:8080",
            "username": "felixsmith",
            "user_attributes": [
              {
                "user_attribute_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
                "name": "BATTERY_LEVEL",
                "type": "STRING",
                "value": "90",
                "insert_date": "2023-04-13T04:30:08Z"
              }
            ]
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["Customer", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "customer": {
            "type": "object",
            "properties": {
              "dependants": {
                "type": "integer"
              },
              "dob_of_dependants": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "face_image": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string"
                  },
                  "date": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              },
              "credit_limit": {
                "type": "object",
                "properties": {
                  "currency": {
                    "type": "string"
                  },
                  "amount": {
                    "type": "string"
                  }
                }
              },
              "employment_status": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "customer_id": {
                "type": "string"
              },
              "relationship_status": {
                "type": "string"
              },
              "bank_id": {
                "type": "string"
              },
              "highest_education_attained": {
                "type": "string"
              },
              "customer_number": {
                "type": "string"
              },
              "credit_rating": {
                "type": "object",
                "properties": {
                  "rating": {
                    "type": "string"
                  },
                  "source": {
                    "type": "string"
                  }
                }
              },
              "name_suffix": {
                "type": "string"
              },
              "last_ok_date": {
                "type": "string",
                "format": "date-time"
              },
              "legal_name": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "branch_id": {
                "type": "string"
              },
              "date_of_birth": {
                "type": "string",
                "format": "date-time"
              },
              "mobile_phone_number": {
                "type": "string"
              },
              "kyc_status": {
                "type": "boolean"
              }
            }
          },
          "users": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "provider": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "provider_id": {
                  "type": "string"
                },
                "user_attributes": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "value": {
                        "type": "string"
                      },
                      "user_attribute_id": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      },
                      "insert_date": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "name": {
                        "type": "string"
                      }
                    }
                  }
                },
                "username": {
                  "type": "string"
                },
                "user_id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetCorrelatedUsersInfoAtAnyBank",
          "requires_bank_id": false
        },
        {
          "role": "CanGetCorrelatedUsersInfo",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/customers/CUSTOMER_ID/correlated-users",
      "connector_methods": ["obp.getUserAttributesByUsers", "obp.getCustomerByCustomerId"]
    },
    {
      "operation_id": "OBPv2.0.0-addKycMedia",
      "implemented_by": {
        "version": "OBPv2.0.0",
        "function": "addKycMedia"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v2.0.0/banks/BANK_ID/customers/CUSTOMER_ID/kyc_media/KYC_MEDIA_ID",
      "summary": "Add KYC Media",
      "description": "<p>Add some KYC media for the customer specified by CUSTOMER_ID. KYC Media resources relate to KYC Documents and KYC Checks and contain media urls for scans of passports, utility bills etc</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#Customer.customer_id\">CUSTOMER_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#kyc_media_id\">KYC_MEDIA_ID</a>:</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>customer_number</strong></a>: 5987953</p>\n<p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#relates_to_kyc_check_id\"><strong>relates_to_kyc_check_id</strong></a>:</p>\n<p><a href=\"/glossary#relates_to_kyc_document_id\"><strong>relates_to_kyc_document_id</strong></a>:</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>url</strong></a>: <a href=\"http://www.example.com/id-docs/123/image.png\">http://www.example.com/id-docs/123/image.png</a></p>\n",
      "description_markdown": "Add some KYC media for the customer specified by CUSTOMER_ID. KYC Media resources relate to KYC Documents and KYC Checks and contain media urls for scans of passports, utility bills etc\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[CUSTOMER_ID](/glossary#Customer.customer_id): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[KYC_MEDIA_ID](/glossary#kyc_media_id): \n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**customer_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**customer_number**](/glossary#): 5987953\n\n\n\n[**date**](/glossary#): 2020-01-27\n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**relates_to_kyc_check_id**](/glossary#relates_to_kyc_check_id): \n\n\n\n[**relates_to_kyc_document_id**](/glossary#relates_to_kyc_document_id): \n\n\n\n[**type**](/glossary#type): \n\n\n\n[**url**](/glossary#): http://www.example.com/id-docs/123/image.png\n\n\n",
      "example_request_body": {
        "customer_number": "5987953",
        "type": "image",
        "url": "http://www.example.com/id-docs/123/image.png",
        "date": "1100-01-01T00:00:00Z",
        "relates_to_kyc_document_id": "123",
        "relates_to_kyc_check_id": "123"
      },
      "success_response_body": {
        "bank_id": "gh.29.uk",
        "customer_id": "PlaceholderString",
        "id": "PlaceholderString",
        "customer_number": "5987953",
        "type": "PlaceholderString",
        "url": "PlaceholderString",
        "date": "1100-01-01T00:00:00Z",
        "relates_to_kyc_document_id": "PlaceholderString",
        "relates_to_kyc_check_id": "PlaceholderString"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-10001: Incorrect json format.",
        "OBP-30046: Customer not found. Please specify a valid value for CUSTOMER_ID.",
        "OBP-00004: Server error: could not add message",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["KYC", "Customer", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          },
          "customer_number": {
            "type": "string"
          },
          "relates_to_kyc_check_id": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "relates_to_kyc_document_id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "customer_id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "bank_id": {
            "type": "string"
          },
          "customer_number": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "relates_to_kyc_document_id": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "relates_to_kyc_check_id": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanAddKycMedia",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/customers/CUSTOMER_ID/kyc_media/KYC_MEDIA_ID",
      "connector_methods": [
        "obp.createOrUpdateKycMedia",
        "obp.getCustomerByCustomerId",
        "obp.getBank",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv3.1.0-getAccountWebhooks",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "getAccountWebhooks"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.1.0/management/banks/BANK_ID/account-web-hooks",
      "summary": "Get Account Webhooks",
      "description": "<p>Get Account Webhooks.</p>\n<p>Possible custom URL parameters for pagination:</p>\n<p>Possible custom url parameters for pagination:</p>\n<ul>\n<li>limit=NUMBER ==&gt; default value: 50</li>\n<li>offset=NUMBER ==&gt; default value: 0</li>\n</ul>\n<p>eg1:?limit=100&amp;offset=0</p>\n<ul>\n<li>sort_direction=ASC/DESC ==&gt; default value: DESC.</li>\n</ul>\n<p>eg2:?limit=100&amp;offset=0&amp;sort_direction=ASC</p>\n<ul>\n<li>account_id=STRING (if null ignore)</li>\n<li>user_id=STRING (if null ignore)</li>\n</ul>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>account_id</strong></a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#account_webhook_id\"><strong>account_webhook_id</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#created_by_user_id\"><strong>created_by_user_id</strong></a>:</p>\n<p><a href=\"/glossary#http_method\"><strong>http_method</strong></a>: GET</p>\n<p><a href=\"/glossary#http_protocol\"><strong>http_protocol</strong></a>:</p>\n<p><a href=\"/glossary#is_active\"><strong>is_active</strong></a>: true</p>\n<p><a href=\"/glossary#trigger_name\"><strong>trigger_name</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>url</strong></a>: <a href=\"http://www.example.com/id-docs/123/image.png\">http://www.example.com/id-docs/123/image.png</a></p>\n<p><a href=\"/glossary#web_hooks\"><strong>web_hooks</strong></a>:</p>\n",
      "description_markdown": "Get Account Webhooks.\n\nPossible custom URL parameters for pagination:\n\n\n\nPossible custom url parameters for pagination:\n\n* limit=NUMBER ==> default value: 50\n* offset=NUMBER ==> default value: 0\n\neg1:?limit=100&offset=0\n\n\n* sort_direction=ASC/DESC ==> default value: DESC.\n\neg2:?limit=100&offset=0&sort_direction=ASC\n\n\n* account_id=STRING (if null ignore)\n* user_id=STRING (if null ignore)\n\n\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**account_id**](/glossary#): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[**account_webhook_id**](/glossary#account_webhook_id): \n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**created_by_user_id**](/glossary#created_by_user_id): \n\n\n\n[**http_method**](/glossary#http_method): GET\n\n\n\n[**http_protocol**](/glossary#http_protocol): \n\n\n\n[**is_active**](/glossary#is_active): true\n\n\n\n[**trigger_name**](/glossary#trigger_name): \n\n\n\n[**url**](/glossary#): http://www.example.com/id-docs/123/image.png\n\n\n\n[**web_hooks**](/glossary#web_hooks): \n\n\n",
      "success_response_body": {
        "web_hooks": [
          {
            "account_webhook_id": "613c83ea-80f9-4560-8404-b9cd4ec42a7f",
            "bank_id": "gh.29.uk",
            "account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0",
            "trigger_name": "OnBalanceChange",
            "url": "https://localhost.openbankproject.com",
            "http_method": "POST",
            "http_protocol": "HTTP/1.1",
            "created_by_user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
            "is_active": true
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Webhook", "Bank", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "web_hooks": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "created_by_user_id": {
                  "type": "string"
                },
                "http_method": {
                  "type": "string"
                },
                "is_active": {
                  "type": "boolean"
                },
                "bank_id": {
                  "type": "string"
                },
                "http_protocol": {
                  "type": "string"
                },
                "account_webhook_id": {
                  "type": "string"
                },
                "trigger_name": {
                  "type": "string"
                },
                "account_id": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetWebhooks",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/banks/BANK_ID/account-web-hooks",
      "connector_methods": ["obp.getBank", "obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv3.1.0-updateCardAttribute",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "updateCardAttribute"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v3.1.0/management/banks/BANK_ID/cards/CARD_ID/attributes/CARD_ATTRIBUTE_ID",
      "summary": "Update Card Attribute",
      "description": "<p>Update Card Attribute</p>\n<p>Card Attributes are used to describe a financial Product with a list of typed key value pairs.</p>\n<p>Each Card Attribute is linked to its Card by CARD_ID</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#\">CARD_ATTRIBUTE_ID</a>: b4e0352a-9a0f-4bfa-b30b-9003aa467f50</p>\n<p><a href=\"/glossary#\">CARD_ID</a>: 36f8a9e6-c2b1-407a-8bd0-421b7119307e</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n",
      "description_markdown": "Update Card Attribute\n\nCard Attributes are used to describe a financial Product with a list of typed key value pairs.\n\nEach Card Attribute is linked to its Card by CARD_ID\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[CARD_ATTRIBUTE_ID](/glossary#): b4e0352a-9a0f-4bfa-b30b-9003aa467f50\n\n\n\n[CARD_ID](/glossary#): 36f8a9e6-c2b1-407a-8bd0-421b7119307e \n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**value**](/glossary#): 5987953\n\n\n",
      "example_request_body": {
        "name": "OVERDRAFT_START_DATE",
        "type": "DOUBLE",
        "value": "2012-04-23"
      },
      "success_response_body": {
        "name": "OVERDRAFT_START_DATE",
        "card_id": "36f8a9e6-c2b1-407a-8bd0-421b7119307e ",
        "attribute_type": "DOUBLE",
        "bank_id": {
          "value": "gh.29.uk"
        },
        "value": "2012-04-23",
        "card_attribute_id": "b4e0352a-9a0f-4bfa-b30b-9003aa467f50"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Card", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "bank_id": {
            "type": "object",
            "properties": {
              "value": {
                "type": "string"
              }
            }
          },
          "card_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "card_attribute_id": {
            "type": "string"
          },
          "attribute_type": {
            "type": "string",
            "enum": ["STRING", "INTEGER", "DOUBLE", "DATE_WITH_DAY"]
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/banks/BANK_ID/cards/CARD_ID/attributes/CARD_ATTRIBUTE_ID",
      "connector_methods": [
        "obp.createOrUpdateCardAttribute",
        "obp.getCardAttributeById",
        "obp.getPhysicalCardForBank",
        "obp.getBank",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv5.0.0-answerUserAuthContextUpdateChallenge",
      "implemented_by": {
        "version": "OBPv5.0.0",
        "function": "answerUserAuthContextUpdateChallenge"
      },
      "request_verb": "POST",
      "request_url": "/obp/v5.0.0/banks/BANK_ID/users/current/auth-context-updates/AUTH_CONTEXT_UPDATE_ID/challenge",
      "summary": "Answer User Auth Context Update Challenge",
      "description": "<p>Answer User Auth Context Update Challenge.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#auth_context_update_id\">AUTH_CONTEXT_UPDATE_ID</a>:</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#answer\"><strong>answer</strong></a>:</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>consumer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>key</strong></a>: CustomerNumber</p>\n<p><a href=\"/glossary#status\"><strong>status</strong></a>:</p>\n<p><a href=\"/glossary#user_auth_context_update_id\"><strong>user_auth_context_update_id</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n",
      "description_markdown": "Answer User Auth Context Update Challenge.\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[AUTH_CONTEXT_UPDATE_ID](/glossary#auth_context_update_id): \n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON request body fields:**\n\n\n\n[**answer**](/glossary#answer): \n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**consumer_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**key**](/glossary#): CustomerNumber\n\n\n\n[**status**](/glossary#status): \n\n\n\n[**user_auth_context_update_id**](/glossary#user_auth_context_update_id): \n\n\n\n[**user_id**](/glossary#): 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\n\n\n\n[**value**](/glossary#): 5987953\n\n\n",
      "example_request_body": {
        "answer": "123"
      },
      "success_response_body": {
        "user_auth_context_update_id": "613c83ea-80f9-4560-8404-b9cd4ec42a7f",
        "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
        "key": "CUSTOMER_NUMBER",
        "value": "78987432",
        "status": "INITIATED",
        "consumer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-10001: Incorrect json format.",
        "OBP-50200: Connector cannot return the data we requested.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["User", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "answer": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "user_auth_context_update_id": {
            "type": "string",
            "format": "date-time"
          },
          "consumer_id": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/users/current/auth-context-updates/AUTH_CONTEXT_UPDATE_ID/challenge",
      "connector_methods": [
        "obp.getCustomerByCustomerNumber",
        "obp.createUserAuthContext",
        "obp.checkAnswer",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv4.0.0-createTransactionRequestRefund",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "createTransactionRequestRefund"
      },
      "request_verb": "POST",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transaction-request-types/REFUND/transaction-requests",
      "summary": "Create Transaction Request (REFUND)",
      "description": "<p>Either the <code>from</code> or the <code>to</code> field must be filled. Those fields refers to the information about the party that will be refunded.</p>\n<p>In case the <code>from</code> object is used, it means that the refund comes from the part that sent you a transaction.<br />\nIn the <code>from</code> object, you have two choices :<br />\n- Use <code>bank_id</code> and <code>account_id</code> fields if the other account is registered on the OBP-API<br />\n- Use the <code>counterparty_id</code> field in case the counterparty account is out of the OBP-API</p>\n<p>In case the <code>to</code> object is used, it means you send a request to a counterparty to ask for a refund on a previous transaction you sent.<br />\n(This case is not managed by the OBP-API and require an external adapter)</p>\n<p>Initiate a Payment via creating a Transaction Request.</p>\n<p>In OBP, a <code>transaction request</code> may or may not result in a <code>transaction</code>. However, a <code>transaction</code> only has one possible state: completed.</p>\n<p>A <code>Transaction Request</code> can have one of several states: INITIATED, NEXT_CHALLENGE_PENDING etc.</p>\n<p><code>Transactions</code> are modeled on items in a bank statement that represent the movement of money.</p>\n<p><code>Transaction Requests</code> are requests to move money which may or may not succeed and thus result in a <code>Transaction</code>.</p>\n<p>A <code>Transaction Request</code> might create a security challenge that needs to be answered before the <code>Transaction Request</code> proceeds.<br />\nIn case 1 person needs to answer security challenge we have next flow of state of an <code>transaction request</code>:<br />\nINITIATED =&gt; COMPLETED<br />\nIn case n persons needs to answer security challenge we have next flow of state of an <code>transaction request</code>:<br />\nINITIATED =&gt; NEXT_CHALLENGE_PENDING =&gt; ... =&gt; NEXT_CHALLENGE_PENDING =&gt; COMPLETED</p>\n<p>The security challenge is bound to a user i.e. in case of right answer and the user is different than expected one the challenge will fail.</p>\n<p>Rule for calculating number of security challenges:<br />\nIf product Account attribute REQUIRED_CHALLENGE_ANSWERS=N then create N challenges<br />\n(one for every user that has a View where permission &quot;can_add_transaction_request_to_any_account&quot;=true)<br />\nIn case REQUIRED_CHALLENGE_ANSWERS is not defined as an account attribute default value is 1.</p>\n<p>Transaction Requests contain charge information giving the client the opportunity to proceed or not (as long as the challenge level is appropriate).</p>\n<p>Transaction Requests can have one of several Transaction Request Types which expect different bodies. The escaped body is returned in the details key of the GET response.<br />\nThis provides some commonality and one URL for many different payment or transfer types with enough flexibility to validate them differently.</p>\n<p>The payer is set in the URL. Money comes out of the BANK_ID and ACCOUNT_ID specified in the URL.</p>\n<p>In sandbox mode, TRANSACTION_REQUEST_TYPE is commonly set to ACCOUNT. See getTransactionRequestTypesSupportedByBank for all supported types.</p>\n<p>In sandbox mode, if the amount is less than 1000 EUR (any currency, unless it is set differently on this server), the transaction request will create a transaction without a challenge, else the Transaction Request will be set to INITIALISED and a challenge will need to be answered.</p>\n<p>If a challenge is created you must answer it using Answer Transaction Request Challenge before the Transaction is created.</p>\n<p>You can transfer between different currency accounts. (new in 2.0.0). The currency in body must match the sending account.</p>\n<p>The following static FX rates are available in sandbox mode:</p>\n<p><a href=\"https://obp-apiexplorer.joinfincubator.com/more?version=OBPv4.0.0&amp;list-all-banks=false&amp;core=&amp;psd2=&amp;obwg=#OBPv2_2_0-getCurrentFxRate\">https://obp-apiexplorer.joinfincubator.com/more?version=OBPv4.0.0&amp;list-all-banks=false&amp;core=&amp;psd2=&amp;obwg=#OBPv2_2_0-getCurrentFxRate</a></p>\n<p>Transaction Requests satisfy PSD2 requirements thus:</p>\n<p>1) A transaction can be initiated by a third party application.</p>\n<p>2) The customer is informed of the charge that will incurred.</p>\n<p>3) The call supports delegated authentication (OAuth)</p>\n<p>See <a href=\"https://github.com/OpenBankProject/Hello-OBP-DirectLogin-Python/blob/master/hello_payments.py\">this python code</a> for a complete example of this flow.</p>\n<p>There is further documentation <a href=\"https://github.com/OpenBankProject/OBP-API/wiki/Transaction-Requests\">here</a></p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#\">REFUND</a>: REFUND</p>\n<p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p>\n<p><a href=\"/glossary#\"><strong>counterparty_id</strong></a>: 9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#\"><strong>reason_code</strong></a>: reason_code</p>\n<p><a href=\"/glossary#\"><strong>refund</strong></a>: refund</p>\n<p><a href=\"/glossary#\"><strong>transaction_id</strong></a>: 2fg8a7e4-6d02-40e3-a129-0b2bf89de8ub</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n<p><a href=\"/glossary#\">account_id</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#\">bank_id</a>: gh.29.uk</p>\n<p><a href=\"/glossary#\"><strong>counterparty_id</strong></a>: 9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#from\">from</a>:</p>\n<p><a href=\"/glossary#to\">to</a>:</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#Account\"><strong>account</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>account_id</strong></a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#allowed_attempts\"><strong>allowed_attempts</strong></a>: 5</p>\n<p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p>\n<p><a href=\"/glossary#bank_code\"><strong>bank_code</strong></a>: CGHZ</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#branch_number\"><strong>branch_number</strong></a>:</p>\n<p><a href=\"/glossary#challenge_type\"><strong>challenge_type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>challenges</strong></a>: challenges</p>\n<p><a href=\"/glossary#charge\"><strong>charge</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>counterparty_id</strong></a>: 9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#creditoraccount\"><strong>creditorAccount</strong></a>:</p>\n<p><a href=\"/glossary#creditorname\"><strong>creditorName</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#\"><strong>date_of_birth</strong></a>: 2018-03-09</p>\n<p><a href=\"/glossary#debtoraccount\"><strong>debtorAccount</strong></a>:</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#details\"><strong>details</strong></a>:</p>\n<p><a href=\"/glossary#end_date\"><strong>end_date</strong></a>:</p>\n<p><a href=\"/glossary#from\"><strong>from</strong></a>:</p>\n<p><a href=\"/glossary#future_date\"><strong>future_date</strong></a>: 20200127</p>\n<p><a href=\"/glossary#\"><strong>iban</strong></a>: DE91 1000 0000 0123 4567 89</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#instructedamount\"><strong>instructedAmount</strong></a>: 100</p>\n<p><a href=\"/glossary#kyc_document\"><strong>kyc_document</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>legal_name</strong></a>: Eveline Tripman</p>\n<p><a href=\"/glossary#link\"><strong>link</strong></a>:</p>\n<p><a href=\"/glossary#message\"><strong>message</strong></a>: 123456</p>\n<p><a href=\"/glossary#mobile_phone_number\"><strong>mobile_phone_number</strong></a>: +49 30 901820</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#nickname\"><strong>nickname</strong></a>:</p>\n<p><a href=\"/glossary#number\"><strong>number</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>start_date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#status\"><strong>status</strong></a>:</p>\n<p><a href=\"/glossary#summary\"><strong>summary</strong></a>:</p>\n<p><a href=\"/glossary#to\"><strong>to</strong></a>:</p>\n<p><a href=\"/glossary#transaction_ids\"><strong>transaction_ids</strong></a>:</p>\n<p><a href=\"/glossary#transfer_type\"><strong>transfer_type</strong></a>:</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n<p><a href=\"/glossary#to_counterparty\">to_counterparty</a>:</p>\n<p><a href=\"/glossary#to_sandbox_tan\">to_sandbox_tan</a>:</p>\n<p><a href=\"/glossary#to_sepa\">to_sepa</a>:</p>\n<p><a href=\"/glossary#to_sepa_credit_transfers\">to_sepa_credit_transfers</a>:</p>\n<p><a href=\"/glossary#\">to_simple</a>: to_simple</p>\n<p><a href=\"/glossary#to_transfer_to_account\">to_transfer_to_account</a>:</p>\n<p><a href=\"/glossary#to_transfer_to_atm\">to_transfer_to_atm</a>:</p>\n<p><a href=\"/glossary#to_transfer_to_phone\">to_transfer_to_phone</a>:</p>\n",
      "description_markdown": "Either the `from` or the `to` field must be filled. Those fields refers to the information about the party that will be refunded.\n\nIn case the `from` object is used, it means that the refund comes from the part that sent you a transaction.\nIn the `from` object, you have two choices :\n- Use `bank_id` and `account_id` fields if the other account is registered on the OBP-API\n- Use the `counterparty_id` field in case the counterparty account is out of the OBP-API\n\nIn case the `to` object is used, it means you send a request to a counterparty to ask for a refund on a previous transaction you sent.\n(This case is not managed by the OBP-API and require an external adapter)\n\n\nInitiate a Payment via creating a Transaction Request.\n\nIn OBP, a `transaction request` may or may not result in a `transaction`. However, a `transaction` only has one possible state: completed.\n\nA `Transaction Request` can have one of several states: INITIATED, NEXT_CHALLENGE_PENDING etc.\n\n`Transactions` are modeled on items in a bank statement that represent the movement of money.\n\n`Transaction Requests` are requests to move money which may or may not succeed and thus result in a `Transaction`.\n\nA `Transaction Request` might create a security challenge that needs to be answered before the `Transaction Request` proceeds.\nIn case 1 person needs to answer security challenge we have next flow of state of an `transaction request`:\n  INITIATED => COMPLETED\nIn case n persons needs to answer security challenge we have next flow of state of an `transaction request`:\n  INITIATED => NEXT_CHALLENGE_PENDING => ... => NEXT_CHALLENGE_PENDING => COMPLETED\n\nThe security challenge is bound to a user i.e. in case of right answer and the user is different than expected one the challenge will fail.\n\nRule for calculating number of security challenges:\nIf product Account attribute REQUIRED_CHALLENGE_ANSWERS=N then create N challenges\n(one for every user that has a View where permission \"can_add_transaction_request_to_any_account\"=true)\nIn case REQUIRED_CHALLENGE_ANSWERS is not defined as an account attribute default value is 1.\n\nTransaction Requests contain charge information giving the client the opportunity to proceed or not (as long as the challenge level is appropriate).\n\nTransaction Requests can have one of several Transaction Request Types which expect different bodies. The escaped body is returned in the details key of the GET response.\nThis provides some commonality and one URL for many different payment or transfer types with enough flexibility to validate them differently.\n\nThe payer is set in the URL. Money comes out of the BANK_ID and ACCOUNT_ID specified in the URL.\n\nIn sandbox mode, TRANSACTION_REQUEST_TYPE is commonly set to ACCOUNT. See getTransactionRequestTypesSupportedByBank for all supported types.\n\nIn sandbox mode, if the amount is less than 1000 EUR (any currency, unless it is set differently on this server), the transaction request will create a transaction without a challenge, else the Transaction Request will be set to INITIALISED and a challenge will need to be answered.\n\nIf a challenge is created you must answer it using Answer Transaction Request Challenge before the Transaction is created.\n\nYou can transfer between different currency accounts. (new in 2.0.0). The currency in body must match the sending account.\n\nThe following static FX rates are available in sandbox mode:\n\nhttps://obp-apiexplorer.joinfincubator.com/more?version=OBPv4.0.0&list-all-banks=false&core=&psd2=&obwg=#OBPv2_2_0-getCurrentFxRate\n\n\nTransaction Requests satisfy PSD2 requirements thus:\n\n1) A transaction can be initiated by a third party application.\n\n2) The customer is informed of the charge that will incurred.\n\n3) The call supports delegated authentication (OAuth)\n\nSee [this python code](https://github.com/OpenBankProject/Hello-OBP-DirectLogin-Python/blob/master/hello_payments.py) for a complete example of this flow.\n\nThere is further documentation [here](https://github.com/OpenBankProject/OBP-API/wiki/Transaction-Requests)\n\n\n\n       \n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[REFUND](/glossary#): REFUND\n\n\n\n[VIEW_ID](/glossary#this_view_id): owner\n\n\n\n\n\n**JSON request body fields:**\n\n\n\n[**amount**](/glossary#): 10.12\n\n\n\n[**counterparty_id**](/glossary#): 9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**reason_code**](/glossary#): reason_code\n\n\n\n[**refund**](/glossary#): refund\n\n\n\n[**transaction_id**](/glossary#): 2fg8a7e4-6d02-40e3-a129-0b2bf89de8ub\n\n\n\n[**value**](/glossary#): 5987953\n\n\n\n[account_id](/glossary#): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[bank_id](/glossary#): gh.29.uk\n\n\n\n[**counterparty_id**](/glossary#): 9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[from](/glossary#from): \n\n\n\n[to](/glossary#to): \n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**account**](/glossary#Account): \n\n\n\n[**account_id**](/glossary#): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[**allowed_attempts**](/glossary#allowed_attempts): 5\n\n\n\n[**amount**](/glossary#): 10.12\n\n\n\n[**bank_code**](/glossary#bank_code): CGHZ\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**branch_number**](/glossary#branch_number): \n\n\n\n[**challenge_type**](/glossary#challenge_type): \n\n\n\n[**challenges**](/glossary#): challenges\n\n\n\n[**charge**](/glossary#charge): \n\n\n\n[**counterparty_id**](/glossary#): 9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**creditorAccount**](/glossary#creditoraccount): \n\n\n\n[**creditorName**](/glossary#creditorname): \n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**date_of_birth**](/glossary#): 2018-03-09\n\n\n\n[**debtorAccount**](/glossary#debtoraccount): \n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**details**](/glossary#details): \n\n\n\n[**end_date**](/glossary#end_date): \n\n\n\n[**from**](/glossary#from): \n\n\n\n[**future_date**](/glossary#future_date): 20200127\n\n\n\n[**iban**](/glossary#): DE91 1000 0000 0123 4567 89\n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**instructedAmount**](/glossary#instructedamount): 100\n\n\n\n[**kyc_document**](/glossary#kyc_document): \n\n\n\n[**legal_name**](/glossary#): Eveline Tripman\n\n\n\n[**link**](/glossary#link): \n\n\n\n[**message**](/glossary#message): 123456\n\n\n\n[**mobile_phone_number**](/glossary#mobile_phone_number): +49 30 901820\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**nickname**](/glossary#nickname): \n\n\n\n[**number**](/glossary#number): \n\n\n\n[**start_date**](/glossary#): 2020-01-27\n\n\n\n[**status**](/glossary#status): \n\n\n\n[**summary**](/glossary#summary): \n\n\n\n[**to**](/glossary#to): \n\n\n\n[**transaction_ids**](/glossary#transaction_ids): \n\n\n\n[**transfer_type**](/glossary#transfer_type): \n\n\n\n[**type**](/glossary#type): \n\n\n\n[**user_id**](/glossary#): 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\n\n\n\n[**value**](/glossary#): 5987953\n\n\n\n[to_counterparty](/glossary#to_counterparty): \n\n\n\n[to_sandbox_tan](/glossary#to_sandbox_tan): \n\n\n\n[to_sepa](/glossary#to_sepa): \n\n\n\n[to_sepa_credit_transfers](/glossary#to_sepa_credit_transfers): \n\n\n\n[to_simple](/glossary#): to_simple\n\n\n\n[to_transfer_to_account](/glossary#to_transfer_to_account): \n\n\n\n[to_transfer_to_atm](/glossary#to_transfer_to_atm): \n\n\n\n[to_transfer_to_phone](/glossary#to_transfer_to_phone): \n\n\n",
      "example_request_body": {
        "to": {
          "bank_id": "gh.29.uk",
          "account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0",
          "counterparty_id": "9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh"
        },
        "from": {
          "counterparty_id": "9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh"
        },
        "value": {
          "currency": "EUR",
          "amount": "0"
        },
        "description": "A refund description. ",
        "refund": {
          "transaction_id": "2fg8a7e4-6d02-40e3-a129-0b2bf89de8ub",
          "reason_code": "CUST"
        }
      },
      "success_response_body": {
        "id": "4050046c-63b3-4868-8a22-14b4181d33a6",
        "type": "SANDBOX_TAN",
        "from": {
          "bank_id": "gh.29.uk",
          "account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
        },
        "details": {
          "to_sandbox_tan": {
            "bank_id": "String",
            "account_id": "String"
          },
          "to_sepa": {
            "iban": "String"
          },
          "to_counterparty": {
            "counterparty_id": "9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh"
          },
          "to_transfer_to_phone": {
            "value": {
              "currency": "EUR",
              "amount": "0"
            },
            "description": "String",
            "message": "String",
            "from": {
              "mobile_phone_number": "+44 07972 444 876",
              "nickname": "String"
            },
            "to": {
              "mobile_phone_number": "+44 07972 444 876"
            }
          },
          "to_transfer_to_atm": {
            "value": {
              "currency": "EUR",
              "amount": "0"
            },
            "description": "String",
            "message": "String",
            "from": {
              "mobile_phone_number": "+44 07972 444 876",
              "nickname": "String"
            },
            "to": {
              "legal_name": "Eveline Tripman",
              "date_of_birth": "20181230",
              "mobile_phone_number": "+44 07972 444 876",
              "kyc_document": {
                "type": "String",
                "number": "String"
              }
            }
          },
          "to_transfer_to_account": {
            "value": {
              "currency": "EUR",
              "amount": "0"
            },
            "description": "String",
            "transfer_type": "String",
            "future_date": "20181230",
            "to": {
              "name": "String",
              "bank_code": "String",
              "branch_number": "String",
              "account": {
                "number": "String",
                "iban": "String"
              }
            }
          },
          "to_sepa_credit_transfers": {
            "debtorAccount": {
              "iban": "12345"
            },
            "instructedAmount": {
              "currency": "EUR",
              "amount": "0"
            },
            "creditorAccount": {
              "iban": "54321"
            },
            "creditorName": "John Miles"
          },
          "value": {
            "currency": "EUR",
            "amount": "100"
          },
          "description": "String"
        },
        "transaction_ids": ["902ba3bb-dedd-45e7-9319-2fd3f2cd98a1"],
        "status": "COMPLETED",
        "start_date": "1100-01-01T00:00:00Z",
        "end_date": "1100-01-01T00:00:00Z",
        "challenges": [
          {
            "id": "2fg8a7e4-6d02-40e3-a129-0b2bf89de8ub",
            "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
            "allowed_attempts": 3,
            "challenge_type": "OBP_TRANSACTION_REQUEST_CHALLENGE",
            "link": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transaction-request-types/TRANSACTION_REQUEST_TYPE/transaction-requests/TRANSACTION_REQUEST_ID/challenge"
          }
        ],
        "charge": {
          "summary": "Rent the flat",
          "value": {
            "currency": "EUR",
            "amount": "0"
          }
        }
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30111: Invalid Bank Id. The BANK_ID should only contain 0-9/a-z/A-Z/'-'/'.'/'_', the length should be smaller than 255.",
        "OBP-30110: Invalid Account Id. The ACCOUNT_ID should only contain 0-9/a-z/A-Z/'-'/'.'/'_', the length should be smaller than 255.",
        "OBP-10001: Incorrect json format.",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30003: Account not found. Please specify a valid value for ACCOUNT_ID.",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-40002: Insufficient authorisation to create TransactionRequest. The Transaction Request could not be created because the login user doesn't have access to the view of the from account or the view don't have the `canAddTransactionRequestToAnyAccount` permission or your consumer doesn't not have the access to the view of the from account or you don't have the role CanCreateAnyTransactionRequest.",
        "OBP-40001: Invalid value for TRANSACTION_REQUEST_TYPE",
        "OBP-10001: Incorrect json format.",
        "OBP-10002: Invalid Number. Could not convert value to a number.",
        "OBP-40008: Can't send a payment with a value of 0 or less.",
        "OBP-40003: Transaction Request Currency must be the same as From Account Currency.",
        "OBP-00003: Transaction Requests is disabled in this API instance.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Transaction-Request", "Payment Initiation Service (PIS)", "PSD2", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "to": {
            "type": "object",
            "properties": {
              "bank_id": {
                "type": "string"
              },
              "account_id": {
                "type": "string"
              },
              "counterparty_id": {
                "type": "string"
              }
            }
          },
          "from": {
            "type": "object",
            "properties": {
              "counterparty_id": {
                "type": "string"
              }
            }
          },
          "refund": {
            "type": "object",
            "properties": {
              "reason_code": {
                "type": "string"
              },
              "transaction_id": {
                "type": "string"
              }
            }
          },
          "value": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string"
              },
              "amount": {
                "type": "string"
              }
            }
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "challenges": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "challenge_type": {
                  "type": "string"
                },
                "link": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "allowed_attempts": {
                  "type": "integer"
                },
                "user_id": {
                  "type": "string"
                }
              }
            }
          },
          "status": {
            "type": "string"
          },
          "end_date": {
            "type": "string",
            "format": "date-time"
          },
          "charge": {
            "type": "object",
            "properties": {
              "summary": {
                "type": "string"
              },
              "value": {
                "type": "object",
                "properties": {
                  "currency": {
                    "type": "string"
                  },
                  "amount": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "transaction_ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "from": {
            "type": "object",
            "properties": {
              "bank_id": {
                "type": "string"
              },
              "account_id": {
                "type": "string"
              }
            }
          },
          "details": {
            "type": "object",
            "properties": {
              "to_sandbox_tan": {
                "type": "object",
                "properties": {
                  "account_id": {
                    "type": "string"
                  },
                  "bank_id": {
                    "type": "string"
                  }
                }
              },
              "value": {
                "type": "object",
                "properties": {
                  "currency": {
                    "type": "string"
                  },
                  "amount": {
                    "type": "string"
                  }
                }
              },
              "to_transfer_to_phone": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  },
                  "from": {
                    "type": "object",
                    "properties": {
                      "nickname": {
                        "type": "string"
                      },
                      "mobile_phone_number": {
                        "type": "string"
                      }
                    }
                  },
                  "to": {
                    "type": "object",
                    "properties": {
                      "mobile_phone_number": {
                        "type": "string"
                      }
                    }
                  },
                  "value": {
                    "type": "object",
                    "properties": {
                      "currency": {
                        "type": "string"
                      },
                      "amount": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "to_sepa": {
                "type": "object",
                "properties": {
                  "iban": {
                    "type": "string"
                  }
                }
              },
              "description": {
                "type": "string"
              },
              "to_counterparty": {
                "type": "object",
                "properties": {
                  "counterparty_id": {
                    "type": "string"
                  }
                }
              },
              "to_transfer_to_account": {
                "type": "object",
                "properties": {
                  "to": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "account": {
                        "type": "object",
                        "properties": {
                          "number": {
                            "type": "string"
                          },
                          "iban": {
                            "type": "string"
                          }
                        }
                      },
                      "bank_code": {
                        "type": "string"
                      },
                      "branch_number": {
                        "type": "string"
                      }
                    }
                  },
                  "transfer_type": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "future_date": {
                    "type": "string"
                  },
                  "value": {
                    "type": "object",
                    "properties": {
                      "currency": {
                        "type": "string"
                      },
                      "amount": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "to_sepa_credit_transfers": {
                "type": "object",
                "properties": {
                  "instructedAmount": {
                    "type": "object",
                    "properties": {
                      "currency": {
                        "type": "string"
                      },
                      "amount": {
                        "type": "string"
                      }
                    }
                  },
                  "debtorAccount": {
                    "type": "object",
                    "properties": {
                      "iban": {
                        "type": "string"
                      }
                    }
                  },
                  "creditorAccount": {
                    "type": "object",
                    "properties": {
                      "iban": {
                        "type": "string"
                      }
                    }
                  },
                  "creditorName": {
                    "type": "string"
                  }
                }
              },
              "to_transfer_to_atm": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  },
                  "from": {
                    "type": "object",
                    "properties": {
                      "nickname": {
                        "type": "string"
                      },
                      "mobile_phone_number": {
                        "type": "string"
                      }
                    }
                  },
                  "value": {
                    "type": "object",
                    "properties": {
                      "currency": {
                        "type": "string"
                      },
                      "amount": {
                        "type": "string"
                      }
                    }
                  },
                  "to": {
                    "type": "object",
                    "properties": {
                      "date_of_birth": {
                        "type": "string"
                      },
                      "kyc_document": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string"
                          },
                          "number": {
                            "type": "string"
                          }
                        }
                      },
                      "legal_name": {
                        "type": "string"
                      },
                      "mobile_phone_number": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "start_date": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transaction-request-types/REFUND/transaction-requests",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv3.0.0-getCurrentUser",
      "implemented_by": {
        "version": "OBPv3.0.0",
        "function": "getCurrentUser"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.0.0/users/current",
      "summary": "Get User (Current)",
      "description": "<p>Get the logged in user</p>\n<p>Authentication is Mandatory</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"m&#x61;&#x69;lt&#111;&#58;&#x66;e&#108;&#105;&#x78;s&#109;i&#116;&#104;&#64;&#x65;&#x78;a&#x6d;&#x70;l&#101;&#x2e;&#99;&#111;m\">&#x66;e&#108;ix&#x73;&#109;&#x69;&#116;&#x68;&#x40;&#x65;&#x78;&#97;&#x6d;p&#x6c;e&#46;&#99;&#x6f;&#x6d;</a></p>\n<p><a href=\"/glossary#entitlement_id\"><strong>entitlement_id</strong></a>:</p>\n<p><a href=\"/glossary#entitlements\"><strong>entitlements</strong></a>:</p>\n<p><a href=\"/glossary#list\"><strong>list</strong></a>:</p>\n<p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p>\n<p><a href=\"/glossary#provider_id\"><strong>provider_id</strong></a>:</p>\n<p><a href=\"/glossary#role_name\"><strong>role_name</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p>\n<p><a href=\"/glossary#\"><strong>username</strong></a>: felixsmith</p>\n",
      "description_markdown": "Get the logged in user\n\nAuthentication is Mandatory\n\n\n**JSON response body fields:**\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**email**](/glossary#): felixsmith@example.com\n\n\n\n[**entitlement_id**](/glossary#entitlement_id): \n\n\n\n[**entitlements**](/glossary#entitlements): \n\n\n\n[**list**](/glossary#list): \n\n\n\n[**provider**](/glossary#provider): ETHEREUM\n\n\n\n[**provider_id**](/glossary#provider_id): \n\n\n\n[**role_name**](/glossary#role_name): \n\n\n\n[**user_id**](/glossary#): 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\n\n\n\n[**username**](/glossary#): felixsmith\n\n\n",
      "success_response_body": {
        "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
        "email": "felixsmith@example.com",
        "provider_id": "Chris",
        "provider": "http://127.0.0.1:8080",
        "username": "felixsmith",
        "entitlements": {
          "list": [
            {
              "entitlement_id": "6fb17583-1e49-4435-bb74-a14fe0996723",
              "role_name": "CanQueryOtherUser",
              "bank_id": "gh.29.uk"
            }
          ]
        }
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["User", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "provider_id": {
            "type": "string"
          },
          "entitlements": {
            "type": "object",
            "properties": {
              "list": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "role_name": {
                      "type": "string"
                    },
                    "bank_id": {
                      "type": "string"
                    },
                    "entitlement_id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "username": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/users/current",
      "connector_methods": ["obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv5.0.0-headAtms",
      "implemented_by": {
        "version": "OBPv5.0.0",
        "function": "headAtms"
      },
      "request_verb": "HEAD",
      "request_url": "/obp/v5.0.0/banks/BANK_ID/atms",
      "summary": "Head Bank ATMS",
      "description": "<p>Head Bank ATMS.</p>\n<p>Authentication is Optional</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#accessibility_features\"><strong>accessibility_features</strong></a>: [&quot;ATAC&quot;,&quot;ATAD&quot;]</p>\n<p><a href=\"/glossary#address\"><strong>address</strong></a>:</p>\n<p><a href=\"/glossary#atms\"><strong>atms</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>balance_inquiry_fee</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#\"><strong>branch_identification</strong></a>: branch_identification</p>\n<p><a href=\"/glossary#\"><strong>cash_withdrawal_international_fee</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>cash_withdrawal_national_fee</strong></a>:</p>\n<p><a href=\"/glossary#city\"><strong>city</strong></a>:</p>\n<p><a href=\"/glossary#closing_time\"><strong>closing_time</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#country_code\"><strong>country_code</strong></a>: 1254</p>\n<p><a href=\"/glossary#county\"><strong>county</strong></a>:</p>\n<p><a href=\"/glossary#friday\"><strong>friday</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>has_deposit_capability</strong></a>: true</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#\"><strong>is_accessible</strong></a>: true</p>\n<p><a href=\"/glossary#latitude\"><strong>latitude</strong></a>: 38.8951</p>\n<p><a href=\"/glossary#license\"><strong>license</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>line_1</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>line_2</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>line_3</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>located_at</strong></a>:</p>\n<p><a href=\"/glossary#location\"><strong>location</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>location_categories</strong></a>: location_categories</p>\n<p><a href=\"/glossary#longitude\"><strong>longitude</strong></a>: -77.0364</p>\n<p><a href=\"/glossary#meta\"><strong>meta</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>minimum_withdrawal</strong></a>: minimum_withdrawal</p>\n<p><a href=\"/glossary#monday\"><strong>monday</strong></a>:</p>\n<p><a href=\"/glossary#more_info\"><strong>more_info</strong></a>: More information about this fee</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#\"><strong>notes</strong></a>: notes</p>\n<p><a href=\"/glossary#opening_time\"><strong>opening_time</strong></a>:</p>\n<p><a href=\"/glossary#postcode\"><strong>postcode</strong></a>:</p>\n<p><a href=\"/glossary#saturday\"><strong>saturday</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>services</strong></a>: services</p>\n<p><a href=\"/glossary#\"><strong>site_identification</strong></a>: site_identification</p>\n<p><a href=\"/glossary#\"><strong>site_name</strong></a>: site_name</p>\n<p><a href=\"/glossary#state\"><strong>state</strong></a>:</p>\n<p><a href=\"/glossary#sunday\"><strong>sunday</strong></a>:</p>\n<p><a href=\"/glossary#supported_currencies\"><strong>supported_currencies</strong></a>: [&quot;EUR&quot;,&quot;MXN&quot;,&quot;USD&quot;]</p>\n<p><a href=\"/glossary#supported_languages\"><strong>supported_languages</strong></a>: [&quot;es&quot;,&quot;fr&quot;,&quot;de&quot;]</p>\n<p><a href=\"/glossary#thursday\"><strong>thursday</strong></a>:</p>\n<p><a href=\"/glossary#tuesday\"><strong>tuesday</strong></a>:</p>\n<p><a href=\"/glossary#wednesday\"><strong>wednesday</strong></a>:</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n",
      "description_markdown": "Head Bank ATMS.\n\nAuthentication is Optional\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**accessibility_features**](/glossary#accessibility_features): [\"ATAC\",\"ATAD\"]\n\n\n\n[**address**](/glossary#address): \n\n\n\n[**atms**](/glossary#atms): \n\n\n\n[**balance_inquiry_fee**](/glossary#): \n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**branch_identification**](/glossary#): branch_identification\n\n\n\n[**cash_withdrawal_international_fee**](/glossary#): \n\n\n\n[**cash_withdrawal_national_fee**](/glossary#): \n\n\n\n[**city**](/glossary#city): \n\n\n\n[**closing_time**](/glossary#closing_time): 2020-01-27\n\n\n\n[**country_code**](/glossary#country_code): 1254\n\n\n\n[**county**](/glossary#county): \n\n\n\n[**friday**](/glossary#friday): \n\n\n\n[**has_deposit_capability**](/glossary#): true\n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**is_accessible**](/glossary#): true\n\n\n\n[**latitude**](/glossary#latitude): 38.8951\n\n\n\n[**license**](/glossary#license): \n\n\n\n[**line_1**](/glossary#): \n\n\n\n[**line_2**](/glossary#): \n\n\n\n[**line_3**](/glossary#): \n\n\n\n[**located_at**](/glossary#): \n\n\n\n[**location**](/glossary#location): \n\n\n\n[**location_categories**](/glossary#): location_categories\n\n\n\n[**longitude**](/glossary#longitude): -77.0364\n\n\n\n[**meta**](/glossary#meta): \n\n\n\n[**minimum_withdrawal**](/glossary#): minimum_withdrawal\n\n\n\n[**monday**](/glossary#monday): \n\n\n\n[**more_info**](/glossary#more_info): More information about this fee\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**notes**](/glossary#): notes\n\n\n\n[**opening_time**](/glossary#opening_time): \n\n\n\n[**postcode**](/glossary#postcode): \n\n\n\n[**saturday**](/glossary#saturday): \n\n\n\n[**services**](/glossary#): services\n\n\n\n[**site_identification**](/glossary#): site_identification\n\n\n\n[**site_name**](/glossary#): site_name\n\n\n\n[**state**](/glossary#state): \n\n\n\n[**sunday**](/glossary#sunday): \n\n\n\n[**supported_currencies**](/glossary#supported_currencies): [\"EUR\",\"MXN\",\"USD\"]\n\n\n\n[**supported_languages**](/glossary#supported_languages): [\"es\",\"fr\",\"de\"]\n\n\n\n[**thursday**](/glossary#thursday): \n\n\n\n[**tuesday**](/glossary#tuesday): \n\n\n\n[**wednesday**](/glossary#wednesday): \n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n",
      "success_response_body": {
        "atms": [
          {
            "id": "atme0352a-9a0f-4bfa-b30b-9003aa467f51",
            "bank_id": "gh.29.uk",
            "name": "Atm by the Lake",
            "address": {
              "line_1": "No 1 the Road",
              "line_2": "The Place",
              "line_3": "The Hill",
              "city": "Berlin",
              "county": "",
              "state": "Brandenburg",
              "postcode": "13359",
              "country_code": "DE"
            },
            "location": {
              "latitude": 11.45,
              "longitude": 11.45
            },
            "meta": {
              "license": {
                "id": "ODbL-1.0",
                "name": "Open Database License"
              }
            },
            "monday": {
              "opening_time": "10:00",
              "closing_time": "18:00"
            },
            "tuesday": {
              "opening_time": "10:00",
              "closing_time": "18:00"
            },
            "wednesday": {
              "opening_time": "10:00",
              "closing_time": "18:00"
            },
            "thursday": {
              "opening_time": "10:00",
              "closing_time": "18:00"
            },
            "friday": {
              "opening_time": "10:00",
              "closing_time": "18:00"
            },
            "saturday": {
              "opening_time": "10:00",
              "closing_time": "18:00"
            },
            "sunday": {
              "opening_time": "10:00",
              "closing_time": "18:00"
            },
            "is_accessible": "true",
            "located_at": "",
            "more_info": "More information about this fee",
            "has_deposit_capability": "true",
            "supported_languages": ["es", "fr", "de"],
            "services": ["ATBP", "ATBA"],
            "accessibility_features": ["ATAC", "ATAD"],
            "supported_currencies": ["EUR", "MXN", "USD"],
            "notes": ["String1", "String2"],
            "location_categories": ["ATBI", "ATBE"],
            "minimum_withdrawal": "5",
            "branch_identification": "",
            "site_identification": "",
            "site_name": "",
            "cash_withdrawal_national_fee": "",
            "cash_withdrawal_international_fee": "",
            "balance_inquiry_fee": ""
          }
        ]
      },
      "error_response_bodies": [
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["ATM", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "atms": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "has_deposit_capability": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "site_name": {
                  "type": "string"
                },
                "friday": {
                  "type": "object",
                  "properties": {
                    "closing_time": {
                      "type": "string"
                    },
                    "opening_time": {
                      "type": "string"
                    }
                  }
                },
                "id": {
                  "type": "string"
                },
                "site_identification": {
                  "type": "string"
                },
                "is_accessible": {
                  "type": "string"
                },
                "accessibility_features": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "supported_currencies": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "bank_id": {
                  "type": "string"
                },
                "monday": {
                  "type": "object",
                  "properties": {
                    "closing_time": {
                      "type": "string"
                    },
                    "opening_time": {
                      "type": "string"
                    }
                  }
                },
                "cash_withdrawal_international_fee": {
                  "type": "string"
                },
                "supported_languages": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "balance_inquiry_fee": {
                  "type": "string"
                },
                "meta": {
                  "type": "object",
                  "properties": {
                    "license": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "notes": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "saturday": {
                  "type": "object",
                  "properties": {
                    "closing_time": {
                      "type": "string"
                    },
                    "opening_time": {
                      "type": "string"
                    }
                  }
                },
                "thursday": {
                  "type": "object",
                  "properties": {
                    "closing_time": {
                      "type": "string"
                    },
                    "opening_time": {
                      "type": "string"
                    }
                  }
                },
                "tuesday": {
                  "type": "object",
                  "properties": {
                    "closing_time": {
                      "type": "string"
                    },
                    "opening_time": {
                      "type": "string"
                    }
                  }
                },
                "wednesday": {
                  "type": "object",
                  "properties": {
                    "closing_time": {
                      "type": "string"
                    },
                    "opening_time": {
                      "type": "string"
                    }
                  }
                },
                "sunday": {
                  "type": "object",
                  "properties": {
                    "closing_time": {
                      "type": "string"
                    },
                    "opening_time": {
                      "type": "string"
                    }
                  }
                },
                "located_at": {
                  "type": "string"
                },
                "more_info": {
                  "type": "string"
                },
                "address": {
                  "type": "object",
                  "properties": {
                    "city": {
                      "type": "string"
                    },
                    "postcode": {
                      "type": "string"
                    },
                    "line_1": {
                      "type": "string"
                    },
                    "line_2": {
                      "type": "string"
                    },
                    "line_3": {
                      "type": "string"
                    },
                    "state": {
                      "type": "string"
                    },
                    "country_code": {
                      "type": "string"
                    },
                    "county": {
                      "type": "string"
                    }
                  }
                },
                "minimum_withdrawal": {
                  "type": "string"
                },
                "branch_identification": {
                  "type": "string"
                },
                "location": {
                  "type": "object",
                  "properties": {
                    "longitude": {
                      "type": "number"
                    },
                    "latitude": {
                      "type": "number"
                    }
                  }
                },
                "services": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "cash_withdrawal_national_fee": {
                  "type": "string"
                },
                "location_categories": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/atms",
      "connector_methods": ["obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv4.0.0-getCardAttributeDefinition",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getCardAttributeDefinition"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/attribute-definitions/card",
      "summary": "Get Card Attribute Definition",
      "description": "<p>Get Card Attribute Definition</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#alias\"><strong>alias</strong></a>:</p>\n<p><a href=\"/glossary#attribute_definition_id\"><strong>attribute_definition_id</strong></a>:</p>\n<p><a href=\"/glossary#attributes\"><strong>attributes</strong></a>: attribute value in form of (name, value)</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#can_be_seen_on_views\"><strong>can_be_seen_on_views</strong></a>: true</p>\n<p><a href=\"/glossary#category\"><strong>category</strong></a>:</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#is_active\"><strong>is_active</strong></a>: true</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n",
      "description_markdown": "Get Card Attribute Definition\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**alias**](/glossary#alias): \n\n\n\n[**attribute_definition_id**](/glossary#attribute_definition_id): \n\n\n\n[**attributes**](/glossary#attributes): attribute value in form of (name, value)\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**can_be_seen_on_views**](/glossary#can_be_seen_on_views): true\n\n\n\n[**category**](/glossary#category): \n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**is_active**](/glossary#is_active): true\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**type**](/glossary#type): \n\n\n",
      "success_response_body": {
        "attributes": [
          {
            "attribute_definition_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
            "bank_id": "gh.29.uk",
            "name": "SPECIAL_TAX_NUMBER",
            "category": "Card",
            "type": "STRING",
            "description": "description",
            "alias": "STRING",
            "can_be_seen_on_views": ["bank"],
            "is_active": true
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["Card", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "attributes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "can_be_seen_on_views": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "attribute_definition_id": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "is_active": {
                  "type": "boolean"
                },
                "category": {
                  "type": "string"
                },
                "bank_id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "alias": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetCardAttributeDefinitionAtOneBank",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/attribute-definitions/card",
      "connector_methods": ["obp.getAttributeDefinition"]
    },
    {
      "operation_id": "OBPv1.2.1-deleteCommentForViewOnTransaction",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "deleteCommentForViewOnTransaction"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transactions/TRANSACTION_ID/metadata/comments/COMMENT_ID",
      "summary": "Delete a Transaction Comment",
      "description": "<p>Delete the comment COMMENT_ID about the transaction TRANSACTION_ID made on <a href=\"#1_2_1-getViewsForBankAccount\">view</a>.</p>\n<p>Authentication via OAuth is required. The user must either have owner privileges for this account, or must be the user that posted the comment.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#comment_id\">COMMENT_ID</a>:</p>\n<p><a href=\"/glossary#transaction_ids\">TRANSACTION_ID</a>: 2fg8a7e4-6d02-40e3-a129-0b2bf89de8ub</p>\n<p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p>\n<p><strong>JSON response body fields:</strong></p>\n",
      "description_markdown": "Delete the comment COMMENT_ID about the transaction TRANSACTION_ID made on [view](#1_2_1-getViewsForBankAccount).\n\nAuthentication via OAuth is required. The user must either have owner privileges for this account, or must be the user that posted the comment.\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[COMMENT_ID](/glossary#comment_id): \n\n\n\n[TRANSACTION_ID](/glossary#transaction_ids): 2fg8a7e4-6d02-40e3-a129-0b2bf89de8ub\n\n\n\n[VIEW_ID](/glossary#this_view_id): owner\n\n\n\n\n\n**JSON response body fields:**\n\n\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "jsonString": "{}"
      },
      "error_response_bodies": [
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-30022: The current view does not have the permission:",
        "OBP-30005: View not found for Account. Please specify a valid value for VIEW_ID",
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Transaction-Metadata", "Transaction", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transactions/TRANSACTION_ID/metadata/comments/COMMENT_ID",
      "connector_methods": ["obp.checkBankAccountExists", "obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv3.1.0-getStatusOfCreditCardOrder",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "getStatusOfCreditCardOrder"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/credit_cards/orders",
      "summary": "Get status of Credit Card order ",
      "description": "<p>Get status of Credit Card orders<br />\nGet all orders</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#card_description\"><strong>card_description</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>card_type</strong></a>: Credit</p>\n<p><a href=\"/glossary#cards\"><strong>cards</strong></a>:</p>\n<p><a href=\"/glossary#use_type\"><strong>use_type</strong></a>:</p>\n",
      "description_markdown": "Get status of Credit Card orders\nGet all orders\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[VIEW_ID](/glossary#this_view_id): owner\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**card_description**](/glossary#card_description): \n\n\n\n[**card_type**](/glossary#): Credit\n\n\n\n[**cards**](/glossary#cards): \n\n\n\n[**use_type**](/glossary#use_type): \n\n\n",
      "success_response_body": {
        "cards": [
          {
            "card_type": "5",
            "card_description": "good",
            "use_type": "3"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-50212: Connector did not return the set of status of credit card.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Card", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "cards": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "use_type": {
                  "type": "string"
                },
                "card_description": {
                  "type": "string"
                },
                "card_type": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/credit_cards/orders",
      "connector_methods": [
        "obp.getStatusOfCreditCardOrder",
        "obp.checkBankAccountExists",
        "obp.getBank",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv3.0.0-getCustomersForUser",
      "implemented_by": {
        "version": "OBPv3.0.0",
        "function": "getCustomersForUser"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.0.0/users/current/customers",
      "summary": "Get Customers for Current User",
      "description": "<p>Gets all Customers that are linked to a User.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#\"><strong>branch_id</strong></a>: DERBY6</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#\"><strong>customer_attribute_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#customer_attributes\"><strong>customer_attributes</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>customer_number</strong></a>: 5987953</p>\n<p><a href=\"/glossary#customers\"><strong>customers</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#\"><strong>date_of_birth</strong></a>: 2018-03-09</p>\n<p><a href=\"/glossary#\"><strong>dependants</strong></a>: 1</p>\n<p><a href=\"/glossary#dob_of_dependants\"><strong>dob_of_dependants</strong></a>: [2019-09-08, 2017-07-12]</p>\n<p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"&#x6d;&#97;&#x69;&#x6c;&#116;&#x6f;&#x3a;&#x66;&#x65;l&#x69;&#120;&#x73;m&#105;&#116;&#x68;&#64;e&#x78;&#97;&#109;&#112;l&#x65;&#46;&#x63;o&#x6d;\">&#x66;el&#105;xsm&#x69;&#116;&#104;&#x40;e&#120;&#97;&#x6d;&#x70;&#108;&#101;.&#99;&#x6f;&#x6d;</a></p>\n<p><a href=\"/glossary#\"><strong>employment_status</strong></a>: worker</p>\n<p><a href=\"/glossary#face_image\"><strong>face_image</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>highest_education_attained</strong></a>: Master</p>\n<p><a href=\"/glossary#\"><strong>kyc_status</strong></a>: true</p>\n<p><a href=\"/glossary#last_ok_date\"><strong>last_ok_date</strong></a>: 2022-04-13T04:30:07.985Z</p>\n<p><a href=\"/glossary#\"><strong>legal_name</strong></a>: Eveline Tripman</p>\n<p><a href=\"/glossary#mobile_phone_number\"><strong>mobile_phone_number</strong></a>: +49 30 901820</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#\"><strong>name_suffix</strong></a>: Sr</p>\n<p><a href=\"/glossary#\"><strong>rating</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>relationship_status</strong></a>: single</p>\n<p><a href=\"/glossary#\"><strong>source</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>title</strong></a>: Dr.</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>url</strong></a>: <a href=\"http://www.example.com/id-docs/123/image.png\">http://www.example.com/id-docs/123/image.png</a></p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n<p><a href=\"/glossary#credit_limit\">credit_limit</a>:</p>\n<p><a href=\"/glossary#credit_rating\">credit_rating</a>:</p>\n",
      "description_markdown": "Gets all Customers that are linked to a User.\n\n\nAuthentication is Mandatory\n\n\n**JSON response body fields:**\n\n\n\n[**amount**](/glossary#): 10.12\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**branch_id**](/glossary#): DERBY6\n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**customer_attribute_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**customer_attributes**](/glossary#customer_attributes): \n\n\n\n[**customer_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**customer_number**](/glossary#): 5987953\n\n\n\n[**customers**](/glossary#customers): \n\n\n\n[**date**](/glossary#): 2020-01-27\n\n\n\n[**date_of_birth**](/glossary#): 2018-03-09\n\n\n\n[**dependants**](/glossary#): 1\n\n\n\n[**dob_of_dependants**](/glossary#dob_of_dependants): [2019-09-08, 2017-07-12]\n\n\n\n[**email**](/glossary#): felixsmith@example.com\n\n\n\n[**employment_status**](/glossary#): worker\n\n\n\n[**face_image**](/glossary#face_image): \n\n\n\n[**highest_education_attained**](/glossary#): Master\n\n\n\n[**kyc_status**](/glossary#): true\n\n\n\n[**last_ok_date**](/glossary#last_ok_date): 2022-04-13T04:30:07.985Z\n\n\n\n[**legal_name**](/glossary#): Eveline Tripman\n\n\n\n[**mobile_phone_number**](/glossary#mobile_phone_number): +49 30 901820\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**name_suffix**](/glossary#): Sr\n\n\n\n[**rating**](/glossary#): \n\n\n\n[**relationship_status**](/glossary#): single\n\n\n\n[**source**](/glossary#): \n\n\n\n[**title**](/glossary#): Dr.\n\n\n\n[**type**](/glossary#type): \n\n\n\n[**url**](/glossary#): http://www.example.com/id-docs/123/image.png\n\n\n\n[**value**](/glossary#): 5987953\n\n\n\n[credit_limit](/glossary#credit_limit): \n\n\n\n[credit_rating](/glossary#credit_rating): \n\n\n",
      "success_response_body": {
        "customers": [
          {
            "bank_id": "gh.29.uk",
            "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
            "customer_number": "5987953",
            "legal_name": "Eveline Tripman",
            "mobile_phone_number": "+44 07972 444 876",
            "email": "felixsmith@example.com",
            "face_image": {
              "url": "www.openbankproject",
              "date": "1100-01-01T00:00:00Z"
            },
            "date_of_birth": "19900101",
            "relationship_status": "single",
            "dependants": 1,
            "dob_of_dependants": ["19900101"],
            "credit_rating": {
              "rating": "OBP",
              "source": "OBP"
            },
            "credit_limit": {
              "currency": "EUR",
              "amount": "0"
            },
            "highest_education_attained": "Master",
            "employment_status": "worker",
            "kyc_status": true,
            "last_ok_date": "2022-04-13T04:30:08Z",
            "title": "Dr.",
            "branch_id": "DERBY6",
            "name_suffix": "Sr",
            "customer_attributes": [
              {
                "customer_attribute_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
                "name": "SPECIAL_TAX_NUMBER",
                "type": "STRING",
                "value": "123456789"
              }
            ]
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30008: User Customer Link not found by USER_ID",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Customer", "User", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "customers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "dependants": {
                  "type": "integer"
                },
                "customer_attributes": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "customer_attribute_id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      },
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                "face_image": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "type": "string"
                    },
                    "date": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                },
                "credit_limit": {
                  "type": "object",
                  "properties": {
                    "currency": {
                      "type": "string"
                    },
                    "amount": {
                      "type": "string"
                    }
                  }
                },
                "employment_status": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "customer_id": {
                  "type": "string"
                },
                "relationship_status": {
                  "type": "string"
                },
                "bank_id": {
                  "type": "string"
                },
                "highest_education_attained": {
                  "type": "string"
                },
                "customer_number": {
                  "type": "string"
                },
                "credit_rating": {
                  "type": "object",
                  "properties": {
                    "rating": {
                      "type": "string"
                    },
                    "source": {
                      "type": "string"
                    }
                  }
                },
                "name_suffix": {
                  "type": "string"
                },
                "last_ok_date": {
                  "type": "string",
                  "format": "date-time"
                },
                "date_of_birth": {
                  "type": "string"
                },
                "legal_name": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "dob_of_dependants": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "branch_id": {
                  "type": "string"
                },
                "mobile_phone_number": {
                  "type": "string"
                },
                "kyc_status": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/users/current/customers",
      "connector_methods": [
        "obp.getCustomerAttributesForCustomers",
        "obp.getCustomersByUserId",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv5.0.0-updateBank",
      "implemented_by": {
        "version": "OBPv5.0.0",
        "function": "updateBank"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v5.0.0/banks",
      "summary": "Update Bank",
      "description": "<p>Update an existing bank (Authenticated access).</p>\n<p>Authentication is Mandatory</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#address\"><strong>address</strong></a>:</p>\n<p><a href=\"/glossary#bank_code\"><strong>bank_code</strong></a>: CGHZ</p>\n<p><a href=\"/glossary#bank_routings\"><strong>bank_routings</strong></a>: bank routing in form of (scheme, address)</p>\n<p><a href=\"/glossary#full_name\"><strong>full_name</strong></a>: full name string</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#logo\"><strong>logo</strong></a>: logo url</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#scheme\"><strong>scheme</strong></a>: scheme value</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n<p><a href=\"/glossary#website\"><strong>website</strong></a>: <a href=\"http://www.openbankproject.com\">www.openbankproject.com</a></p>\n<p><a href=\"/glossary#attributes\">attributes</a>: attribute value in form of (name, value)</p>\n",
      "description_markdown": "Update an existing bank (Authenticated access).\n\n\n\nAuthentication is Mandatory\n\n\n**JSON response body fields:**\n\n\n\n[**address**](/glossary#address): \n\n\n\n[**bank_code**](/glossary#bank_code): CGHZ\n\n\n\n[**bank_routings**](/glossary#bank_routings): bank routing in form of (scheme, address)\n\n\n\n[**full_name**](/glossary#full_name): full name string\n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**logo**](/glossary#logo): logo url\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**scheme**](/glossary#scheme): scheme value\n\n\n\n[**value**](/glossary#): 5987953\n\n\n\n[**website**](/glossary#website): www.openbankproject.com\n\n\n\n[attributes](/glossary#attributes): attribute value in form of (name, value)\n\n\n",
      "example_request_body": {
        "id": "d8839721-ad8f-45dd-9f78-2080414b93f9",
        "bank_code": "CGHZ",
        "full_name": "full name string",
        "logo": "logo url",
        "website": "www.openbankproject.com",
        "bank_routings": [
          {
            "scheme": "scheme value",
            "address": ""
          }
        ]
      },
      "success_response_body": {
        "id": "gh.29.uk",
        "bank_code": "CGHZ",
        "full_name": "bank fullName string",
        "logo": "bank logoUrl string",
        "website": "bank logoUrl string",
        "bank_routings": [
          {
            "scheme": "scheme value",
            "address": ""
          }
        ],
        "attributes": [
          {
            "name": "ACCOUNT_MANAGEMENT_FEE",
            "value": "5987953"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-10001: Incorrect json format.",
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-34001: Could not update the Bank",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["Bank", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "bank_routings": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "scheme": {
                  "type": "string"
                },
                "address": {
                  "type": "string"
                }
              }
            }
          },
          "full_name": {
            "type": "string"
          },
          "logo": {
            "type": "string"
          },
          "bank_code": {
            "type": "string"
          },
          "website": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "website": {
            "type": "string"
          },
          "attributes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "bank_routings": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "scheme": {
                  "type": "string"
                },
                "address": {
                  "type": "string"
                }
              }
            }
          },
          "logo": {
            "type": "string"
          },
          "bank_code": {
            "type": "string"
          },
          "full_name": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateBank",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks",
      "connector_methods": ["obp.getBank"]
    },
    {
      "operation_id": "OBPv4.0.0-getLogoutLink",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getLogoutLink"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/users/current/logout-link",
      "summary": "Get Logout Link",
      "description": "<p>Get the Logout Link</p>\n<p>Authentication is Mandatory</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#link\"><strong>link</strong></a>:</p>\n",
      "description_markdown": "Get the Logout Link\n\nAuthentication is Mandatory\n\n\n**JSON response body fields:**\n\n\n\n[**link**](/glossary#link): \n\n\n",
      "success_response_body": {
        "link": "127.0.0.1:8080/user_mgt/logout"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["User", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "link": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/users/current/logout-link",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv2.0.0-getTransactionTypes",
      "implemented_by": {
        "version": "OBPv2.0.0",
        "function": "getTransactionTypes"
      },
      "request_verb": "GET",
      "request_url": "/obp/v2.0.0/banks/BANK_ID/transaction-types",
      "summary": "Get Transaction Types at Bank",
      "description": "<p>Get Transaction Types for the bank specified by BANK_ID:</p>\n<p>Lists the possible Transaction Types available at the bank (as opposed to Transaction Request Types which are the possible ways Transactions can be created by this API Server).</p>\n<ul>\n<li>id : Unique transaction type id across the API instance. SHOULD be a UUID. MUST be unique.</li>\n<li>bank_id : The bank that supports this TransactionType</li>\n<li>short_code : A short code (SHOULD have no-spaces) which MUST be unique across the bank. May be stored with Transactions to link here</li>\n<li>summary : A succinct summary</li>\n<li>description : A longer description</li>\n<li>charge : The charge to the customer for each one of these</li>\n</ul>\n<p>Authentication is Optional</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#charge\"><strong>charge</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#short_code\"><strong>short_code</strong></a>:</p>\n<p><a href=\"/glossary#summary\"><strong>summary</strong></a>:</p>\n<p><a href=\"/glossary#transaction_types\"><strong>transaction_types</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n",
      "description_markdown": "Get Transaction Types for the bank specified by BANK_ID:\n\nLists the possible Transaction Types available at the bank (as opposed to Transaction Request Types which are the possible ways Transactions can be created by this API Server).\n\n  * id : Unique transaction type id across the API instance. SHOULD be a UUID. MUST be unique.\n  * bank_id : The bank that supports this TransactionType\n  * short_code : A short code (SHOULD have no-spaces) which MUST be unique across the bank. May be stored with Transactions to link here\n  * summary : A succinct summary\n  * description : A longer description\n  * charge : The charge to the customer for each one of these\n\nAuthentication is Optional\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**amount**](/glossary#): 10.12\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**charge**](/glossary#charge): \n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**short_code**](/glossary#short_code): \n\n\n\n[**summary**](/glossary#summary): \n\n\n\n[**transaction_types**](/glossary#transaction_types): \n\n\n\n[**value**](/glossary#): 5987953\n\n\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "transaction_types": [
          {
            "id": {
              "value": "123"
            },
            "bank_id": "gh.29.uk",
            "short_code": "PlaceholderString",
            "summary": "PlaceholderString",
            "description": "PlaceholderString",
            "charge": {
              "currency": "EUR",
              "amount": "0"
            }
          }
        ]
      },
      "error_response_bodies": [
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Bank", "Account Information Service (AIS)", "PSD2", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "transaction_types": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "description": {
                  "type": "string"
                },
                "short_code": {
                  "type": "string"
                },
                "bank_id": {
                  "type": "string"
                },
                "summary": {
                  "type": "string"
                },
                "charge": {
                  "type": "object",
                  "properties": {
                    "currency": {
                      "type": "string"
                    },
                    "amount": {
                      "type": "string"
                    }
                  }
                },
                "id": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/transaction-types",
      "connector_methods": ["obp.getBank", "obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv5.0.0-createConsentByConsentRequestIdEmail",
      "implemented_by": {
        "version": "OBPv5.0.0",
        "function": "createConsentByConsentRequestIdEmail"
      },
      "request_verb": "POST",
      "request_url": "/obp/v5.0.0/consumer/consent-requests/CONSENT_REQUEST_ID/EMAIL/consents",
      "summary": "Create Consent By CONSENT_REQUEST_ID (EMAIL)",
      "description": "<p>This endpoint continues the process of creating a Consent. It starts the SCA flow which changes the status of the consent from INITIATED to ACCEPTED or REJECTED.<br />\nPlease note that the Consent cannot elevate the privileges logged in user already have.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#consent_request_id\">CONSENT_REQUEST_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#\">EMAIL</a>: <a href=\"&#109;&#97;&#x69;&#108;&#116;o:&#102;&#x65;&#108;i&#x78;&#x73;&#109;&#105;t&#104;&#64;&#x65;&#x78;am&#x70;&#108;e&#46;&#x63;&#111;&#x6d;\">fe&#x6c;&#x69;&#120;s&#x6d;&#105;&#x74;&#104;&#x40;&#101;&#x78;&#97;&#109;&#112;&#x6c;&#x65;&#x2e;c&#111;&#109;</a></p>\n<p><strong>JSON request body fields:</strong></p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#consent_id\"><strong>consent_id</strong></a>:</p>\n<p><a href=\"/glossary#jwt\"><strong>jwt</strong></a>:</p>\n<p><a href=\"/glossary#status\"><strong>status</strong></a>:</p>\n<p><a href=\"/glossary#consent_request_id\">consent_request_id</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n",
      "description_markdown": "This endpoint continues the process of creating a Consent. It starts the SCA flow which changes the status of the consent from INITIATED to ACCEPTED or REJECTED.\nPlease note that the Consent cannot elevate the privileges logged in user already have.\n\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[CONSENT_REQUEST_ID](/glossary#consent_request_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[EMAIL](/glossary#): felixsmith@example.com\n\n\n\n\n\n**JSON request body fields:**\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**consent_id**](/glossary#consent_id): \n\n\n\n[**jwt**](/glossary#jwt): \n\n\n\n[**status**](/glossary#status): \n\n\n\n[consent_request_id](/glossary#consent_request_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n",
      "success_response_body": {
        "consent_id": "9d429899-24f5-42c8-8565-943ffa6a7945",
        "jwt": "eyJhbGciOiJIUzI1NiJ9.eyJlbnRpdGxlbWVudHMiOltdLCJjcmVhdGVkQnlVc2VySWQiOiJhYjY1MzlhOS1iMTA1LTQ0ODktYTg4My0wYWQ4ZDZjNjE2NTciLCJzdWIiOiIyMWUxYzhjYy1mOTE4LTRlYWMtYjhlMy01ZTVlZWM2YjNiNGIiLCJhdWQiOiJlanpuazUwNWQxMzJyeW9tbmhieDFxbXRvaHVyYnNiYjBraWphanNrIiwibmJmIjoxNTUzNTU0ODk5LCJpc3MiOiJodHRwczpcL1wvd3d3Lm9wZW5iYW5rcHJvamVjdC5jb20iLCJleHAiOjE1NTM1NTg0OTksImlhdCI6MTU1MzU1NDg5OSwianRpIjoiMDlmODhkNWYtZWNlNi00Mzk4LThlOTktNjYxMWZhMWNkYmQ1Iiwidmlld3MiOlt7ImFjY291bnRfaWQiOiJtYXJrb19wcml2aXRlXzAxIiwiYmFua19pZCI6ImdoLjI5LnVrLngiLCJ2aWV3X2lkIjoib3duZXIifSx7ImFjY291bnRfaWQiOiJtYXJrb19wcml2aXRlXzAyIiwiYmFua19pZCI6ImdoLjI5LnVrLngiLCJ2aWV3X2lkIjoib3duZXIifV19.8cc7cBEf2NyQvJoukBCmDLT7LXYcuzTcSYLqSpbxLp4",
        "status": "INITIATED",
        "consent_request_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-10001: Incorrect json format.",
        "OBP-35009: Only SMS and EMAIL are supported as SCA methods. ",
        "OBP-35013: Consents can only contain Roles that you already have access to.",
        "OBP-35014: Consents can only contain Views that you already have access to.",
        "OBP-30019: Consumer not found. Please specify a valid value for CONSUMER_ID.",
        "OBP-20058: Consumer is disabled.",
        "OBP-50200: Connector cannot return the data we requested.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Consent", "Account Information Service (AIS)", "PSD2", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "consent_request_id": {
            "type": "string"
          },
          "consent_id": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "jwt": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/consumer/consent-requests/CONSENT_REQUEST_ID/EMAIL/consents",
      "connector_methods": ["obp.sendCustomerNotification", "obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv4.0.0-getProduct",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getProduct"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/products/PRODUCT_CODE",
      "summary": "Get Bank Product",
      "description": "<p>Returns information about a financial Product offered by the bank specified by BANK_ID and PRODUCT_CODE including:</p>\n<ul>\n<li>Name</li>\n<li>Code</li>\n<li>Parent Product Code</li>\n<li>More info URL</li>\n<li>Description</li>\n<li>Terms and Conditions</li>\n<li>Description</li>\n<li>Meta</li>\n<li>Attributes</li>\n<li>Fees</li>\n</ul>\n<p>Authentication is Optional</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#product_code\">PRODUCT_CODE</a>: 1234BW</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#frequency\"><strong>frequency</strong></a>: DAILY</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#is_active\"><strong>is_active</strong></a>: true</p>\n<p><a href=\"/glossary#license\"><strong>license</strong></a>:</p>\n<p><a href=\"/glossary#meta\"><strong>meta</strong></a>:</p>\n<p><a href=\"/glossary#more_info\"><strong>more_info</strong></a>: More information about this fee</p>\n<p><a href=\"/glossary#more_info_url\"><strong>more_info_url</strong></a>: <a href=\"http://www.example.com/abc\">www.example.com/abc</a></p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#parent_product_code\"><strong>parent_product_code</strong></a>: 787LOW</p>\n<p><a href=\"/glossary#product_attribute_id\"><strong>product_attribute_id</strong></a>:</p>\n<p><a href=\"/glossary#product_code\"><strong>product_code</strong></a>: 1234BW</p>\n<p><a href=\"/glossary#\"><strong>terms_and_conditions_url</strong></a>: <a href=\"http://www.example.com/xyz\">www.example.com/xyz</a></p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n<p><a href=\"/glossary#attributes\">attributes</a>: attribute value in form of (name, value)</p>\n<p><a href=\"/glossary#\">fees</a>: fees</p>\n<p><a href=\"/glossary#product_fee_id\">product_fee_id</a>: 696hlAHLFKUHE37469287634</p>\n",
      "description_markdown": "Returns information about a financial Product offered by the bank specified by BANK_ID and PRODUCT_CODE including:\n\n* Name\n* Code\n* Parent Product Code\n* More info URL\n* Description\n* Terms and Conditions\n* Description\n* Meta\n* Attributes\n* Fees\n\nAuthentication is Optional\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[PRODUCT_CODE](/glossary#product_code): 1234BW\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**amount**](/glossary#): 10.12\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**frequency**](/glossary#frequency): DAILY\n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**is_active**](/glossary#is_active): true\n\n\n\n[**license**](/glossary#license): \n\n\n\n[**meta**](/glossary#meta): \n\n\n\n[**more_info**](/glossary#more_info): More information about this fee\n\n\n\n[**more_info_url**](/glossary#more_info_url): www.example.com/abc\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**parent_product_code**](/glossary#parent_product_code): 787LOW\n\n\n\n[**product_attribute_id**](/glossary#product_attribute_id): \n\n\n\n[**product_code**](/glossary#product_code): 1234BW\n\n\n\n[**terms_and_conditions_url**](/glossary#): www.example.com/xyz\n\n\n\n[**type**](/glossary#type): \n\n\n\n[**value**](/glossary#): 5987953\n\n\n\n[attributes](/glossary#attributes): attribute value in form of (name, value)\n\n\n\n[fees](/glossary#): fees\n\n\n\n[product_fee_id](/glossary#product_fee_id): 696hlAHLFKUHE37469287634\n\n\n",
      "success_response_body": {
        "bank_id": "gh.29.uk",
        "product_code": "1234BW",
        "parent_product_code": "787LOW",
        "name": "Deposit Account 1",
        "more_info_url": "www.example.com/abc",
        "terms_and_conditions_url": "www.example.com/xyz",
        "description": "This an optional field. Maximum length is 2000. It can be any characters here.",
        "meta": {
          "license": {
            "id": "ODbL-1.0",
            "name": "Open Database License"
          }
        },
        "attributes": [
          {
            "product_code": "1234BW",
            "product_attribute_id": "613c83ea-80f9-4560-8404-b9cd4ec42a7f",
            "name": "OVERDRAFT_START_DATE",
            "type": "DATE_WITH_DAY",
            "value": "2012-04-23"
          }
        ],
        "fees": [
          {
            "product_fee_id": "696hlAHLFKUHE37469287634",
            "name": "ACCOUNT_MANAGEMENT_FEE",
            "is_active": true,
            "more_info": "More information about this fee",
            "value": {
              "currency": "EUR",
              "amount": "10.12",
              "frequency": "DAILY",
              "type": ""
            }
          }
        ]
      },
      "error_response_bodies": [
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30011: Product not found. Please specify a valid value for PRODUCT_CODE.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Product", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "product_code": {
            "type": "string"
          },
          "bank_id": {
            "type": "string"
          },
          "meta": {
            "type": "object",
            "properties": {
              "license": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "attributes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string"
                },
                "product_code": {
                  "type": "string"
                },
                "product_attribute_id": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              }
            }
          },
          "more_info_url": {
            "type": "string"
          },
          "parent_product_code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "terms_and_conditions_url": {
            "type": "string"
          },
          "fees": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "is_active": {
                  "type": "boolean"
                },
                "name": {
                  "type": "string"
                },
                "more_info": {
                  "type": "string"
                },
                "value": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "currency": {
                      "type": "string"
                    },
                    "frequency": {
                      "type": "string"
                    },
                    "amount": {
                      "type": "number"
                    }
                  }
                },
                "product_fee_id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/products/PRODUCT_CODE",
      "connector_methods": [
        "obp.getProduct",
        "obp.getProductFeesFromProvider",
        "obp.getProductAttributesByBankAndCode",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv3.1.0-updateCustomerBranch",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "updateCustomerBranch"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/customers/CUSTOMER_ID/branch",
      "summary": "Update the Branch of a Customer",
      "description": "<p>Update the Branch of the Customer specified by CUSTOMER_ID.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#Customer.customer_id\">CUSTOMER_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#\"><strong>branch_id</strong></a>: DERBY6</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>customer_number</strong></a>: 5987953</p>\n<p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#\"><strong>date_of_birth</strong></a>: 2018-03-09</p>\n<p><a href=\"/glossary#\"><strong>dependants</strong></a>: 1</p>\n<p><a href=\"/glossary#dob_of_dependants\"><strong>dob_of_dependants</strong></a>: [2019-09-08, 2017-07-12]</p>\n<p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"m&#97;&#x69;&#108;&#116;&#111;&#x3a;&#x66;&#x65;l&#x69;&#x78;&#115;&#x6d;&#105;&#116;&#x68;&#64;&#x65;&#x78;am&#x70;&#108;&#101;&#x2e;&#x63;&#111;m\">&#102;&#x65;&#108;&#105;&#x78;&#115;m&#105;&#116;h&#x40;&#101;xa&#x6d;&#112;l&#101;&#46;&#99;&#x6f;&#109;</a></p>\n<p><a href=\"/glossary#\"><strong>employment_status</strong></a>: worker</p>\n<p><a href=\"/glossary#face_image\"><strong>face_image</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>highest_education_attained</strong></a>: Master</p>\n<p><a href=\"/glossary#\"><strong>kyc_status</strong></a>: true</p>\n<p><a href=\"/glossary#last_ok_date\"><strong>last_ok_date</strong></a>: 2022-04-13T04:30:07.985Z</p>\n<p><a href=\"/glossary#\"><strong>legal_name</strong></a>: Eveline Tripman</p>\n<p><a href=\"/glossary#mobile_phone_number\"><strong>mobile_phone_number</strong></a>: +49 30 901820</p>\n<p><a href=\"/glossary#\"><strong>name_suffix</strong></a>: Sr</p>\n<p><a href=\"/glossary#\"><strong>rating</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>relationship_status</strong></a>: single</p>\n<p><a href=\"/glossary#\"><strong>source</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>title</strong></a>: Dr.</p>\n<p><a href=\"/glossary#\"><strong>url</strong></a>: <a href=\"http://www.example.com/id-docs/123/image.png\">http://www.example.com/id-docs/123/image.png</a></p>\n<p><a href=\"/glossary#credit_limit\">credit_limit</a>:</p>\n<p><a href=\"/glossary#credit_rating\">credit_rating</a>:</p>\n",
      "description_markdown": "Update the Branch of the Customer specified by CUSTOMER_ID.\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[CUSTOMER_ID](/glossary#Customer.customer_id): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**amount**](/glossary#): 10.12\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**branch_id**](/glossary#): DERBY6\n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**customer_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**customer_number**](/glossary#): 5987953\n\n\n\n[**date**](/glossary#): 2020-01-27\n\n\n\n[**date_of_birth**](/glossary#): 2018-03-09\n\n\n\n[**dependants**](/glossary#): 1\n\n\n\n[**dob_of_dependants**](/glossary#dob_of_dependants): [2019-09-08, 2017-07-12]\n\n\n\n[**email**](/glossary#): felixsmith@example.com\n\n\n\n[**employment_status**](/glossary#): worker\n\n\n\n[**face_image**](/glossary#face_image): \n\n\n\n[**highest_education_attained**](/glossary#): Master\n\n\n\n[**kyc_status**](/glossary#): true\n\n\n\n[**last_ok_date**](/glossary#last_ok_date): 2022-04-13T04:30:07.985Z\n\n\n\n[**legal_name**](/glossary#): Eveline Tripman\n\n\n\n[**mobile_phone_number**](/glossary#mobile_phone_number): +49 30 901820\n\n\n\n[**name_suffix**](/glossary#): Sr\n\n\n\n[**rating**](/glossary#): \n\n\n\n[**relationship_status**](/glossary#): single\n\n\n\n[**source**](/glossary#): \n\n\n\n[**title**](/glossary#): Dr.\n\n\n\n[**url**](/glossary#): http://www.example.com/id-docs/123/image.png\n\n\n\n[credit_limit](/glossary#credit_limit): \n\n\n\n[credit_rating](/glossary#credit_rating): \n\n\n",
      "example_request_body": {
        "branch_id": "123"
      },
      "success_response_body": {
        "bank_id": "gh.29.uk",
        "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "customer_number": "5987953",
        "legal_name": "Eveline Tripman",
        "mobile_phone_number": "+44 07972 444 876",
        "email": "felixsmith@example.com",
        "face_image": {
          "url": "www.openbankproject",
          "date": "1100-01-01T00:00:00Z"
        },
        "date_of_birth": "1100-01-01T00:00:00Z",
        "relationship_status": "single",
        "dependants": 1,
        "dob_of_dependants": ["1100-01-01T00:00:00Z"],
        "credit_rating": {
          "rating": "OBP",
          "source": "OBP"
        },
        "credit_limit": {
          "currency": "EUR",
          "amount": "0"
        },
        "highest_education_attained": "Master",
        "employment_status": "worker",
        "kyc_status": true,
        "last_ok_date": "2022-04-13T04:30:08Z",
        "title": "Dr.",
        "branch_id": "DERBY6",
        "name_suffix": "Sr"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Customer", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "branch_id": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "dependants": {
            "type": "integer"
          },
          "dob_of_dependants": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            }
          },
          "face_image": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string"
              },
              "date": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          "credit_limit": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string"
              },
              "amount": {
                "type": "string"
              }
            }
          },
          "employment_status": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "customer_id": {
            "type": "string"
          },
          "relationship_status": {
            "type": "string"
          },
          "bank_id": {
            "type": "string"
          },
          "highest_education_attained": {
            "type": "string"
          },
          "customer_number": {
            "type": "string"
          },
          "credit_rating": {
            "type": "object",
            "properties": {
              "rating": {
                "type": "string"
              },
              "source": {
                "type": "string"
              }
            }
          },
          "name_suffix": {
            "type": "string"
          },
          "last_ok_date": {
            "type": "string",
            "format": "date-time"
          },
          "legal_name": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "branch_id": {
            "type": "string"
          },
          "date_of_birth": {
            "type": "string",
            "format": "date-time"
          },
          "mobile_phone_number": {
            "type": "string"
          },
          "kyc_status": {
            "type": "boolean"
          }
        }
      },
      "roles": [
        {
          "role": "CanUpdateCustomerIdentity",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/customers/CUSTOMER_ID/branch",
      "connector_methods": [
        "obp.updateCustomerGeneralData",
        "obp.getCustomerByCustomerId",
        "obp.getBank",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv1.2.1-addCounterpartyOpenCorporatesUrl",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "addCounterpartyOpenCorporatesUrl"
      },
      "request_verb": "POST",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/metadata/open_corporates_url",
      "summary": "Add Open Corporates URL to Counterparty",
      "description": "<p>Add open corporates url to other bank account</p>\n<p>Authentication is Optional</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#other_account_id\">OTHER_ACCOUNT_ID</a>:</p>\n<p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#open_corporates_url\"><strong>open_corporates_URL</strong></a>:</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#success\"><strong>success</strong></a>:</p>\n",
      "description_markdown": "Add open corporates url to other bank account\n\nAuthentication is Optional\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[OTHER_ACCOUNT_ID](/glossary#other_account_id): \n\n\n\n[VIEW_ID](/glossary#this_view_id): owner\n\n\n\n\n\n**JSON request body fields:**\n\n\n\n[**open_corporates_URL**](/glossary#open_corporates_url): \n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**success**](/glossary#success): \n\n\n",
      "example_request_body": {
        "open_corporates_URL": "String"
      },
      "success_response_body": {
        "success": "Success"
      },
      "error_response_bodies": [
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-10001: Incorrect json format.",
        "the view does not allow metadata access",
        "the view does not allow adding an open corporate url",
        "URL cannot be added",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Counterparty-Metadata", "Counterparty", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "open_corporates_URL": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "success": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/metadata/open_corporates_url",
      "connector_methods": [
        "obp.checkBankAccountExists",
        "obp.getBank",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv3.0.0-getOtherAccountByIdForBankAccount",
      "implemented_by": {
        "version": "OBPv3.0.0",
        "function": "getOtherAccountByIdForBankAccount"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID",
      "summary": "Get Other Account by Id",
      "description": "<p>Returns data about the Other Account that has shared at least one transaction with ACCOUNT_ID at BANK_ID.<br />\nAuthentication is Optional</p>\n<p>Authentication is required if the view is not public.</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#other_account_id\">OTHER_ACCOUNT_ID</a>:</p>\n<p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>URL</strong></a>: <a href=\"http://www.example.com/id-docs/123/image.png\">http://www.example.com/id-docs/123/image.png</a></p>\n<p><a href=\"/glossary#account_routings\"><strong>account_routings</strong></a>:</p>\n<p><a href=\"/glossary#address\"><strong>address</strong></a>:</p>\n<p><a href=\"/glossary#bank_routing\"><strong>bank_routing</strong></a>:</p>\n<p><a href=\"/glossary#corporate_location\"><strong>corporate_location</strong></a>: 10</p>\n<p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#display_name\"><strong>display_name</strong></a>:</p>\n<p><a href=\"/glossary#holder\"><strong>holder</strong></a>:</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#image_url\"><strong>image_URL</strong></a>:</p>\n<p><a href=\"/glossary#is_alias\"><strong>is_alias</strong></a>:</p>\n<p><a href=\"/glossary#latitude\"><strong>latitude</strong></a>: 38.8951</p>\n<p><a href=\"/glossary#longitude\"><strong>longitude</strong></a>: -77.0364</p>\n<p><a href=\"/glossary#metadata\"><strong>metadata</strong></a>:</p>\n<p><a href=\"/glossary#more_info\"><strong>more_info</strong></a>: More information about this fee</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#open_corporates_url\"><strong>open_corporates_URL</strong></a>:</p>\n<p><a href=\"/glossary#physical_location\"><strong>physical_location</strong></a>:</p>\n<p><a href=\"/glossary#private_alias\"><strong>private_alias</strong></a>:</p>\n<p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p>\n<p><a href=\"/glossary#public_alias\"><strong>public_alias</strong></a>:</p>\n<p><a href=\"/glossary#scheme\"><strong>scheme</strong></a>: scheme value</p>\n<p><a href=\"/glossary#User\"><strong>user</strong></a>:</p>\n",
      "description_markdown": "Returns data about the Other Account that has shared at least one transaction with ACCOUNT_ID at BANK_ID.\nAuthentication is Optional\n\nAuthentication is required if the view is not public.\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[OTHER_ACCOUNT_ID](/glossary#other_account_id): \n\n\n\n[VIEW_ID](/glossary#this_view_id): owner\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**URL**](/glossary#): http://www.example.com/id-docs/123/image.png\n\n\n\n[**account_routings**](/glossary#account_routings): \n\n\n\n[**address**](/glossary#address): \n\n\n\n[**bank_routing**](/glossary#bank_routing): \n\n\n\n[**corporate_location**](/glossary#corporate_location): 10\n\n\n\n[**date**](/glossary#): 2020-01-27\n\n\n\n[**display_name**](/glossary#display_name): \n\n\n\n[**holder**](/glossary#holder): \n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**image_URL**](/glossary#image_url): \n\n\n\n[**is_alias**](/glossary#is_alias): \n\n\n\n[**latitude**](/glossary#latitude): 38.8951\n\n\n\n[**longitude**](/glossary#longitude): -77.0364\n\n\n\n[**metadata**](/glossary#metadata): \n\n\n\n[**more_info**](/glossary#more_info): More information about this fee\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**open_corporates_URL**](/glossary#open_corporates_url): \n\n\n\n[**physical_location**](/glossary#physical_location): \n\n\n\n[**private_alias**](/glossary#private_alias): \n\n\n\n[**provider**](/glossary#provider): ETHEREUM\n\n\n\n[**public_alias**](/glossary#public_alias): \n\n\n\n[**scheme**](/glossary#scheme): scheme value\n\n\n\n[**user**](/glossary#User): \n\n\n",
      "success_response_body": {
        "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
        "holder": {
          "name": "OBP",
          "is_alias": true
        },
        "bank_routing": {
          "scheme": "scheme value",
          "address": ""
        },
        "account_routings": [
          {
            "scheme": "AccountNumber",
            "address": "4930396"
          }
        ],
        "metadata": {
          "public_alias": "NONE",
          "private_alias": "NONE",
          "more_info": "www.openbankproject.com",
          "URL": "www.openbankproject.com",
          "image_URL": "www.openbankproject.com",
          "open_corporates_URL": "www.openbankproject.com",
          "corporate_location": {
            "latitude": 1.231,
            "longitude": 1.231,
            "date": "1100-01-01T00:00:00Z",
            "user": {
              "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
              "provider": "http://127.0.0.1:8080",
              "display_name": "OBP"
            }
          },
          "physical_location": {
            "latitude": 1.231,
            "longitude": 1.231,
            "date": "1100-01-01T00:00:00Z",
            "user": {
              "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
              "provider": "http://127.0.0.1:8080",
              "display_name": "OBP"
            }
          }
        }
      },
      "error_response_bodies": [
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-30005: View not found for Account. Please specify a valid value for VIEW_ID",
        "OBP-50200: Connector cannot return the data we requested.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Counterparty", "Account", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "metadata": {
            "type": "object",
            "properties": {
              "image_URL": {
                "type": "string"
              },
              "corporate_location": {
                "type": "object",
                "properties": {
                  "longitude": {
                    "type": "number"
                  },
                  "date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "latitude": {
                    "type": "number"
                  },
                  "user": {
                    "type": "object",
                    "properties": {
                      "provider": {
                        "type": "string"
                      },
                      "display_name": {
                        "type": "string"
                      },
                      "id": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "URL": {
                "type": "string"
              },
              "open_corporates_URL": {
                "type": "string"
              },
              "physical_location": {
                "type": "object",
                "properties": {
                  "longitude": {
                    "type": "number"
                  },
                  "date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "latitude": {
                    "type": "number"
                  },
                  "user": {
                    "type": "object",
                    "properties": {
                      "provider": {
                        "type": "string"
                      },
                      "display_name": {
                        "type": "string"
                      },
                      "id": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "public_alias": {
                "type": "string"
              },
              "private_alias": {
                "type": "string"
              },
              "more_info": {
                "type": "string"
              }
            }
          },
          "bank_routing": {
            "type": "object",
            "properties": {
              "scheme": {
                "type": "string"
              },
              "address": {
                "type": "string"
              }
            }
          },
          "holder": {
            "type": "object",
            "properties": {
              "is_alias": {
                "type": "boolean"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "id": {
            "type": "string"
          },
          "account_routings": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "scheme": {
                  "type": "string"
                },
                "address": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID",
      "connector_methods": ["obp.checkBankAccountExists", "obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv4.0.0-deleteAccountAttributeDefinition",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "deleteAccountAttributeDefinition"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/attribute-definitions/ATTRIBUTE_DEFINITION_ID/account",
      "summary": "Delete Account Attribute Definition",
      "description": "<p>Delete Account Attribute Definition by ATTRIBUTE_DEFINITION_ID</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#attribute_definition_id\">ATTRIBUTE_DEFINITION_ID</a>:</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON response body fields:</strong></p>\n",
      "description_markdown": "Delete Account Attribute Definition by ATTRIBUTE_DEFINITION_ID\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ATTRIBUTE_DEFINITION_ID](/glossary#attribute_definition_id): \n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON response body fields:**\n\n\n",
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["Account", "New-Style"],
      "roles": [
        {
          "role": "CanDeleteAccountAttributeDefinitionAtOneBank",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/attribute-definitions/ATTRIBUTE_DEFINITION_ID/account",
      "connector_methods": ["obp.deleteAttributeDefinition"]
    },
    {
      "operation_id": "OBPv3.0.0-addEntitlementRequest",
      "implemented_by": {
        "version": "OBPv3.0.0",
        "function": "addEntitlementRequest"
      },
      "request_verb": "POST",
      "request_url": "/obp/v3.0.0/entitlement-requests",
      "summary": "Create Entitlement Request for current User",
      "description": "<p>Create Entitlement Request.</p>\n<p>Any logged in User can use this endpoint to request an Entitlement</p>\n<p>Entitlements are used to grant System or Bank level roles to Users. (For Account level privileges, see Views)</p>\n<p>For a System level Role (.e.g CanGetAnyUser), set bank_id to an empty string i.e. &quot;bank_id&quot;:&quot;&quot;</p>\n<p>For a Bank level Role (e.g. CanCreateAccount), set bank_id to a valid value e.g. &quot;bank_id&quot;:&quot;my-bank-id&quot;</p>\n<p>Authentication is Mandatory</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#role_name\"><strong>role_name</strong></a>:</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#created\"><strong>created</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"&#109;&#x61;&#105;&#x6c;&#x74;&#111;&#58;&#x66;&#101;&#108;&#x69;&#x78;&#115;&#109;i&#x74;h&#64;&#x65;&#x78;&#97;&#x6d;&#x70;&#x6c;&#101;&#x2e;&#x63;&#111;&#109;\">&#102;&#x65;l&#x69;&#120;s&#109;&#105;&#x74;&#x68;&#x40;&#101;&#120;&#97;&#x6d;&#x70;l&#x65;.&#99;&#x6f;&#x6d;</a></p>\n<p><a href=\"/glossary#entitlement_id\"><strong>entitlement_id</strong></a>:</p>\n<p><a href=\"/glossary#entitlement_request_id\"><strong>entitlement_request_id</strong></a>:</p>\n<p><a href=\"/glossary#entitlements\"><strong>entitlements</strong></a>:</p>\n<p><a href=\"/glossary#list\"><strong>list</strong></a>:</p>\n<p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p>\n<p><a href=\"/glossary#provider_id\"><strong>provider_id</strong></a>:</p>\n<p><a href=\"/glossary#role_name\"><strong>role_name</strong></a>:</p>\n<p><a href=\"/glossary#User\"><strong>user</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p>\n<p><a href=\"/glossary#\"><strong>username</strong></a>: felixsmith</p>\n",
      "description_markdown": "Create Entitlement Request.\n\nAny logged in User can use this endpoint to request an Entitlement\n\nEntitlements are used to grant System or Bank level roles to Users. (For Account level privileges, see Views)\n\nFor a System level Role (.e.g CanGetAnyUser), set bank_id to an empty string i.e. \"bank_id\":\"\"\n\nFor a Bank level Role (e.g. CanCreateAccount), set bank_id to a valid value e.g. \"bank_id\":\"my-bank-id\"\n\n\n\nAuthentication is Mandatory\n\n\n**JSON request body fields:**\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**role_name**](/glossary#role_name): \n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**created**](/glossary#created): \n\n\n\n[**email**](/glossary#): felixsmith@example.com\n\n\n\n[**entitlement_id**](/glossary#entitlement_id): \n\n\n\n[**entitlement_request_id**](/glossary#entitlement_request_id): \n\n\n\n[**entitlements**](/glossary#entitlements): \n\n\n\n[**list**](/glossary#list): \n\n\n\n[**provider**](/glossary#provider): ETHEREUM\n\n\n\n[**provider_id**](/glossary#provider_id): \n\n\n\n[**role_name**](/glossary#role_name): \n\n\n\n[**user**](/glossary#User): \n\n\n\n[**user_id**](/glossary#): 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\n\n\n\n[**username**](/glossary#): felixsmith\n\n\n",
      "example_request_body": {
        "bank_id": "gh.29.uk",
        "role_name": "CanCreateBranch"
      },
      "success_response_body": {
        "entitlement_request_id": "6fb17583-1e49-4435-bb74-a14fe0996723",
        "user": {
          "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
          "email": "felixsmith@example.com",
          "provider_id": "Chris",
          "provider": "http://127.0.0.1:8080",
          "username": "felixsmith",
          "entitlements": {
            "list": [
              {
                "entitlement_id": "6fb17583-1e49-4435-bb74-a14fe0996723",
                "role_name": "CanQueryOtherUser",
                "bank_id": "gh.29.uk"
              }
            ]
          }
        },
        "role_name": "CanQueryOtherUser",
        "bank_id": "gh.29.uk",
        "created": "1100-01-01T00:00:00Z"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20005: User not found. Please specify a valid value for USER_ID.",
        "OBP-10001: Incorrect json format.",
        "OBP-10007: Incorrect Role name:",
        "OBP-30205: This entitlement is a Bank Role. Please set bank_id to a valid bank id.",
        "OBP-30206: This entitlement is a System Role. Please set bank_id to empty string.",
        "OBP-30214: Entitlement Request already exists for the user.",
        "OBP-30217: Entitlement Request cannot be added.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Role", "Entitlement", "User", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "bank_id": {
            "type": "string"
          },
          "role_name": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "entitlement_request_id": {
            "type": "string"
          },
          "role_name": {
            "type": "string"
          },
          "bank_id": {
            "type": "string"
          },
          "user": {
            "type": "object",
            "properties": {
              "provider": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "provider_id": {
                "type": "string"
              },
              "entitlements": {
                "type": "object",
                "properties": {
                  "list": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "role_name": {
                          "type": "string"
                        },
                        "bank_id": {
                          "type": "string"
                        },
                        "entitlement_id": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "username": {
                "type": "string"
              },
              "user_id": {
                "type": "string"
              }
            }
          },
          "created": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/entitlement-requests",
      "connector_methods": ["obp.getBank", "obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv5.0.0-createAccount",
      "implemented_by": {
        "version": "OBPv5.0.0",
        "function": "createAccount"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v5.0.0/banks/BANK_ID/accounts/ACCOUNT_ID",
      "summary": "Create Account",
      "description": "<p>Create Account at bank specified by BANK_ID with Id specified by ACCOUNT_ID.</p>\n<p>The User can create an Account for themself  - or -  the User that has the USER_ID specified in the POST body.</p>\n<p>If the PUT body USER_ID <em>is</em> specified, the logged in user must have the Role canCreateAccount. Once created, the Account will be owned by the User specified by USER_ID.</p>\n<p>If the PUT body USER_ID is <em>not</em> specified, the account will be owned by the logged in User.</p>\n<p>The 'product_code' field SHOULD be a product_code from Product.<br />\nIf the 'product_code' matches a product_code from Product, account attributes will be created that match the Product Attributes.</p>\n<p>Note: The Amount MUST be zero.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#account_attribute_id\"><strong>account_attribute_id</strong></a>:</p>\n<p><a href=\"/glossary#account_attributes\"><strong>account_attributes</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>account_id</strong></a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#account_routings\"><strong>account_routings</strong></a>:</p>\n<p><a href=\"/glossary#address\"><strong>address</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p>\n<p><a href=\"/glossary#balance\"><strong>balance</strong></a>: 10</p>\n<p><a href=\"/glossary#\"><strong>branch_id</strong></a>: DERBY6</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#\"><strong>label</strong></a>: My Account</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#product_code\"><strong>product_code</strong></a>: 1234BW</p>\n<p><a href=\"/glossary#scheme\"><strong>scheme</strong></a>: scheme value</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n<p><a href=\"/glossary#\">product_instance_code</a>: product_instance_code</p>\n",
      "description_markdown": "Create Account at bank specified by BANK_ID with Id specified by ACCOUNT_ID.\n\nThe User can create an Account for themself  - or -  the User that has the USER_ID specified in the POST body.\n\nIf the PUT body USER_ID *is* specified, the logged in user must have the Role canCreateAccount. Once created, the Account will be owned by the User specified by USER_ID.\n\nIf the PUT body USER_ID is *not* specified, the account will be owned by the logged in User.\n\nThe 'product_code' field SHOULD be a product_code from Product.\nIf the 'product_code' matches a product_code from Product, account attributes will be created that match the Product Attributes.\n\nNote: The Amount MUST be zero.\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**account_attribute_id**](/glossary#account_attribute_id): \n\n\n\n[**account_attributes**](/glossary#account_attributes): \n\n\n\n[**account_id**](/glossary#): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[**account_routings**](/glossary#account_routings): \n\n\n\n[**address**](/glossary#address): \n\n\n\n[**amount**](/glossary#): 10.12\n\n\n\n[**balance**](/glossary#balance): 10\n\n\n\n[**branch_id**](/glossary#): DERBY6\n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**label**](/glossary#): My Account\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**product_code**](/glossary#product_code): 1234BW\n\n\n\n[**scheme**](/glossary#scheme): scheme value\n\n\n\n[**type**](/glossary#type): \n\n\n\n[**user_id**](/glossary#): 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\n\n\n\n[**value**](/glossary#): 5987953\n\n\n\n[product_instance_code](/glossary#): product_instance_code\n\n\n",
      "example_request_body": {
        "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
        "label": "My Account",
        "product_code": "1234BW",
        "balance": {
          "currency": "EUR",
          "amount": "0"
        },
        "branch_id": "DERBY6",
        "account_routings": [
          {
            "scheme": "AccountNumber",
            "address": "4930396"
          }
        ]
      },
      "success_response_body": {
        "account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0",
        "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
        "label": "My Account",
        "product_code": "1234BW",
        "balance": {
          "currency": "EUR",
          "amount": "0"
        },
        "branch_id": "DERBY6",
        "account_routings": [
          {
            "scheme": "AccountNumber",
            "address": "4930396"
          }
        ],
        "account_attributes": [
          {
            "product_code": "1234BW",
            "account_attribute_id": "613c83ea-80f9-4560-8404-b9cd4ec42a7f",
            "name": "OVERDRAFT_START_DATE",
            "type": "DATE_WITH_DAY",
            "value": "2012-04-23",
            "product_instance_code": "LKJL98769F"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-10001: Incorrect json format.",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30107: Invalid User Id.",
        "OBP-30110: Invalid Account Id. The ACCOUNT_ID should only contain 0-9/a-z/A-Z/'-'/'.'/'_', the length should be smaller than 255.",
        "OBP-30111: Invalid Bank Id. The BANK_ID should only contain 0-9/a-z/A-Z/'-'/'.'/'_', the length should be smaller than 255.",
        "OBP-20005: User not found. Please specify a valid value for USER_ID.",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-30106: Invalid Balance Amount.",
        "OBP-30112: Invalid Number. Initial balance must be a number, e.g 1000.00",
        "OBP-30109: Initial Balance of Account must be Zero (0).",
        "OBP-30105: Invalid Balance Currency.",
        "OBP-30208: Account_ID already exists at the Bank.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Account", "Onboarding", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "string"
          },
          "product_code": {
            "type": "string"
          },
          "account_routings": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "scheme": {
                  "type": "string"
                },
                "address": {
                  "type": "string"
                }
              }
            }
          },
          "balance": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string"
              },
              "amount": {
                "type": "string"
              }
            }
          },
          "label": {
            "type": "string"
          },
          "branch_id": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "product_code": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "balance": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string"
              },
              "amount": {
                "type": "string"
              }
            }
          },
          "account_attributes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string"
                },
                "product_code": {
                  "type": "string"
                },
                "account_attribute_id": {
                  "type": "string"
                },
                "product_instance_code": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              }
            }
          },
          "account_routings": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "scheme": {
                  "type": "string"
                },
                "address": {
                  "type": "string"
                }
              }
            }
          },
          "branch_id": {
            "type": "string"
          },
          "account_id": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateAccount",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID",
      "connector_methods": [
        "obp.getBankAccountsForUser",
        "obp.createAccountAttributes",
        "obp.getProductAttributesByBankAndCode",
        "obp.createBankAccount",
        "obp.getBank",
        "obp.checkBankAccountExists"
      ]
    },
    {
      "operation_id": "OBPv3.1.0-getAccountApplications",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "getAccountApplications"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/account-applications",
      "summary": "Get Account Applications",
      "description": "<p>Get the Account Applications.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#account_application_id\"><strong>account_application_id</strong></a>:</p>\n<p><a href=\"/glossary#account_applications\"><strong>account_applications</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#\"><strong>branch_id</strong></a>: DERBY6</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#Customer\"><strong>customer</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>customer_number</strong></a>: 5987953</p>\n<p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#date_of_application\"><strong>date_of_application</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#\"><strong>date_of_birth</strong></a>: 2018-03-09</p>\n<p><a href=\"/glossary#\"><strong>dependants</strong></a>: 1</p>\n<p><a href=\"/glossary#dob_of_dependants\"><strong>dob_of_dependants</strong></a>: [2019-09-08, 2017-07-12]</p>\n<p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"&#109;&#x61;&#105;&#x6c;&#x74;&#x6f;:&#x66;&#x65;&#x6c;&#x69;&#120;&#x73;&#109;&#105;&#116;&#104;&#x40;&#101;&#x78;&#97;&#109;&#112;&#108;e&#46;&#99;&#x6f;&#x6d;\">&#x66;&#101;&#x6c;&#105;&#x78;&#x73;m&#105;&#x74;h&#64;&#101;x&#97;&#x6d;&#x70;&#108;e&#x2e;&#99;&#x6f;&#109;</a></p>\n<p><a href=\"/glossary#\"><strong>employment_status</strong></a>: worker</p>\n<p><a href=\"/glossary#face_image\"><strong>face_image</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>highest_education_attained</strong></a>: Master</p>\n<p><a href=\"/glossary#\"><strong>kyc_status</strong></a>: true</p>\n<p><a href=\"/glossary#last_ok_date\"><strong>last_ok_date</strong></a>: 2022-04-13T04:30:07.985Z</p>\n<p><a href=\"/glossary#\"><strong>legal_name</strong></a>: Eveline Tripman</p>\n<p><a href=\"/glossary#mobile_phone_number\"><strong>mobile_phone_number</strong></a>: +49 30 901820</p>\n<p><a href=\"/glossary#\"><strong>name_suffix</strong></a>: Sr</p>\n<p><a href=\"/glossary#product_code\"><strong>product_code</strong></a>: 1234BW</p>\n<p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p>\n<p><a href=\"/glossary#provider_id\"><strong>provider_id</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>rating</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>relationship_status</strong></a>: single</p>\n<p><a href=\"/glossary#\"><strong>source</strong></a>:</p>\n<p><a href=\"/glossary#status\"><strong>status</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>title</strong></a>: Dr.</p>\n<p><a href=\"/glossary#\"><strong>url</strong></a>: <a href=\"http://www.example.com/id-docs/123/image.png\">http://www.example.com/id-docs/123/image.png</a></p>\n<p><a href=\"/glossary#User\"><strong>user</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p>\n<p><a href=\"/glossary#\"><strong>username</strong></a>: felixsmith</p>\n<p><a href=\"/glossary#credit_limit\">credit_limit</a>:</p>\n<p><a href=\"/glossary#credit_rating\">credit_rating</a>:</p>\n",
      "description_markdown": "Get the Account Applications.\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**account_application_id**](/glossary#account_application_id): \n\n\n\n[**account_applications**](/glossary#account_applications): \n\n\n\n[**amount**](/glossary#): 10.12\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**branch_id**](/glossary#): DERBY6\n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**customer**](/glossary#Customer): \n\n\n\n[**customer_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**customer_number**](/glossary#): 5987953\n\n\n\n[**date**](/glossary#): 2020-01-27\n\n\n\n[**date_of_application**](/glossary#date_of_application): 2020-01-27\n\n\n\n[**date_of_birth**](/glossary#): 2018-03-09\n\n\n\n[**dependants**](/glossary#): 1\n\n\n\n[**dob_of_dependants**](/glossary#dob_of_dependants): [2019-09-08, 2017-07-12]\n\n\n\n[**email**](/glossary#): felixsmith@example.com\n\n\n\n[**employment_status**](/glossary#): worker\n\n\n\n[**face_image**](/glossary#face_image): \n\n\n\n[**highest_education_attained**](/glossary#): Master\n\n\n\n[**kyc_status**](/glossary#): true\n\n\n\n[**last_ok_date**](/glossary#last_ok_date): 2022-04-13T04:30:07.985Z\n\n\n\n[**legal_name**](/glossary#): Eveline Tripman\n\n\n\n[**mobile_phone_number**](/glossary#mobile_phone_number): +49 30 901820\n\n\n\n[**name_suffix**](/glossary#): Sr\n\n\n\n[**product_code**](/glossary#product_code): 1234BW\n\n\n\n[**provider**](/glossary#provider): ETHEREUM\n\n\n\n[**provider_id**](/glossary#provider_id): \n\n\n\n[**rating**](/glossary#): \n\n\n\n[**relationship_status**](/glossary#): single\n\n\n\n[**source**](/glossary#): \n\n\n\n[**status**](/glossary#status): \n\n\n\n[**title**](/glossary#): Dr.\n\n\n\n[**url**](/glossary#): http://www.example.com/id-docs/123/image.png\n\n\n\n[**user**](/glossary#User): \n\n\n\n[**user_id**](/glossary#): 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\n\n\n\n[**username**](/glossary#): felixsmith\n\n\n\n[credit_limit](/glossary#credit_limit): \n\n\n\n[credit_rating](/glossary#credit_rating): \n\n\n",
      "success_response_body": {
        "account_applications": [
          {
            "account_application_id": "gc23a7e2-7dd2-4bdf-a0b4-ae31232a4763",
            "product_code": "1234BW",
            "user": {
              "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
              "email": "felixsmith@example.com",
              "provider_id": "Chris",
              "provider": "http://127.0.0.1:8080",
              "username": "felixsmith"
            },
            "customer": {
              "bank_id": "gh.29.uk",
              "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
              "customer_number": "5987953",
              "legal_name": "Eveline Tripman",
              "mobile_phone_number": "+44 07972 444 876",
              "email": "felixsmith@example.com",
              "face_image": {
                "url": "www.openbankproject",
                "date": "1100-01-01T00:00:00Z"
              },
              "date_of_birth": "1100-01-01T00:00:00Z",
              "relationship_status": "single",
              "dependants": 1,
              "dob_of_dependants": ["1100-01-01T00:00:00Z"],
              "credit_rating": {
                "rating": "OBP",
                "source": "OBP"
              },
              "credit_limit": {
                "currency": "EUR",
                "amount": "0"
              },
              "highest_education_attained": "Master",
              "employment_status": "worker",
              "kyc_status": true,
              "last_ok_date": "2022-04-13T04:30:08Z",
              "title": "Dr.",
              "branch_id": "DERBY6",
              "name_suffix": "Sr"
            },
            "date_of_application": "1100-01-01T00:00:00Z",
            "status": "REQUESTED"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Account-Application", "Account", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "account_applications": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "object",
                  "properties": {
                    "provider": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "provider_id": {
                      "type": "string"
                    },
                    "username": {
                      "type": "string"
                    },
                    "user_id": {
                      "type": "string"
                    }
                  }
                },
                "product_code": {
                  "type": "string"
                },
                "customer": {
                  "type": "object",
                  "properties": {
                    "dependants": {
                      "type": "integer"
                    },
                    "dob_of_dependants": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "format": "date-time"
                      }
                    },
                    "face_image": {
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string"
                        },
                        "date": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    },
                    "credit_limit": {
                      "type": "object",
                      "properties": {
                        "currency": {
                          "type": "string"
                        },
                        "amount": {
                          "type": "string"
                        }
                      }
                    },
                    "employment_status": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "customer_id": {
                      "type": "string"
                    },
                    "relationship_status": {
                      "type": "string"
                    },
                    "bank_id": {
                      "type": "string"
                    },
                    "highest_education_attained": {
                      "type": "string"
                    },
                    "customer_number": {
                      "type": "string"
                    },
                    "credit_rating": {
                      "type": "object",
                      "properties": {
                        "rating": {
                          "type": "string"
                        },
                        "source": {
                          "type": "string"
                        }
                      }
                    },
                    "name_suffix": {
                      "type": "string"
                    },
                    "last_ok_date": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "legal_name": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "branch_id": {
                      "type": "string"
                    },
                    "date_of_birth": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "mobile_phone_number": {
                      "type": "string"
                    },
                    "kyc_status": {
                      "type": "boolean"
                    }
                  }
                },
                "status": {
                  "type": "string"
                },
                "date_of_application": {
                  "type": "string",
                  "format": "date-time"
                },
                "account_application_id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/account-applications",
      "connector_methods": [
        "obp.getAllAccountApplication",
        "obp.getBank",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv1.2.1-deleteCounterpartyImageUrl",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "deleteCounterpartyImageUrl"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/metadata/image_url",
      "summary": "Delete Counterparty Image URL",
      "description": "<p>Delete image url of other bank account</p>\n<p>Authentication is Optional</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#other_account_id\">OTHER_ACCOUNT_ID</a>:</p>\n<p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p>\n<p><strong>JSON response body fields:</strong></p>\n",
      "description_markdown": "Delete image url of other bank account\n\nAuthentication is Optional\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[OTHER_ACCOUNT_ID](/glossary#other_account_id): \n\n\n\n[VIEW_ID](/glossary#this_view_id): owner\n\n\n\n\n\n**JSON response body fields:**\n\n\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "jsonString": "{}"
      },
      "error_response_bodies": ["OBP-50000: Unknown Error."],
      "tags": ["Counterparty-Metadata", "Counterparty", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/metadata/image_url",
      "connector_methods": [
        "obp.checkBankAccountExists",
        "obp.getBank",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv2.0.0-getKycDocuments",
      "implemented_by": {
        "version": "OBPv2.0.0",
        "function": "getKycDocuments"
      },
      "request_verb": "GET",
      "request_url": "/obp/v2.0.0/customers/CUSTOMER_ID/kyc_documents",
      "summary": "Get Customer KYC Documents",
      "description": "<p>Get KYC (know your customer) documents for a customer specified by CUSTOMER_ID<br />\nGet a list of documents that affirm the identity of the customer<br />\nPassport, driving licence etc.<br />\nAuthentication is Optional</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Customer.customer_id\">CUSTOMER_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>customer_number</strong></a>: 5987953</p>\n<p><a href=\"/glossary#documents\"><strong>documents</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>expiry_date</strong></a>: 2021-01-27</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#\"><strong>issue_date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#issue_place\"><strong>issue_place</strong></a>:</p>\n<p><a href=\"/glossary#number\"><strong>number</strong></a>:</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n",
      "description_markdown": "Get KYC (know your customer) documents for a customer specified by CUSTOMER_ID\nGet a list of documents that affirm the identity of the customer\nPassport, driving licence etc.\nAuthentication is Optional\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[CUSTOMER_ID](/glossary#Customer.customer_id): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**customer_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**customer_number**](/glossary#): 5987953\n\n\n\n[**documents**](/glossary#documents): \n\n\n\n[**expiry_date**](/glossary#): 2021-01-27\n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**issue_date**](/glossary#): 2020-01-27\n\n\n\n[**issue_place**](/glossary#issue_place): \n\n\n\n[**number**](/glossary#number): \n\n\n\n[**type**](/glossary#type): \n\n\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "documents": [
          {
            "bank_id": "gh.29.uk",
            "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
            "id": "PlaceholderString",
            "customer_number": "5987953",
            "type": "PlaceholderString",
            "number": "PlaceholderString",
            "issue_date": "1100-01-01T00:00:00Z",
            "issue_place": "PlaceholderString",
            "expiry_date": "1100-01-01T00:00:00Z"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30046: Customer not found. Please specify a valid value for CUSTOMER_ID.",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["KYC", "Customer", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "documents": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "expiry_date": {
                  "type": "string",
                  "format": "date-time"
                },
                "issue_place": {
                  "type": "string"
                },
                "customer_id": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "issue_date": {
                  "type": "string",
                  "format": "date-time"
                },
                "number": {
                  "type": "string"
                },
                "bank_id": {
                  "type": "string"
                },
                "customer_number": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetAnyKycDocuments",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/customers/CUSTOMER_ID/kyc_documents",
      "connector_methods": [
        "obp.getKycDocuments",
        "obp.getCustomerByCustomerId",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv4.0.0-updateSystemDynamicEntity",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "updateSystemDynamicEntity"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v4.0.0/management/system-dynamic-entities/DYNAMIC_ENTITY_ID",
      "summary": "Update System Level Dynamic Entity",
      "description": "<p>Update a System Level Dynamic Entity.</p>\n<p>Authentication is Mandatory</p>\n<p>Update one DynamicEntity, after update finished, the corresponding CRUD endpoints will be changed.</p>\n<p>The following field types are as supported:<br />\n[number, integer, boolean, string, DATE_WITH_DAY, reference]</p>\n<p>DATE_WITH_DAY format: yyyy-MM-dd</p>\n<p>Reference types are like foreign keys and composite foreign keys are supported. The value you need to supply as the (composite) foreign key is a UUID (or several UUIDs in the case of a composite key) that match value in another Entity..<br />\nThe following list shows all the possible reference types in the system with corresponding examples values so you can see how to construct each reference type value.</p>\n<pre><code>&quot;someField0&quot;: {\n    &quot;type&quot;: &quot;reference:FooBar&quot;,\n    &quot;example&quot;: &quot;ee008e95-d043-47d0-a5df-f475d7643b7d&quot;\n}\n\n&quot;someField1&quot;: {\n    &quot;type&quot;: &quot;reference:risk_checks&quot;,\n    &quot;example&quot;: &quot;ee008e95-d043-47d0-a5df-f475d7643b7d&quot;\n}\n\n&quot;someField2&quot;: {\n    &quot;type&quot;: &quot;reference:BookMarkBankAndAccount&quot;,\n    &quot;example&quot;: &quot;ee008e95-d043-47d0-a5df-f475d7643b7d&quot;\n}\n\n&quot;someField3&quot;: {\n    &quot;type&quot;: &quot;reference:risk_check&quot;,\n    &quot;example&quot;: &quot;ee008e95-d043-47d0-a5df-f475d7643b7d&quot;\n}\n\n&quot;someField4&quot;: {\n    &quot;type&quot;: &quot;reference:BookMarkBankAndAccount_system&quot;,\n    &quot;example&quot;: &quot;ee008e95-d043-47d0-a5df-f475d7643b7d&quot;\n}\n\n&quot;someField5&quot;: {\n    &quot;type&quot;: &quot;reference:Hospital&quot;,\n    &quot;example&quot;: &quot;ee008e95-d043-47d0-a5df-f475d7643b7d&quot;\n}\n\n&quot;someField6&quot;: {\n    &quot;type&quot;: &quot;reference:Bank&quot;,\n    &quot;example&quot;: &quot;ee008e95-d043-47d0-a5df-f475d7643b7d&quot;\n}\n\n&quot;someField7&quot;: {\n    &quot;type&quot;: &quot;reference:Consumer&quot;,\n    &quot;example&quot;: &quot;ee008e95-d043-47d0-a5df-f475d7643b7d&quot;\n}\n\n&quot;someField8&quot;: {\n    &quot;type&quot;: &quot;reference:Customer&quot;,\n    &quot;example&quot;: &quot;ee008e95-d043-47d0-a5df-f475d7643b7d&quot;\n}\n\n&quot;someField9&quot;: {\n    &quot;type&quot;: &quot;reference:MethodRouting&quot;,\n    &quot;example&quot;: &quot;ee008e95-d043-47d0-a5df-f475d7643b7d&quot;\n}\n\n&quot;someField10&quot;: {\n    &quot;type&quot;: &quot;reference:DynamicEntity&quot;,\n    &quot;example&quot;: &quot;ee008e95-d043-47d0-a5df-f475d7643b7d&quot;\n}\n\n&quot;someField11&quot;: {\n    &quot;type&quot;: &quot;reference:TransactionRequest&quot;,\n    &quot;example&quot;: &quot;ee008e95-d043-47d0-a5df-f475d7643b7d&quot;\n}\n\n&quot;someField12&quot;: {\n    &quot;type&quot;: &quot;reference:ProductAttribute&quot;,\n    &quot;example&quot;: &quot;ee008e95-d043-47d0-a5df-f475d7643b7d&quot;\n}\n\n&quot;someField13&quot;: {\n    &quot;type&quot;: &quot;reference:AccountAttribute&quot;,\n    &quot;example&quot;: &quot;ee008e95-d043-47d0-a5df-f475d7643b7d&quot;\n}\n\n&quot;someField14&quot;: {\n    &quot;type&quot;: &quot;reference:TransactionAttribute&quot;,\n    &quot;example&quot;: &quot;ee008e95-d043-47d0-a5df-f475d7643b7d&quot;\n}\n\n&quot;someField15&quot;: {\n    &quot;type&quot;: &quot;reference:CustomerAttribute&quot;,\n    &quot;example&quot;: &quot;ee008e95-d043-47d0-a5df-f475d7643b7d&quot;\n}\n\n&quot;someField16&quot;: {\n    &quot;type&quot;: &quot;reference:AccountApplication&quot;,\n    &quot;example&quot;: &quot;ee008e95-d043-47d0-a5df-f475d7643b7d&quot;\n}\n\n&quot;someField17&quot;: {\n    &quot;type&quot;: &quot;reference:CardAttribute&quot;,\n    &quot;example&quot;: &quot;ee008e95-d043-47d0-a5df-f475d7643b7d&quot;\n}\n\n&quot;someField18&quot;: {\n    &quot;type&quot;: &quot;reference:Counterparty&quot;,\n    &quot;example&quot;: &quot;ee008e95-d043-47d0-a5df-f475d7643b7d&quot;\n}\n\n&quot;someField19&quot;: {\n    &quot;type&quot;: &quot;reference:Branch:bankId&amp;branchId&quot;,\n    &quot;example&quot;: &quot;bankId=ee008e95-d043-47d0-a5df-f475d7643b7d&amp;branchId=e28e53c2-c161-4305-a83c-aa4df1d9fd07&quot;\n}\n\n&quot;someField20&quot;: {\n    &quot;type&quot;: &quot;reference:Atm:bankId&amp;atmId&quot;,\n    &quot;example&quot;: &quot;bankId=ee008e95-d043-47d0-a5df-f475d7643b7d&amp;atmId=e28e53c2-c161-4305-a83c-aa4df1d9fd07&quot;\n}\n\n&quot;someField21&quot;: {\n    &quot;type&quot;: &quot;reference:BankAccount:bankId&amp;accountId&quot;,\n    &quot;example&quot;: &quot;bankId=ee008e95-d043-47d0-a5df-f475d7643b7d&amp;accountId=e28e53c2-c161-4305-a83c-aa4df1d9fd07&quot;\n}\n\n&quot;someField22&quot;: {\n    &quot;type&quot;: &quot;reference:Product:bankId&amp;productCode&quot;,\n    &quot;example&quot;: &quot;bankId=ee008e95-d043-47d0-a5df-f475d7643b7d&amp;productCode=e28e53c2-c161-4305-a83c-aa4df1d9fd07&quot;\n}\n\n&quot;someField23&quot;: {\n    &quot;type&quot;: &quot;reference:PhysicalCard:bankId&amp;cardId&quot;,\n    &quot;example&quot;: &quot;bankId=ee008e95-d043-47d0-a5df-f475d7643b7d&amp;cardId=e28e53c2-c161-4305-a83c-aa4df1d9fd07&quot;\n}\n\n&quot;someField24&quot;: {\n    &quot;type&quot;: &quot;reference:Transaction:bankId&amp;accountId&amp;transactionId&quot;,\n    &quot;example&quot;: &quot;bankId=ee008e95-d043-47d0-a5df-f475d7643b7d&amp;accountId=e28e53c2-c161-4305-a83c-aa4df1d9fd07&amp;transactionId=1d3dfbe3-47e6-4396-99c9-379f4b8114c0&quot;\n}\n\n&quot;someField25&quot;: {\n    &quot;type&quot;: &quot;reference:Counterparty:bankId&amp;accountId&amp;counterpartyId&quot;,\n    &quot;example&quot;: &quot;bankId=ee008e95-d043-47d0-a5df-f475d7643b7d&amp;accountId=e28e53c2-c161-4305-a83c-aa4df1d9fd07&amp;counterpartyId=1d3dfbe3-47e6-4396-99c9-379f4b8114c0&quot;\n}\n\n</code></pre>\n",
      "description_markdown": "Update a System Level Dynamic Entity.\n\n\nAuthentication is Mandatory\n\nUpdate one DynamicEntity, after update finished, the corresponding CRUD endpoints will be changed.\n\nThe following field types are as supported:\n[number, integer, boolean, string, DATE_WITH_DAY, reference]\n\nDATE_WITH_DAY format: yyyy-MM-dd\n\nReference types are like foreign keys and composite foreign keys are supported. The value you need to supply as the (composite) foreign key is a UUID (or several UUIDs in the case of a composite key) that match value in another Entity..\nThe following list shows all the possible reference types in the system with corresponding examples values so you can see how to construct each reference type value.\n```\n\"someField0\": {\n    \"type\": \"reference:FooBar\",\n    \"example\": \"ee008e95-d043-47d0-a5df-f475d7643b7d\"\n}\n\n\"someField1\": {\n    \"type\": \"reference:risk_checks\",\n    \"example\": \"ee008e95-d043-47d0-a5df-f475d7643b7d\"\n}\n\n\"someField2\": {\n    \"type\": \"reference:BookMarkBankAndAccount\",\n    \"example\": \"ee008e95-d043-47d0-a5df-f475d7643b7d\"\n}\n\n\"someField3\": {\n    \"type\": \"reference:risk_check\",\n    \"example\": \"ee008e95-d043-47d0-a5df-f475d7643b7d\"\n}\n\n\"someField4\": {\n    \"type\": \"reference:BookMarkBankAndAccount_system\",\n    \"example\": \"ee008e95-d043-47d0-a5df-f475d7643b7d\"\n}\n\n\"someField5\": {\n    \"type\": \"reference:Hospital\",\n    \"example\": \"ee008e95-d043-47d0-a5df-f475d7643b7d\"\n}\n\n\"someField6\": {\n    \"type\": \"reference:Bank\",\n    \"example\": \"ee008e95-d043-47d0-a5df-f475d7643b7d\"\n}\n\n\"someField7\": {\n    \"type\": \"reference:Consumer\",\n    \"example\": \"ee008e95-d043-47d0-a5df-f475d7643b7d\"\n}\n\n\"someField8\": {\n    \"type\": \"reference:Customer\",\n    \"example\": \"ee008e95-d043-47d0-a5df-f475d7643b7d\"\n}\n\n\"someField9\": {\n    \"type\": \"reference:MethodRouting\",\n    \"example\": \"ee008e95-d043-47d0-a5df-f475d7643b7d\"\n}\n\n\"someField10\": {\n    \"type\": \"reference:DynamicEntity\",\n    \"example\": \"ee008e95-d043-47d0-a5df-f475d7643b7d\"\n}\n\n\"someField11\": {\n    \"type\": \"reference:TransactionRequest\",\n    \"example\": \"ee008e95-d043-47d0-a5df-f475d7643b7d\"\n}\n\n\"someField12\": {\n    \"type\": \"reference:ProductAttribute\",\n    \"example\": \"ee008e95-d043-47d0-a5df-f475d7643b7d\"\n}\n\n\"someField13\": {\n    \"type\": \"reference:AccountAttribute\",\n    \"example\": \"ee008e95-d043-47d0-a5df-f475d7643b7d\"\n}\n\n\"someField14\": {\n    \"type\": \"reference:TransactionAttribute\",\n    \"example\": \"ee008e95-d043-47d0-a5df-f475d7643b7d\"\n}\n\n\"someField15\": {\n    \"type\": \"reference:CustomerAttribute\",\n    \"example\": \"ee008e95-d043-47d0-a5df-f475d7643b7d\"\n}\n\n\"someField16\": {\n    \"type\": \"reference:AccountApplication\",\n    \"example\": \"ee008e95-d043-47d0-a5df-f475d7643b7d\"\n}\n\n\"someField17\": {\n    \"type\": \"reference:CardAttribute\",\n    \"example\": \"ee008e95-d043-47d0-a5df-f475d7643b7d\"\n}\n\n\"someField18\": {\n    \"type\": \"reference:Counterparty\",\n    \"example\": \"ee008e95-d043-47d0-a5df-f475d7643b7d\"\n}\n\n\"someField19\": {\n    \"type\": \"reference:Branch:bankId&branchId\",\n    \"example\": \"bankId=ee008e95-d043-47d0-a5df-f475d7643b7d&branchId=e28e53c2-c161-4305-a83c-aa4df1d9fd07\"\n}\n\n\"someField20\": {\n    \"type\": \"reference:Atm:bankId&atmId\",\n    \"example\": \"bankId=ee008e95-d043-47d0-a5df-f475d7643b7d&atmId=e28e53c2-c161-4305-a83c-aa4df1d9fd07\"\n}\n\n\"someField21\": {\n    \"type\": \"reference:BankAccount:bankId&accountId\",\n    \"example\": \"bankId=ee008e95-d043-47d0-a5df-f475d7643b7d&accountId=e28e53c2-c161-4305-a83c-aa4df1d9fd07\"\n}\n\n\"someField22\": {\n    \"type\": \"reference:Product:bankId&productCode\",\n    \"example\": \"bankId=ee008e95-d043-47d0-a5df-f475d7643b7d&productCode=e28e53c2-c161-4305-a83c-aa4df1d9fd07\"\n}\n\n\"someField23\": {\n    \"type\": \"reference:PhysicalCard:bankId&cardId\",\n    \"example\": \"bankId=ee008e95-d043-47d0-a5df-f475d7643b7d&cardId=e28e53c2-c161-4305-a83c-aa4df1d9fd07\"\n}\n\n\"someField24\": {\n    \"type\": \"reference:Transaction:bankId&accountId&transactionId\",\n    \"example\": \"bankId=ee008e95-d043-47d0-a5df-f475d7643b7d&accountId=e28e53c2-c161-4305-a83c-aa4df1d9fd07&transactionId=1d3dfbe3-47e6-4396-99c9-379f4b8114c0\"\n}\n\n\"someField25\": {\n    \"type\": \"reference:Counterparty:bankId&accountId&counterpartyId\",\n    \"example\": \"bankId=ee008e95-d043-47d0-a5df-f475d7643b7d&accountId=e28e53c2-c161-4305-a83c-aa4df1d9fd07&counterpartyId=1d3dfbe3-47e6-4396-99c9-379f4b8114c0\"\n}\n\n```",
      "example_request_body": {
        "FooBar": {
          "description": "description of this entity, can be markdown text.",
          "required": ["name"],
          "properties": {
            "name": {
              "type": "string",
              "minLength": 3,
              "maxLength": 20,
              "example": "James Brown",
              "description": "description of **name** field, can be markdown text."
            },
            "number": {
              "type": "integer",
              "example": 698761728,
              "description": "description of **number** field, can be markdown text."
            }
          }
        },
        "hasPersonalEntity": true
      },
      "success_response_body": {
        "FooBar": {
          "description": "description of this entity, can be markdown text.",
          "required": ["name"],
          "properties": {
            "name": {
              "type": "string",
              "minLength": 3,
              "maxLength": 20,
              "example": "James Brown",
              "description": "description of **name** field, can be markdown text."
            },
            "number": {
              "type": "integer",
              "example": 698761728,
              "description": "description of **number** field, can be markdown text."
            }
          }
        },
        "dynamicEntityId": "dynamic-entity-id",
        "userId": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
        "hasPersonalEntity": true
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-09001: DynamicEntity not found. Please specify a valid value for DYNAMIC_ENTITY_ID.",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Dynamic-Entity-Manage", "API", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "hasPersonalEntity": {
            "type": "boolean"
          },
          "FooBar": {
            "type": "object",
            "properties": {
              "required": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "description": {
                "type": "string"
              },
              "properties": {
                "type": "object",
                "properties": {
                  "number": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": ["number", "integer", "boolean", "string", "DATE_WITH_DAY"]
                      },
                      "example": {
                        "type": "integer"
                      },
                      "description": {
                        "type": "string"
                      }
                    }
                  },
                  "name": {
                    "type": "object",
                    "properties": {
                      "minLength": {
                        "type": "integer"
                      },
                      "type": {
                        "type": "string",
                        "enum": ["number", "integer", "boolean", "string", "DATE_WITH_DAY"]
                      },
                      "maxLength": {
                        "type": "integer"
                      },
                      "example": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "dynamicEntityId": {
            "type": "string"
          },
          "hasPersonalEntity": {
            "type": "boolean"
          },
          "userId": {
            "type": "string"
          },
          "FooBar": {
            "type": "object",
            "properties": {
              "required": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "description": {
                "type": "string"
              },
              "properties": {
                "type": "object",
                "properties": {
                  "number": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": ["number", "integer", "boolean", "string", "DATE_WITH_DAY"]
                      },
                      "example": {
                        "type": "integer"
                      },
                      "description": {
                        "type": "string"
                      }
                    }
                  },
                  "name": {
                    "type": "object",
                    "properties": {
                      "minLength": {
                        "type": "integer"
                      },
                      "type": {
                        "type": "string",
                        "enum": ["number", "integer", "boolean", "string", "DATE_WITH_DAY"]
                      },
                      "maxLength": {
                        "type": "integer"
                      },
                      "example": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanUpdateSystemLevelDynamicEntity",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/system-dynamic-entities/DYNAMIC_ENTITY_ID",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv4.0.0-createDynamicMessageDoc",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "createDynamicMessageDoc"
      },
      "request_verb": "POST",
      "request_url": "/obp/v4.0.0/management/dynamic-message-docs",
      "summary": "Create Dynamic Message Doc",
      "description": "<p>Create a Dynamic Message Doc.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#process\"><strong>process</strong></a>: obp.getBank</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#process\"><strong>process</strong></a>: obp.getBank</p>\n",
      "description_markdown": "Create a Dynamic Message Doc.\n\n\nAuthentication is Mandatory\n\n\n**JSON request body fields:**\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**process**](/glossary#process): obp.getBank\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**process**](/glossary#process): obp.getBank\n\n\n",
      "example_request_body": {
        "outbound_avro_schema": "",
        "inbound_avro_schema": "",
        "adapter_implementation": "",
        "description": "This an optional field. Maximum length is 2000. It can be any characters here.",
        "process": "obp.getBank",
        "outbound_topic": "",
        "method_body": "%20%20%20%20%20%20Future.successful%28%0A%20%20%20%20%20%20%20%20Full%28%28BankCommons%28%0A%20%20%20%20%20%20%20%20%20%20BankId%28%22Hello%20bank%20id%22%29%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%228%22%0A%20%20%20%20%20%20%20%20%29%2C%20None%29%29%0A%20%20%20%20%20%20%29",
        "message_format": "",
        "example_outbound_message": {},
        "inbound_topic": "",
        "example_inbound_message": {},
        "bank_id": "gh.29.uk",
        "programming_lang": "Scala"
      },
      "success_response_body": {
        "outbound_avro_schema": "",
        "inbound_avro_schema": "",
        "adapter_implementation": "",
        "dynamic_message_doc_id": "",
        "description": "This an optional field. Maximum length is 2000. It can be any characters here.",
        "process": "obp.getBank",
        "outbound_topic": "",
        "method_body": "%20%20%20%20%20%20Future.successful%28%0A%20%20%20%20%20%20%20%20Full%28%28BankCommons%28%0A%20%20%20%20%20%20%20%20%20%20BankId%28%22Hello%20bank%20id%22%29%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%228%22%0A%20%20%20%20%20%20%20%20%29%2C%20None%29%29%0A%20%20%20%20%20%20%29",
        "message_format": "",
        "example_outbound_message": {},
        "inbound_topic": "",
        "example_inbound_message": {},
        "bank_id": "gh.29.uk",
        "programming_lang": "Scala"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Dynamic-Message-Doc", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "example_outbound_message": {
            "type": "object",
            "properties": {}
          },
          "outbound_topic": {
            "type": "string"
          },
          "example_inbound_message": {
            "type": "object",
            "properties": {}
          },
          "bank_id": {
            "type": "string"
          },
          "inbound_topic": {
            "type": "string"
          },
          "programming_lang": {
            "type": "string"
          },
          "process": {
            "type": "string"
          },
          "outbound_avro_schema": {
            "type": "string"
          },
          "method_body": {
            "type": "string"
          },
          "message_format": {
            "type": "string"
          },
          "adapter_implementation": {
            "type": "string"
          },
          "inbound_avro_schema": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "example_outbound_message": {
            "type": "object",
            "properties": {}
          },
          "outbound_topic": {
            "type": "string"
          },
          "example_inbound_message": {
            "type": "object",
            "properties": {}
          },
          "bank_id": {
            "type": "string"
          },
          "inbound_topic": {
            "type": "string"
          },
          "programming_lang": {
            "type": "string"
          },
          "dynamic_message_doc_id": {
            "type": "string"
          },
          "process": {
            "type": "string"
          },
          "outbound_avro_schema": {
            "type": "string"
          },
          "method_body": {
            "type": "string"
          },
          "message_format": {
            "type": "string"
          },
          "adapter_implementation": {
            "type": "string"
          },
          "inbound_avro_schema": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateDynamicMessageDoc",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/dynamic-message-docs",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv4.0.0-getAccountsByAccountRoutingRegex",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getAccountsByAccountRoutingRegex"
      },
      "request_verb": "POST",
      "request_url": "/obp/v4.0.0/management/accounts/account-routing-regex-query",
      "summary": "Get Accounts by Account Routing Regex",
      "description": "<p>This endpoint returns an array of accounts matching the provided routing scheme and the routing address regex.</p>\n<p>The <code>bank_id</code> field is optional.</p>\n<p>Example of account routing scheme: <code>IBAN</code>, <code>OBP</code>, <code>AccountNumber</code>, ...<br />\nExample of account routing address regex: <code>DE175.*</code>, <code>55897106215-[A-Z]{3}</code>, ...</p>\n<p>This endpoint can be used to retrieve multiples accounts matching a same account routing address pattern.<br />\nFor example, if you want to link multiple accounts having different currencies, you can create an account<br />\nwith <code>123456789-EUR</code> as Account Number and an other account with <code>123456789-USD</code> as Account Number.<br />\nSo we can identify the Account Number as <code>123456789</code>, so to get all the accounts with the same account number<br />\nand the different currencies, we can use this body in the request :</p>\n<pre><code>{\n   &quot;bank_id&quot;: &quot;BANK_ID&quot;,\n   &quot;account_routing&quot;: {\n       &quot;scheme&quot;: &quot;AccountNumber&quot;,\n       &quot;address&quot;: &quot;123456789-[A-Z]{3}&quot;\n   }\n}\n</code></pre>\n<p>This request will returns the accounts matching the routing address regex (<code>123456789-EUR</code> and <code>123456789-USD</code>).</p>\n<p>Authentication is Mandatory</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#account_routing\"><strong>account_routing</strong></a>:</p>\n<p><a href=\"/glossary#address\"><strong>address</strong></a>:</p>\n<p><a href=\"/glossary#scheme\"><strong>scheme</strong></a>: scheme value</p>\n<p><a href=\"/glossary#\">bank_id</a>: gh.29.uk</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#account_attribute_id\"><strong>account_attribute_id</strong></a>:</p>\n<p><a href=\"/glossary#account_attributes\"><strong>account_attributes</strong></a>:</p>\n<p><a href=\"/glossary#account_routings\"><strong>account_routings</strong></a>:</p>\n<p><a href=\"/glossary#accounts\"><strong>accounts</strong></a>:</p>\n<p><a href=\"/glossary#address\"><strong>address</strong></a>:</p>\n<p><a href=\"/glossary#alias\"><strong>alias</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p>\n<p><a href=\"/glossary#balance\"><strong>balance</strong></a>: 10</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#can_add_comment\"><strong>can_add_comment</strong></a>:</p>\n<p><a href=\"/glossary#can_add_corporate_location\"><strong>can_add_corporate_location</strong></a>:</p>\n<p><a href=\"/glossary#can_add_image\"><strong>can_add_image</strong></a>:</p>\n<p><a href=\"/glossary#can_add_image_url\"><strong>can_add_image_url</strong></a>: true</p>\n<p><a href=\"/glossary#can_add_more_info\"><strong>can_add_more_info</strong></a>: true</p>\n<p><a href=\"/glossary#can_add_open_corporates_url\"><strong>can_add_open_corporates_url</strong></a>:</p>\n<p><a href=\"/glossary#can_add_physical_location\"><strong>can_add_physical_location</strong></a>:</p>\n<p><a href=\"/glossary#can_add_private_alias\"><strong>can_add_private_alias</strong></a>:</p>\n<p><a href=\"/glossary#can_add_public_alias\"><strong>can_add_public_alias</strong></a>:</p>\n<p><a href=\"/glossary#can_add_tag\"><strong>can_add_tag</strong></a>: true</p>\n<p><a href=\"/glossary#can_add_url\"><strong>can_add_url</strong></a>:</p>\n<p><a href=\"/glossary#can_add_where_tag\"><strong>can_add_where_tag</strong></a>:</p>\n<p><a href=\"/glossary#can_delete_comment\"><strong>can_delete_comment</strong></a>:</p>\n<p><a href=\"/glossary#can_delete_corporate_location\"><strong>can_delete_corporate_location</strong></a>: true</p>\n<p><a href=\"/glossary#can_delete_image\"><strong>can_delete_image</strong></a>: true</p>\n<p><a href=\"/glossary#can_delete_physical_location\"><strong>can_delete_physical_location</strong></a>:</p>\n<p><a href=\"/glossary#can_delete_tag\"><strong>can_delete_tag</strong></a>:</p>\n<p><a href=\"/glossary#can_delete_where_tag\"><strong>can_delete_where_tag</strong></a>: true</p>\n<p><a href=\"/glossary#can_edit_owner_comment\"><strong>can_edit_owner_comment</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_balance\"><strong>can_see_bank_account_balance</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_bank_name\"><strong>can_see_bank_account_bank_name</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_currency\"><strong>can_see_bank_account_currency</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_iban\"><strong>can_see_bank_account_iban</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_label\"><strong>can_see_bank_account_label</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_national_identifier\"><strong>can_see_bank_account_national_identifier</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_number\"><strong>can_see_bank_account_number</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_owners\"><strong>can_see_bank_account_owners</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_swift_bic\"><strong>can_see_bank_account_swift_bic</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_type\"><strong>can_see_bank_account_type</strong></a>:</p>\n<p><a href=\"/glossary#can_see_comments\"><strong>can_see_comments</strong></a>:</p>\n<p><a href=\"/glossary#can_see_corporate_location\"><strong>can_see_corporate_location</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_image_url\"><strong>can_see_image_url</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_images\"><strong>can_see_images</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_more_info\"><strong>can_see_more_info</strong></a>:</p>\n<p><a href=\"/glossary#can_see_open_corporates_url\"><strong>can_see_open_corporates_url</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_bank_name\"><strong>can_see_other_account_bank_name</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_iban\"><strong>can_see_other_account_iban</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_kind\"><strong>can_see_other_account_kind</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_metadata\"><strong>can_see_other_account_metadata</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_national_identifier\"><strong>can_see_other_account_national_identifier</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_other_account_number\"><strong>can_see_other_account_number</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_other_account_swift_bic\"><strong>can_see_other_account_swift_bic</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_owner_comment\"><strong>can_see_owner_comment</strong></a>:</p>\n<p><a href=\"/glossary#can_see_physical_location\"><strong>can_see_physical_location</strong></a>:</p>\n<p><a href=\"/glossary#can_see_private_alias\"><strong>can_see_private_alias</strong></a>:</p>\n<p><a href=\"/glossary#can_see_public_alias\"><strong>can_see_public_alias</strong></a>:</p>\n<p><a href=\"/glossary#can_see_tags\"><strong>can_see_tags</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_amount\"><strong>can_see_transaction_amount</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_transaction_balance\"><strong>can_see_transaction_balance</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_currency\"><strong>can_see_transaction_currency</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_description\"><strong>can_see_transaction_description</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_transaction_finish_date\"><strong>can_see_transaction_finish_date</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_metadata\"><strong>can_see_transaction_metadata</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_other_bank_account\"><strong>can_see_transaction_other_bank_account</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_start_date\"><strong>can_see_transaction_start_date</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_this_bank_account\"><strong>can_see_transaction_this_bank_account</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_type\"><strong>can_see_transaction_type</strong></a>:</p>\n<p><a href=\"/glossary#can_see_url\"><strong>can_see_url</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_where_tag\"><strong>can_see_where_tag</strong></a>: true</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#display_name\"><strong>display_name</strong></a>:</p>\n<p><a href=\"/glossary#hide_metadata_if_alias_used\"><strong>hide_metadata_if_alias_used</strong></a>:</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#is_public\"><strong>is_public</strong></a>: true</p>\n<p><a href=\"/glossary#\"><strong>label</strong></a>: My Account</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#number\"><strong>number</strong></a>:</p>\n<p><a href=\"/glossary#owners\"><strong>owners</strong></a>:</p>\n<p><a href=\"/glossary#product_code\"><strong>product_code</strong></a>: 1234BW</p>\n<p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p>\n<p><a href=\"/glossary#scheme\"><strong>scheme</strong></a>: scheme value</p>\n<p><a href=\"/glossary#short_name\"><strong>short_name</strong></a>:</p>\n<p><a href=\"/glossary#tags\"><strong>tags</strong></a>: Create-My-User</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n<p><a href=\"/glossary#User\"><strong>user</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n<p><a href=\"/glossary#views_available\"><strong>views_available</strong></a>:</p>\n<p><a href=\"/glossary#\">product_instance_code</a>: product_instance_code</p>\n",
      "description_markdown": "This endpoint returns an array of accounts matching the provided routing scheme and the routing address regex.\n\nThe `bank_id` field is optional.\n\nExample of account routing scheme: `IBAN`, `OBP`, `AccountNumber`, ...\nExample of account routing address regex: `DE175.*`, `55897106215-[A-Z]{3}`, ...\n\nThis endpoint can be used to retrieve multiples accounts matching a same account routing address pattern.\nFor example, if you want to link multiple accounts having different currencies, you can create an account\nwith `123456789-EUR` as Account Number and an other account with `123456789-USD` as Account Number.\nSo we can identify the Account Number as `123456789`, so to get all the accounts with the same account number\nand the different currencies, we can use this body in the request :\n\n```\n{\n   \"bank_id\": \"BANK_ID\",\n   \"account_routing\": {\n       \"scheme\": \"AccountNumber\",\n       \"address\": \"123456789-[A-Z]{3}\"\n   }\n}\n```\n\nThis request will returns the accounts matching the routing address regex (`123456789-EUR` and `123456789-USD`).\n\n\n\nAuthentication is Mandatory\n\n\n**JSON request body fields:**\n\n\n\n[**account_routing**](/glossary#account_routing): \n\n\n\n[**address**](/glossary#address): \n\n\n\n[**scheme**](/glossary#scheme): scheme value\n\n\n\n[bank_id](/glossary#): gh.29.uk\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**account_attribute_id**](/glossary#account_attribute_id): \n\n\n\n[**account_attributes**](/glossary#account_attributes): \n\n\n\n[**account_routings**](/glossary#account_routings): \n\n\n\n[**accounts**](/glossary#accounts): \n\n\n\n[**address**](/glossary#address): \n\n\n\n[**alias**](/glossary#alias): \n\n\n\n[**amount**](/glossary#): 10.12\n\n\n\n[**balance**](/glossary#balance): 10\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**can_add_comment**](/glossary#can_add_comment): \n\n\n\n[**can_add_corporate_location**](/glossary#can_add_corporate_location): \n\n\n\n[**can_add_image**](/glossary#can_add_image): \n\n\n\n[**can_add_image_url**](/glossary#can_add_image_url): true\n\n\n\n[**can_add_more_info**](/glossary#can_add_more_info): true\n\n\n\n[**can_add_open_corporates_url**](/glossary#can_add_open_corporates_url): \n\n\n\n[**can_add_physical_location**](/glossary#can_add_physical_location): \n\n\n\n[**can_add_private_alias**](/glossary#can_add_private_alias): \n\n\n\n[**can_add_public_alias**](/glossary#can_add_public_alias): \n\n\n\n[**can_add_tag**](/glossary#can_add_tag): true\n\n\n\n[**can_add_url**](/glossary#can_add_url): \n\n\n\n[**can_add_where_tag**](/glossary#can_add_where_tag): \n\n\n\n[**can_delete_comment**](/glossary#can_delete_comment): \n\n\n\n[**can_delete_corporate_location**](/glossary#can_delete_corporate_location): true\n\n\n\n[**can_delete_image**](/glossary#can_delete_image): true\n\n\n\n[**can_delete_physical_location**](/glossary#can_delete_physical_location): \n\n\n\n[**can_delete_tag**](/glossary#can_delete_tag): \n\n\n\n[**can_delete_where_tag**](/glossary#can_delete_where_tag): true\n\n\n\n[**can_edit_owner_comment**](/glossary#can_edit_owner_comment): true\n\n\n\n[**can_see_bank_account_balance**](/glossary#can_see_bank_account_balance): \n\n\n\n[**can_see_bank_account_bank_name**](/glossary#can_see_bank_account_bank_name): true\n\n\n\n[**can_see_bank_account_currency**](/glossary#can_see_bank_account_currency): \n\n\n\n[**can_see_bank_account_iban**](/glossary#can_see_bank_account_iban): \n\n\n\n[**can_see_bank_account_label**](/glossary#can_see_bank_account_label): true\n\n\n\n[**can_see_bank_account_national_identifier**](/glossary#can_see_bank_account_national_identifier): \n\n\n\n[**can_see_bank_account_number**](/glossary#can_see_bank_account_number): true\n\n\n\n[**can_see_bank_account_owners**](/glossary#can_see_bank_account_owners): true\n\n\n\n[**can_see_bank_account_swift_bic**](/glossary#can_see_bank_account_swift_bic): \n\n\n\n[**can_see_bank_account_type**](/glossary#can_see_bank_account_type): \n\n\n\n[**can_see_comments**](/glossary#can_see_comments): \n\n\n\n[**can_see_corporate_location**](/glossary#can_see_corporate_location): true\n\n\n\n[**can_see_image_url**](/glossary#can_see_image_url): true\n\n\n\n[**can_see_images**](/glossary#can_see_images): true\n\n\n\n[**can_see_more_info**](/glossary#can_see_more_info): \n\n\n\n[**can_see_open_corporates_url**](/glossary#can_see_open_corporates_url): \n\n\n\n[**can_see_other_account_bank_name**](/glossary#can_see_other_account_bank_name): \n\n\n\n[**can_see_other_account_iban**](/glossary#can_see_other_account_iban): \n\n\n\n[**can_see_other_account_kind**](/glossary#can_see_other_account_kind): \n\n\n\n[**can_see_other_account_metadata**](/glossary#can_see_other_account_metadata): \n\n\n\n[**can_see_other_account_national_identifier**](/glossary#can_see_other_account_national_identifier): true\n\n\n\n[**can_see_other_account_number**](/glossary#can_see_other_account_number): true\n\n\n\n[**can_see_other_account_swift_bic**](/glossary#can_see_other_account_swift_bic): true\n\n\n\n[**can_see_owner_comment**](/glossary#can_see_owner_comment): \n\n\n\n[**can_see_physical_location**](/glossary#can_see_physical_location): \n\n\n\n[**can_see_private_alias**](/glossary#can_see_private_alias): \n\n\n\n[**can_see_public_alias**](/glossary#can_see_public_alias): \n\n\n\n[**can_see_tags**](/glossary#can_see_tags): \n\n\n\n[**can_see_transaction_amount**](/glossary#can_see_transaction_amount): true\n\n\n\n[**can_see_transaction_balance**](/glossary#can_see_transaction_balance): \n\n\n\n[**can_see_transaction_currency**](/glossary#can_see_transaction_currency): \n\n\n\n[**can_see_transaction_description**](/glossary#can_see_transaction_description): true\n\n\n\n[**can_see_transaction_finish_date**](/glossary#can_see_transaction_finish_date): \n\n\n\n[**can_see_transaction_metadata**](/glossary#can_see_transaction_metadata): \n\n\n\n[**can_see_transaction_other_bank_account**](/glossary#can_see_transaction_other_bank_account): \n\n\n\n[**can_see_transaction_start_date**](/glossary#can_see_transaction_start_date): \n\n\n\n[**can_see_transaction_this_bank_account**](/glossary#can_see_transaction_this_bank_account): \n\n\n\n[**can_see_transaction_type**](/glossary#can_see_transaction_type): \n\n\n\n[**can_see_url**](/glossary#can_see_url): true\n\n\n\n[**can_see_where_tag**](/glossary#can_see_where_tag): true\n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**date**](/glossary#): 2020-01-27\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**display_name**](/glossary#display_name): \n\n\n\n[**hide_metadata_if_alias_used**](/glossary#hide_metadata_if_alias_used): \n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**is_public**](/glossary#is_public): true\n\n\n\n[**label**](/glossary#): My Account\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**number**](/glossary#number): \n\n\n\n[**owners**](/glossary#owners): \n\n\n\n[**product_code**](/glossary#product_code): 1234BW\n\n\n\n[**provider**](/glossary#provider): ETHEREUM\n\n\n\n[**scheme**](/glossary#scheme): scheme value\n\n\n\n[**short_name**](/glossary#short_name): \n\n\n\n[**tags**](/glossary#tags): Create-My-User\n\n\n\n[**type**](/glossary#type): \n\n\n\n[**user**](/glossary#User): \n\n\n\n[**value**](/glossary#): 5987953\n\n\n\n[**views_available**](/glossary#views_available): \n\n\n\n[product_instance_code](/glossary#): product_instance_code\n\n\n",
      "example_request_body": {
        "bank_id": "gh.29.uk",
        "account_routing": {
          "scheme": "AccountNumber",
          "address": "4930396"
        }
      },
      "success_response_body": {
        "accounts": [
          {
            "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
            "label": "NoneLabel",
            "number": "123",
            "owners": [
              {
                "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
                "provider": "http://127.0.0.1:8080",
                "display_name": "OBP"
              }
            ],
            "product_code": "1234BW",
            "balance": {
              "currency": "EUR",
              "amount": "0"
            },
            "views_available": [
              {
                "id": "123",
                "short_name": "short_name",
                "description": "description",
                "is_public": true,
                "alias": "None",
                "hide_metadata_if_alias_used": true,
                "can_add_comment": true,
                "can_add_corporate_location": true,
                "can_add_image": true,
                "can_add_image_url": true,
                "can_add_more_info": true,
                "can_add_open_corporates_url": true,
                "can_add_physical_location": true,
                "can_add_private_alias": true,
                "can_add_public_alias": true,
                "can_add_tag": true,
                "can_add_url": true,
                "can_add_where_tag": true,
                "can_delete_comment": true,
                "can_delete_corporate_location": true,
                "can_delete_image": true,
                "can_delete_physical_location": true,
                "can_delete_tag": true,
                "can_delete_where_tag": true,
                "can_edit_owner_comment": true,
                "can_see_bank_account_balance": true,
                "can_see_bank_account_bank_name": true,
                "can_see_bank_account_currency": true,
                "can_see_bank_account_iban": true,
                "can_see_bank_account_label": true,
                "can_see_bank_account_national_identifier": true,
                "can_see_bank_account_number": true,
                "can_see_bank_account_owners": true,
                "can_see_bank_account_swift_bic": true,
                "can_see_bank_account_type": true,
                "can_see_comments": true,
                "can_see_corporate_location": true,
                "can_see_image_url": true,
                "can_see_images": true,
                "can_see_more_info": true,
                "can_see_open_corporates_url": true,
                "can_see_other_account_bank_name": true,
                "can_see_other_account_iban": true,
                "can_see_other_account_kind": true,
                "can_see_other_account_metadata": true,
                "can_see_other_account_national_identifier": true,
                "can_see_other_account_number": true,
                "can_see_other_account_swift_bic": true,
                "can_see_owner_comment": true,
                "can_see_physical_location": true,
                "can_see_private_alias": true,
                "can_see_public_alias": true,
                "can_see_tags": true,
                "can_see_transaction_amount": true,
                "can_see_transaction_balance": true,
                "can_see_transaction_currency": true,
                "can_see_transaction_description": true,
                "can_see_transaction_finish_date": true,
                "can_see_transaction_metadata": true,
                "can_see_transaction_other_bank_account": true,
                "can_see_transaction_start_date": true,
                "can_see_transaction_this_bank_account": true,
                "can_see_transaction_type": true,
                "can_see_url": true,
                "can_see_where_tag": true
              }
            ],
            "bank_id": "gh.29.uk",
            "account_routings": [
              {
                "scheme": "AccountNumber",
                "address": "4930396"
              }
            ],
            "account_attributes": [
              {
                "product_code": "1234BW",
                "account_attribute_id": "613c83ea-80f9-4560-8404-b9cd4ec42a7f",
                "name": "OVERDRAFT_START_DATE",
                "type": "DATE_WITH_DAY",
                "value": "2012-04-23",
                "product_instance_code": "LKJL98769F"
              }
            ],
            "tags": [
              {
                "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
                "value": "OBP",
                "date": "1100-01-01T00:00:00Z",
                "user": {
                  "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
                  "provider": "http://127.0.0.1:8080",
                  "display_name": "OBP"
                }
              }
            ]
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-20017: Current user does not have access to the view. Please specify a valid value for VIEW_ID.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Account", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "bank_id": {
            "type": "string"
          },
          "account_routing": {
            "type": "object",
            "properties": {
              "scheme": {
                "type": "string"
              },
              "address": {
                "type": "string"
              }
            }
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "accounts": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "product_code": {
                  "type": "string"
                },
                "tags": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "value": {
                        "type": "string"
                      },
                      "date": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "user": {
                        "type": "object",
                        "properties": {
                          "provider": {
                            "type": "string"
                          },
                          "display_name": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "label": {
                  "type": "string"
                },
                "number": {
                  "type": "string"
                },
                "bank_id": {
                  "type": "string"
                },
                "owners": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "provider": {
                        "type": "string"
                      },
                      "display_name": {
                        "type": "string"
                      },
                      "id": {
                        "type": "string"
                      }
                    }
                  }
                },
                "id": {
                  "type": "string"
                },
                "views_available": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "can_see_other_account_swift_bic": {
                        "type": "boolean"
                      },
                      "can_see_where_tag": {
                        "type": "boolean"
                      },
                      "can_see_url": {
                        "type": "boolean"
                      },
                      "can_see_bank_account_swift_bic": {
                        "type": "boolean"
                      },
                      "can_see_tags": {
                        "type": "boolean"
                      },
                      "can_see_transaction_balance": {
                        "type": "boolean"
                      },
                      "can_delete_corporate_location": {
                        "type": "boolean"
                      },
                      "can_add_image_url": {
                        "type": "boolean"
                      },
                      "can_see_public_alias": {
                        "type": "boolean"
                      },
                      "can_add_comment": {
                        "type": "boolean"
                      },
                      "description": {
                        "type": "string"
                      },
                      "can_see_corporate_location": {
                        "type": "boolean"
                      },
                      "can_see_other_account_bank_name": {
                        "type": "boolean"
                      },
                      "can_see_more_info": {
                        "type": "boolean"
                      },
                      "can_see_physical_location": {
                        "type": "boolean"
                      },
                      "can_edit_owner_comment": {
                        "type": "boolean"
                      },
                      "can_see_private_alias": {
                        "type": "boolean"
                      },
                      "can_see_bank_account_balance": {
                        "type": "boolean"
                      },
                      "can_add_public_alias": {
                        "type": "boolean"
                      },
                      "can_see_bank_account_owners": {
                        "type": "boolean"
                      },
                      "can_see_other_account_metadata": {
                        "type": "boolean"
                      },
                      "can_delete_physical_location": {
                        "type": "boolean"
                      },
                      "hide_metadata_if_alias_used": {
                        "type": "boolean"
                      },
                      "can_see_transaction_this_bank_account": {
                        "type": "boolean"
                      },
                      "can_see_image_url": {
                        "type": "boolean"
                      },
                      "can_see_transaction_type": {
                        "type": "boolean"
                      },
                      "can_see_images": {
                        "type": "boolean"
                      },
                      "can_see_transaction_amount": {
                        "type": "boolean"
                      },
                      "can_see_transaction_metadata": {
                        "type": "boolean"
                      },
                      "id": {
                        "type": "string"
                      },
                      "can_see_comments": {
                        "type": "boolean"
                      },
                      "can_see_other_account_iban": {
                        "type": "boolean"
                      },
                      "can_add_image": {
                        "type": "boolean"
                      },
                      "can_see_bank_account_type": {
                        "type": "boolean"
                      },
                      "can_see_other_account_kind": {
                        "type": "boolean"
                      },
                      "can_see_bank_account_currency": {
                        "type": "boolean"
                      },
                      "can_add_where_tag": {
                        "type": "boolean"
                      },
                      "can_see_transaction_start_date": {
                        "type": "boolean"
                      },
                      "can_see_bank_account_label": {
                        "type": "boolean"
                      },
                      "can_add_private_alias": {
                        "type": "boolean"
                      },
                      "can_see_transaction_currency": {
                        "type": "boolean"
                      },
                      "can_add_more_info": {
                        "type": "boolean"
                      },
                      "can_delete_comment": {
                        "type": "boolean"
                      },
                      "can_see_transaction_other_bank_account": {
                        "type": "boolean"
                      },
                      "can_see_bank_account_number": {
                        "type": "boolean"
                      },
                      "can_add_corporate_location": {
                        "type": "boolean"
                      },
                      "can_add_url": {
                        "type": "boolean"
                      },
                      "short_name": {
                        "type": "string"
                      },
                      "can_delete_where_tag": {
                        "type": "boolean"
                      },
                      "is_public": {
                        "type": "boolean"
                      },
                      "can_see_owner_comment": {
                        "type": "boolean"
                      },
                      "can_see_transaction_finish_date": {
                        "type": "boolean"
                      },
                      "can_see_open_corporates_url": {
                        "type": "boolean"
                      },
                      "can_add_physical_location": {
                        "type": "boolean"
                      },
                      "can_see_bank_account_iban": {
                        "type": "boolean"
                      },
                      "can_see_other_account_national_identifier": {
                        "type": "boolean"
                      },
                      "can_delete_image": {
                        "type": "boolean"
                      },
                      "can_add_tag": {
                        "type": "boolean"
                      },
                      "can_add_open_corporates_url": {
                        "type": "boolean"
                      },
                      "can_delete_tag": {
                        "type": "boolean"
                      },
                      "can_see_transaction_description": {
                        "type": "boolean"
                      },
                      "can_see_bank_account_national_identifier": {
                        "type": "boolean"
                      },
                      "can_see_other_account_number": {
                        "type": "boolean"
                      },
                      "can_see_bank_account_bank_name": {
                        "type": "boolean"
                      },
                      "alias": {
                        "type": "string"
                      }
                    }
                  }
                },
                "balance": {
                  "type": "object",
                  "properties": {
                    "currency": {
                      "type": "string"
                    },
                    "amount": {
                      "type": "string"
                    }
                  }
                },
                "account_attributes": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "value": {
                        "type": "string"
                      },
                      "product_code": {
                        "type": "string"
                      },
                      "account_attribute_id": {
                        "type": "string"
                      },
                      "product_instance_code": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    }
                  }
                },
                "account_routings": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "scheme": {
                        "type": "string"
                      },
                      "address": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/accounts/account-routing-regex-query",
      "connector_methods": [
        "obp.getAccountAttributesByAccount",
        "obp.checkBankAccountExists",
        "obp.getAccountRoutingsByScheme"
      ]
    },
    {
      "operation_id": "OBPv1.2.1-updateCounterpartyPublicAlias",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "updateCounterpartyPublicAlias"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/public_alias",
      "summary": "Update public alias of other bank account",
      "description": "<p>Updates the public alias of the other account / counterparty OTHER_ACCOUNT_ID.</p>\n<p>Authentication is Optional<br />\nAuthentication is required if the view is not public.</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#other_account_id\">OTHER_ACCOUNT_ID</a>:</p>\n<p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#success\"><strong>success</strong></a>:</p>\n",
      "description_markdown": "Updates the public alias of the other account / counterparty OTHER_ACCOUNT_ID.\n\nAuthentication is Optional\nAuthentication is required if the view is not public.\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[OTHER_ACCOUNT_ID](/glossary#other_account_id): \n\n\n\n[VIEW_ID](/glossary#this_view_id): owner\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**success**](/glossary#success): \n\n\n",
      "example_request_body": {
        "alias": "String"
      },
      "success_response_body": {
        "success": "Success"
      },
      "error_response_bodies": [
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-10001: Incorrect json format.",
        "the view does not allow metadata access",
        "the view does not allow updating the public alias",
        "Alias cannot be updated",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Counterparty-Metadata", "Counterparty", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "alias": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "success": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/public_alias",
      "connector_methods": [
        "obp.checkBankAccountExists",
        "obp.getBank",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv3.0.0-getAccountsHeld",
      "implemented_by": {
        "version": "OBPv3.0.0",
        "function": "getAccountsHeld"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.0.0/banks/BANK_ID/accounts-held",
      "summary": "Get Accounts Held",
      "description": "<p>Get Accounts held by the current User if even the User has not been assigned the owner View yet.</p>\n<p>Can be used to onboard the account to the API - since all other account and transaction endpoints require views to be assigned.</p>\n<p>optional request parameters:</p>\n<ul>\n<li>account_type_filter: one or many accountType value, split by comma</li>\n<li>account_type_filter_operation: the filter type of account_type_filter, value must be INCLUDE or EXCLUDE</li>\n</ul>\n<p>whole url example:<br />\n/banks/BANK_ID/accounts-held?account_type_filter=330,CURRENT+PLUS&amp;account_type_filter_operation=INCLUDE</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#account_routings\"><strong>account_routings</strong></a>:</p>\n<p><a href=\"/glossary#accounts\"><strong>accounts</strong></a>:</p>\n<p><a href=\"/glossary#address\"><strong>address</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#\"><strong>label</strong></a>: My Account</p>\n<p><a href=\"/glossary#number\"><strong>number</strong></a>:</p>\n<p><a href=\"/glossary#scheme\"><strong>scheme</strong></a>: scheme value</p>\n",
      "description_markdown": "Get Accounts held by the current User if even the User has not been assigned the owner View yet.\n\nCan be used to onboard the account to the API - since all other account and transaction endpoints require views to be assigned.\n\n\noptional request parameters:\n\n* account_type_filter: one or many accountType value, split by comma\n* account_type_filter_operation: the filter type of account_type_filter, value must be INCLUDE or EXCLUDE\n\nwhole url example:\n/banks/BANK_ID/accounts-held?account_type_filter=330,CURRENT+PLUS&account_type_filter_operation=INCLUDE\n    \n\n\n\n        \n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**account_routings**](/glossary#account_routings): \n\n\n\n[**accounts**](/glossary#accounts): \n\n\n\n[**address**](/glossary#address): \n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**label**](/glossary#): My Account\n\n\n\n[**number**](/glossary#number): \n\n\n\n[**scheme**](/glossary#scheme): scheme value\n\n\n",
      "success_response_body": {
        "accounts": [
          {
            "id": "12314",
            "label": "My Account",
            "bank_id": "123",
            "number": "123",
            "account_routings": [
              {
                "scheme": "AccountNumber",
                "address": "4930396"
              }
            ]
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Account", "Account Information Service (AIS)", "View-Custom", "PSD2", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "accounts": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "number": {
                  "type": "string"
                },
                "label": {
                  "type": "string"
                },
                "bank_id": {
                  "type": "string"
                },
                "account_routings": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "scheme": {
                        "type": "string"
                      },
                      "address": {
                        "type": "string"
                      }
                    }
                  }
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts-held",
      "connector_methods": [
        "obp.getCoreBankAccounts",
        "obp.getBankAccountsHeld",
        "obp.getAccountsHeld",
        "obp.getBank",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv3.1.0-enableDisableConsumers",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "enableDisableConsumers"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v3.1.0/management/consumers/CONSUMER_ID",
      "summary": "Enable or Disable Consumers",
      "description": "<p>Enable/Disable a Consumer specified by CONSUMER_ID.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#\">CONSUMER_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#enabled\"><strong>enabled</strong></a>: true</p>\n",
      "description_markdown": "Enable/Disable a Consumer specified by CONSUMER_ID.\n\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[CONSUMER_ID](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**enabled**](/glossary#enabled): true\n\n\n",
      "example_request_body": {
        "enabled": false
      },
      "success_response_body": {
        "enabled": false
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Consumer", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          }
        }
      },
      "roles": [
        {
          "role": "CanEnableConsumers",
          "requires_bank_id": false
        },
        {
          "role": "CanDisableConsumers",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/consumers/CONSUMER_ID",
      "connector_methods": ["obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv3.1.0-refreshUser",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "refreshUser"
      },
      "request_verb": "POST",
      "request_url": "/obp/v3.1.0/users/USER_ID/refresh",
      "summary": "Refresh User",
      "description": "<p>The endpoint is used for updating the accounts, views, account holders for the user.<br />\nAs to the Json body, you can leave it as Empty.<br />\nThis call will get data from backend, no need to prepare the json body in api side.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#User.user_id\">USER_ID</a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#duration_time\"><strong>duration_time</strong></a>: 60</p>\n",
      "description_markdown": "The endpoint is used for updating the accounts, views, account holders for the user.\n As to the Json body, you can leave it as Empty. \n This call will get data from backend, no need to prepare the json body in api side.\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[USER_ID](/glossary#User.user_id): 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\n\n\n\n\n\n**JSON request body fields:**\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**duration_time**](/glossary#duration_time): 60\n\n\n",
      "success_response_body": {
        "duration_time": "10 ms"
      },
      "error_response_bodies": [
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error.",
        "OBP-20001: User not logged in. Authentication is required!"
      ],
      "tags": ["User", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "duration_time": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanRefreshUser",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/users/USER_ID/refresh",
      "connector_methods": ["obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv4.0.0-getUsers",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getUsers"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/users",
      "summary": "Get all Users",
      "description": "<p>Get all users</p>\n<p>Authentication is Mandatory</p>\n<p>CanGetAnyUser entitlement is required,</p>\n<p>Possible custom url parameters for pagination:</p>\n<ul>\n<li>limit=NUMBER ==&gt; default value: 50</li>\n<li>offset=NUMBER ==&gt; default value: 0</li>\n</ul>\n<p>eg1:?limit=100&amp;offset=0</p>\n<ul>\n<li>sort_direction=ASC/DESC ==&gt; default value: DESC.</li>\n</ul>\n<p>eg2:?limit=100&amp;offset=0&amp;sort_direction=ASC</p>\n<ul>\n<li>locked_status (if null ignore)</li>\n</ul>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"m&#97;&#105;&#x6c;&#116;&#111;:&#102;&#x65;li&#x78;&#115;&#x6d;&#105;&#x74;&#x68;&#x40;&#101;&#x78;&#x61;&#109;&#112;l&#101;&#46;&#99;&#x6f;m\">&#102;e&#x6c;i&#120;&#x73;&#109;it&#x68;&#64;&#x65;&#120;&#x61;&#x6d;&#x70;l&#101;&#x2e;&#99;o&#109;</a></p>\n<p><a href=\"/glossary#entitlement_id\"><strong>entitlement_id</strong></a>:</p>\n<p><a href=\"/glossary#entitlements\"><strong>entitlements</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>is_deleted</strong></a>: is_deleted</p>\n<p><a href=\"/glossary#\"><strong>is_locked</strong></a>: is_locked</p>\n<p><a href=\"/glossary#list\"><strong>list</strong></a>:</p>\n<p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p>\n<p><a href=\"/glossary#provider_id\"><strong>provider_id</strong></a>:</p>\n<p><a href=\"/glossary#role_name\"><strong>role_name</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p>\n<p><a href=\"/glossary#\"><strong>username</strong></a>: felixsmith</p>\n<p><a href=\"/glossary#users\"><strong>users</strong></a>: user list</p>\n<p><a href=\"/glossary#\">agreements</a>: agreements</p>\n<p><a href=\"/glossary#\">last_marketing_agreement_signed_date</a>: last_marketing_agreement_signed_date</p>\n<p><a href=\"/glossary#views\">views</a>:</p>\n",
      "description_markdown": "Get all users\n\nAuthentication is Mandatory\n\nCanGetAnyUser entitlement is required,\n\n\n\nPossible custom url parameters for pagination:\n\n* limit=NUMBER ==> default value: 50\n* offset=NUMBER ==> default value: 0\n\neg1:?limit=100&offset=0\n\n\n* sort_direction=ASC/DESC ==> default value: DESC.\n\neg2:?limit=100&offset=0&sort_direction=ASC\n\n\n* locked_status (if null ignore)\n\n\n**JSON response body fields:**\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**email**](/glossary#): felixsmith@example.com\n\n\n\n[**entitlement_id**](/glossary#entitlement_id): \n\n\n\n[**entitlements**](/glossary#entitlements): \n\n\n\n[**is_deleted**](/glossary#): is_deleted\n\n\n\n[**is_locked**](/glossary#): is_locked\n\n\n\n[**list**](/glossary#list): \n\n\n\n[**provider**](/glossary#provider): ETHEREUM\n\n\n\n[**provider_id**](/glossary#provider_id): \n\n\n\n[**role_name**](/glossary#role_name): \n\n\n\n[**user_id**](/glossary#): 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\n\n\n\n[**username**](/glossary#): felixsmith\n\n\n\n[**users**](/glossary#users): user list\n\n\n\n[agreements](/glossary#): agreements\n\n\n\n[last_marketing_agreement_signed_date](/glossary#): last_marketing_agreement_signed_date\n\n\n\n[views](/glossary#views): \n\n\n",
      "success_response_body": {
        "users": [
          {
            "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
            "email": "felixsmith@example.com",
            "provider_id": "Chris",
            "provider": "http://127.0.0.1:8080",
            "username": "felixsmith",
            "entitlements": {
              "list": [
                {
                  "entitlement_id": "6fb17583-1e49-4435-bb74-a14fe0996723",
                  "role_name": "CanQueryOtherUser",
                  "bank_id": "gh.29.uk"
                }
              ]
            },
            "is_deleted": false,
            "last_marketing_agreement_signed_date": "1100-01-01T00:00:00Z",
            "is_locked": false
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["User", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "users": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "provider": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "last_marketing_agreement_signed_date": {
                  "type": "string",
                  "format": "date-time"
                },
                "provider_id": {
                  "type": "string"
                },
                "entitlements": {
                  "type": "object",
                  "properties": {
                    "list": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "role_name": {
                            "type": "string"
                          },
                          "bank_id": {
                            "type": "string"
                          },
                          "entitlement_id": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "is_deleted": {
                  "type": "boolean"
                },
                "is_locked": {
                  "type": "boolean"
                },
                "username": {
                  "type": "string"
                },
                "user_id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetAnyUser",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/users",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv5.0.0-getSystemView",
      "implemented_by": {
        "version": "OBPv5.0.0",
        "function": "getSystemView"
      },
      "request_verb": "GET",
      "request_url": "/obp/v5.0.0/system-views/VIEW_ID",
      "summary": "Get System View",
      "description": "<p>Get System View</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#alias\"><strong>alias</strong></a>:</p>\n<p><a href=\"/glossary#can_add_comment\"><strong>can_add_comment</strong></a>:</p>\n<p><a href=\"/glossary#can_add_corporate_location\"><strong>can_add_corporate_location</strong></a>:</p>\n<p><a href=\"/glossary#can_add_counterparty\"><strong>can_add_counterparty</strong></a>: true</p>\n<p><a href=\"/glossary#can_add_image\"><strong>can_add_image</strong></a>:</p>\n<p><a href=\"/glossary#can_add_image_url\"><strong>can_add_image_url</strong></a>: true</p>\n<p><a href=\"/glossary#can_add_more_info\"><strong>can_add_more_info</strong></a>: true</p>\n<p><a href=\"/glossary#can_add_open_corporates_url\"><strong>can_add_open_corporates_url</strong></a>:</p>\n<p><a href=\"/glossary#can_add_physical_location\"><strong>can_add_physical_location</strong></a>:</p>\n<p><a href=\"/glossary#can_add_private_alias\"><strong>can_add_private_alias</strong></a>:</p>\n<p><a href=\"/glossary#can_add_public_alias\"><strong>can_add_public_alias</strong></a>:</p>\n<p><a href=\"/glossary#can_add_tag\"><strong>can_add_tag</strong></a>: true</p>\n<p><a href=\"/glossary#can_add_transaction_request_to_any_account\"><strong>can_add_transaction_request_to_any_account</strong></a>:</p>\n<p><a href=\"/glossary#can_add_transaction_request_to_own_account\"><strong>can_add_transaction_request_to_own_account</strong></a>:</p>\n<p><a href=\"/glossary#can_add_url\"><strong>can_add_url</strong></a>:</p>\n<p><a href=\"/glossary#can_add_where_tag\"><strong>can_add_where_tag</strong></a>:</p>\n<p><a href=\"/glossary#can_create_direct_debit\"><strong>can_create_direct_debit</strong></a>: true</p>\n<p><a href=\"/glossary#can_create_standing_order\"><strong>can_create_standing_order</strong></a>:</p>\n<p><a href=\"/glossary#can_delete_comment\"><strong>can_delete_comment</strong></a>:</p>\n<p><a href=\"/glossary#can_delete_corporate_location\"><strong>can_delete_corporate_location</strong></a>: true</p>\n<p><a href=\"/glossary#can_delete_image\"><strong>can_delete_image</strong></a>: true</p>\n<p><a href=\"/glossary#can_delete_physical_location\"><strong>can_delete_physical_location</strong></a>:</p>\n<p><a href=\"/glossary#can_delete_tag\"><strong>can_delete_tag</strong></a>:</p>\n<p><a href=\"/glossary#can_delete_where_tag\"><strong>can_delete_where_tag</strong></a>: true</p>\n<p><a href=\"/glossary#can_edit_owner_comment\"><strong>can_edit_owner_comment</strong></a>: true</p>\n<p><a href=\"/glossary#\"><strong>can_grant_access_to_views</strong></a>: can_grant_access_to_views</p>\n<p><a href=\"/glossary#can_query_available_funds\"><strong>can_query_available_funds</strong></a>: true</p>\n<p><a href=\"/glossary#\"><strong>can_revoke_access_to_views</strong></a>: can_revoke_access_to_views</p>\n<p><a href=\"/glossary#can_see_bank_account_balance\"><strong>can_see_bank_account_balance</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_bank_name\"><strong>can_see_bank_account_bank_name</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_credit_limit\"><strong>can_see_bank_account_credit_limit</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_currency\"><strong>can_see_bank_account_currency</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_iban\"><strong>can_see_bank_account_iban</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_label\"><strong>can_see_bank_account_label</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_national_identifier\"><strong>can_see_bank_account_national_identifier</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_number\"><strong>can_see_bank_account_number</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_owners\"><strong>can_see_bank_account_owners</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_routing_address\"><strong>can_see_bank_account_routing_address</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_routing_scheme\"><strong>can_see_bank_account_routing_scheme</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_swift_bic\"><strong>can_see_bank_account_swift_bic</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_type\"><strong>can_see_bank_account_type</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_routing_address\"><strong>can_see_bank_routing_address</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_routing_scheme\"><strong>can_see_bank_routing_scheme</strong></a>:</p>\n<p><a href=\"/glossary#can_see_comments\"><strong>can_see_comments</strong></a>:</p>\n<p><a href=\"/glossary#can_see_corporate_location\"><strong>can_see_corporate_location</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_image_url\"><strong>can_see_image_url</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_images\"><strong>can_see_images</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_more_info\"><strong>can_see_more_info</strong></a>:</p>\n<p><a href=\"/glossary#can_see_open_corporates_url\"><strong>can_see_open_corporates_url</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_bank_name\"><strong>can_see_other_account_bank_name</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_iban\"><strong>can_see_other_account_iban</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_kind\"><strong>can_see_other_account_kind</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_metadata\"><strong>can_see_other_account_metadata</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_national_identifier\"><strong>can_see_other_account_national_identifier</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_other_account_number\"><strong>can_see_other_account_number</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_other_account_routing_address\"><strong>can_see_other_account_routing_address</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_other_account_routing_scheme\"><strong>can_see_other_account_routing_scheme</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_swift_bic\"><strong>can_see_other_account_swift_bic</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_other_bank_routing_address\"><strong>can_see_other_bank_routing_address</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_bank_routing_scheme\"><strong>can_see_other_bank_routing_scheme</strong></a>:</p>\n<p><a href=\"/glossary#can_see_owner_comment\"><strong>can_see_owner_comment</strong></a>:</p>\n<p><a href=\"/glossary#can_see_physical_location\"><strong>can_see_physical_location</strong></a>:</p>\n<p><a href=\"/glossary#can_see_private_alias\"><strong>can_see_private_alias</strong></a>:</p>\n<p><a href=\"/glossary#can_see_public_alias\"><strong>can_see_public_alias</strong></a>:</p>\n<p><a href=\"/glossary#can_see_tags\"><strong>can_see_tags</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_amount\"><strong>can_see_transaction_amount</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_transaction_balance\"><strong>can_see_transaction_balance</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_currency\"><strong>can_see_transaction_currency</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_description\"><strong>can_see_transaction_description</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_transaction_finish_date\"><strong>can_see_transaction_finish_date</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_metadata\"><strong>can_see_transaction_metadata</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_other_bank_account\"><strong>can_see_transaction_other_bank_account</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_start_date\"><strong>can_see_transaction_start_date</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_this_bank_account\"><strong>can_see_transaction_this_bank_account</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_type\"><strong>can_see_transaction_type</strong></a>:</p>\n<p><a href=\"/glossary#can_see_url\"><strong>can_see_url</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_where_tag\"><strong>can_see_where_tag</strong></a>: true</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#hide_metadata_if_alias_used\"><strong>hide_metadata_if_alias_used</strong></a>:</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#is_public\"><strong>is_public</strong></a>: true</p>\n<p><a href=\"/glossary#\"><strong>is_system</strong></a>: true</p>\n<p><a href=\"/glossary#metadata_view\"><strong>metadata_view</strong></a>:</p>\n<p><a href=\"/glossary#short_name\"><strong>short_name</strong></a>:</p>\n<p><a href=\"/glossary#is_firehose\">is_firehose</a>:</p>\n",
      "description_markdown": "Get System View\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[VIEW_ID](/glossary#this_view_id): owner\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**alias**](/glossary#alias): \n\n\n\n[**can_add_comment**](/glossary#can_add_comment): \n\n\n\n[**can_add_corporate_location**](/glossary#can_add_corporate_location): \n\n\n\n[**can_add_counterparty**](/glossary#can_add_counterparty): true\n\n\n\n[**can_add_image**](/glossary#can_add_image): \n\n\n\n[**can_add_image_url**](/glossary#can_add_image_url): true\n\n\n\n[**can_add_more_info**](/glossary#can_add_more_info): true\n\n\n\n[**can_add_open_corporates_url**](/glossary#can_add_open_corporates_url): \n\n\n\n[**can_add_physical_location**](/glossary#can_add_physical_location): \n\n\n\n[**can_add_private_alias**](/glossary#can_add_private_alias): \n\n\n\n[**can_add_public_alias**](/glossary#can_add_public_alias): \n\n\n\n[**can_add_tag**](/glossary#can_add_tag): true\n\n\n\n[**can_add_transaction_request_to_any_account**](/glossary#can_add_transaction_request_to_any_account): \n\n\n\n[**can_add_transaction_request_to_own_account**](/glossary#can_add_transaction_request_to_own_account): \n\n\n\n[**can_add_url**](/glossary#can_add_url): \n\n\n\n[**can_add_where_tag**](/glossary#can_add_where_tag): \n\n\n\n[**can_create_direct_debit**](/glossary#can_create_direct_debit): true\n\n\n\n[**can_create_standing_order**](/glossary#can_create_standing_order): \n\n\n\n[**can_delete_comment**](/glossary#can_delete_comment): \n\n\n\n[**can_delete_corporate_location**](/glossary#can_delete_corporate_location): true\n\n\n\n[**can_delete_image**](/glossary#can_delete_image): true\n\n\n\n[**can_delete_physical_location**](/glossary#can_delete_physical_location): \n\n\n\n[**can_delete_tag**](/glossary#can_delete_tag): \n\n\n\n[**can_delete_where_tag**](/glossary#can_delete_where_tag): true\n\n\n\n[**can_edit_owner_comment**](/glossary#can_edit_owner_comment): true\n\n\n\n[**can_grant_access_to_views**](/glossary#): can_grant_access_to_views\n\n\n\n[**can_query_available_funds**](/glossary#can_query_available_funds): true\n\n\n\n[**can_revoke_access_to_views**](/glossary#): can_revoke_access_to_views\n\n\n\n[**can_see_bank_account_balance**](/glossary#can_see_bank_account_balance): \n\n\n\n[**can_see_bank_account_bank_name**](/glossary#can_see_bank_account_bank_name): true\n\n\n\n[**can_see_bank_account_credit_limit**](/glossary#can_see_bank_account_credit_limit): true\n\n\n\n[**can_see_bank_account_currency**](/glossary#can_see_bank_account_currency): \n\n\n\n[**can_see_bank_account_iban**](/glossary#can_see_bank_account_iban): \n\n\n\n[**can_see_bank_account_label**](/glossary#can_see_bank_account_label): true\n\n\n\n[**can_see_bank_account_national_identifier**](/glossary#can_see_bank_account_national_identifier): \n\n\n\n[**can_see_bank_account_number**](/glossary#can_see_bank_account_number): true\n\n\n\n[**can_see_bank_account_owners**](/glossary#can_see_bank_account_owners): true\n\n\n\n[**can_see_bank_account_routing_address**](/glossary#can_see_bank_account_routing_address): \n\n\n\n[**can_see_bank_account_routing_scheme**](/glossary#can_see_bank_account_routing_scheme): \n\n\n\n[**can_see_bank_account_swift_bic**](/glossary#can_see_bank_account_swift_bic): \n\n\n\n[**can_see_bank_account_type**](/glossary#can_see_bank_account_type): \n\n\n\n[**can_see_bank_routing_address**](/glossary#can_see_bank_routing_address): true\n\n\n\n[**can_see_bank_routing_scheme**](/glossary#can_see_bank_routing_scheme): \n\n\n\n[**can_see_comments**](/glossary#can_see_comments): \n\n\n\n[**can_see_corporate_location**](/glossary#can_see_corporate_location): true\n\n\n\n[**can_see_image_url**](/glossary#can_see_image_url): true\n\n\n\n[**can_see_images**](/glossary#can_see_images): true\n\n\n\n[**can_see_more_info**](/glossary#can_see_more_info): \n\n\n\n[**can_see_open_corporates_url**](/glossary#can_see_open_corporates_url): \n\n\n\n[**can_see_other_account_bank_name**](/glossary#can_see_other_account_bank_name): \n\n\n\n[**can_see_other_account_iban**](/glossary#can_see_other_account_iban): \n\n\n\n[**can_see_other_account_kind**](/glossary#can_see_other_account_kind): \n\n\n\n[**can_see_other_account_metadata**](/glossary#can_see_other_account_metadata): \n\n\n\n[**can_see_other_account_national_identifier**](/glossary#can_see_other_account_national_identifier): true\n\n\n\n[**can_see_other_account_number**](/glossary#can_see_other_account_number): true\n\n\n\n[**can_see_other_account_routing_address**](/glossary#can_see_other_account_routing_address): true\n\n\n\n[**can_see_other_account_routing_scheme**](/glossary#can_see_other_account_routing_scheme): \n\n\n\n[**can_see_other_account_swift_bic**](/glossary#can_see_other_account_swift_bic): true\n\n\n\n[**can_see_other_bank_routing_address**](/glossary#can_see_other_bank_routing_address): \n\n\n\n[**can_see_other_bank_routing_scheme**](/glossary#can_see_other_bank_routing_scheme): \n\n\n\n[**can_see_owner_comment**](/glossary#can_see_owner_comment): \n\n\n\n[**can_see_physical_location**](/glossary#can_see_physical_location): \n\n\n\n[**can_see_private_alias**](/glossary#can_see_private_alias): \n\n\n\n[**can_see_public_alias**](/glossary#can_see_public_alias): \n\n\n\n[**can_see_tags**](/glossary#can_see_tags): \n\n\n\n[**can_see_transaction_amount**](/glossary#can_see_transaction_amount): true\n\n\n\n[**can_see_transaction_balance**](/glossary#can_see_transaction_balance): \n\n\n\n[**can_see_transaction_currency**](/glossary#can_see_transaction_currency): \n\n\n\n[**can_see_transaction_description**](/glossary#can_see_transaction_description): true\n\n\n\n[**can_see_transaction_finish_date**](/glossary#can_see_transaction_finish_date): \n\n\n\n[**can_see_transaction_metadata**](/glossary#can_see_transaction_metadata): \n\n\n\n[**can_see_transaction_other_bank_account**](/glossary#can_see_transaction_other_bank_account): \n\n\n\n[**can_see_transaction_start_date**](/glossary#can_see_transaction_start_date): \n\n\n\n[**can_see_transaction_this_bank_account**](/glossary#can_see_transaction_this_bank_account): \n\n\n\n[**can_see_transaction_type**](/glossary#can_see_transaction_type): \n\n\n\n[**can_see_url**](/glossary#can_see_url): true\n\n\n\n[**can_see_where_tag**](/glossary#can_see_where_tag): true\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**hide_metadata_if_alias_used**](/glossary#hide_metadata_if_alias_used): \n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**is_public**](/glossary#is_public): true\n\n\n\n[**is_system**](/glossary#): true\n\n\n\n[**metadata_view**](/glossary#metadata_view): \n\n\n\n[**short_name**](/glossary#short_name): \n\n\n\n[is_firehose](/glossary#is_firehose): \n\n\n",
      "success_response_body": {
        "id": "1234",
        "short_name": "short_name",
        "description": "description",
        "metadata_view": "owner",
        "is_public": true,
        "is_system": true,
        "alias": "No",
        "hide_metadata_if_alias_used": true,
        "can_grant_access_to_views": ["Owner"],
        "can_revoke_access_to_views": ["Owner"],
        "can_add_comment": true,
        "can_add_corporate_location": true,
        "can_add_image": true,
        "can_add_image_url": true,
        "can_add_more_info": true,
        "can_add_open_corporates_url": true,
        "can_add_physical_location": true,
        "can_add_private_alias": true,
        "can_add_public_alias": true,
        "can_add_tag": true,
        "can_add_url": true,
        "can_add_where_tag": true,
        "can_delete_comment": true,
        "can_add_counterparty": true,
        "can_delete_corporate_location": true,
        "can_delete_image": true,
        "can_delete_physical_location": true,
        "can_delete_tag": true,
        "can_delete_where_tag": true,
        "can_edit_owner_comment": true,
        "can_see_bank_account_balance": true,
        "can_query_available_funds": true,
        "can_see_bank_account_bank_name": true,
        "can_see_bank_account_currency": true,
        "can_see_bank_account_iban": true,
        "can_see_bank_account_label": true,
        "can_see_bank_account_national_identifier": true,
        "can_see_bank_account_number": true,
        "can_see_bank_account_owners": true,
        "can_see_bank_account_swift_bic": true,
        "can_see_bank_account_type": true,
        "can_see_comments": true,
        "can_see_corporate_location": true,
        "can_see_image_url": true,
        "can_see_images": true,
        "can_see_more_info": true,
        "can_see_open_corporates_url": true,
        "can_see_other_account_bank_name": true,
        "can_see_other_account_iban": true,
        "can_see_other_account_kind": true,
        "can_see_other_account_metadata": true,
        "can_see_other_account_national_identifier": true,
        "can_see_other_account_number": true,
        "can_see_other_account_swift_bic": true,
        "can_see_owner_comment": true,
        "can_see_physical_location": true,
        "can_see_private_alias": true,
        "can_see_public_alias": true,
        "can_see_tags": true,
        "can_see_transaction_amount": true,
        "can_see_transaction_balance": true,
        "can_see_transaction_currency": true,
        "can_see_transaction_description": true,
        "can_see_transaction_finish_date": true,
        "can_see_transaction_metadata": true,
        "can_see_transaction_other_bank_account": true,
        "can_see_transaction_start_date": true,
        "can_see_transaction_this_bank_account": true,
        "can_see_transaction_type": true,
        "can_see_url": true,
        "can_see_where_tag": true,
        "can_see_bank_routing_scheme": true,
        "can_see_bank_routing_address": true,
        "can_see_bank_account_routing_scheme": true,
        "can_see_bank_account_routing_address": true,
        "can_see_other_bank_routing_scheme": true,
        "can_see_other_bank_routing_address": true,
        "can_see_other_account_routing_scheme": true,
        "can_see_other_account_routing_address": true,
        "can_add_transaction_request_to_own_account": true,
        "can_add_transaction_request_to_any_account": true,
        "can_see_bank_account_credit_limit": true,
        "can_create_direct_debit": true,
        "can_create_standing_order": true
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["View-System", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "can_see_other_account_swift_bic": {
            "type": "boolean"
          },
          "can_see_where_tag": {
            "type": "boolean"
          },
          "can_see_url": {
            "type": "boolean"
          },
          "can_create_direct_debit": {
            "type": "boolean"
          },
          "can_see_bank_account_swift_bic": {
            "type": "boolean"
          },
          "can_see_bank_account_routing_address": {
            "type": "boolean"
          },
          "can_see_tags": {
            "type": "boolean"
          },
          "can_see_transaction_balance": {
            "type": "boolean"
          },
          "can_delete_corporate_location": {
            "type": "boolean"
          },
          "can_add_image_url": {
            "type": "boolean"
          },
          "can_see_public_alias": {
            "type": "boolean"
          },
          "can_add_transaction_request_to_own_account": {
            "type": "boolean"
          },
          "can_add_comment": {
            "type": "boolean"
          },
          "can_see_other_bank_routing_scheme": {
            "type": "boolean"
          },
          "description": {
            "type": "string"
          },
          "can_see_corporate_location": {
            "type": "boolean"
          },
          "can_see_other_account_bank_name": {
            "type": "boolean"
          },
          "can_see_more_info": {
            "type": "boolean"
          },
          "can_add_counterparty": {
            "type": "boolean"
          },
          "is_system": {
            "type": "boolean"
          },
          "can_revoke_access_to_views": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "can_see_physical_location": {
            "type": "boolean"
          },
          "can_query_available_funds": {
            "type": "boolean"
          },
          "can_edit_owner_comment": {
            "type": "boolean"
          },
          "can_see_private_alias": {
            "type": "boolean"
          },
          "can_see_bank_account_credit_limit": {
            "type": "boolean"
          },
          "can_see_other_account_routing_address": {
            "type": "boolean"
          },
          "can_see_bank_account_balance": {
            "type": "boolean"
          },
          "can_add_public_alias": {
            "type": "boolean"
          },
          "can_see_bank_routing_scheme": {
            "type": "boolean"
          },
          "can_see_bank_account_owners": {
            "type": "boolean"
          },
          "can_see_other_account_metadata": {
            "type": "boolean"
          },
          "can_delete_physical_location": {
            "type": "boolean"
          },
          "hide_metadata_if_alias_used": {
            "type": "boolean"
          },
          "can_see_transaction_this_bank_account": {
            "type": "boolean"
          },
          "can_see_image_url": {
            "type": "boolean"
          },
          "can_see_transaction_type": {
            "type": "boolean"
          },
          "can_see_images": {
            "type": "boolean"
          },
          "can_see_transaction_amount": {
            "type": "boolean"
          },
          "metadata_view": {
            "type": "string"
          },
          "can_see_transaction_metadata": {
            "type": "boolean"
          },
          "can_see_comments": {
            "type": "boolean"
          },
          "can_grant_access_to_views": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "can_see_other_account_iban": {
            "type": "boolean"
          },
          "can_add_image": {
            "type": "boolean"
          },
          "can_see_bank_account_routing_scheme": {
            "type": "boolean"
          },
          "can_see_bank_account_type": {
            "type": "boolean"
          },
          "can_see_other_account_kind": {
            "type": "boolean"
          },
          "can_see_bank_account_currency": {
            "type": "boolean"
          },
          "can_add_where_tag": {
            "type": "boolean"
          },
          "can_see_transaction_start_date": {
            "type": "boolean"
          },
          "can_see_bank_account_label": {
            "type": "boolean"
          },
          "can_add_private_alias": {
            "type": "boolean"
          },
          "can_see_transaction_currency": {
            "type": "boolean"
          },
          "can_add_more_info": {
            "type": "boolean"
          },
          "can_delete_comment": {
            "type": "boolean"
          },
          "can_create_standing_order": {
            "type": "boolean"
          },
          "can_see_other_bank_routing_address": {
            "type": "boolean"
          },
          "can_see_transaction_other_bank_account": {
            "type": "boolean"
          },
          "can_see_bank_account_number": {
            "type": "boolean"
          },
          "can_add_corporate_location": {
            "type": "boolean"
          },
          "alias": {
            "type": "string"
          },
          "can_add_url": {
            "type": "boolean"
          },
          "short_name": {
            "type": "string"
          },
          "can_delete_where_tag": {
            "type": "boolean"
          },
          "is_public": {
            "type": "boolean"
          },
          "can_see_owner_comment": {
            "type": "boolean"
          },
          "can_see_transaction_finish_date": {
            "type": "boolean"
          },
          "can_see_open_corporates_url": {
            "type": "boolean"
          },
          "can_add_physical_location": {
            "type": "boolean"
          },
          "can_see_bank_account_iban": {
            "type": "boolean"
          },
          "can_see_other_account_national_identifier": {
            "type": "boolean"
          },
          "can_see_bank_routing_address": {
            "type": "boolean"
          },
          "can_delete_image": {
            "type": "boolean"
          },
          "can_add_transaction_request_to_any_account": {
            "type": "boolean"
          },
          "can_add_tag": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "can_see_other_account_routing_scheme": {
            "type": "boolean"
          },
          "can_add_open_corporates_url": {
            "type": "boolean"
          },
          "can_delete_tag": {
            "type": "boolean"
          },
          "can_see_transaction_description": {
            "type": "boolean"
          },
          "can_see_bank_account_national_identifier": {
            "type": "boolean"
          },
          "can_see_other_account_number": {
            "type": "boolean"
          },
          "can_see_bank_account_bank_name": {
            "type": "boolean"
          }
        }
      },
      "roles": [
        {
          "role": "CanGetSystemView",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/system-views/VIEW_ID",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv4.0.0-getFeaturedApiCollections",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getFeaturedApiCollections"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/api-collections/featured",
      "summary": "Get Featured Api Collections",
      "description": "<p>Get Featured Api Collections.</p>\n<p>Authentication is Optional</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>api_collection_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>api_collection_name</strong></a>: Favourites</p>\n<p><a href=\"/glossary#\"><strong>api_collections</strong></a>: api_collections</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#\"><strong>is_sharable</strong></a>: is_sharable</p>\n<p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p>\n",
      "description_markdown": "Get Featured Api Collections.\n\nAuthentication is Optional\n\n\n**JSON response body fields:**\n\n\n\n[**api_collection_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**api_collection_name**](/glossary#): Favourites\n\n\n\n[**api_collections**](/glossary#): api_collections\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**is_sharable**](/glossary#): is_sharable\n\n\n\n[**user_id**](/glossary#): 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\n\n\n",
      "success_response_body": {
        "api_collections": [
          {
            "api_collection_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
            "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
            "api_collection_name": "Favourites",
            "is_sharable": true,
            "description": "This an optional field. Maximum length is 2000. It can be any characters here."
          }
        ]
      },
      "error_response_bodies": ["OBP-50000: Unknown Error."],
      "tags": ["Api-Collection", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "api_collections": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "description": {
                  "type": "string"
                },
                "api_collection_id": {
                  "type": "string"
                },
                "api_collection_name": {
                  "type": "string"
                },
                "is_sharable": {
                  "type": "boolean"
                },
                "user_id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/api-collections/featured",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv4.0.0-getConnectorMethod",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getConnectorMethod"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/management/connector-methods/CONNECTOR_METHOD_ID",
      "summary": "Get Connector Method by Id",
      "description": "<p>Get an internal connector by CONNECTOR_METHOD_ID.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#\">CONNECTOR_METHOD_ID</a>: ace0352a-9a0f-4bfa-b30b-9003aa467f51</p>\n<p><strong>JSON response body fields:</strong></p>\n",
      "description_markdown": "Get an internal connector by CONNECTOR_METHOD_ID.\n\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[CONNECTOR_METHOD_ID](/glossary#): ace0352a-9a0f-4bfa-b30b-9003aa467f51\n\n\n\n\n\n**JSON response body fields:**\n\n\n",
      "success_response_body": {
        "connector_method_id": "ace0352a-9a0f-4bfa-b30b-9003aa467f51",
        "method_name": "getBank",
        "method_body": "%20%20%20%20%20%20Future.successful%28%0A%20%20%20%20%20%20%20%20Full%28%28BankCommons%28%0A%20%20%20%20%20%20%20%20%20%20BankId%28%22Hello%20bank%20id%22%29%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%228%22%0A%20%20%20%20%20%20%20%20%29%2C%20None%29%29%0A%20%20%20%20%20%20%29",
        "programming_lang": "Scala"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Connector-Method", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "connector_method_id": {
            "type": "string"
          },
          "method_name": {
            "type": "string"
          },
          "programming_lang": {
            "type": "string"
          },
          "method_body": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanGetConnectorMethod",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/connector-methods/CONNECTOR_METHOD_ID",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv4.0.0-getApiCollectionsForUser",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getApiCollectionsForUser"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/users/USER_ID/api-collections",
      "summary": "Get Api Collections for User",
      "description": "<p>Get Api Collections for User.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#User.user_id\">USER_ID</a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>api_collection_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>api_collection_name</strong></a>: Favourites</p>\n<p><a href=\"/glossary#\"><strong>api_collections</strong></a>: api_collections</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#\"><strong>is_sharable</strong></a>: is_sharable</p>\n<p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p>\n",
      "description_markdown": "Get Api Collections for User.\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[USER_ID](/glossary#User.user_id): 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**api_collection_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**api_collection_name**](/glossary#): Favourites\n\n\n\n[**api_collections**](/glossary#): api_collections\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**is_sharable**](/glossary#): is_sharable\n\n\n\n[**user_id**](/glossary#): 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\n\n\n",
      "success_response_body": {
        "api_collections": [
          {
            "api_collection_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
            "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
            "api_collection_name": "Favourites",
            "is_sharable": true,
            "description": "This an optional field. Maximum length is 2000. It can be any characters here."
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20057: User not found by userId.",
        "OBP-50000: Unknown Error.",
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["Api-Collection", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "api_collections": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "description": {
                  "type": "string"
                },
                "api_collection_id": {
                  "type": "string"
                },
                "api_collection_name": {
                  "type": "string"
                },
                "is_sharable": {
                  "type": "boolean"
                },
                "user_id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetApiCollectionsForUser",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/users/USER_ID/api-collections",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv1.2.1-addCounterpartyPublicAlias",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "addCounterpartyPublicAlias"
      },
      "request_verb": "POST",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/public_alias",
      "summary": "Add public alias to other bank account",
      "description": "<p>Creates the public alias for the other account OTHER_ACCOUNT_ID.</p>\n<p>Authentication is Optional<br />\nAuthentication is required if the view is not public.</p>\n<p>Note: Public aliases are automatically generated for new 'other accounts / counterparties', so this call should only be used if<br />\nthe public alias was deleted.</p>\n<p>The VIEW_ID parameter should be a view the caller is permitted to access to and that has permission to create public aliases.</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#other_account_id\">OTHER_ACCOUNT_ID</a>:</p>\n<p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#alias\"><strong>alias</strong></a>:</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#success\"><strong>success</strong></a>:</p>\n",
      "description_markdown": "Creates the public alias for the other account OTHER_ACCOUNT_ID.\n\nAuthentication is Optional\nAuthentication is required if the view is not public.\n\nNote: Public aliases are automatically generated for new 'other accounts / counterparties', so this call should only be used if\nthe public alias was deleted.\n\nThe VIEW_ID parameter should be a view the caller is permitted to access to and that has permission to create public aliases.\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[OTHER_ACCOUNT_ID](/glossary#other_account_id): \n\n\n\n[VIEW_ID](/glossary#this_view_id): owner\n\n\n\n\n\n**JSON request body fields:**\n\n\n\n[**alias**](/glossary#alias): \n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**success**](/glossary#success): \n\n\n",
      "example_request_body": {
        "alias": "String"
      },
      "success_response_body": {
        "success": "Success"
      },
      "error_response_bodies": [
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error.",
        "the view does not allow metadata access",
        "the view does not allow adding a public alias",
        "Alias cannot be added",
        "public alias added"
      ],
      "tags": ["Counterparty-Metadata", "Counterparty", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "alias": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "success": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/public_alias",
      "connector_methods": [
        "obp.checkBankAccountExists",
        "obp.getBank",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv4.0.0-deleteBankLevelEndpointMapping",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "deleteBankLevelEndpointMapping"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v4.0.0/management/banks/BANK_ID/endpoint-mappings/ENDPOINT_MAPPING_ID",
      "summary": "Delete Bank Level Endpoint Mapping",
      "description": "<p>Delete a Bank Level Endpoint Mapping.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#\">ENDPOINT_MAPPING_ID</a>: ENDPOINT_MAPPING_ID</p>\n<p><strong>JSON response body fields:</strong></p>\n",
      "description_markdown": "Delete a Bank Level Endpoint Mapping.\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[ENDPOINT_MAPPING_ID](/glossary#): ENDPOINT_MAPPING_ID\n\n\n\n\n\n**JSON response body fields:**\n\n\n",
      "success_response_body": true,
      "error_response_bodies": [
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Endpoint-Mapping", "New-Style"],
      "roles": [
        {
          "role": "CanDeleteBankLevelEndpointMapping",
          "requires_bank_id": true
        },
        {
          "role": "CanDeleteEndpointMapping",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/banks/BANK_ID/endpoint-mappings/ENDPOINT_MAPPING_ID",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv4.0.0-deleteJsonSchemaValidation",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "deleteJsonSchemaValidation"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v4.0.0/management/json-schema-validations/OPERATION_ID",
      "summary": "Delete a JSON Schema Validation",
      "description": "<p>Delete a JSON Schema Validation by operation_id.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#\">OPERATION_ID</a>: OBPv4.0.0-getBanks</p>\n<p><strong>JSON response body fields:</strong></p>\n",
      "description_markdown": "Delete a JSON Schema Validation by operation_id.\n\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[OPERATION_ID](/glossary#): OBPv4.0.0-getBanks\n\n\n\n\n\n**JSON response body fields:**\n\n\n",
      "success_response_body": true,
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["JSON-Schema-Validation", "New-Style"],
      "roles": [
        {
          "role": "CanDeleteJsonSchemaValidation",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/json-schema-validations/OPERATION_ID",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv4.0.0-getMyApiCollectionEndpoint",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getMyApiCollectionEndpoint"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/my/api-collections/API_COLLECTION_NAME/api-collection-endpoints/OPERATION_ID",
      "summary": "Get My Api Collection Endpoint",
      "description": "<p>Get Api Collection Endpoint By API_COLLECTION_NAME and OPERATION_ID.</p>\n<p>Authentication is Optional</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#\">API_COLLECTION_NAME</a>: Favourites</p>\n<p><a href=\"/glossary#\">OPERATION_ID</a>: OBPv4.0.0-getBanks</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>api_collection_endpoint_id</strong></a>: 8uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>api_collection_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>operation_id</strong></a>: OBPv4.0.0-getBanks</p>\n",
      "description_markdown": "Get Api Collection Endpoint By API_COLLECTION_NAME and OPERATION_ID.\n\nAuthentication is Optional\n\n\n**URL Parameters:**\n\n[API_COLLECTION_NAME](/glossary#): Favourites\n\n\n\n[OPERATION_ID](/glossary#): OBPv4.0.0-getBanks\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**api_collection_endpoint_id**](/glossary#): 8uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**api_collection_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**operation_id**](/glossary#): OBPv4.0.0-getBanks\n\n\n",
      "success_response_body": {
        "api_collection_endpoint_id": "8uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "api_collection_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "operation_id": "OBPv4.0.0-getBanks"
      },
      "error_response_bodies": [
        "OBP-20057: User not found by userId.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Api-Collection", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "operation_id": {
            "type": "string"
          },
          "api_collection_id": {
            "type": "string"
          },
          "api_collection_endpoint_id": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/my/api-collections/API_COLLECTION_NAME/api-collection-endpoints/OPERATION_ID",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv2.0.0-getKycStatuses",
      "implemented_by": {
        "version": "OBPv2.0.0",
        "function": "getKycStatuses"
      },
      "request_verb": "GET",
      "request_url": "/obp/v2.0.0/customers/CUSTOMER_ID/kyc_statuses",
      "summary": "Get Customer KYC statuses",
      "description": "<p>Get the KYC statuses for a customer specified by CUSTOMER_ID over time.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Customer.customer_id\">CUSTOMER_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>customer_number</strong></a>: 5987953</p>\n<p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#ok\"><strong>ok</strong></a>: true</p>\n<p><a href=\"/glossary#statuses\"><strong>statuses</strong></a>:</p>\n",
      "description_markdown": "Get the KYC statuses for a customer specified by CUSTOMER_ID over time.\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[CUSTOMER_ID](/glossary#Customer.customer_id): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**customer_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**customer_number**](/glossary#): 5987953\n\n\n\n[**date**](/glossary#): 2020-01-27\n\n\n\n[**ok**](/glossary#ok): true\n\n\n\n[**statuses**](/glossary#statuses): \n\n\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "statuses": [
          {
            "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
            "customer_number": "5987953",
            "ok": true,
            "date": "1100-01-01T00:00:00Z"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30046: Customer not found. Please specify a valid value for CUSTOMER_ID.",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["KYC", "Customer", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "statuses": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "customer_id": {
                  "type": "string"
                },
                "customer_number": {
                  "type": "string"
                },
                "date": {
                  "type": "string",
                  "format": "date-time"
                },
                "ok": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetAnyKycStatuses",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/customers/CUSTOMER_ID/kyc_statuses",
      "connector_methods": [
        "obp.getKycStatuses",
        "obp.getCustomerByCustomerId",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv4.0.0-verifyRequestSignResponse",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "verifyRequestSignResponse"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/development/echo/jws-verified-request-jws-signed-response",
      "summary": "Verify Request and Sign Response of a current call",
      "description": "<p>Verify Request and Sign Response of a current call.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>JSON response body fields:</strong></p>\n",
      "description_markdown": "Verify Request and Sign Response of a current call.\n\n      \n\nAuthentication is Mandatory\n\n\n**JSON response body fields:**\n\n\n",
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["API", "New-Style"],
      "roles": [],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/development/echo/jws-verified-request-jws-signed-response",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv4.0.0-deleteDynamicResourceDoc",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "deleteDynamicResourceDoc"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v4.0.0/management/dynamic-resource-docs/DYNAMIC-RESOURCE-DOC-ID",
      "summary": "Delete Dynamic Resource Doc",
      "description": "<p>Delete a Dynamic Resource Doc.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>JSON response body fields:</strong></p>\n",
      "description_markdown": "Delete a Dynamic Resource Doc.\n\n\nAuthentication is Mandatory\n\n\n**JSON response body fields:**\n\n\n",
      "success_response_body": true,
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Dynamic-Resource-Doc", "New-Style"],
      "roles": [
        {
          "role": "CanDeleteDynamicResourceDoc",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/dynamic-resource-docs/DYNAMIC-RESOURCE-DOC-ID",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv4.0.0-createOrUpdateProductAttributeDefinition",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "createOrUpdateProductAttributeDefinition"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/attribute-definitions/product",
      "summary": "Create or Update Product Attribute Definition",
      "description": "<p>Create or Update Product Attribute Definition</p>\n<p>The category field must be Product</p>\n<p>The type field must be one of; DOUBLE, STRING, INTEGER and DATE_WITH_DAY</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#alias\"><strong>alias</strong></a>:</p>\n<p><a href=\"/glossary#attribute_definition_id\"><strong>attribute_definition_id</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#can_be_seen_on_views\"><strong>can_be_seen_on_views</strong></a>: true</p>\n<p><a href=\"/glossary#category\"><strong>category</strong></a>:</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#is_active\"><strong>is_active</strong></a>: true</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n",
      "description_markdown": "Create or Update Product Attribute Definition\n\nThe category field must be Product\n\nThe type field must be one of; DOUBLE, STRING, INTEGER and DATE_WITH_DAY\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**alias**](/glossary#alias): \n\n\n\n[**attribute_definition_id**](/glossary#attribute_definition_id): \n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**can_be_seen_on_views**](/glossary#can_be_seen_on_views): true\n\n\n\n[**category**](/glossary#category): \n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**is_active**](/glossary#is_active): true\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**type**](/glossary#type): \n\n\n",
      "example_request_body": {
        "name": "SPECIAL_TAX_NUMBER",
        "category": "Product",
        "type": "STRING",
        "description": "description",
        "alias": "STRING",
        "can_be_seen_on_views": ["bank"],
        "is_active": true
      },
      "success_response_body": {
        "attribute_definition_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
        "bank_id": "gh.29.uk",
        "name": "SPECIAL_TAX_NUMBER",
        "category": "Product",
        "type": "STRING",
        "description": "description",
        "alias": "STRING",
        "can_be_seen_on_views": ["bank"],
        "is_active": true
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["Product", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "can_be_seen_on_views": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "description": {
            "type": "string"
          },
          "is_active": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "alias": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "can_be_seen_on_views": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "attribute_definition_id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "is_active": {
            "type": "boolean"
          },
          "bank_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "alias": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateProductAttributeDefinitionAtOneBank",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/attribute-definitions/product",
      "connector_methods": ["obp.createOrUpdateAttributeDefinition"]
    },
    {
      "operation_id": "OBPv3.1.0-getConsumersForCurrentUser",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "getConsumersForCurrentUser"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.1.0/management/users/current/consumers",
      "summary": "Get Consumers (logged in User)",
      "description": "<p>Get the Consumers for logged in User.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#app_name\"><strong>app_name</strong></a>:</p>\n<p><a href=\"/glossary#app_type\"><strong>app_type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>consumer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#consumers\"><strong>consumers</strong></a>:</p>\n<p><a href=\"/glossary#created\"><strong>created</strong></a>:</p>\n<p><a href=\"/glossary#created_by_user\"><strong>created_by_user</strong></a>:</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#developer_email\"><strong>developer_email</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"&#109;&#97;i&#108;&#x74;&#x6f;&#x3a;fe&#x6c;&#105;&#x78;&#115;&#x6d;&#x69;&#x74;h@&#101;&#x78;&#97;&#x6d;&#x70;&#x6c;&#101;&#46;c&#x6f;&#109;\">&#x66;e&#x6c;ix&#x73;m&#105;&#116;&#x68;&#x40;&#x65;&#120;&#97;&#x6d;&#x70;&#108;&#x65;&#x2e;c&#111;&#x6d;</a></p>\n<p><a href=\"/glossary#enabled\"><strong>enabled</strong></a>: true</p>\n<p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p>\n<p><a href=\"/glossary#provider_id\"><strong>provider_id</strong></a>:</p>\n<p><a href=\"/glossary#redirect_url\"><strong>redirect_url</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p>\n<p><a href=\"/glossary#\"><strong>username</strong></a>: felixsmith</p>\n",
      "description_markdown": "Get the Consumers for logged in User.\n\n\n\nAuthentication is Mandatory\n\n\n**JSON response body fields:**\n\n\n\n[**app_name**](/glossary#app_name): \n\n\n\n[**app_type**](/glossary#app_type): \n\n\n\n[**consumer_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**consumers**](/glossary#consumers): \n\n\n\n[**created**](/glossary#created): \n\n\n\n[**created_by_user**](/glossary#created_by_user): \n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**developer_email**](/glossary#developer_email): \n\n\n\n[**email**](/glossary#): felixsmith@example.com\n\n\n\n[**enabled**](/glossary#enabled): true\n\n\n\n[**provider**](/glossary#provider): ETHEREUM\n\n\n\n[**provider_id**](/glossary#provider_id): \n\n\n\n[**redirect_url**](/glossary#redirect_url): \n\n\n\n[**user_id**](/glossary#): 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\n\n\n\n[**username**](/glossary#): felixsmith\n\n\n",
      "success_response_body": {
        "consumers": [
          {
            "consumer_id": "8e716299-4668-4efd-976a-67f57a9984ec",
            "app_name": "SOFI",
            "app_type": "Web",
            "description": "Account Management",
            "developer_email": "felixsmith@example.com",
            "redirect_url": "www.openbankproject.com",
            "created_by_user": {
              "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
              "email": "felixsmith@example.com",
              "provider_id": "Chris",
              "provider": "http://127.0.0.1:8080",
              "username": "felixsmith"
            },
            "enabled": true,
            "created": "1100-01-01T00:00:00Z"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Consumer", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "consumers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "app_name": {
                  "type": "string"
                },
                "enabled": {
                  "type": "boolean"
                },
                "created_by_user": {
                  "type": "object",
                  "properties": {
                    "provider": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "provider_id": {
                      "type": "string"
                    },
                    "username": {
                      "type": "string"
                    },
                    "user_id": {
                      "type": "string"
                    }
                  }
                },
                "description": {
                  "type": "string"
                },
                "developer_email": {
                  "type": "string"
                },
                "created": {
                  "type": "string",
                  "format": "date-time"
                },
                "consumer_id": {
                  "type": "string"
                },
                "redirect_url": {
                  "type": "string"
                },
                "app_type": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/users/current/consumers",
      "connector_methods": ["obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv3.1.0-updateCustomerEmail",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "updateCustomerEmail"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/customers/CUSTOMER_ID/email",
      "summary": "Update the email of a Customer",
      "description": "<p>Update an email of the Customer specified by CUSTOMER_ID.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#Customer.customer_id\">CUSTOMER_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#\"><strong>branch_id</strong></a>: DERBY6</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>customer_number</strong></a>: 5987953</p>\n<p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#\"><strong>date_of_birth</strong></a>: 2018-03-09</p>\n<p><a href=\"/glossary#\"><strong>dependants</strong></a>: 1</p>\n<p><a href=\"/glossary#dob_of_dependants\"><strong>dob_of_dependants</strong></a>: [2019-09-08, 2017-07-12]</p>\n<p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"&#109;&#97;&#x69;l&#116;&#111;&#58;f&#x65;li&#x78;&#x73;&#x6d;i&#116;&#104;@e&#x78;&#97;m&#112;&#108;&#x65;&#x2e;&#99;&#x6f;&#x6d;\">&#102;&#x65;&#x6c;&#x69;&#x78;&#115;&#109;&#105;&#x74;&#x68;&#x40;&#101;&#120;&#97;mp&#108;&#x65;&#46;&#x63;&#x6f;&#x6d;</a></p>\n<p><a href=\"/glossary#\"><strong>employment_status</strong></a>: worker</p>\n<p><a href=\"/glossary#face_image\"><strong>face_image</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>highest_education_attained</strong></a>: Master</p>\n<p><a href=\"/glossary#\"><strong>kyc_status</strong></a>: true</p>\n<p><a href=\"/glossary#last_ok_date\"><strong>last_ok_date</strong></a>: 2022-04-13T04:30:07.985Z</p>\n<p><a href=\"/glossary#\"><strong>legal_name</strong></a>: Eveline Tripman</p>\n<p><a href=\"/glossary#mobile_phone_number\"><strong>mobile_phone_number</strong></a>: +49 30 901820</p>\n<p><a href=\"/glossary#\"><strong>name_suffix</strong></a>: Sr</p>\n<p><a href=\"/glossary#\"><strong>rating</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>relationship_status</strong></a>: single</p>\n<p><a href=\"/glossary#\"><strong>source</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>title</strong></a>: Dr.</p>\n<p><a href=\"/glossary#\"><strong>url</strong></a>: <a href=\"http://www.example.com/id-docs/123/image.png\">http://www.example.com/id-docs/123/image.png</a></p>\n<p><a href=\"/glossary#credit_limit\">credit_limit</a>:</p>\n<p><a href=\"/glossary#credit_rating\">credit_rating</a>:</p>\n",
      "description_markdown": "Update an email of the Customer specified by CUSTOMER_ID.\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[CUSTOMER_ID](/glossary#Customer.customer_id): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**amount**](/glossary#): 10.12\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**branch_id**](/glossary#): DERBY6\n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**customer_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**customer_number**](/glossary#): 5987953\n\n\n\n[**date**](/glossary#): 2020-01-27\n\n\n\n[**date_of_birth**](/glossary#): 2018-03-09\n\n\n\n[**dependants**](/glossary#): 1\n\n\n\n[**dob_of_dependants**](/glossary#dob_of_dependants): [2019-09-08, 2017-07-12]\n\n\n\n[**email**](/glossary#): felixsmith@example.com\n\n\n\n[**employment_status**](/glossary#): worker\n\n\n\n[**face_image**](/glossary#face_image): \n\n\n\n[**highest_education_attained**](/glossary#): Master\n\n\n\n[**kyc_status**](/glossary#): true\n\n\n\n[**last_ok_date**](/glossary#last_ok_date): 2022-04-13T04:30:07.985Z\n\n\n\n[**legal_name**](/glossary#): Eveline Tripman\n\n\n\n[**mobile_phone_number**](/glossary#mobile_phone_number): +49 30 901820\n\n\n\n[**name_suffix**](/glossary#): Sr\n\n\n\n[**rating**](/glossary#): \n\n\n\n[**relationship_status**](/glossary#): single\n\n\n\n[**source**](/glossary#): \n\n\n\n[**title**](/glossary#): Dr.\n\n\n\n[**url**](/glossary#): http://www.example.com/id-docs/123/image.png\n\n\n\n[credit_limit](/glossary#credit_limit): \n\n\n\n[credit_rating](/glossary#credit_rating): \n\n\n",
      "example_request_body": {
        "email": "marko@tesobe.com"
      },
      "success_response_body": {
        "bank_id": "gh.29.uk",
        "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "customer_number": "5987953",
        "legal_name": "Eveline Tripman",
        "mobile_phone_number": "+44 07972 444 876",
        "email": "felixsmith@example.com",
        "face_image": {
          "url": "www.openbankproject",
          "date": "1100-01-01T00:00:00Z"
        },
        "date_of_birth": "1100-01-01T00:00:00Z",
        "relationship_status": "single",
        "dependants": 1,
        "dob_of_dependants": ["1100-01-01T00:00:00Z"],
        "credit_rating": {
          "rating": "OBP",
          "source": "OBP"
        },
        "credit_limit": {
          "currency": "EUR",
          "amount": "0"
        },
        "highest_education_attained": "Master",
        "employment_status": "worker",
        "kyc_status": true,
        "last_ok_date": "2022-04-13T04:30:08Z",
        "title": "Dr.",
        "branch_id": "DERBY6",
        "name_suffix": "Sr"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Customer", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "dependants": {
            "type": "integer"
          },
          "dob_of_dependants": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            }
          },
          "face_image": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string"
              },
              "date": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          "credit_limit": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string"
              },
              "amount": {
                "type": "string"
              }
            }
          },
          "employment_status": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "customer_id": {
            "type": "string"
          },
          "relationship_status": {
            "type": "string"
          },
          "bank_id": {
            "type": "string"
          },
          "highest_education_attained": {
            "type": "string"
          },
          "customer_number": {
            "type": "string"
          },
          "credit_rating": {
            "type": "object",
            "properties": {
              "rating": {
                "type": "string"
              },
              "source": {
                "type": "string"
              }
            }
          },
          "name_suffix": {
            "type": "string"
          },
          "last_ok_date": {
            "type": "string",
            "format": "date-time"
          },
          "legal_name": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "branch_id": {
            "type": "string"
          },
          "date_of_birth": {
            "type": "string",
            "format": "date-time"
          },
          "mobile_phone_number": {
            "type": "string"
          },
          "kyc_status": {
            "type": "boolean"
          }
        }
      },
      "roles": [
        {
          "role": "CanUpdateCustomerEmail",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/customers/CUSTOMER_ID/email",
      "connector_methods": [
        "obp.updateCustomerScaData",
        "obp.getCustomerByCustomerId",
        "obp.getBank",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv3.1.0-getCreditLimitRequestByRequestId",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "getCreditLimitRequestByRequestId"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/customers/CUSTOMER_ID/credit_limit/requests/REQUEST_ID",
      "summary": "Get Credit Limit Order Request By Request Id",
      "description": "<p><strong>NOTE: This endpoint currently only returns example data.</strong></p>\n<pre><code>    Get Credit Limit Order Request By Request Id\n</code></pre>\n<p>Authentication is Optional</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#Customer.customer_id\">CUSTOMER_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#request_id\">REQUEST_ID</a>:</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>nominal_interest_1</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>nominal_interest_2</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>rank_amount_1</strong></a>: 100</p>\n<p><a href=\"/glossary#\"><strong>rank_amount_2</strong></a>:</p>\n",
      "description_markdown": "**NOTE: This endpoint currently only returns example data.**\n\n      \n        Get Credit Limit Order Request By Request Id\n\n\nAuthentication is Optional\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[CUSTOMER_ID](/glossary#Customer.customer_id): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[REQUEST_ID](/glossary#request_id): \n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**nominal_interest_1**](/glossary#): \n\n\n\n[**nominal_interest_2**](/glossary#): \n\n\n\n[**rank_amount_1**](/glossary#): 100\n\n\n\n[**rank_amount_2**](/glossary#): \n\n\n",
      "success_response_body": {
        "rank_amount_1": "String",
        "nominal_interest_1": "String",
        "rank_amount_2": "String",
        "nominal_interest_2": "String"
      },
      "error_response_bodies": ["OBP-50000: Unknown Error."],
      "tags": ["Customer", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "nominal_interest_1": {
            "type": "string"
          },
          "rank_amount_1": {
            "type": "string"
          },
          "rank_amount_2": {
            "type": "string"
          },
          "nominal_interest_2": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/customers/CUSTOMER_ID/credit_limit/requests/REQUEST_ID",
      "connector_methods": ["obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv4.0.0-getAllAuthenticationTypeValidations",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getAllAuthenticationTypeValidations"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/management/authentication-type-validations",
      "summary": "Get all Authentication Type Validations",
      "description": "<p>Get all Authentication Type Validations.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>JSON response body fields:</strong></p>\n",
      "description_markdown": "Get all Authentication Type Validations.\n\n\n\nAuthentication is Mandatory\n\n\n**JSON response body fields:**\n\n\n",
      "success_response_body": {
        "authentication_types_validations": [
          {
            "operation_id": "OBPv4.0.0-updateXxx",
            "allowed_authentication_types": [
              "DirectLogin",
              "OAuth1.0a",
              "GatewayLogin",
              "DAuth",
              "OAuth2_OIDC",
              "OAuth2_OIDC_FAPI"
            ]
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Authentication-Type-Validation", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "authentication_types_validations": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "authTypes": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {}
                  }
                },
                "operationId": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetAuthenticationTypeValidation",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/authentication-type-validations",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv4.0.0-createTransactionAttribute",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "createTransactionAttribute"
      },
      "request_verb": "POST",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/transactions/TRANSACTION_ID/attribute",
      "summary": "Create Transaction Attribute",
      "description": "<p>Create Transaction Attribute</p>\n<p>The type field must be one of &quot;STRING&quot;, &quot;INTEGER&quot;, &quot;DOUBLE&quot; or DATE_WITH_DAY&quot;</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#transaction_ids\">TRANSACTION_ID</a>: 2fg8a7e4-6d02-40e3-a129-0b2bf89de8ub</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#\"><strong>transaction_attribute_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n",
      "description_markdown": "Create Transaction Attribute\n\nThe type field must be one of \"STRING\", \"INTEGER\", \"DOUBLE\" or DATE_WITH_DAY\"\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[TRANSACTION_ID](/glossary#transaction_ids): 2fg8a7e4-6d02-40e3-a129-0b2bf89de8ub\n\n\n\n\n\n**JSON request body fields:**\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**type**](/glossary#type): \n\n\n\n[**value**](/glossary#): 5987953\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**transaction_attribute_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**type**](/glossary#type): \n\n\n\n[**value**](/glossary#): 5987953\n\n\n",
      "example_request_body": {
        "name": "HOUSE_RENT",
        "type": "DATE_WITH_DAY",
        "value": "123456789"
      },
      "success_response_body": {
        "transaction_attribute_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "name": "HOUSE_RENT",
        "type": "DATE_WITH_DAY",
        "value": "123456789"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["Transaction", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "transaction_attribute_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateTransactionAttributeAtOneBank",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/transactions/TRANSACTION_ID/attribute",
      "connector_methods": ["obp.createOrUpdateTransactionAttribute", "obp.getTransaction"]
    },
    {
      "operation_id": "OBPv4.0.0-getDoubleEntryTransaction",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getDoubleEntryTransaction"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transactions/TRANSACTION_ID/double-entry-transaction",
      "summary": "Get Double Entry Transaction",
      "description": "<p>Get Double Entry Transaction</p>\n<p>This endpoint can be used to see the double entry transactions. It returns the <code>bank_id</code>, <code>account_id</code> and <code>transaction_id</code><br />\nfor the debit end the credit transaction. The other side account can be a settlement account or an OBP account.</p>\n<p>The endpoint also provide the <code>transaction_request</code> object which contains the <code>bank_id</code>, <code>account_id</code> and<br />\n<code>transaction_request_id</code> of the transaction request at the origin of the transaction. Please note that if none<br />\ntransaction request is at the origin of the transaction, the <code>transaction_request</code> object will be <code>null</code>.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#transaction_ids\">TRANSACTION_ID</a>: 2fg8a7e4-6d02-40e3-a129-0b2bf89de8ub</p>\n<p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>account_id</strong></a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#\"><strong>credit_transaction</strong></a>: credit_transaction</p>\n<p><a href=\"/glossary#\"><strong>debit_transaction</strong></a>: debit_transaction</p>\n<p><a href=\"/glossary#\"><strong>transaction_id</strong></a>: 2fg8a7e4-6d02-40e3-a129-0b2bf89de8ub</p>\n<p><a href=\"/glossary#\"><strong>transaction_request</strong></a>: transaction_request</p>\n<p><a href=\"/glossary#\"><strong>transaction_request_id</strong></a>: 8138a7e4-6d02-40e3-a129-0b2bf89de9f1</p>\n",
      "description_markdown": "Get Double Entry Transaction\n\nThis endpoint can be used to see the double entry transactions. It returns the `bank_id`, `account_id` and `transaction_id`\nfor the debit end the credit transaction. The other side account can be a settlement account or an OBP account.\n\nThe endpoint also provide the `transaction_request` object which contains the `bank_id`, `account_id` and\n`transaction_request_id` of the transaction request at the origin of the transaction. Please note that if none\ntransaction request is at the origin of the transaction, the `transaction_request` object will be `null`.\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[TRANSACTION_ID](/glossary#transaction_ids): 2fg8a7e4-6d02-40e3-a129-0b2bf89de8ub\n\n\n\n[VIEW_ID](/glossary#this_view_id): owner\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**account_id**](/glossary#): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**credit_transaction**](/glossary#): credit_transaction\n\n\n\n[**debit_transaction**](/glossary#): debit_transaction\n\n\n\n[**transaction_id**](/glossary#): 2fg8a7e4-6d02-40e3-a129-0b2bf89de8ub\n\n\n\n[**transaction_request**](/glossary#): transaction_request\n\n\n\n[**transaction_request_id**](/glossary#): 8138a7e4-6d02-40e3-a129-0b2bf89de9f1\n\n\n",
      "success_response_body": {
        "transaction_request": {
          "bank_id": "gh.29.uk",
          "account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0",
          "transaction_request_id": "8138a7e4-6d02-40e3-a129-0b2bf89de9f1"
        },
        "debit_transaction": {
          "bank_id": "gh.29.uk",
          "account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0",
          "transaction_id": "2fg8a7e4-6d02-40e3-a129-0b2bf89de8ub"
        },
        "credit_transaction": {
          "bank_id": "gh.29.uk",
          "account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0",
          "transaction_id": "2fg8a7e4-6d02-40e3-a129-0b2bf89de8ub"
        }
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-20017: Current user does not have access to the view. Please specify a valid value for VIEW_ID.",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["Transaction", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "debit_transaction": {
            "type": "object",
            "properties": {
              "bank_id": {
                "type": "string"
              },
              "transaction_id": {
                "type": "string"
              },
              "account_id": {
                "type": "string"
              }
            }
          },
          "credit_transaction": {
            "type": "object",
            "properties": {
              "bank_id": {
                "type": "string"
              },
              "transaction_id": {
                "type": "string"
              },
              "account_id": {
                "type": "string"
              }
            }
          },
          "transaction_request": {
            "type": "object",
            "properties": {
              "bank_id": {
                "type": "string"
              },
              "transaction_request_id": {
                "type": "string"
              },
              "account_id": {
                "type": "string"
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetDoubleEntryTransactionAtAnyBank",
          "requires_bank_id": false
        },
        {
          "role": "CanGetDoubleEntryTransactionAtOneBank",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transactions/TRANSACTION_ID/double-entry-transaction",
      "connector_methods": ["obp.getDoubleEntryBookTransaction", "obp.getTransaction"]
    },
    {
      "operation_id": "OBPv4.0.0-getUserByUserId",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getUserByUserId"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/users/user_id/USER_ID",
      "summary": "Get User by USER_ID",
      "description": "<p>Get user by USER_ID</p>\n<p>Authentication is Mandatory<br />\nCanGetAnyUser entitlement is required,</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#User.user_id\">USER_ID</a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"&#109;&#97;i&#108;&#116;o&#58;f&#x65;&#108;&#x69;&#x78;&#115;&#x6d;&#x69;t&#x68;&#x40;&#x65;&#x78;&#97;m&#x70;&#108;&#101;.&#x63;&#x6f;&#x6d;\">&#x66;&#101;&#108;&#105;&#120;&#115;&#x6d;i&#x74;h&#64;&#x65;x&#97;&#109;ple&#x2e;&#99;&#111;&#x6d;</a></p>\n<p><a href=\"/glossary#entitlement_id\"><strong>entitlement_id</strong></a>:</p>\n<p><a href=\"/glossary#entitlements\"><strong>entitlements</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>is_deleted</strong></a>: is_deleted</p>\n<p><a href=\"/glossary#\"><strong>is_locked</strong></a>: is_locked</p>\n<p><a href=\"/glossary#list\"><strong>list</strong></a>:</p>\n<p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p>\n<p><a href=\"/glossary#provider_id\"><strong>provider_id</strong></a>:</p>\n<p><a href=\"/glossary#role_name\"><strong>role_name</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p>\n<p><a href=\"/glossary#\"><strong>username</strong></a>: felixsmith</p>\n<p><a href=\"/glossary#\">agreements</a>: agreements</p>\n<p><a href=\"/glossary#\">last_marketing_agreement_signed_date</a>: last_marketing_agreement_signed_date</p>\n<p><a href=\"/glossary#views\">views</a>:</p>\n",
      "description_markdown": "Get user by USER_ID\n\nAuthentication is Mandatory\nCanGetAnyUser entitlement is required,\n\n\n**URL Parameters:**\n\n[USER_ID](/glossary#User.user_id): 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**email**](/glossary#): felixsmith@example.com\n\n\n\n[**entitlement_id**](/glossary#entitlement_id): \n\n\n\n[**entitlements**](/glossary#entitlements): \n\n\n\n[**is_deleted**](/glossary#): is_deleted\n\n\n\n[**is_locked**](/glossary#): is_locked\n\n\n\n[**list**](/glossary#list): \n\n\n\n[**provider**](/glossary#provider): ETHEREUM\n\n\n\n[**provider_id**](/glossary#provider_id): \n\n\n\n[**role_name**](/glossary#role_name): \n\n\n\n[**user_id**](/glossary#): 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\n\n\n\n[**username**](/glossary#): felixsmith\n\n\n\n[agreements](/glossary#): agreements\n\n\n\n[last_marketing_agreement_signed_date](/glossary#): last_marketing_agreement_signed_date\n\n\n\n[views](/glossary#views): \n\n\n",
      "success_response_body": {
        "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
        "email": "felixsmith@example.com",
        "provider_id": "Chris",
        "provider": "http://127.0.0.1:8080",
        "username": "felixsmith",
        "entitlements": {
          "list": [
            {
              "entitlement_id": "6fb17583-1e49-4435-bb74-a14fe0996723",
              "role_name": "CanQueryOtherUser",
              "bank_id": "gh.29.uk"
            }
          ]
        },
        "agreements": [],
        "is_deleted": false,
        "last_marketing_agreement_signed_date": "1100-01-01T00:00:00Z",
        "is_locked": false
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-20005: User not found. Please specify a valid value for USER_ID.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["User", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "last_marketing_agreement_signed_date": {
            "type": "string",
            "format": "date-time"
          },
          "provider_id": {
            "type": "string"
          },
          "entitlements": {
            "type": "object",
            "properties": {
              "list": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "role_name": {
                      "type": "string"
                    },
                    "bank_id": {
                      "type": "string"
                    },
                    "entitlement_id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "is_deleted": {
            "type": "boolean"
          },
          "is_locked": {
            "type": "boolean"
          },
          "username": {
            "type": "string"
          },
          "agreements": {
            "type": "object",
            "properties": {}
          },
          "user_id": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanGetAnyUser",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/users/user_id/USER_ID",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv1.2.1-deleteCounterpartyCorporateLocation",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "deleteCounterpartyCorporateLocation"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/metadata/corporate_location",
      "summary": "Delete Counterparty Corporate Location",
      "description": "<p>Delete corporate location of other bank account. Delete the geolocation of the counterparty's registered address</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#other_account_id\">OTHER_ACCOUNT_ID</a>:</p>\n<p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p>\n<p><strong>JSON response body fields:</strong></p>\n",
      "description_markdown": "Delete corporate location of other bank account. Delete the geolocation of the counterparty's registered address\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[OTHER_ACCOUNT_ID](/glossary#other_account_id): \n\n\n\n[VIEW_ID](/glossary#this_view_id): owner\n\n\n\n\n\n**JSON response body fields:**\n\n\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "jsonString": "{}"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "the view does not allow metadata access",
        "Corporate Location cannot be deleted",
        "Delete not completed",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Counterparty-Metadata", "Counterparty", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/metadata/corporate_location",
      "connector_methods": [
        "obp.checkBankAccountExists",
        "obp.getBank",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv1.2.1-getOtherAccountForTransaction",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "getOtherAccountForTransaction"
      },
      "request_verb": "GET",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transactions/TRANSACTION_ID/other_account",
      "summary": "Get Other Account of Transaction",
      "description": "<p>Get other account of a transaction.<br />\nReturns details of the other party involved in the transaction, moderated by the <a href=\"#1_2_1-getViewsForBankAccount\">view</a> (VIEW_ID).<br />\nAuthentication via OAuth is required if the view is not public.</p>\n<p>Authentication is Optional</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#transaction_ids\">TRANSACTION_ID</a>: 2fg8a7e4-6d02-40e3-a129-0b2bf89de8ub</p>\n<p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>IBAN</strong></a>: DE91 1000 0000 0123 4567 89</p>\n<p><a href=\"/glossary#\"><strong>URL</strong></a>: <a href=\"http://www.example.com/id-docs/123/image.png\">http://www.example.com/id-docs/123/image.png</a></p>\n<p><a href=\"/glossary#Bank\"><strong>bank</strong></a>:</p>\n<p><a href=\"/glossary#corporate_location\"><strong>corporate_location</strong></a>: 10</p>\n<p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#display_name\"><strong>display_name</strong></a>:</p>\n<p><a href=\"/glossary#holder\"><strong>holder</strong></a>:</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#image_url\"><strong>image_URL</strong></a>:</p>\n<p><a href=\"/glossary#is_alias\"><strong>is_alias</strong></a>:</p>\n<p><a href=\"/glossary#kind\"><strong>kind</strong></a>:</p>\n<p><a href=\"/glossary#latitude\"><strong>latitude</strong></a>: 38.8951</p>\n<p><a href=\"/glossary#longitude\"><strong>longitude</strong></a>: -77.0364</p>\n<p><a href=\"/glossary#metadata\"><strong>metadata</strong></a>:</p>\n<p><a href=\"/glossary#more_info\"><strong>more_info</strong></a>: More information about this fee</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#national_identifier\"><strong>national_identifier</strong></a>:</p>\n<p><a href=\"/glossary#number\"><strong>number</strong></a>:</p>\n<p><a href=\"/glossary#open_corporates_url\"><strong>open_corporates_URL</strong></a>:</p>\n<p><a href=\"/glossary#physical_location\"><strong>physical_location</strong></a>:</p>\n<p><a href=\"/glossary#private_alias\"><strong>private_alias</strong></a>:</p>\n<p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p>\n<p><a href=\"/glossary#public_alias\"><strong>public_alias</strong></a>:</p>\n<p><a href=\"/glossary#swift_bic\"><strong>swift_bic</strong></a>:</p>\n<p><a href=\"/glossary#User\"><strong>user</strong></a>:</p>\n",
      "description_markdown": "Get other account of a transaction.\nReturns details of the other party involved in the transaction, moderated by the [view](#1_2_1-getViewsForBankAccount) (VIEW_ID).\n          Authentication via OAuth is required if the view is not public.\n\nAuthentication is Optional\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[TRANSACTION_ID](/glossary#transaction_ids): 2fg8a7e4-6d02-40e3-a129-0b2bf89de8ub\n\n\n\n[VIEW_ID](/glossary#this_view_id): owner\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**IBAN**](/glossary#): DE91 1000 0000 0123 4567 89\n\n\n\n[**URL**](/glossary#): http://www.example.com/id-docs/123/image.png\n\n\n\n[**bank**](/glossary#Bank): \n\n\n\n[**corporate_location**](/glossary#corporate_location): 10\n\n\n\n[**date**](/glossary#): 2020-01-27\n\n\n\n[**display_name**](/glossary#display_name): \n\n\n\n[**holder**](/glossary#holder): \n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**image_URL**](/glossary#image_url): \n\n\n\n[**is_alias**](/glossary#is_alias): \n\n\n\n[**kind**](/glossary#kind): \n\n\n\n[**latitude**](/glossary#latitude): 38.8951\n\n\n\n[**longitude**](/glossary#longitude): -77.0364\n\n\n\n[**metadata**](/glossary#metadata): \n\n\n\n[**more_info**](/glossary#more_info): More information about this fee\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**national_identifier**](/glossary#national_identifier): \n\n\n\n[**number**](/glossary#number): \n\n\n\n[**open_corporates_URL**](/glossary#open_corporates_url): \n\n\n\n[**physical_location**](/glossary#physical_location): \n\n\n\n[**private_alias**](/glossary#private_alias): \n\n\n\n[**provider**](/glossary#provider): ETHEREUM\n\n\n\n[**public_alias**](/glossary#public_alias): \n\n\n\n[**swift_bic**](/glossary#swift_bic): \n\n\n\n[**user**](/glossary#User): \n\n\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
        "holder": {
          "name": "OBP",
          "is_alias": true
        },
        "number": "123",
        "kind": "3456",
        "IBAN": "UK234DB",
        "swift_bic": "UK12321DB",
        "bank": {
          "national_identifier": "OBP",
          "name": "OBP"
        },
        "metadata": {
          "public_alias": "NONE",
          "private_alias": "NONE",
          "more_info": "www.openbankproject.com",
          "URL": "www.openbankproject.com",
          "image_URL": "www.openbankproject.com",
          "open_corporates_URL": "www.openbankproject.com",
          "corporate_location": {
            "latitude": 1.231,
            "longitude": 1.231,
            "date": "1100-01-01T00:00:00Z",
            "user": {
              "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
              "provider": "http://127.0.0.1:8080",
              "display_name": "OBP"
            }
          },
          "physical_location": {
            "latitude": 1.231,
            "longitude": 1.231,
            "date": "1100-01-01T00:00:00Z",
            "user": {
              "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
              "provider": "http://127.0.0.1:8080",
              "display_name": "OBP"
            }
          }
        }
      },
      "error_response_bodies": [
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Transaction", "Counterparty"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "metadata": {
            "type": "object",
            "properties": {
              "image_URL": {
                "type": "string"
              },
              "corporate_location": {
                "type": "object",
                "properties": {
                  "longitude": {
                    "type": "number"
                  },
                  "date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "latitude": {
                    "type": "number"
                  },
                  "user": {
                    "type": "object",
                    "properties": {
                      "provider": {
                        "type": "string"
                      },
                      "display_name": {
                        "type": "string"
                      },
                      "id": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "URL": {
                "type": "string"
              },
              "open_corporates_URL": {
                "type": "string"
              },
              "physical_location": {
                "type": "object",
                "properties": {
                  "longitude": {
                    "type": "number"
                  },
                  "date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "latitude": {
                    "type": "number"
                  },
                  "user": {
                    "type": "object",
                    "properties": {
                      "provider": {
                        "type": "string"
                      },
                      "display_name": {
                        "type": "string"
                      },
                      "id": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "public_alias": {
                "type": "string"
              },
              "private_alias": {
                "type": "string"
              },
              "more_info": {
                "type": "string"
              }
            }
          },
          "IBAN": {
            "type": "string"
          },
          "swift_bic": {
            "type": "string"
          },
          "number": {
            "type": "string"
          },
          "holder": {
            "type": "object",
            "properties": {
              "is_alias": {
                "type": "boolean"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "id": {
            "type": "string"
          },
          "bank": {
            "type": "object",
            "properties": {
              "national_identifier": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "kind": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transactions/TRANSACTION_ID/other_account",
      "connector_methods": [
        "obp.getTransaction",
        "obp.checkBankAccountExists",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv4.0.0-updateEndpointMapping",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "updateEndpointMapping"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v4.0.0/management/endpoint-mappings/ENDPOINT_MAPPING_ID",
      "summary": "Update Endpoint Mapping",
      "description": "<p>Update an Endpoint Mapping.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#\">ENDPOINT_MAPPING_ID</a>: ENDPOINT_MAPPING_ID</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n",
      "description_markdown": "Update an Endpoint Mapping.\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ENDPOINT_MAPPING_ID](/glossary#): ENDPOINT_MAPPING_ID\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n",
      "example_request_body": {
        "operation_id": "OBPv4.0.0-dynamicEndpoint_POST_account",
        "request_mapping": {},
        "response_mapping": {
          "name": {
            "entity": "FooBar",
            "field": "name",
            "query": "number"
          },
          "balance": {
            "entity": "FashionBrand",
            "field": "number",
            "query": "number"
          }
        }
      },
      "success_response_body": {
        "operation_id": "OBPv4.0.0-dynamicEndpoint_POST_account",
        "request_mapping": {},
        "response_mapping": {
          "name": {
            "entity": "FooBar",
            "field": "name",
            "query": "number"
          },
          "balance": {
            "entity": "FashionBrand",
            "field": "number",
            "query": "number"
          }
        },
        "endpoint_mapping_id": "b4e0352a-9a0f-4bfa-b30b-9003aa467f50"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Endpoint-Mapping", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "operation_id": {
            "type": "string"
          },
          "request_mapping": {
            "type": "object",
            "properties": {}
          },
          "response_mapping": {
            "type": "object",
            "properties": {
              "name": {
                "type": "object",
                "properties": {
                  "entity": {
                    "type": "string"
                  },
                  "field": {
                    "type": "string"
                  },
                  "query": {
                    "type": "string"
                  }
                }
              },
              "balance": {
                "type": "object",
                "properties": {
                  "entity": {
                    "type": "string"
                  },
                  "field": {
                    "type": "string"
                  },
                  "query": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "operation_id": {
            "type": "string"
          },
          "request_mapping": {
            "type": "object",
            "properties": {}
          },
          "response_mapping": {
            "type": "object",
            "properties": {
              "name": {
                "type": "object",
                "properties": {
                  "entity": {
                    "type": "string"
                  },
                  "field": {
                    "type": "string"
                  },
                  "query": {
                    "type": "string"
                  }
                }
              },
              "balance": {
                "type": "object",
                "properties": {
                  "entity": {
                    "type": "string"
                  },
                  "field": {
                    "type": "string"
                  },
                  "query": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "endpoint_mapping_id": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanUpdateEndpointMapping",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/endpoint-mappings/ENDPOINT_MAPPING_ID",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv5.0.0-getCustomerAccountLinkById",
      "implemented_by": {
        "version": "OBPv5.0.0",
        "function": "getCustomerAccountLinkById"
      },
      "request_verb": "GET",
      "request_url": "/obp/v5.0.0/banks/BANK_ID/customer-account-links/CUSTOMER_ACCOUNT_LINK_ID",
      "summary": "Get Customer Account Link by Id",
      "description": "<p>Get Customer Account Link by CUSTOMER_ACCOUNT_LINK_ID</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#\">CUSTOMER_ACCOUNT_LINK_ID</a>: xyz8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>account_id</strong></a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#\"><strong>customer_account_link_id</strong></a>: xyz8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>relationship_type</strong></a>: Owner</p>\n",
      "description_markdown": "Get Customer Account Link by CUSTOMER_ACCOUNT_LINK_ID\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[CUSTOMER_ACCOUNT_LINK_ID](/glossary#): xyz8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**account_id**](/glossary#): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**customer_account_link_id**](/glossary#): xyz8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**customer_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**relationship_type**](/glossary#): Owner\n\n\n",
      "success_response_body": {
        "customer_account_link_id": "xyz8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "bank_id": "gh.29.uk",
        "account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0",
        "relationship_type": "Owner"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Customer", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "customer_account_link_id": {
            "type": "string"
          },
          "customer_id": {
            "type": "string"
          },
          "bank_id": {
            "type": "string"
          },
          "account_id": {
            "type": "string"
          },
          "relationship_type": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanGetCustomerAccountLink",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/customer-account-links/CUSTOMER_ACCOUNT_LINK_ID",
      "connector_methods": ["obp.getCustomerAccountLinkById"]
    },
    {
      "operation_id": "OBPv1.2.1-getWhereTagForViewOnTransaction",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "getWhereTagForViewOnTransaction"
      },
      "request_verb": "GET",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transactions/TRANSACTION_ID/metadata/where",
      "summary": "Get a Transaction where Tag",
      "description": "<p>Returns the &quot;where&quot; Geo tag added to the transaction TRANSACTION_ID made on a <a href=\"#1_2_1-getViewsForBankAccount\">view</a> (VIEW_ID).<br />\nIt represents the location where the transaction has been initiated.</p>\n<p>Authentication via OAuth is required if the view is not public.</p>\n<p>Authentication is Optional</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#transaction_ids\">TRANSACTION_ID</a>: 2fg8a7e4-6d02-40e3-a129-0b2bf89de8ub</p>\n<p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#display_name\"><strong>display_name</strong></a>:</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#latitude\"><strong>latitude</strong></a>: 38.8951</p>\n<p><a href=\"/glossary#longitude\"><strong>longitude</strong></a>: -77.0364</p>\n<p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p>\n<p><a href=\"/glossary#User\"><strong>user</strong></a>:</p>\n<p><a href=\"/glossary#where\"><strong>where</strong></a>:</p>\n",
      "description_markdown": "Returns the \"where\" Geo tag added to the transaction TRANSACTION_ID made on a [view](#1_2_1-getViewsForBankAccount) (VIEW_ID).\nIt represents the location where the transaction has been initiated.\n\nAuthentication via OAuth is required if the view is not public.\n\nAuthentication is Optional\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[TRANSACTION_ID](/glossary#transaction_ids): 2fg8a7e4-6d02-40e3-a129-0b2bf89de8ub\n\n\n\n[VIEW_ID](/glossary#this_view_id): owner\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**date**](/glossary#): 2020-01-27\n\n\n\n[**display_name**](/glossary#display_name): \n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**latitude**](/glossary#latitude): 38.8951\n\n\n\n[**longitude**](/glossary#longitude): -77.0364\n\n\n\n[**provider**](/glossary#provider): ETHEREUM\n\n\n\n[**user**](/glossary#User): \n\n\n\n[**where**](/glossary#where): \n\n\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "where": {
          "latitude": 1.231,
          "longitude": 1.231,
          "date": "1100-01-01T00:00:00Z",
          "user": {
            "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
            "provider": "http://127.0.0.1:8080",
            "display_name": "OBP"
          }
        }
      },
      "error_response_bodies": [
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-30022: The current view does not have the permission:",
        "OBP-30005: View not found for Account. Please specify a valid value for VIEW_ID",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Transaction-Metadata", "Transaction", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "where": {
            "type": "object",
            "properties": {
              "longitude": {
                "type": "number"
              },
              "date": {
                "type": "string",
                "format": "date-time"
              },
              "latitude": {
                "type": "number"
              },
              "user": {
                "type": "object",
                "properties": {
                  "provider": {
                    "type": "string"
                  },
                  "display_name": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transactions/TRANSACTION_ID/metadata/where",
      "connector_methods": ["obp.checkBankAccountExists", "obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv4.0.0-createBankLevelDynamicMessageDoc",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "createBankLevelDynamicMessageDoc"
      },
      "request_verb": "POST",
      "request_url": "/obp/v4.0.0/management/banks/BANK_ID/dynamic-message-docs",
      "summary": "Create Bank Level Dynamic Message Doc",
      "description": "<p>Create a Bank Level Dynamic Message Doc.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#process\"><strong>process</strong></a>: obp.getBank</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#process\"><strong>process</strong></a>: obp.getBank</p>\n",
      "description_markdown": "Create a Bank Level Dynamic Message Doc.\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON request body fields:**\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**process**](/glossary#process): obp.getBank\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**process**](/glossary#process): obp.getBank\n\n\n",
      "example_request_body": {
        "outbound_avro_schema": "",
        "inbound_avro_schema": "",
        "adapter_implementation": "",
        "description": "This an optional field. Maximum length is 2000. It can be any characters here.",
        "process": "obp.getBank",
        "outbound_topic": "",
        "method_body": "%20%20%20%20%20%20Future.successful%28%0A%20%20%20%20%20%20%20%20Full%28%28BankCommons%28%0A%20%20%20%20%20%20%20%20%20%20BankId%28%22Hello%20bank%20id%22%29%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%228%22%0A%20%20%20%20%20%20%20%20%29%2C%20None%29%29%0A%20%20%20%20%20%20%29",
        "message_format": "",
        "example_outbound_message": {},
        "inbound_topic": "",
        "example_inbound_message": {},
        "bank_id": "gh.29.uk",
        "programming_lang": "Scala"
      },
      "success_response_body": {
        "outbound_avro_schema": "",
        "inbound_avro_schema": "",
        "adapter_implementation": "",
        "dynamic_message_doc_id": "",
        "description": "This an optional field. Maximum length is 2000. It can be any characters here.",
        "process": "obp.getBank",
        "outbound_topic": "",
        "method_body": "%20%20%20%20%20%20Future.successful%28%0A%20%20%20%20%20%20%20%20Full%28%28BankCommons%28%0A%20%20%20%20%20%20%20%20%20%20BankId%28%22Hello%20bank%20id%22%29%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%228%22%0A%20%20%20%20%20%20%20%20%29%2C%20None%29%29%0A%20%20%20%20%20%20%29",
        "message_format": "",
        "example_outbound_message": {},
        "inbound_topic": "",
        "example_inbound_message": {},
        "bank_id": "gh.29.uk",
        "programming_lang": "Scala"
      },
      "error_response_bodies": [
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Dynamic-Message-Doc", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "example_outbound_message": {
            "type": "object",
            "properties": {}
          },
          "outbound_topic": {
            "type": "string"
          },
          "example_inbound_message": {
            "type": "object",
            "properties": {}
          },
          "bank_id": {
            "type": "string"
          },
          "inbound_topic": {
            "type": "string"
          },
          "programming_lang": {
            "type": "string"
          },
          "process": {
            "type": "string"
          },
          "outbound_avro_schema": {
            "type": "string"
          },
          "method_body": {
            "type": "string"
          },
          "message_format": {
            "type": "string"
          },
          "adapter_implementation": {
            "type": "string"
          },
          "inbound_avro_schema": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "example_outbound_message": {
            "type": "object",
            "properties": {}
          },
          "outbound_topic": {
            "type": "string"
          },
          "example_inbound_message": {
            "type": "object",
            "properties": {}
          },
          "bank_id": {
            "type": "string"
          },
          "inbound_topic": {
            "type": "string"
          },
          "programming_lang": {
            "type": "string"
          },
          "dynamic_message_doc_id": {
            "type": "string"
          },
          "process": {
            "type": "string"
          },
          "outbound_avro_schema": {
            "type": "string"
          },
          "method_body": {
            "type": "string"
          },
          "message_format": {
            "type": "string"
          },
          "adapter_implementation": {
            "type": "string"
          },
          "inbound_avro_schema": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateBankLevelDynamicMessageDoc",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/banks/BANK_ID/dynamic-message-docs",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv4.0.0-deleteProductFee",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "deleteProductFee"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/products/PRODUCT_CODE/fees/PRODUCT_FEE_ID",
      "summary": "Delete Product Fee",
      "description": "<p>Delete Product Fee</p>\n<p>Delete one product fee by its id.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#product_code\">PRODUCT_CODE</a>: 1234BW</p>\n<p><a href=\"/glossary#product_fee_id\">PRODUCT_FEE_ID</a>: 696hlAHLFKUHE37469287634</p>\n<p><strong>JSON response body fields:</strong></p>\n",
      "description_markdown": "Delete Product Fee\n\nDelete one product fee by its id.\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[PRODUCT_CODE](/glossary#product_code): 1234BW\n\n\n\n[PRODUCT_FEE_ID](/glossary#product_fee_id): 696hlAHLFKUHE37469287634\n\n\n\n\n\n**JSON response body fields:**\n\n\n",
      "success_response_body": true,
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Product", "New-Style"],
      "roles": [
        {
          "role": "CanDeleteProductFee",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/products/PRODUCT_CODE/fees/PRODUCT_FEE_ID",
      "connector_methods": ["obp.deleteProductFee", "obp.getProductFeeById"]
    },
    {
      "operation_id": "OBPv4.0.0-createTransactionRequestFreeForm",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "createTransactionRequestFreeForm"
      },
      "request_verb": "POST",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transaction-request-types/FREE_FORM/transaction-requests",
      "summary": "Create Transaction Request (FREE_FORM)",
      "description": "<p>Initiate a Payment via creating a Transaction Request.</p>\n<p>In OBP, a <code>transaction request</code> may or may not result in a <code>transaction</code>. However, a <code>transaction</code> only has one possible state: completed.</p>\n<p>A <code>Transaction Request</code> can have one of several states: INITIATED, NEXT_CHALLENGE_PENDING etc.</p>\n<p><code>Transactions</code> are modeled on items in a bank statement that represent the movement of money.</p>\n<p><code>Transaction Requests</code> are requests to move money which may or may not succeed and thus result in a <code>Transaction</code>.</p>\n<p>A <code>Transaction Request</code> might create a security challenge that needs to be answered before the <code>Transaction Request</code> proceeds.<br />\nIn case 1 person needs to answer security challenge we have next flow of state of an <code>transaction request</code>:<br />\nINITIATED =&gt; COMPLETED<br />\nIn case n persons needs to answer security challenge we have next flow of state of an <code>transaction request</code>:<br />\nINITIATED =&gt; NEXT_CHALLENGE_PENDING =&gt; ... =&gt; NEXT_CHALLENGE_PENDING =&gt; COMPLETED</p>\n<p>The security challenge is bound to a user i.e. in case of right answer and the user is different than expected one the challenge will fail.</p>\n<p>Rule for calculating number of security challenges:<br />\nIf product Account attribute REQUIRED_CHALLENGE_ANSWERS=N then create N challenges<br />\n(one for every user that has a View where permission &quot;can_add_transaction_request_to_any_account&quot;=true)<br />\nIn case REQUIRED_CHALLENGE_ANSWERS is not defined as an account attribute default value is 1.</p>\n<p>Transaction Requests contain charge information giving the client the opportunity to proceed or not (as long as the challenge level is appropriate).</p>\n<p>Transaction Requests can have one of several Transaction Request Types which expect different bodies. The escaped body is returned in the details key of the GET response.<br />\nThis provides some commonality and one URL for many different payment or transfer types with enough flexibility to validate them differently.</p>\n<p>The payer is set in the URL. Money comes out of the BANK_ID and ACCOUNT_ID specified in the URL.</p>\n<p>In sandbox mode, TRANSACTION_REQUEST_TYPE is commonly set to ACCOUNT. See getTransactionRequestTypesSupportedByBank for all supported types.</p>\n<p>In sandbox mode, if the amount is less than 1000 EUR (any currency, unless it is set differently on this server), the transaction request will create a transaction without a challenge, else the Transaction Request will be set to INITIALISED and a challenge will need to be answered.</p>\n<p>If a challenge is created you must answer it using Answer Transaction Request Challenge before the Transaction is created.</p>\n<p>You can transfer between different currency accounts. (new in 2.0.0). The currency in body must match the sending account.</p>\n<p>The following static FX rates are available in sandbox mode:</p>\n<p><a href=\"https://obp-apiexplorer.joinfincubator.com/more?version=OBPv4.0.0&amp;list-all-banks=false&amp;core=&amp;psd2=&amp;obwg=#OBPv2_2_0-getCurrentFxRate\">https://obp-apiexplorer.joinfincubator.com/more?version=OBPv4.0.0&amp;list-all-banks=false&amp;core=&amp;psd2=&amp;obwg=#OBPv2_2_0-getCurrentFxRate</a></p>\n<p>Transaction Requests satisfy PSD2 requirements thus:</p>\n<p>1) A transaction can be initiated by a third party application.</p>\n<p>2) The customer is informed of the charge that will incurred.</p>\n<p>3) The call supports delegated authentication (OAuth)</p>\n<p>See <a href=\"https://github.com/OpenBankProject/Hello-OBP-DirectLogin-Python/blob/master/hello_payments.py\">this python code</a> for a complete example of this flow.</p>\n<p>There is further documentation <a href=\"https://github.com/OpenBankProject/OBP-API/wiki/Transaction-Requests\">here</a></p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#free_form\">FREE_FORM</a>:</p>\n<p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#Account\"><strong>account</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>account_id</strong></a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#allowed_attempts\"><strong>allowed_attempts</strong></a>: 5</p>\n<p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p>\n<p><a href=\"/glossary#bank_code\"><strong>bank_code</strong></a>: CGHZ</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#branch_number\"><strong>branch_number</strong></a>:</p>\n<p><a href=\"/glossary#challenge_type\"><strong>challenge_type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>challenges</strong></a>: challenges</p>\n<p><a href=\"/glossary#charge\"><strong>charge</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>counterparty_id</strong></a>: 9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#creditoraccount\"><strong>creditorAccount</strong></a>:</p>\n<p><a href=\"/glossary#creditorname\"><strong>creditorName</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#\"><strong>date_of_birth</strong></a>: 2018-03-09</p>\n<p><a href=\"/glossary#debtoraccount\"><strong>debtorAccount</strong></a>:</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#details\"><strong>details</strong></a>:</p>\n<p><a href=\"/glossary#end_date\"><strong>end_date</strong></a>:</p>\n<p><a href=\"/glossary#from\"><strong>from</strong></a>:</p>\n<p><a href=\"/glossary#future_date\"><strong>future_date</strong></a>: 20200127</p>\n<p><a href=\"/glossary#\"><strong>iban</strong></a>: DE91 1000 0000 0123 4567 89</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#instructedamount\"><strong>instructedAmount</strong></a>: 100</p>\n<p><a href=\"/glossary#kyc_document\"><strong>kyc_document</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>legal_name</strong></a>: Eveline Tripman</p>\n<p><a href=\"/glossary#link\"><strong>link</strong></a>:</p>\n<p><a href=\"/glossary#message\"><strong>message</strong></a>: 123456</p>\n<p><a href=\"/glossary#mobile_phone_number\"><strong>mobile_phone_number</strong></a>: +49 30 901820</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#nickname\"><strong>nickname</strong></a>:</p>\n<p><a href=\"/glossary#number\"><strong>number</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>start_date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#status\"><strong>status</strong></a>:</p>\n<p><a href=\"/glossary#summary\"><strong>summary</strong></a>:</p>\n<p><a href=\"/glossary#to\"><strong>to</strong></a>:</p>\n<p><a href=\"/glossary#transaction_ids\"><strong>transaction_ids</strong></a>:</p>\n<p><a href=\"/glossary#transfer_type\"><strong>transfer_type</strong></a>:</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n<p><a href=\"/glossary#to_counterparty\">to_counterparty</a>:</p>\n<p><a href=\"/glossary#to_sandbox_tan\">to_sandbox_tan</a>:</p>\n<p><a href=\"/glossary#to_sepa\">to_sepa</a>:</p>\n<p><a href=\"/glossary#to_sepa_credit_transfers\">to_sepa_credit_transfers</a>:</p>\n<p><a href=\"/glossary#\">to_simple</a>: to_simple</p>\n<p><a href=\"/glossary#to_transfer_to_account\">to_transfer_to_account</a>:</p>\n<p><a href=\"/glossary#to_transfer_to_atm\">to_transfer_to_atm</a>:</p>\n<p><a href=\"/glossary#to_transfer_to_phone\">to_transfer_to_phone</a>:</p>\n",
      "description_markdown": "Initiate a Payment via creating a Transaction Request.\n\nIn OBP, a `transaction request` may or may not result in a `transaction`. However, a `transaction` only has one possible state: completed.\n\nA `Transaction Request` can have one of several states: INITIATED, NEXT_CHALLENGE_PENDING etc.\n\n`Transactions` are modeled on items in a bank statement that represent the movement of money.\n\n`Transaction Requests` are requests to move money which may or may not succeed and thus result in a `Transaction`.\n\nA `Transaction Request` might create a security challenge that needs to be answered before the `Transaction Request` proceeds.\nIn case 1 person needs to answer security challenge we have next flow of state of an `transaction request`:\n  INITIATED => COMPLETED\nIn case n persons needs to answer security challenge we have next flow of state of an `transaction request`:\n  INITIATED => NEXT_CHALLENGE_PENDING => ... => NEXT_CHALLENGE_PENDING => COMPLETED\n\nThe security challenge is bound to a user i.e. in case of right answer and the user is different than expected one the challenge will fail.\n\nRule for calculating number of security challenges:\nIf product Account attribute REQUIRED_CHALLENGE_ANSWERS=N then create N challenges\n(one for every user that has a View where permission \"can_add_transaction_request_to_any_account\"=true)\nIn case REQUIRED_CHALLENGE_ANSWERS is not defined as an account attribute default value is 1.\n\nTransaction Requests contain charge information giving the client the opportunity to proceed or not (as long as the challenge level is appropriate).\n\nTransaction Requests can have one of several Transaction Request Types which expect different bodies. The escaped body is returned in the details key of the GET response.\nThis provides some commonality and one URL for many different payment or transfer types with enough flexibility to validate them differently.\n\nThe payer is set in the URL. Money comes out of the BANK_ID and ACCOUNT_ID specified in the URL.\n\nIn sandbox mode, TRANSACTION_REQUEST_TYPE is commonly set to ACCOUNT. See getTransactionRequestTypesSupportedByBank for all supported types.\n\nIn sandbox mode, if the amount is less than 1000 EUR (any currency, unless it is set differently on this server), the transaction request will create a transaction without a challenge, else the Transaction Request will be set to INITIALISED and a challenge will need to be answered.\n\nIf a challenge is created you must answer it using Answer Transaction Request Challenge before the Transaction is created.\n\nYou can transfer between different currency accounts. (new in 2.0.0). The currency in body must match the sending account.\n\nThe following static FX rates are available in sandbox mode:\n\nhttps://obp-apiexplorer.joinfincubator.com/more?version=OBPv4.0.0&list-all-banks=false&core=&psd2=&obwg=#OBPv2_2_0-getCurrentFxRate\n\n\nTransaction Requests satisfy PSD2 requirements thus:\n\n1) A transaction can be initiated by a third party application.\n\n2) The customer is informed of the charge that will incurred.\n\n3) The call supports delegated authentication (OAuth)\n\nSee [this python code](https://github.com/OpenBankProject/Hello-OBP-DirectLogin-Python/blob/master/hello_payments.py) for a complete example of this flow.\n\nThere is further documentation [here](https://github.com/OpenBankProject/OBP-API/wiki/Transaction-Requests)\n\n\n\n       \n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[FREE_FORM](/glossary#free_form): \n\n\n\n[VIEW_ID](/glossary#this_view_id): owner\n\n\n\n\n\n**JSON request body fields:**\n\n\n\n[**amount**](/glossary#): 10.12\n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**value**](/glossary#): 5987953\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**account**](/glossary#Account): \n\n\n\n[**account_id**](/glossary#): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[**allowed_attempts**](/glossary#allowed_attempts): 5\n\n\n\n[**amount**](/glossary#): 10.12\n\n\n\n[**bank_code**](/glossary#bank_code): CGHZ\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**branch_number**](/glossary#branch_number): \n\n\n\n[**challenge_type**](/glossary#challenge_type): \n\n\n\n[**challenges**](/glossary#): challenges\n\n\n\n[**charge**](/glossary#charge): \n\n\n\n[**counterparty_id**](/glossary#): 9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**creditorAccount**](/glossary#creditoraccount): \n\n\n\n[**creditorName**](/glossary#creditorname): \n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**date_of_birth**](/glossary#): 2018-03-09\n\n\n\n[**debtorAccount**](/glossary#debtoraccount): \n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**details**](/glossary#details): \n\n\n\n[**end_date**](/glossary#end_date): \n\n\n\n[**from**](/glossary#from): \n\n\n\n[**future_date**](/glossary#future_date): 20200127\n\n\n\n[**iban**](/glossary#): DE91 1000 0000 0123 4567 89\n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**instructedAmount**](/glossary#instructedamount): 100\n\n\n\n[**kyc_document**](/glossary#kyc_document): \n\n\n\n[**legal_name**](/glossary#): Eveline Tripman\n\n\n\n[**link**](/glossary#link): \n\n\n\n[**message**](/glossary#message): 123456\n\n\n\n[**mobile_phone_number**](/glossary#mobile_phone_number): +49 30 901820\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**nickname**](/glossary#nickname): \n\n\n\n[**number**](/glossary#number): \n\n\n\n[**start_date**](/glossary#): 2020-01-27\n\n\n\n[**status**](/glossary#status): \n\n\n\n[**summary**](/glossary#summary): \n\n\n\n[**to**](/glossary#to): \n\n\n\n[**transaction_ids**](/glossary#transaction_ids): \n\n\n\n[**transfer_type**](/glossary#transfer_type): \n\n\n\n[**type**](/glossary#type): \n\n\n\n[**user_id**](/glossary#): 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\n\n\n\n[**value**](/glossary#): 5987953\n\n\n\n[to_counterparty](/glossary#to_counterparty): \n\n\n\n[to_sandbox_tan](/glossary#to_sandbox_tan): \n\n\n\n[to_sepa](/glossary#to_sepa): \n\n\n\n[to_sepa_credit_transfers](/glossary#to_sepa_credit_transfers): \n\n\n\n[to_simple](/glossary#): to_simple\n\n\n\n[to_transfer_to_account](/glossary#to_transfer_to_account): \n\n\n\n[to_transfer_to_atm](/glossary#to_transfer_to_atm): \n\n\n\n[to_transfer_to_phone](/glossary#to_transfer_to_phone): \n\n\n",
      "example_request_body": {
        "value": {
          "currency": "EUR",
          "amount": "0"
        },
        "description": "This is a FREE_FORM Transaction Request"
      },
      "success_response_body": {
        "id": "4050046c-63b3-4868-8a22-14b4181d33a6",
        "type": "SANDBOX_TAN",
        "from": {
          "bank_id": "gh.29.uk",
          "account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
        },
        "details": {
          "to_sandbox_tan": {
            "bank_id": "String",
            "account_id": "String"
          },
          "to_sepa": {
            "iban": "String"
          },
          "to_counterparty": {
            "counterparty_id": "9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh"
          },
          "to_transfer_to_phone": {
            "value": {
              "currency": "EUR",
              "amount": "0"
            },
            "description": "String",
            "message": "String",
            "from": {
              "mobile_phone_number": "+44 07972 444 876",
              "nickname": "String"
            },
            "to": {
              "mobile_phone_number": "+44 07972 444 876"
            }
          },
          "to_transfer_to_atm": {
            "value": {
              "currency": "EUR",
              "amount": "0"
            },
            "description": "String",
            "message": "String",
            "from": {
              "mobile_phone_number": "+44 07972 444 876",
              "nickname": "String"
            },
            "to": {
              "legal_name": "Eveline Tripman",
              "date_of_birth": "20181230",
              "mobile_phone_number": "+44 07972 444 876",
              "kyc_document": {
                "type": "String",
                "number": "String"
              }
            }
          },
          "to_transfer_to_account": {
            "value": {
              "currency": "EUR",
              "amount": "0"
            },
            "description": "String",
            "transfer_type": "String",
            "future_date": "20181230",
            "to": {
              "name": "String",
              "bank_code": "String",
              "branch_number": "String",
              "account": {
                "number": "String",
                "iban": "String"
              }
            }
          },
          "to_sepa_credit_transfers": {
            "debtorAccount": {
              "iban": "12345"
            },
            "instructedAmount": {
              "currency": "EUR",
              "amount": "0"
            },
            "creditorAccount": {
              "iban": "54321"
            },
            "creditorName": "John Miles"
          },
          "value": {
            "currency": "EUR",
            "amount": "100"
          },
          "description": "String"
        },
        "transaction_ids": ["902ba3bb-dedd-45e7-9319-2fd3f2cd98a1"],
        "status": "COMPLETED",
        "start_date": "1100-01-01T00:00:00Z",
        "end_date": "1100-01-01T00:00:00Z",
        "challenges": [
          {
            "id": "2fg8a7e4-6d02-40e3-a129-0b2bf89de8ub",
            "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
            "allowed_attempts": 3,
            "challenge_type": "OBP_TRANSACTION_REQUEST_CHALLENGE",
            "link": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transaction-request-types/TRANSACTION_REQUEST_TYPE/transaction-requests/TRANSACTION_REQUEST_ID/challenge"
          }
        ],
        "charge": {
          "summary": "Rent the flat",
          "value": {
            "currency": "EUR",
            "amount": "0"
          }
        }
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30111: Invalid Bank Id. The BANK_ID should only contain 0-9/a-z/A-Z/'-'/'.'/'_', the length should be smaller than 255.",
        "OBP-30110: Invalid Account Id. The ACCOUNT_ID should only contain 0-9/a-z/A-Z/'-'/'.'/'_', the length should be smaller than 255.",
        "OBP-10001: Incorrect json format.",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30003: Account not found. Please specify a valid value for ACCOUNT_ID.",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-40002: Insufficient authorisation to create TransactionRequest. The Transaction Request could not be created because the login user doesn't have access to the view of the from account or the view don't have the `canAddTransactionRequestToAnyAccount` permission or your consumer doesn't not have the access to the view of the from account or you don't have the role CanCreateAnyTransactionRequest.",
        "OBP-40001: Invalid value for TRANSACTION_REQUEST_TYPE",
        "OBP-10001: Incorrect json format.",
        "OBP-10002: Invalid Number. Could not convert value to a number.",
        "OBP-40008: Can't send a payment with a value of 0 or less.",
        "OBP-40003: Transaction Request Currency must be the same as From Account Currency.",
        "OBP-00003: Transaction Requests is disabled in this API instance.",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["Transaction-Request", "Payment Initiation Service (PIS)", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "value": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string"
              },
              "amount": {
                "type": "string"
              }
            }
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "challenges": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "challenge_type": {
                  "type": "string"
                },
                "link": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "allowed_attempts": {
                  "type": "integer"
                },
                "user_id": {
                  "type": "string"
                }
              }
            }
          },
          "status": {
            "type": "string"
          },
          "end_date": {
            "type": "string",
            "format": "date-time"
          },
          "charge": {
            "type": "object",
            "properties": {
              "summary": {
                "type": "string"
              },
              "value": {
                "type": "object",
                "properties": {
                  "currency": {
                    "type": "string"
                  },
                  "amount": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "transaction_ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "from": {
            "type": "object",
            "properties": {
              "bank_id": {
                "type": "string"
              },
              "account_id": {
                "type": "string"
              }
            }
          },
          "details": {
            "type": "object",
            "properties": {
              "to_sandbox_tan": {
                "type": "object",
                "properties": {
                  "account_id": {
                    "type": "string"
                  },
                  "bank_id": {
                    "type": "string"
                  }
                }
              },
              "value": {
                "type": "object",
                "properties": {
                  "currency": {
                    "type": "string"
                  },
                  "amount": {
                    "type": "string"
                  }
                }
              },
              "to_transfer_to_phone": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  },
                  "from": {
                    "type": "object",
                    "properties": {
                      "nickname": {
                        "type": "string"
                      },
                      "mobile_phone_number": {
                        "type": "string"
                      }
                    }
                  },
                  "to": {
                    "type": "object",
                    "properties": {
                      "mobile_phone_number": {
                        "type": "string"
                      }
                    }
                  },
                  "value": {
                    "type": "object",
                    "properties": {
                      "currency": {
                        "type": "string"
                      },
                      "amount": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "to_sepa": {
                "type": "object",
                "properties": {
                  "iban": {
                    "type": "string"
                  }
                }
              },
              "description": {
                "type": "string"
              },
              "to_counterparty": {
                "type": "object",
                "properties": {
                  "counterparty_id": {
                    "type": "string"
                  }
                }
              },
              "to_transfer_to_account": {
                "type": "object",
                "properties": {
                  "to": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "account": {
                        "type": "object",
                        "properties": {
                          "number": {
                            "type": "string"
                          },
                          "iban": {
                            "type": "string"
                          }
                        }
                      },
                      "bank_code": {
                        "type": "string"
                      },
                      "branch_number": {
                        "type": "string"
                      }
                    }
                  },
                  "transfer_type": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "future_date": {
                    "type": "string"
                  },
                  "value": {
                    "type": "object",
                    "properties": {
                      "currency": {
                        "type": "string"
                      },
                      "amount": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "to_sepa_credit_transfers": {
                "type": "object",
                "properties": {
                  "instructedAmount": {
                    "type": "object",
                    "properties": {
                      "currency": {
                        "type": "string"
                      },
                      "amount": {
                        "type": "string"
                      }
                    }
                  },
                  "debtorAccount": {
                    "type": "object",
                    "properties": {
                      "iban": {
                        "type": "string"
                      }
                    }
                  },
                  "creditorAccount": {
                    "type": "object",
                    "properties": {
                      "iban": {
                        "type": "string"
                      }
                    }
                  },
                  "creditorName": {
                    "type": "string"
                  }
                }
              },
              "to_transfer_to_atm": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  },
                  "from": {
                    "type": "object",
                    "properties": {
                      "nickname": {
                        "type": "string"
                      },
                      "mobile_phone_number": {
                        "type": "string"
                      }
                    }
                  },
                  "value": {
                    "type": "object",
                    "properties": {
                      "currency": {
                        "type": "string"
                      },
                      "amount": {
                        "type": "string"
                      }
                    }
                  },
                  "to": {
                    "type": "object",
                    "properties": {
                      "date_of_birth": {
                        "type": "string"
                      },
                      "kyc_document": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string"
                          },
                          "number": {
                            "type": "string"
                          }
                        }
                      },
                      "legal_name": {
                        "type": "string"
                      },
                      "mobile_phone_number": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "start_date": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateAnyTransactionRequest",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transaction-request-types/FREE_FORM/transaction-requests",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv4.0.0-getDynamicResourceDoc",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getDynamicResourceDoc"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/management/dynamic-resource-docs/DYNAMIC-RESOURCE-DOC-ID",
      "summary": "Get Dynamic Resource Doc by Id",
      "description": "<p>Get a Dynamic Resource Doc by DYNAMIC-RESOURCE-DOC-ID.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#roles\"><strong>roles</strong></a>: CanCreateMyUser</p>\n<p><a href=\"/glossary#summary\"><strong>summary</strong></a>:</p>\n<p><a href=\"/glossary#tags\"><strong>tags</strong></a>: Create-My-User</p>\n",
      "description_markdown": "Get a Dynamic Resource Doc by DYNAMIC-RESOURCE-DOC-ID.\n\n\n\nAuthentication is Mandatory\n\n\n**JSON response body fields:**\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**roles**](/glossary#roles): CanCreateMyUser\n\n\n\n[**summary**](/glossary#summary): \n\n\n\n[**tags**](/glossary#tags): Create-My-User\n\n\n",
      "success_response_body": {
        "error_response_bodies": "OBP-50000: Unknown Error.,OBP-20001: User not logged in. Authentication is required!,OBP-20006: User is missing one or more roles: ,OBP-10001: Incorrect json format.",
        "description": "Create one User",
        "tags": "Create-My-User",
        "dynamic_resource_doc_id": "vce035ca-9a0f-4bfa-b30b-9003aa467f51",
        "request_verb": "POST",
        "method_body": "%20%20%20%20val%20Some(resourceDoc)%20%3D%20callContext.resourceDocument%0A%20%20%20%20val%20hasRequestBody%20%3D%20request.body.isDefined%0A%0A%20%20%20%20%2F%2F%20get%20Path%20Parameters%2C%20example%3A%0A%20%20%20%20%2F%2F%20if%20the%20requestUrl%20of%20resourceDoc%20is%20%2Fhello%2Fbanks%2FBANK_ID%2Fworld%0A%20%20%20%20%2F%2F%20the%20request%20path%20is%20%2Fhello%2Fbanks%2Fbank_x%2Fworld%0A%20%20%20%20%2F%2FpathParams.get(%22BANK_ID%22)%20will%20get%20Option(%22bank_x%22)%20value%0A%0A%20%20%20%20val%20myUserId%20%3D%20pathParams(%22MY_USER_ID%22)%0A%0A%0A%20%20%20%20val%20requestEntity%20%3D%20request.json%20match%20%7B%0A%20%20%20%20%20%20case%20Full(zson)%20%3D%3E%0A%20%20%20%20%20%20%20%20try%20%7B%0A%20%20%20%20%20%20%20%20%20%20zson.extract%5BRequestRootJsonClass%5D%0A%20%20%20%20%20%20%20%20%7D%20catch%20%7B%0A%20%20%20%20%20%20%20%20%20%20case%20e%3A%20MappingException%20%3D%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20return%20Full(errorJsonResponse(s%22%24InvalidJsonFormat%20%24%7Be.msg%7D%22))%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20case%20_%3A%20EmptyBox%20%3D%3E%0A%20%20%20%20%20%20%20%20return%20Full(errorJsonResponse(s%22%24InvalidRequestPayload%20Current%20request%20has%20no%20payload%22))%0A%20%20%20%20%7D%0A%0A%0A%20%20%20%20%2F%2F%20please%20add%20business%20logic%20here%0A%20%20%20%20val%20responseBody%3AResponseRootJsonClass%20%3D%20ResponseRootJsonClass(s%22%24%7BmyUserId%7D_from_path%22%2C%20requestEntity.name%2C%20requestEntity.age%2C%20requestEntity.hobby)%0A%20%20%20%20Future.successful%20%7B%0A%20%20%20%20%20%20(responseBody%2C%20HttpCode.%60200%60(callContext.callContext))%0A%20%20%20%20%7D",
        "roles": "CanCreateMyUser",
        "example_request_body": {
          "name": "Jhon",
          "age": 12,
          "hobby": ["coding"],
          "_optional_fields_": ["hobby"]
        },
        "request_url": "/my_user/MY_USER_ID",
        "bank_id": "gh.29.uk",
        "partial_function_name": "createUser",
        "summary": "Create My User",
        "success_response_body": {
          "my_user_id": "some_id_value",
          "name": "Jhon",
          "age": 12,
          "hobby": ["coding"],
          "_optional_fields_": ["hobby"]
        }
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Dynamic-Resource-Doc", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "tags": {
            "type": "string"
          },
          "request_verb": {
            "type": "string"
          },
          "example_request_body": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "age": {
                "type": "integer"
              },
              "hobby": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "s": {
                      "type": "string"
                    }
                  }
                }
              },
              "_optional_fields_": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "s": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "bank_id": {
            "type": "string"
          },
          "partial_function_name": {
            "type": "string"
          },
          "success_response_body": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "hobby": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "s": {
                      "type": "string"
                    }
                  }
                }
              },
              "my_user_id": {
                "type": "string"
              },
              "age": {
                "type": "integer"
              },
              "_optional_fields_": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "s": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "roles": {
            "type": "string"
          },
          "dynamic_resource_doc_id": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          },
          "request_url": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "method_body": {
            "type": "string"
          },
          "error_response_bodies": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanGetDynamicResourceDoc",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/dynamic-resource-docs/DYNAMIC-RESOURCE-DOC-ID",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv5.0.0-getMyCustomersAtAnyBank",
      "implemented_by": {
        "version": "OBPv5.0.0",
        "function": "getMyCustomersAtAnyBank"
      },
      "request_verb": "GET",
      "request_url": "/obp/v5.0.0/my/customers",
      "summary": "Get My Customers",
      "description": "<p>Gets all Customers that are linked to me.</p>\n<p>Authentication via OAuth is required.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>customer_number</strong></a>: 5987953</p>\n<p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#\"><strong>date_of_birth</strong></a>: 2018-03-09</p>\n<p><a href=\"/glossary#\"><strong>dependants</strong></a>: 1</p>\n<p><a href=\"/glossary#dob_of_dependants\"><strong>dob_of_dependants</strong></a>: [2019-09-08, 2017-07-12]</p>\n<p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"&#x6d;&#97;i&#x6c;&#x74;o&#x3a;&#x66;&#101;&#x6c;&#x69;x&#115;&#x6d;&#x69;&#116;&#x68;@&#101;&#120;&#97;&#109;&#112;&#108;&#x65;&#46;&#99;&#111;m\">&#102;&#x65;&#108;&#105;&#120;&#x73;mi&#x74;&#x68;&#64;&#101;&#120;&#97;&#109;&#112;&#108;&#x65;&#46;&#99;&#x6f;&#x6d;</a></p>\n<p><a href=\"/glossary#\"><strong>employment_status</strong></a>: worker</p>\n<p><a href=\"/glossary#face_image\"><strong>face_image</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>highest_education_attained</strong></a>: Master</p>\n<p><a href=\"/glossary#\"><strong>kyc_status</strong></a>: true</p>\n<p><a href=\"/glossary#last_ok_date\"><strong>last_ok_date</strong></a>: 2022-04-13T04:30:07.985Z</p>\n<p><a href=\"/glossary#\"><strong>legal_name</strong></a>: Eveline Tripman</p>\n<p><a href=\"/glossary#mobile_phone_number\"><strong>mobile_phone_number</strong></a>: +49 30 901820</p>\n<p><a href=\"/glossary#\"><strong>rating</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>relationship_status</strong></a>: single</p>\n<p><a href=\"/glossary#\"><strong>source</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>url</strong></a>: <a href=\"http://www.example.com/id-docs/123/image.png\">http://www.example.com/id-docs/123/image.png</a></p>\n<p><a href=\"/glossary#credit_limit\">credit_limit</a>:</p>\n<p><a href=\"/glossary#credit_rating\">credit_rating</a>:</p>\n",
      "description_markdown": "Gets all Customers that are linked to me.\n\nAuthentication via OAuth is required.\n\nAuthentication is Mandatory\n\n\n**JSON response body fields:**\n\n\n\n[**amount**](/glossary#): 10.12\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**customer_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**customer_number**](/glossary#): 5987953\n\n\n\n[**date**](/glossary#): 2020-01-27\n\n\n\n[**date_of_birth**](/glossary#): 2018-03-09\n\n\n\n[**dependants**](/glossary#): 1\n\n\n\n[**dob_of_dependants**](/glossary#dob_of_dependants): [2019-09-08, 2017-07-12]\n\n\n\n[**email**](/glossary#): felixsmith@example.com\n\n\n\n[**employment_status**](/glossary#): worker\n\n\n\n[**face_image**](/glossary#face_image): \n\n\n\n[**highest_education_attained**](/glossary#): Master\n\n\n\n[**kyc_status**](/glossary#): true\n\n\n\n[**last_ok_date**](/glossary#last_ok_date): 2022-04-13T04:30:07.985Z\n\n\n\n[**legal_name**](/glossary#): Eveline Tripman\n\n\n\n[**mobile_phone_number**](/glossary#mobile_phone_number): +49 30 901820\n\n\n\n[**rating**](/glossary#): \n\n\n\n[**relationship_status**](/glossary#): single\n\n\n\n[**source**](/glossary#): \n\n\n\n[**url**](/glossary#): http://www.example.com/id-docs/123/image.png\n\n\n\n[credit_limit](/glossary#credit_limit): \n\n\n\n[credit_rating](/glossary#credit_rating): \n\n\n",
      "success_response_body": {
        "bank_id": "gh.29.uk",
        "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "customer_number": "5987953",
        "legal_name": "Eveline Tripman",
        "mobile_phone_number": "+44 07972 444 876",
        "email": "felixsmith@example.com",
        "face_image": {
          "url": "www.openbankproject",
          "date": "1100-01-01T00:00:00Z"
        },
        "date_of_birth": "1100-01-01T00:00:00Z",
        "relationship_status": "single",
        "dependants": 1,
        "dob_of_dependants": ["1100-01-01T00:00:00Z"],
        "credit_rating": {
          "rating": "OBP",
          "source": "OBP"
        },
        "credit_limit": {
          "currency": "EUR",
          "amount": "0"
        },
        "highest_education_attained": "Master",
        "employment_status": "worker",
        "kyc_status": true,
        "last_ok_date": "2022-04-13T04:30:08Z"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30008: User Customer Link not found by USER_ID",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Customer", "User"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "dependants": {
            "type": "integer"
          },
          "dob_of_dependants": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            }
          },
          "face_image": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string"
              },
              "date": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          "credit_limit": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string"
              },
              "amount": {
                "type": "string"
              }
            }
          },
          "employment_status": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "customer_id": {
            "type": "string"
          },
          "relationship_status": {
            "type": "string"
          },
          "bank_id": {
            "type": "string"
          },
          "highest_education_attained": {
            "type": "string"
          },
          "customer_number": {
            "type": "string"
          },
          "credit_rating": {
            "type": "object",
            "properties": {
              "rating": {
                "type": "string"
              },
              "source": {
                "type": "string"
              }
            }
          },
          "legal_name": {
            "type": "string"
          },
          "last_ok_date": {
            "type": "string",
            "format": "date-time"
          },
          "date_of_birth": {
            "type": "string",
            "format": "date-time"
          },
          "mobile_phone_number": {
            "type": "string"
          },
          "kyc_status": {
            "type": "boolean"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/my/customers",
      "connector_methods": ["obp.getCustomersByUserId"]
    },
    {
      "operation_id": "OBPv4.0.0-deleteTransactionCascade",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "deleteTransactionCascade"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v4.0.0/management/cascading/banks/BANK_ID/accounts/ACCOUNT_ID/transactions/TRANSACTION_ID",
      "summary": "Delete Transaction Cascade",
      "description": "<p>Delete a Transaction Cascade specified by TRANSACTION_ID.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#transaction_ids\">TRANSACTION_ID</a>: 2fg8a7e4-6d02-40e3-a129-0b2bf89de8ub</p>\n<p><strong>JSON response body fields:</strong></p>\n",
      "description_markdown": "Delete a Transaction Cascade specified by TRANSACTION_ID.\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[TRANSACTION_ID](/glossary#transaction_ids): 2fg8a7e4-6d02-40e3-a129-0b2bf89de8ub\n\n\n\n\n\n**JSON response body fields:**\n\n\n",
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Transaction", "New-Style"],
      "roles": [
        {
          "role": "CanDeleteTransactionCascade",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/cascading/banks/BANK_ID/accounts/ACCOUNT_ID/transactions/TRANSACTION_ID",
      "connector_methods": ["obp.getTransaction"]
    },
    {
      "operation_id": "OBPv5.0.0-createBank",
      "implemented_by": {
        "version": "OBPv5.0.0",
        "function": "createBank"
      },
      "request_verb": "POST",
      "request_url": "/obp/v5.0.0/banks",
      "summary": "Create Bank",
      "description": "<p>Create a new bank (Authenticated access).</p>\n<p>The user creating this will be automatically assigned the Role CanCreateEntitlementAtOneBank.<br />\nThus the User can manage the bank they create and assign Roles to other Users.</p>\n<p>Only SANDBOX mode<br />\nThe settlement accounts are created specified by the bank in the POST body.<br />\nName and account id are created in accordance to the next rules:<br />\n- Incoming account (name: Default incoming settlement account, Account ID: OBP_DEFAULT_INCOMING_ACCOUNT_ID, currency: EUR)<br />\n- Outgoing account (name: Default outgoing settlement account, Account ID: OBP_DEFAULT_OUTGOING_ACCOUNT_ID, currency: EUR)</p>\n<p>Authentication is Mandatory</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#address\"><strong>address</strong></a>:</p>\n<p><a href=\"/glossary#bank_code\"><strong>bank_code</strong></a>: CGHZ</p>\n<p><a href=\"/glossary#scheme\"><strong>scheme</strong></a>: scheme value</p>\n<p><a href=\"/glossary#bank_routings\">bank_routings</a>: bank routing in form of (scheme, address)</p>\n<p><a href=\"/glossary#full_name\">full_name</a>: full name string</p>\n<p><a href=\"/glossary#id\">id</a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#logo\">logo</a>: logo url</p>\n<p><a href=\"/glossary#website\">website</a>: <a href=\"http://www.openbankproject.com\">www.openbankproject.com</a></p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#address\"><strong>address</strong></a>:</p>\n<p><a href=\"/glossary#bank_code\"><strong>bank_code</strong></a>: CGHZ</p>\n<p><a href=\"/glossary#bank_routings\"><strong>bank_routings</strong></a>: bank routing in form of (scheme, address)</p>\n<p><a href=\"/glossary#full_name\"><strong>full_name</strong></a>: full name string</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#logo\"><strong>logo</strong></a>: logo url</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#scheme\"><strong>scheme</strong></a>: scheme value</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n<p><a href=\"/glossary#website\"><strong>website</strong></a>: <a href=\"http://www.openbankproject.com\">www.openbankproject.com</a></p>\n<p><a href=\"/glossary#attributes\">attributes</a>: attribute value in form of (name, value)</p>\n",
      "description_markdown": "Create a new bank (Authenticated access).\n\nThe user creating this will be automatically assigned the Role CanCreateEntitlementAtOneBank.\nThus the User can manage the bank they create and assign Roles to other Users.\n\nOnly SANDBOX mode\nThe settlement accounts are created specified by the bank in the POST body.\nName and account id are created in accordance to the next rules:\n  - Incoming account (name: Default incoming settlement account, Account ID: OBP_DEFAULT_INCOMING_ACCOUNT_ID, currency: EUR)\n  - Outgoing account (name: Default outgoing settlement account, Account ID: OBP_DEFAULT_OUTGOING_ACCOUNT_ID, currency: EUR)\n\n\n\nAuthentication is Mandatory\n\n\n**JSON request body fields:**\n\n\n\n[**address**](/glossary#address): \n\n\n\n[**bank_code**](/glossary#bank_code): CGHZ\n\n\n\n[**scheme**](/glossary#scheme): scheme value\n\n\n\n[bank_routings](/glossary#bank_routings): bank routing in form of (scheme, address)\n\n\n\n[full_name](/glossary#full_name): full name string\n\n\n\n[id](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[logo](/glossary#logo): logo url\n\n\n\n[website](/glossary#website): www.openbankproject.com\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**address**](/glossary#address): \n\n\n\n[**bank_code**](/glossary#bank_code): CGHZ\n\n\n\n[**bank_routings**](/glossary#bank_routings): bank routing in form of (scheme, address)\n\n\n\n[**full_name**](/glossary#full_name): full name string\n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**logo**](/glossary#logo): logo url\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**scheme**](/glossary#scheme): scheme value\n\n\n\n[**value**](/glossary#): 5987953\n\n\n\n[**website**](/glossary#website): www.openbankproject.com\n\n\n\n[attributes](/glossary#attributes): attribute value in form of (name, value)\n\n\n",
      "example_request_body": {
        "id": "d8839721-ad8f-45dd-9f78-2080414b93f9",
        "bank_code": "CGHZ",
        "full_name": "full name string",
        "logo": "logo url",
        "website": "www.openbankproject.com",
        "bank_routings": [
          {
            "scheme": "scheme value",
            "address": ""
          }
        ]
      },
      "success_response_body": {
        "id": "gh.29.uk",
        "bank_code": "CGHZ",
        "full_name": "bank fullName string",
        "logo": "bank logoUrl string",
        "website": "bank logoUrl string",
        "bank_routings": [
          {
            "scheme": "scheme value",
            "address": ""
          }
        ],
        "attributes": [
          {
            "name": "ACCOUNT_MANAGEMENT_FEE",
            "value": "5987953"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-10001: Incorrect json format.",
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30210: Insufficient authorisation to Create Bank. You do not have the role CanCreateBank.",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["Bank", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "bank_routings": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "scheme": {
                  "type": "string"
                },
                "address": {
                  "type": "string"
                }
              }
            }
          },
          "full_name": {
            "type": "string"
          },
          "logo": {
            "type": "string"
          },
          "bank_code": {
            "type": "string"
          },
          "website": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "website": {
            "type": "string"
          },
          "attributes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "bank_routings": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "scheme": {
                  "type": "string"
                },
                "address": {
                  "type": "string"
                }
              }
            }
          },
          "logo": {
            "type": "string"
          },
          "bank_code": {
            "type": "string"
          },
          "full_name": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateBank",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks",
      "connector_methods": ["obp.getBanks"]
    },
    {
      "operation_id": "OBPv4.0.0-getUserInvitation",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getUserInvitation"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/user-invitations/SECRET_LINK",
      "summary": "Get User Invitation",
      "description": "<p>Get User Invitation</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#\">SECRET_LINK</a>: SECRET_LINK</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>company</strong></a>: company</p>\n<p><a href=\"/glossary#\"><strong>country</strong></a>: country</p>\n<p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"&#109;&#97;&#x69;l&#116;&#x6f;&#x3a;&#x66;&#x65;l&#105;x&#x73;&#x6d;&#105;th&#64;&#101;&#x78;&#97;&#109;p&#x6c;&#101;.&#x63;&#111;&#109;\">f&#101;&#x6c;i&#120;&#115;&#x6d;&#x69;&#x74;h&#x40;&#101;&#120;&#97;&#x6d;p&#108;&#x65;.&#x63;&#x6f;&#x6d;</a></p>\n<p><a href=\"/glossary#first_name\"><strong>first_name</strong></a>:</p>\n<p><a href=\"/glossary#last_name\"><strong>last_name</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>purpose</strong></a>: purpose</p>\n<p><a href=\"/glossary#status\"><strong>status</strong></a>:</p>\n",
      "description_markdown": "Get User Invitation\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[SECRET_LINK](/glossary#): SECRET_LINK\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**company**](/glossary#): company\n\n\n\n[**country**](/glossary#): country\n\n\n\n[**email**](/glossary#): felixsmith@example.com\n\n\n\n[**first_name**](/glossary#first_name): \n\n\n\n[**last_name**](/glossary#last_name): \n\n\n\n[**purpose**](/glossary#): purpose\n\n\n\n[**status**](/glossary#status): \n\n\n",
      "success_response_body": {
        "first_name": "ACCOUNT_MANAGEMENT_FEE",
        "last_name": "ACCOUNT_MANAGEMENT_FEE",
        "email": "felixsmith@example.com",
        "company": "TESOBE",
        "country": "Germany",
        "purpose": "Developer",
        "status": "CREATED"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["User-Invitation", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "company": {
            "type": "string"
          },
          "purpose": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanGetUserInvitation",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/user-invitations/SECRET_LINK",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv4.0.0-createOrUpdateTransactionRequestAttributeDefinition",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "createOrUpdateTransactionRequestAttributeDefinition"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/attribute-definitions/transaction-request",
      "summary": "Create or Update Transaction Request Attribute Definition",
      "description": "<p>Create or Update Transaction Request Attribute Definition</p>\n<p>The category field must be TransactionRequest</p>\n<p>The type field must be one of: DOUBLE, STRING, INTEGER and DATE_WITH_DAY</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#alias\"><strong>alias</strong></a>:</p>\n<p><a href=\"/glossary#attribute_definition_id\"><strong>attribute_definition_id</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#can_be_seen_on_views\"><strong>can_be_seen_on_views</strong></a>: true</p>\n<p><a href=\"/glossary#category\"><strong>category</strong></a>:</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#is_active\"><strong>is_active</strong></a>: true</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n",
      "description_markdown": "Create or Update Transaction Request Attribute Definition\n\nThe category field must be TransactionRequest\n\nThe type field must be one of: DOUBLE, STRING, INTEGER and DATE_WITH_DAY\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**alias**](/glossary#alias): \n\n\n\n[**attribute_definition_id**](/glossary#attribute_definition_id): \n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**can_be_seen_on_views**](/glossary#can_be_seen_on_views): true\n\n\n\n[**category**](/glossary#category): \n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**is_active**](/glossary#is_active): true\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**type**](/glossary#type): \n\n\n",
      "example_request_body": {
        "name": "SPECIAL_TAX_NUMBER",
        "category": "TransactionRequest",
        "type": "STRING",
        "description": "description",
        "alias": "STRING",
        "can_be_seen_on_views": ["bank"],
        "is_active": true
      },
      "success_response_body": {
        "attribute_definition_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
        "bank_id": "gh.29.uk",
        "name": "SPECIAL_TAX_NUMBER",
        "category": "TransactionRequest",
        "type": "STRING",
        "description": "description",
        "alias": "STRING",
        "can_be_seen_on_views": ["bank"],
        "is_active": true
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["Transaction-Request", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "can_be_seen_on_views": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "description": {
            "type": "string"
          },
          "is_active": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "alias": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "can_be_seen_on_views": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "attribute_definition_id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "is_active": {
            "type": "boolean"
          },
          "bank_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "alias": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateTransactionRequestAttributeDefinitionAtOneBank",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/attribute-definitions/transaction-request",
      "connector_methods": ["obp.createOrUpdateAttributeDefinition"]
    },
    {
      "operation_id": "OBPv5.0.0-createProduct",
      "implemented_by": {
        "version": "OBPv5.0.0",
        "function": "createProduct"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v5.0.0/banks/BANK_ID/products/PRODUCT_CODE",
      "summary": "Create Product",
      "description": "<p>Create or Update Product for the Bank.</p>\n<p>Typical Super Family values / Asset classes are:</p>\n<p>Debt<br />\nEquity<br />\nFX<br />\nCommodity<br />\nDerivative</p>\n<p>Product hiearchy vs Product Collections:</p>\n<ul>\n<li>\n<p>You can define a hierarchy of products - so that a child Product inherits attributes of its parent Product -  using the parent_product_code in Product.</p>\n</li>\n<li>\n<p>You can define a collection (also known as baskets or buckets) of products using Product Collections.</p>\n</li>\n</ul>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#product_code\">PRODUCT_CODE</a>: 1234BW</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#license\"><strong>license</strong></a>:</p>\n<p><a href=\"/glossary#meta\"><strong>meta</strong></a>:</p>\n<p><a href=\"/glossary#more_info_url\"><strong>more_info_url</strong></a>: <a href=\"http://www.example.com/abc\">www.example.com/abc</a></p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#parent_product_code\"><strong>parent_product_code</strong></a>: 787LOW</p>\n<p><a href=\"/glossary#product_code\"><strong>product_code</strong></a>: 1234BW</p>\n<p><a href=\"/glossary#\"><strong>terms_and_conditions_url</strong></a>: <a href=\"http://www.example.com/xyz\">www.example.com/xyz</a></p>\n<p><a href=\"/glossary#attributes\">attributes</a>: attribute value in form of (name, value)</p>\n<p><a href=\"/glossary#\">fees</a>: fees</p>\n",
      "description_markdown": "Create or Update Product for the Bank.\n\n\nTypical Super Family values / Asset classes are:\n\nDebt\nEquity\nFX\nCommodity\nDerivative\n\n\n\nProduct hiearchy vs Product Collections:\n\n* You can define a hierarchy of products - so that a child Product inherits attributes of its parent Product -  using the parent_product_code in Product.\n\n* You can define a collection (also known as baskets or buckets) of products using Product Collections.\n\n      \n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[PRODUCT_CODE](/glossary#product_code): 1234BW\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**license**](/glossary#license): \n\n\n\n[**meta**](/glossary#meta): \n\n\n\n[**more_info_url**](/glossary#more_info_url): www.example.com/abc\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**parent_product_code**](/glossary#parent_product_code): 787LOW\n\n\n\n[**product_code**](/glossary#product_code): 1234BW\n\n\n\n[**terms_and_conditions_url**](/glossary#): www.example.com/xyz\n\n\n\n[attributes](/glossary#attributes): attribute value in form of (name, value)\n\n\n\n[fees](/glossary#): fees\n\n\n",
      "example_request_body": {
        "parent_product_code": "787LOW",
        "name": "Deposit Account 1",
        "more_info_url": "www.example.com/abc",
        "terms_and_conditions_url": "www.example.com/xyz",
        "description": "This an optional field. Maximum length is 2000. It can be any characters here.",
        "meta": {
          "license": {
            "id": "ODbL-1.0",
            "name": "Open Database License"
          }
        }
      },
      "success_response_body": {
        "bank_id": "gh.29.uk",
        "product_code": "1234BW",
        "parent_product_code": "787LOW",
        "name": "Deposit Account 1",
        "more_info_url": "www.example.com/abc",
        "terms_and_conditions_url": "www.example.com/xyz",
        "description": "This an optional field. Maximum length is 2000. It can be any characters here.",
        "meta": {
          "license": {
            "id": "ODbL-1.0",
            "name": "Open Database License"
          }
        }
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Product", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "more_info_url": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "terms_and_conditions_url": {
            "type": "string"
          },
          "parent_product_code": {
            "type": "string"
          },
          "meta": {
            "type": "object",
            "properties": {
              "license": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "name": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "product_code": {
            "type": "string"
          },
          "bank_id": {
            "type": "string"
          },
          "meta": {
            "type": "object",
            "properties": {
              "license": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "more_info_url": {
            "type": "string"
          },
          "parent_product_code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "terms_and_conditions_url": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateProduct",
          "requires_bank_id": true
        },
        {
          "role": "CanCreateProductAtAnyBank",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/products/PRODUCT_CODE",
      "connector_methods": ["obp.getProduct", "obp.createOrUpdateProduct"]
    },
    {
      "operation_id": "OBPv3.1.0-getProductTree",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "getProductTree"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/product-tree/PRODUCT_CODE",
      "summary": "Get Product Tree",
      "description": "<p>Returns information about a particular financial product specified by BANK_ID and PRODUCT_CODE<br />\nand it's parent product(s) recursively as specified by parent_product_code.</p>\n<p>Each product includes the following information.</p>\n<ul>\n<li>Name</li>\n<li>Code</li>\n<li>Parent Product Code</li>\n<li>Category</li>\n<li>Family</li>\n<li>Super Family</li>\n<li>More info URL</li>\n<li>Description</li>\n<li>Terms and Conditions</li>\n<li>License: The licence under which this product data is released. Licence can be an Open Data licence such as Open Data Commons Public Domain Dedication and License (PDDL) or Copyright etc.</li>\n</ul>\n<p>Authentication is Optional</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#product_code\">PRODUCT_CODE</a>: 1234BW</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#category\"><strong>category</strong></a>:</p>\n<p><a href=\"/glossary#code\"><strong>code</strong></a>: 125</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#details\"><strong>details</strong></a>:</p>\n<p><a href=\"/glossary#family\"><strong>family</strong></a>:</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#license\"><strong>license</strong></a>:</p>\n<p><a href=\"/glossary#meta\"><strong>meta</strong></a>:</p>\n<p><a href=\"/glossary#more_info_url\"><strong>more_info_url</strong></a>: <a href=\"http://www.example.com/abc\">www.example.com/abc</a></p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#super_family\"><strong>super_family</strong></a>:</p>\n<p><a href=\"/glossary#parent_product\">parent_product</a>:</p>\n",
      "description_markdown": "Returns information about a particular financial product specified by BANK_ID and PRODUCT_CODE\nand it's parent product(s) recursively as specified by parent_product_code.\n\nEach product includes the following information.\n\n* Name\n* Code\n* Parent Product Code\n* Category\n* Family\n* Super Family\n* More info URL\n* Description\n* Terms and Conditions\n* License: The licence under which this product data is released. Licence can be an Open Data licence such as Open Data Commons Public Domain Dedication and License (PDDL) or Copyright etc.\n\n\n\nAuthentication is Optional\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[PRODUCT_CODE](/glossary#product_code): 1234BW\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**category**](/glossary#category): \n\n\n\n[**code**](/glossary#code): 125\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**details**](/glossary#details): \n\n\n\n[**family**](/glossary#family): \n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**license**](/glossary#license): \n\n\n\n[**meta**](/glossary#meta): \n\n\n\n[**more_info_url**](/glossary#more_info_url): www.example.com/abc\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**super_family**](/glossary#super_family): \n\n\n\n[parent_product](/glossary#parent_product): \n\n\n",
      "success_response_body": {
        "bank_id": "testBank2",
        "code": "PRODUCT_CODE",
        "name": "product name",
        "category": "category",
        "family": "family",
        "super_family": "super family",
        "more_info_url": "www.example.com/prod1/more-info.html",
        "details": "Details",
        "description": "Description",
        "meta": {
          "license": {
            "id": "ODbL-1.0",
            "name": "Open Database License"
          }
        },
        "parent_product": {
          "bank_id": "testBank2",
          "code": "PARENT_CODE",
          "name": "product name",
          "category": "category",
          "family": "family",
          "super_family": "super family",
          "more_info_url": "www.example.com/prod1/more-info.html",
          "details": "Details",
          "description": "Description",
          "meta": {
            "license": {
              "id": "ODbL-1.0",
              "name": "Open Database License"
            }
          },
          "parent_product": {
            "bank_id": "testBank2",
            "code": "GRANDPARENT_CODE",
            "name": "product name",
            "category": "category",
            "family": "family",
            "super_family": "super family",
            "more_info_url": "www.example.com/prod1/more-info.html",
            "details": "Details",
            "description": "Description",
            "meta": {
              "license": {
                "id": "ODbL-1.0",
                "name": "Open Database License"
              }
            }
          }
        }
      },
      "error_response_bodies": [
        "OBP-30011: Product not found. Please specify a valid value for PRODUCT_CODE.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Product", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "super_family": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "details": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "more_info_url": {
            "type": "string"
          },
          "meta": {
            "type": "object",
            "properties": {
              "license": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "family": {
            "type": "string"
          },
          "bank_id": {
            "type": "string"
          },
          "parent_product": {
            "type": "object",
            "properties": {
              "super_family": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "details": {
                "type": "string"
              },
              "parent_product": {
                "type": "object",
                "properties": {
                  "super_family": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "details": {
                    "type": "string"
                  },
                  "code": {
                    "type": "string"
                  },
                  "more_info_url": {
                    "type": "string"
                  },
                  "meta": {
                    "type": "object",
                    "properties": {
                      "license": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "family": {
                    "type": "string"
                  },
                  "bank_id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "category": {
                    "type": "string"
                  }
                }
              },
              "code": {
                "type": "string"
              },
              "more_info_url": {
                "type": "string"
              },
              "meta": {
                "type": "object",
                "properties": {
                  "license": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "id": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "family": {
                "type": "string"
              },
              "bank_id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "category": {
                "type": "string"
              }
            }
          },
          "name": {
            "type": "string"
          },
          "category": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/product-tree/PRODUCT_CODE",
      "connector_methods": ["obp.getProduct", "obp.getBank", "obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv5.0.0-updateCustomerAccountLinkById",
      "implemented_by": {
        "version": "OBPv5.0.0",
        "function": "updateCustomerAccountLinkById"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v5.0.0/banks/BANK_ID/customer-account-links/CUSTOMER_ACCOUNT_LINK_ID",
      "summary": "Update Customer Account Link by Id",
      "description": "<p>Update Customer Account Link by CUSTOMER_ACCOUNT_LINK_ID</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#\">CUSTOMER_ACCOUNT_LINK_ID</a>: xyz8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>account_id</strong></a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#\"><strong>customer_account_link_id</strong></a>: xyz8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>relationship_type</strong></a>: Owner</p>\n",
      "description_markdown": "Update Customer Account Link by CUSTOMER_ACCOUNT_LINK_ID\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[CUSTOMER_ACCOUNT_LINK_ID](/glossary#): xyz8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**account_id**](/glossary#): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**customer_account_link_id**](/glossary#): xyz8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**customer_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**relationship_type**](/glossary#): Owner\n\n\n",
      "example_request_body": {
        "relationship_type": "Owner"
      },
      "success_response_body": {
        "customer_account_link_id": "xyz8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "bank_id": "gh.29.uk",
        "account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0",
        "relationship_type": "Owner"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Customer", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "relationship_type": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "customer_account_link_id": {
            "type": "string"
          },
          "customer_id": {
            "type": "string"
          },
          "bank_id": {
            "type": "string"
          },
          "account_id": {
            "type": "string"
          },
          "relationship_type": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanUpdateCustomerAccountLink",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/customer-account-links/CUSTOMER_ACCOUNT_LINK_ID",
      "connector_methods": ["obp.updateCustomerAccountLinkById", "obp.getCustomerAccountLinkById"]
    },
    {
      "operation_id": "OBPv4.0.0-createEndpointMapping",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "createEndpointMapping"
      },
      "request_verb": "POST",
      "request_url": "/obp/v4.0.0/management/endpoint-mappings",
      "summary": "Create Endpoint Mapping",
      "description": "<p>Create an Endpoint Mapping.</p>\n<p>Note: at moment only support the dynamic endpoints</p>\n<p>Authentication is Mandatory</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n",
      "description_markdown": "Create an Endpoint Mapping. \n\nNote: at moment only support the dynamic endpoints\n\n\nAuthentication is Mandatory\n\n\n**JSON request body fields:**\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n",
      "example_request_body": {
        "operation_id": "OBPv4.0.0-dynamicEndpoint_POST_account",
        "request_mapping": {},
        "response_mapping": {
          "name": {
            "entity": "FooBar",
            "field": "name",
            "query": "number"
          },
          "balance": {
            "entity": "FashionBrand",
            "field": "number",
            "query": "number"
          }
        }
      },
      "success_response_body": {
        "operation_id": "OBPv4.0.0-dynamicEndpoint_POST_account",
        "request_mapping": {},
        "response_mapping": {
          "name": {
            "entity": "FooBar",
            "field": "name",
            "query": "number"
          },
          "balance": {
            "entity": "FashionBrand",
            "field": "number",
            "query": "number"
          }
        },
        "endpoint_mapping_id": "b4e0352a-9a0f-4bfa-b30b-9003aa467f50"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Endpoint-Mapping", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "operation_id": {
            "type": "string"
          },
          "request_mapping": {
            "type": "object",
            "properties": {}
          },
          "response_mapping": {
            "type": "object",
            "properties": {
              "name": {
                "type": "object",
                "properties": {
                  "entity": {
                    "type": "string"
                  },
                  "field": {
                    "type": "string"
                  },
                  "query": {
                    "type": "string"
                  }
                }
              },
              "balance": {
                "type": "object",
                "properties": {
                  "entity": {
                    "type": "string"
                  },
                  "field": {
                    "type": "string"
                  },
                  "query": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "operation_id": {
            "type": "string"
          },
          "request_mapping": {
            "type": "object",
            "properties": {}
          },
          "response_mapping": {
            "type": "object",
            "properties": {
              "name": {
                "type": "object",
                "properties": {
                  "entity": {
                    "type": "string"
                  },
                  "field": {
                    "type": "string"
                  },
                  "query": {
                    "type": "string"
                  }
                }
              },
              "balance": {
                "type": "object",
                "properties": {
                  "entity": {
                    "type": "string"
                  },
                  "field": {
                    "type": "string"
                  },
                  "query": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "endpoint_mapping_id": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateEndpointMapping",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/endpoint-mappings",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv4.0.0-deleteCounterpartyForAnyAccount",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "deleteCounterpartyForAnyAccount"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v4.0.0/management/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/counterparties/COUNTERPARTY_ID",
      "summary": "Delete Counterparty for any account (Explicit)",
      "description": "<p>Delete Counterparty (Explicit) for any account<br />\nand also delete the Metadata for its counterparty.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#\">COUNTERPARTY_ID</a>: 9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p>\n<p><strong>JSON response body fields:</strong></p>\n",
      "description_markdown": "Delete Counterparty (Explicit) for any account \nand also delete the Metadata for its counterparty.\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[COUNTERPARTY_ID](/glossary#): 9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[VIEW_ID](/glossary#this_view_id): owner\n\n\n\n\n\n**JSON response body fields:**\n\n\n",
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30110: Invalid Account Id. The ACCOUNT_ID should only contain 0-9/a-z/A-Z/'-'/'.'/'_', the length should be smaller than 255.",
        "OBP-30111: Invalid Bank Id. The BANK_ID should only contain 0-9/a-z/A-Z/'-'/'.'/'_', the length should be smaller than 255.",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Counterparty", "Account", "New-Style"],
      "roles": [
        {
          "role": "CanDeleteCounterparty",
          "requires_bank_id": true
        },
        {
          "role": "CanDeleteCounterpartyAtAnyBank",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/counterparties/COUNTERPARTY_ID",
      "connector_methods": ["obp.deleteCounterpartyByCounterpartyId"]
    },
    {
      "operation_id": "OBPv4.0.0-createStandingOrder",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "createStandingOrder"
      },
      "request_verb": "POST",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/standing-order",
      "summary": "Create Standing Order",
      "description": "<p>Create standing order for an account.</p>\n<p>when -&gt; frequency = {‘YEARLY’,’MONTHLY, ‘WEEKLY’, ‘BI-WEEKLY’, DAILY’}<br />\nwhen -&gt; detail = { ‘FIRST_MONDAY’, ‘FIRST_DAY’, ‘LAST_DAY’}}</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p>\n<p><a href=\"/glossary#\"><strong>counterparty_id</strong></a>: 9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>date_starts</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#detail\"><strong>detail</strong></a>:</p>\n<p><a href=\"/glossary#frequency\"><strong>frequency</strong></a>: DAILY</p>\n<p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p>\n<p><a href=\"/glossary#when\"><strong>when</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#\">date_expires</a>: 2021-01-27</p>\n<p><a href=\"/glossary#\">date_signed</a>: 2020-01-27</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>account_id</strong></a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#active\"><strong>active</strong></a>: true</p>\n<p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#\"><strong>counterparty_id</strong></a>: 9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>date_cancelled</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#\"><strong>date_expires</strong></a>: 2021-01-27</p>\n<p><a href=\"/glossary#\"><strong>date_signed</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#\"><strong>date_starts</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#detail\"><strong>detail</strong></a>:</p>\n<p><a href=\"/glossary#frequency\"><strong>frequency</strong></a>: DAILY</p>\n<p><a href=\"/glossary#standing_order_id\"><strong>standing_order_id</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p>\n<p><a href=\"/glossary#when\"><strong>when</strong></a>: 2020-01-27</p>\n",
      "description_markdown": "Create standing order for an account.\n\nwhen -> frequency = {‘YEARLY’,’MONTHLY, ‘WEEKLY’, ‘BI-WEEKLY’, DAILY’}\nwhen -> detail = { ‘FIRST_MONDAY’, ‘FIRST_DAY’, ‘LAST_DAY’}}\n\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[VIEW_ID](/glossary#this_view_id): owner\n\n\n\n\n\n**JSON request body fields:**\n\n\n\n[**amount**](/glossary#): 10.12\n\n\n\n[**counterparty_id**](/glossary#): 9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**customer_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**date_starts**](/glossary#): 2020-01-27\n\n\n\n[**detail**](/glossary#detail): \n\n\n\n[**frequency**](/glossary#frequency): DAILY\n\n\n\n[**user_id**](/glossary#): 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\n\n\n\n[**when**](/glossary#when): 2020-01-27\n\n\n\n[date_expires](/glossary#): 2021-01-27\n\n\n\n[date_signed](/glossary#): 2020-01-27\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**account_id**](/glossary#): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[**active**](/glossary#active): true\n\n\n\n[**amount**](/glossary#): 10.12\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**counterparty_id**](/glossary#): 9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**customer_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**date_cancelled**](/glossary#): 2020-01-27\n\n\n\n[**date_expires**](/glossary#): 2021-01-27\n\n\n\n[**date_signed**](/glossary#): 2020-01-27\n\n\n\n[**date_starts**](/glossary#): 2020-01-27\n\n\n\n[**detail**](/glossary#detail): \n\n\n\n[**frequency**](/glossary#frequency): DAILY\n\n\n\n[**standing_order_id**](/glossary#standing_order_id): \n\n\n\n[**user_id**](/glossary#): 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\n\n\n\n[**when**](/glossary#when): 2020-01-27\n\n\n",
      "example_request_body": {
        "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
        "counterparty_id": "9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "amount": {
          "currency": "EUR",
          "amount": "0"
        },
        "when": {
          "frequency": "YEARLY",
          "detail": "LAST_DAY"
        },
        "date_signed": "1100-01-01T00:00:00Z",
        "date_starts": "1100-01-01T00:00:00Z",
        "date_expires": "1100-01-01T00:00:00Z"
      },
      "success_response_body": {
        "standing_order_id": "aa0533bd-eb22-4bff-af75-d45240361b05",
        "bank_id": "gh.29.uk",
        "account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0",
        "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
        "counterparty_id": "9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "amount": {
          "currency": "EUR",
          "amount": "0"
        },
        "when": {
          "frequency": "WEEKLY",
          "detail": "FIRST_DAY"
        },
        "date_signed": "2023-04-13T04:30:08Z",
        "date_starts": "2023-04-13T04:30:08Z",
        "date_expires": "2023-04-13T04:30:08Z",
        "date_cancelled": "2023-04-13T04:30:08Z",
        "active": true
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-30022: The current view does not have the permission:",
        "OBP-10001: Incorrect json format.",
        "OBP-10002: Invalid Number. Could not convert value to a number.",
        "OBP-10003: Invalid Currency Value. It should be three letters ISO Currency Code. ",
        "OBP-30046: Customer not found. Please specify a valid value for CUSTOMER_ID.",
        "OBP-20057: User not found by userId.",
        "OBP-20017: Current user does not have access to the view. Please specify a valid value for VIEW_ID.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Standing-Order", "Account", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "date_expires": {
            "type": "string",
            "format": "date-time"
          },
          "date_starts": {
            "type": "string",
            "format": "date-time"
          },
          "customer_id": {
            "type": "string"
          },
          "counterparty_id": {
            "type": "string"
          },
          "when": {
            "type": "object",
            "properties": {
              "frequency": {
                "type": "string"
              },
              "detail": {
                "type": "string"
              }
            }
          },
          "date_signed": {
            "type": "string",
            "format": "date-time"
          },
          "amount": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string"
              },
              "amount": {
                "type": "string"
              }
            }
          },
          "user_id": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "date_cancelled": {
            "type": "string",
            "format": "date-time"
          },
          "customer_id": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          },
          "bank_id": {
            "type": "string"
          },
          "standing_order_id": {
            "type": "string"
          },
          "counterparty_id": {
            "type": "string"
          },
          "date_signed": {
            "type": "string",
            "format": "date-time"
          },
          "date_starts": {
            "type": "string",
            "format": "date-time"
          },
          "when": {
            "type": "object",
            "properties": {
              "frequency": {
                "type": "string"
              },
              "detail": {
                "type": "string"
              }
            }
          },
          "date_expires": {
            "type": "string",
            "format": "date-time"
          },
          "amount": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string"
              },
              "amount": {
                "type": "string"
              }
            }
          },
          "account_id": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/standing-order",
      "connector_methods": [
        "obp.createStandingOrder",
        "obp.getCounterpartyByCounterpartyId",
        "obp.getCustomerByCustomerId"
      ]
    },
    {
      "operation_id": "OBPv1.2.1-updateTransactionNarrative",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "updateTransactionNarrative"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transactions/TRANSACTION_ID/metadata/narrative",
      "summary": "Update a Transaction Narrative",
      "description": "<p>Updates the description of the transaction TRANSACTION_ID.</p>\n<p>Authentication via OAuth is required if the view is not public.</p>\n<p>Authentication is Optional</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#transaction_ids\">TRANSACTION_ID</a>: 2fg8a7e4-6d02-40e3-a129-0b2bf89de8ub</p>\n<p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#success\"><strong>success</strong></a>:</p>\n",
      "description_markdown": "Updates the description of the transaction TRANSACTION_ID.\n\nAuthentication via OAuth is required if the view is not public.\n\nAuthentication is Optional\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[TRANSACTION_ID](/glossary#transaction_ids): 2fg8a7e4-6d02-40e3-a129-0b2bf89de8ub\n\n\n\n[VIEW_ID](/glossary#this_view_id): owner\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**success**](/glossary#success): \n\n\n",
      "example_request_body": {
        "narrative": "narative"
      },
      "success_response_body": {
        "success": "Success"
      },
      "error_response_bodies": [
        "OBP-10001: Incorrect json format.",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-30022: The current view does not have the permission:",
        "OBP-30005: View not found for Account. Please specify a valid value for VIEW_ID",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Transaction-Metadata", "Transaction", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "narrative": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "success": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transactions/TRANSACTION_ID/metadata/narrative",
      "connector_methods": ["obp.checkBankAccountExists", "obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv4.0.0-getBankLevelDynamicResourceDoc",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getBankLevelDynamicResourceDoc"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/management/banks/BANK_ID/dynamic-resource-docs/DYNAMIC-RESOURCE-DOC-ID",
      "summary": "Get Bank Level Dynamic Resource Doc by Id",
      "description": "<p>Get a Bank Level Dynamic Resource Doc by DYNAMIC-RESOURCE-DOC-ID.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#roles\"><strong>roles</strong></a>: CanCreateMyUser</p>\n<p><a href=\"/glossary#summary\"><strong>summary</strong></a>:</p>\n<p><a href=\"/glossary#tags\"><strong>tags</strong></a>: Create-My-User</p>\n",
      "description_markdown": "Get a Bank Level Dynamic Resource Doc by DYNAMIC-RESOURCE-DOC-ID.\n\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**roles**](/glossary#roles): CanCreateMyUser\n\n\n\n[**summary**](/glossary#summary): \n\n\n\n[**tags**](/glossary#tags): Create-My-User\n\n\n",
      "success_response_body": {
        "error_response_bodies": "OBP-50000: Unknown Error.,OBP-20001: User not logged in. Authentication is required!,OBP-20006: User is missing one or more roles: ,OBP-10001: Incorrect json format.",
        "description": "Create one User",
        "tags": "Create-My-User",
        "dynamic_resource_doc_id": "vce035ca-9a0f-4bfa-b30b-9003aa467f51",
        "request_verb": "POST",
        "method_body": "%20%20%20%20val%20Some(resourceDoc)%20%3D%20callContext.resourceDocument%0A%20%20%20%20val%20hasRequestBody%20%3D%20request.body.isDefined%0A%0A%20%20%20%20%2F%2F%20get%20Path%20Parameters%2C%20example%3A%0A%20%20%20%20%2F%2F%20if%20the%20requestUrl%20of%20resourceDoc%20is%20%2Fhello%2Fbanks%2FBANK_ID%2Fworld%0A%20%20%20%20%2F%2F%20the%20request%20path%20is%20%2Fhello%2Fbanks%2Fbank_x%2Fworld%0A%20%20%20%20%2F%2FpathParams.get(%22BANK_ID%22)%20will%20get%20Option(%22bank_x%22)%20value%0A%0A%20%20%20%20val%20myUserId%20%3D%20pathParams(%22MY_USER_ID%22)%0A%0A%0A%20%20%20%20val%20requestEntity%20%3D%20request.json%20match%20%7B%0A%20%20%20%20%20%20case%20Full(zson)%20%3D%3E%0A%20%20%20%20%20%20%20%20try%20%7B%0A%20%20%20%20%20%20%20%20%20%20zson.extract%5BRequestRootJsonClass%5D%0A%20%20%20%20%20%20%20%20%7D%20catch%20%7B%0A%20%20%20%20%20%20%20%20%20%20case%20e%3A%20MappingException%20%3D%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20return%20Full(errorJsonResponse(s%22%24InvalidJsonFormat%20%24%7Be.msg%7D%22))%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20case%20_%3A%20EmptyBox%20%3D%3E%0A%20%20%20%20%20%20%20%20return%20Full(errorJsonResponse(s%22%24InvalidRequestPayload%20Current%20request%20has%20no%20payload%22))%0A%20%20%20%20%7D%0A%0A%0A%20%20%20%20%2F%2F%20please%20add%20business%20logic%20here%0A%20%20%20%20val%20responseBody%3AResponseRootJsonClass%20%3D%20ResponseRootJsonClass(s%22%24%7BmyUserId%7D_from_path%22%2C%20requestEntity.name%2C%20requestEntity.age%2C%20requestEntity.hobby)%0A%20%20%20%20Future.successful%20%7B%0A%20%20%20%20%20%20(responseBody%2C%20HttpCode.%60200%60(callContext.callContext))%0A%20%20%20%20%7D",
        "roles": "CanCreateMyUser",
        "example_request_body": {
          "name": "Jhon",
          "age": 12,
          "hobby": ["coding"],
          "_optional_fields_": ["hobby"]
        },
        "request_url": "/my_user/MY_USER_ID",
        "bank_id": "gh.29.uk",
        "partial_function_name": "createUser",
        "summary": "Create My User",
        "success_response_body": {
          "my_user_id": "some_id_value",
          "name": "Jhon",
          "age": 12,
          "hobby": ["coding"],
          "_optional_fields_": ["hobby"]
        }
      },
      "error_response_bodies": [
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Dynamic-Resource-Doc", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "tags": {
            "type": "string"
          },
          "request_verb": {
            "type": "string"
          },
          "example_request_body": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "age": {
                "type": "integer"
              },
              "hobby": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "s": {
                      "type": "string"
                    }
                  }
                }
              },
              "_optional_fields_": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "s": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "bank_id": {
            "type": "string"
          },
          "partial_function_name": {
            "type": "string"
          },
          "success_response_body": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "hobby": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "s": {
                      "type": "string"
                    }
                  }
                }
              },
              "my_user_id": {
                "type": "string"
              },
              "age": {
                "type": "integer"
              },
              "_optional_fields_": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "s": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "roles": {
            "type": "string"
          },
          "dynamic_resource_doc_id": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          },
          "request_url": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "method_body": {
            "type": "string"
          },
          "error_response_bodies": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanGetBankLevelDynamicResourceDoc",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/banks/BANK_ID/dynamic-resource-docs/DYNAMIC-RESOURCE-DOC-ID",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv4.0.0-createMyApiCollectionEndpointById",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "createMyApiCollectionEndpointById"
      },
      "request_verb": "POST",
      "request_url": "/obp/v4.0.0/my/api-collection-ids/API_COLLECTION_ID/api-collection-endpoints",
      "summary": "Create My Api Collection Endpoint By Id",
      "description": "<p>Create Api Collection Endpoint By Id.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#\">API_COLLECTION_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>operation_id</strong></a>: OBPv4.0.0-getBanks</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>api_collection_endpoint_id</strong></a>: 8uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>api_collection_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>operation_id</strong></a>: OBPv4.0.0-getBanks</p>\n",
      "description_markdown": "Create Api Collection Endpoint By Id.\n\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[API_COLLECTION_ID](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n\n\n**JSON request body fields:**\n\n\n\n[**operation_id**](/glossary#): OBPv4.0.0-getBanks\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**api_collection_endpoint_id**](/glossary#): 8uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**api_collection_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**operation_id**](/glossary#): OBPv4.0.0-getBanks\n\n\n",
      "example_request_body": {
        "operation_id": "OBPv4.0.0-getBanks"
      },
      "success_response_body": {
        "api_collection_endpoint_id": "8uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "api_collection_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "operation_id": "OBPv4.0.0-getBanks"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Api-Collection", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "operation_id": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "operation_id": {
            "type": "string"
          },
          "api_collection_id": {
            "type": "string"
          },
          "api_collection_endpoint_id": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/my/api-collection-ids/API_COLLECTION_ID/api-collection-endpoints",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv5.0.0-getViewsForBankAccount",
      "implemented_by": {
        "version": "OBPv5.0.0",
        "function": "getViewsForBankAccount"
      },
      "request_verb": "GET",
      "request_url": "/obp/v5.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/views",
      "summary": "Get Views for Account",
      "description": "<h1><a href=\"#views\" id=\"views\">Views</a></h1>\n<p>Views in Open Bank Project provide a mechanism for fine grained access control and delegation to Accounts and Transactions. Account holders use the 'owner' view by default. Delegated access is made through other views for example 'accountants', 'share-holders' or 'tagging-application'. Views can be created via the API and each view has a list of entitlements.</p>\n<p>Views on accounts and transactions filter the underlying data to redact certain fields for certain users. For instance the balance on an account may be hidden from the public. The way to know what is possible on a view is determined in the following JSON.</p>\n<p><strong>Data:</strong> When a view moderates a set of data, some fields my contain the value <code>null</code> rather than the original value. This indicates either that the user is not allowed to see the original data or the field is empty.</p>\n<p>There is currently one exception to this rule; the 'holder' field in the JSON contains always a value which is either an alias or the real name - indicated by the 'is_alias' field.</p>\n<p><strong>Action:</strong> When a user performs an action like trying to post a comment (with POST API call), if he is not allowed, the body response will contain an error message.</p>\n<p><strong>Metadata:</strong><br />\nTransaction metadata (like images, tags, comments, etc.) will appears <em>ONLY</em> on the view where they have been created e.g. comments posted to the public view only appear on the public view.</p>\n<p>The other account metadata fields (like image_URL, more_info, etc.) are unique through all the views. Example, if a user edits the 'more_info' field in the 'team' view, then the view 'authorities' will show the new value (if it is allowed to do it).</p>\n<h1><a href=\"#all\" id=\"all\">All</a></h1>\n<p><em>Optional</em></p>\n<p>Returns the list of the views created for account ACCOUNT_ID at BANK_ID.</p>\n<p>Authentication is Mandatory and the user needs to have access to the owner view.</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#alias\"><strong>alias</strong></a>:</p>\n<p><a href=\"/glossary#can_add_comment\"><strong>can_add_comment</strong></a>:</p>\n<p><a href=\"/glossary#can_add_corporate_location\"><strong>can_add_corporate_location</strong></a>:</p>\n<p><a href=\"/glossary#can_add_counterparty\"><strong>can_add_counterparty</strong></a>: true</p>\n<p><a href=\"/glossary#can_add_image\"><strong>can_add_image</strong></a>:</p>\n<p><a href=\"/glossary#can_add_image_url\"><strong>can_add_image_url</strong></a>: true</p>\n<p><a href=\"/glossary#can_add_more_info\"><strong>can_add_more_info</strong></a>: true</p>\n<p><a href=\"/glossary#can_add_open_corporates_url\"><strong>can_add_open_corporates_url</strong></a>:</p>\n<p><a href=\"/glossary#can_add_physical_location\"><strong>can_add_physical_location</strong></a>:</p>\n<p><a href=\"/glossary#can_add_private_alias\"><strong>can_add_private_alias</strong></a>:</p>\n<p><a href=\"/glossary#can_add_public_alias\"><strong>can_add_public_alias</strong></a>:</p>\n<p><a href=\"/glossary#can_add_tag\"><strong>can_add_tag</strong></a>: true</p>\n<p><a href=\"/glossary#can_add_transaction_request_to_any_account\"><strong>can_add_transaction_request_to_any_account</strong></a>:</p>\n<p><a href=\"/glossary#can_add_transaction_request_to_own_account\"><strong>can_add_transaction_request_to_own_account</strong></a>:</p>\n<p><a href=\"/glossary#can_add_url\"><strong>can_add_url</strong></a>:</p>\n<p><a href=\"/glossary#can_add_where_tag\"><strong>can_add_where_tag</strong></a>:</p>\n<p><a href=\"/glossary#can_create_direct_debit\"><strong>can_create_direct_debit</strong></a>: true</p>\n<p><a href=\"/glossary#can_create_standing_order\"><strong>can_create_standing_order</strong></a>:</p>\n<p><a href=\"/glossary#can_delete_comment\"><strong>can_delete_comment</strong></a>:</p>\n<p><a href=\"/glossary#can_delete_corporate_location\"><strong>can_delete_corporate_location</strong></a>: true</p>\n<p><a href=\"/glossary#can_delete_image\"><strong>can_delete_image</strong></a>: true</p>\n<p><a href=\"/glossary#can_delete_physical_location\"><strong>can_delete_physical_location</strong></a>:</p>\n<p><a href=\"/glossary#can_delete_tag\"><strong>can_delete_tag</strong></a>:</p>\n<p><a href=\"/glossary#can_delete_where_tag\"><strong>can_delete_where_tag</strong></a>: true</p>\n<p><a href=\"/glossary#can_edit_owner_comment\"><strong>can_edit_owner_comment</strong></a>: true</p>\n<p><a href=\"/glossary#\"><strong>can_grant_access_to_views</strong></a>: can_grant_access_to_views</p>\n<p><a href=\"/glossary#can_query_available_funds\"><strong>can_query_available_funds</strong></a>: true</p>\n<p><a href=\"/glossary#\"><strong>can_revoke_access_to_views</strong></a>: can_revoke_access_to_views</p>\n<p><a href=\"/glossary#can_see_bank_account_balance\"><strong>can_see_bank_account_balance</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_bank_name\"><strong>can_see_bank_account_bank_name</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_credit_limit\"><strong>can_see_bank_account_credit_limit</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_currency\"><strong>can_see_bank_account_currency</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_iban\"><strong>can_see_bank_account_iban</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_label\"><strong>can_see_bank_account_label</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_national_identifier\"><strong>can_see_bank_account_national_identifier</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_number\"><strong>can_see_bank_account_number</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_owners\"><strong>can_see_bank_account_owners</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_routing_address\"><strong>can_see_bank_account_routing_address</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_routing_scheme\"><strong>can_see_bank_account_routing_scheme</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_swift_bic\"><strong>can_see_bank_account_swift_bic</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_type\"><strong>can_see_bank_account_type</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_routing_address\"><strong>can_see_bank_routing_address</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_routing_scheme\"><strong>can_see_bank_routing_scheme</strong></a>:</p>\n<p><a href=\"/glossary#can_see_comments\"><strong>can_see_comments</strong></a>:</p>\n<p><a href=\"/glossary#can_see_corporate_location\"><strong>can_see_corporate_location</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_image_url\"><strong>can_see_image_url</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_images\"><strong>can_see_images</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_more_info\"><strong>can_see_more_info</strong></a>:</p>\n<p><a href=\"/glossary#can_see_open_corporates_url\"><strong>can_see_open_corporates_url</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_bank_name\"><strong>can_see_other_account_bank_name</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_iban\"><strong>can_see_other_account_iban</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_kind\"><strong>can_see_other_account_kind</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_metadata\"><strong>can_see_other_account_metadata</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_national_identifier\"><strong>can_see_other_account_national_identifier</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_other_account_number\"><strong>can_see_other_account_number</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_other_account_routing_address\"><strong>can_see_other_account_routing_address</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_other_account_routing_scheme\"><strong>can_see_other_account_routing_scheme</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_swift_bic\"><strong>can_see_other_account_swift_bic</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_other_bank_routing_address\"><strong>can_see_other_bank_routing_address</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_bank_routing_scheme\"><strong>can_see_other_bank_routing_scheme</strong></a>:</p>\n<p><a href=\"/glossary#can_see_owner_comment\"><strong>can_see_owner_comment</strong></a>:</p>\n<p><a href=\"/glossary#can_see_physical_location\"><strong>can_see_physical_location</strong></a>:</p>\n<p><a href=\"/glossary#can_see_private_alias\"><strong>can_see_private_alias</strong></a>:</p>\n<p><a href=\"/glossary#can_see_public_alias\"><strong>can_see_public_alias</strong></a>:</p>\n<p><a href=\"/glossary#can_see_tags\"><strong>can_see_tags</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_amount\"><strong>can_see_transaction_amount</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_transaction_balance\"><strong>can_see_transaction_balance</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_currency\"><strong>can_see_transaction_currency</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_description\"><strong>can_see_transaction_description</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_transaction_finish_date\"><strong>can_see_transaction_finish_date</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_metadata\"><strong>can_see_transaction_metadata</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_other_bank_account\"><strong>can_see_transaction_other_bank_account</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_start_date\"><strong>can_see_transaction_start_date</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_this_bank_account\"><strong>can_see_transaction_this_bank_account</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_type\"><strong>can_see_transaction_type</strong></a>:</p>\n<p><a href=\"/glossary#can_see_url\"><strong>can_see_url</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_where_tag\"><strong>can_see_where_tag</strong></a>: true</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#hide_metadata_if_alias_used\"><strong>hide_metadata_if_alias_used</strong></a>:</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#is_public\"><strong>is_public</strong></a>: true</p>\n<p><a href=\"/glossary#\"><strong>is_system</strong></a>: true</p>\n<p><a href=\"/glossary#metadata_view\"><strong>metadata_view</strong></a>:</p>\n<p><a href=\"/glossary#short_name\"><strong>short_name</strong></a>:</p>\n<p><a href=\"/glossary#views\"><strong>views</strong></a>:</p>\n<p><a href=\"/glossary#is_firehose\">is_firehose</a>:</p>\n",
      "description_markdown": "#Views\n\n\nViews in Open Bank Project provide a mechanism for fine grained access control and delegation to Accounts and Transactions. Account holders use the 'owner' view by default. Delegated access is made through other views for example 'accountants', 'share-holders' or 'tagging-application'. Views can be created via the API and each view has a list of entitlements.\n\nViews on accounts and transactions filter the underlying data to redact certain fields for certain users. For instance the balance on an account may be hidden from the public. The way to know what is possible on a view is determined in the following JSON.\n\n**Data:** When a view moderates a set of data, some fields my contain the value `null` rather than the original value. This indicates either that the user is not allowed to see the original data or the field is empty.\n\nThere is currently one exception to this rule; the 'holder' field in the JSON contains always a value which is either an alias or the real name - indicated by the 'is_alias' field.\n\n**Action:** When a user performs an action like trying to post a comment (with POST API call), if he is not allowed, the body response will contain an error message.\n\n**Metadata:**\nTransaction metadata (like images, tags, comments, etc.) will appears *ONLY* on the view where they have been created e.g. comments posted to the public view only appear on the public view.\n\nThe other account metadata fields (like image_URL, more_info, etc.) are unique through all the views. Example, if a user edits the 'more_info' field in the 'team' view, then the view 'authorities' will show the new value (if it is allowed to do it).\n\n# All\n*Optional*\n\nReturns the list of the views created for account ACCOUNT_ID at BANK_ID.\n\nAuthentication is Mandatory and the user needs to have access to the owner view.\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**alias**](/glossary#alias): \n\n\n\n[**can_add_comment**](/glossary#can_add_comment): \n\n\n\n[**can_add_corporate_location**](/glossary#can_add_corporate_location): \n\n\n\n[**can_add_counterparty**](/glossary#can_add_counterparty): true\n\n\n\n[**can_add_image**](/glossary#can_add_image): \n\n\n\n[**can_add_image_url**](/glossary#can_add_image_url): true\n\n\n\n[**can_add_more_info**](/glossary#can_add_more_info): true\n\n\n\n[**can_add_open_corporates_url**](/glossary#can_add_open_corporates_url): \n\n\n\n[**can_add_physical_location**](/glossary#can_add_physical_location): \n\n\n\n[**can_add_private_alias**](/glossary#can_add_private_alias): \n\n\n\n[**can_add_public_alias**](/glossary#can_add_public_alias): \n\n\n\n[**can_add_tag**](/glossary#can_add_tag): true\n\n\n\n[**can_add_transaction_request_to_any_account**](/glossary#can_add_transaction_request_to_any_account): \n\n\n\n[**can_add_transaction_request_to_own_account**](/glossary#can_add_transaction_request_to_own_account): \n\n\n\n[**can_add_url**](/glossary#can_add_url): \n\n\n\n[**can_add_where_tag**](/glossary#can_add_where_tag): \n\n\n\n[**can_create_direct_debit**](/glossary#can_create_direct_debit): true\n\n\n\n[**can_create_standing_order**](/glossary#can_create_standing_order): \n\n\n\n[**can_delete_comment**](/glossary#can_delete_comment): \n\n\n\n[**can_delete_corporate_location**](/glossary#can_delete_corporate_location): true\n\n\n\n[**can_delete_image**](/glossary#can_delete_image): true\n\n\n\n[**can_delete_physical_location**](/glossary#can_delete_physical_location): \n\n\n\n[**can_delete_tag**](/glossary#can_delete_tag): \n\n\n\n[**can_delete_where_tag**](/glossary#can_delete_where_tag): true\n\n\n\n[**can_edit_owner_comment**](/glossary#can_edit_owner_comment): true\n\n\n\n[**can_grant_access_to_views**](/glossary#): can_grant_access_to_views\n\n\n\n[**can_query_available_funds**](/glossary#can_query_available_funds): true\n\n\n\n[**can_revoke_access_to_views**](/glossary#): can_revoke_access_to_views\n\n\n\n[**can_see_bank_account_balance**](/glossary#can_see_bank_account_balance): \n\n\n\n[**can_see_bank_account_bank_name**](/glossary#can_see_bank_account_bank_name): true\n\n\n\n[**can_see_bank_account_credit_limit**](/glossary#can_see_bank_account_credit_limit): true\n\n\n\n[**can_see_bank_account_currency**](/glossary#can_see_bank_account_currency): \n\n\n\n[**can_see_bank_account_iban**](/glossary#can_see_bank_account_iban): \n\n\n\n[**can_see_bank_account_label**](/glossary#can_see_bank_account_label): true\n\n\n\n[**can_see_bank_account_national_identifier**](/glossary#can_see_bank_account_national_identifier): \n\n\n\n[**can_see_bank_account_number**](/glossary#can_see_bank_account_number): true\n\n\n\n[**can_see_bank_account_owners**](/glossary#can_see_bank_account_owners): true\n\n\n\n[**can_see_bank_account_routing_address**](/glossary#can_see_bank_account_routing_address): \n\n\n\n[**can_see_bank_account_routing_scheme**](/glossary#can_see_bank_account_routing_scheme): \n\n\n\n[**can_see_bank_account_swift_bic**](/glossary#can_see_bank_account_swift_bic): \n\n\n\n[**can_see_bank_account_type**](/glossary#can_see_bank_account_type): \n\n\n\n[**can_see_bank_routing_address**](/glossary#can_see_bank_routing_address): true\n\n\n\n[**can_see_bank_routing_scheme**](/glossary#can_see_bank_routing_scheme): \n\n\n\n[**can_see_comments**](/glossary#can_see_comments): \n\n\n\n[**can_see_corporate_location**](/glossary#can_see_corporate_location): true\n\n\n\n[**can_see_image_url**](/glossary#can_see_image_url): true\n\n\n\n[**can_see_images**](/glossary#can_see_images): true\n\n\n\n[**can_see_more_info**](/glossary#can_see_more_info): \n\n\n\n[**can_see_open_corporates_url**](/glossary#can_see_open_corporates_url): \n\n\n\n[**can_see_other_account_bank_name**](/glossary#can_see_other_account_bank_name): \n\n\n\n[**can_see_other_account_iban**](/glossary#can_see_other_account_iban): \n\n\n\n[**can_see_other_account_kind**](/glossary#can_see_other_account_kind): \n\n\n\n[**can_see_other_account_metadata**](/glossary#can_see_other_account_metadata): \n\n\n\n[**can_see_other_account_national_identifier**](/glossary#can_see_other_account_national_identifier): true\n\n\n\n[**can_see_other_account_number**](/glossary#can_see_other_account_number): true\n\n\n\n[**can_see_other_account_routing_address**](/glossary#can_see_other_account_routing_address): true\n\n\n\n[**can_see_other_account_routing_scheme**](/glossary#can_see_other_account_routing_scheme): \n\n\n\n[**can_see_other_account_swift_bic**](/glossary#can_see_other_account_swift_bic): true\n\n\n\n[**can_see_other_bank_routing_address**](/glossary#can_see_other_bank_routing_address): \n\n\n\n[**can_see_other_bank_routing_scheme**](/glossary#can_see_other_bank_routing_scheme): \n\n\n\n[**can_see_owner_comment**](/glossary#can_see_owner_comment): \n\n\n\n[**can_see_physical_location**](/glossary#can_see_physical_location): \n\n\n\n[**can_see_private_alias**](/glossary#can_see_private_alias): \n\n\n\n[**can_see_public_alias**](/glossary#can_see_public_alias): \n\n\n\n[**can_see_tags**](/glossary#can_see_tags): \n\n\n\n[**can_see_transaction_amount**](/glossary#can_see_transaction_amount): true\n\n\n\n[**can_see_transaction_balance**](/glossary#can_see_transaction_balance): \n\n\n\n[**can_see_transaction_currency**](/glossary#can_see_transaction_currency): \n\n\n\n[**can_see_transaction_description**](/glossary#can_see_transaction_description): true\n\n\n\n[**can_see_transaction_finish_date**](/glossary#can_see_transaction_finish_date): \n\n\n\n[**can_see_transaction_metadata**](/glossary#can_see_transaction_metadata): \n\n\n\n[**can_see_transaction_other_bank_account**](/glossary#can_see_transaction_other_bank_account): \n\n\n\n[**can_see_transaction_start_date**](/glossary#can_see_transaction_start_date): \n\n\n\n[**can_see_transaction_this_bank_account**](/glossary#can_see_transaction_this_bank_account): \n\n\n\n[**can_see_transaction_type**](/glossary#can_see_transaction_type): \n\n\n\n[**can_see_url**](/glossary#can_see_url): true\n\n\n\n[**can_see_where_tag**](/glossary#can_see_where_tag): true\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**hide_metadata_if_alias_used**](/glossary#hide_metadata_if_alias_used): \n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**is_public**](/glossary#is_public): true\n\n\n\n[**is_system**](/glossary#): true\n\n\n\n[**metadata_view**](/glossary#metadata_view): \n\n\n\n[**short_name**](/glossary#short_name): \n\n\n\n[**views**](/glossary#views): \n\n\n\n[is_firehose](/glossary#is_firehose): \n\n\n",
      "success_response_body": {
        "views": [
          {
            "id": "1234",
            "short_name": "short_name",
            "description": "description",
            "metadata_view": "owner",
            "is_public": true,
            "is_system": true,
            "alias": "No",
            "hide_metadata_if_alias_used": true,
            "can_grant_access_to_views": ["Owner"],
            "can_revoke_access_to_views": ["Owner"],
            "can_add_comment": true,
            "can_add_corporate_location": true,
            "can_add_image": true,
            "can_add_image_url": true,
            "can_add_more_info": true,
            "can_add_open_corporates_url": true,
            "can_add_physical_location": true,
            "can_add_private_alias": true,
            "can_add_public_alias": true,
            "can_add_tag": true,
            "can_add_url": true,
            "can_add_where_tag": true,
            "can_delete_comment": true,
            "can_add_counterparty": true,
            "can_delete_corporate_location": true,
            "can_delete_image": true,
            "can_delete_physical_location": true,
            "can_delete_tag": true,
            "can_delete_where_tag": true,
            "can_edit_owner_comment": true,
            "can_see_bank_account_balance": true,
            "can_query_available_funds": true,
            "can_see_bank_account_bank_name": true,
            "can_see_bank_account_currency": true,
            "can_see_bank_account_iban": true,
            "can_see_bank_account_label": true,
            "can_see_bank_account_national_identifier": true,
            "can_see_bank_account_number": true,
            "can_see_bank_account_owners": true,
            "can_see_bank_account_swift_bic": true,
            "can_see_bank_account_type": true,
            "can_see_comments": true,
            "can_see_corporate_location": true,
            "can_see_image_url": true,
            "can_see_images": true,
            "can_see_more_info": true,
            "can_see_open_corporates_url": true,
            "can_see_other_account_bank_name": true,
            "can_see_other_account_iban": true,
            "can_see_other_account_kind": true,
            "can_see_other_account_metadata": true,
            "can_see_other_account_national_identifier": true,
            "can_see_other_account_number": true,
            "can_see_other_account_swift_bic": true,
            "can_see_owner_comment": true,
            "can_see_physical_location": true,
            "can_see_private_alias": true,
            "can_see_public_alias": true,
            "can_see_tags": true,
            "can_see_transaction_amount": true,
            "can_see_transaction_balance": true,
            "can_see_transaction_currency": true,
            "can_see_transaction_description": true,
            "can_see_transaction_finish_date": true,
            "can_see_transaction_metadata": true,
            "can_see_transaction_other_bank_account": true,
            "can_see_transaction_start_date": true,
            "can_see_transaction_this_bank_account": true,
            "can_see_transaction_type": true,
            "can_see_url": true,
            "can_see_where_tag": true,
            "can_see_bank_routing_scheme": true,
            "can_see_bank_routing_address": true,
            "can_see_bank_account_routing_scheme": true,
            "can_see_bank_account_routing_address": true,
            "can_see_other_bank_routing_scheme": true,
            "can_see_other_bank_routing_address": true,
            "can_see_other_account_routing_scheme": true,
            "can_see_other_account_routing_address": true,
            "can_add_transaction_request_to_own_account": true,
            "can_add_transaction_request_to_any_account": true,
            "can_see_bank_account_credit_limit": true,
            "can_create_direct_debit": true,
            "can_create_standing_order": true
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["View-Custom", "Account", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "views": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "can_see_other_account_swift_bic": {
                  "type": "boolean"
                },
                "can_see_where_tag": {
                  "type": "boolean"
                },
                "can_see_url": {
                  "type": "boolean"
                },
                "can_create_direct_debit": {
                  "type": "boolean"
                },
                "can_see_bank_account_swift_bic": {
                  "type": "boolean"
                },
                "can_see_bank_account_routing_address": {
                  "type": "boolean"
                },
                "can_see_tags": {
                  "type": "boolean"
                },
                "can_see_transaction_balance": {
                  "type": "boolean"
                },
                "can_delete_corporate_location": {
                  "type": "boolean"
                },
                "can_add_image_url": {
                  "type": "boolean"
                },
                "can_see_public_alias": {
                  "type": "boolean"
                },
                "can_add_transaction_request_to_own_account": {
                  "type": "boolean"
                },
                "can_add_comment": {
                  "type": "boolean"
                },
                "can_see_other_bank_routing_scheme": {
                  "type": "boolean"
                },
                "description": {
                  "type": "string"
                },
                "can_see_corporate_location": {
                  "type": "boolean"
                },
                "can_see_other_account_bank_name": {
                  "type": "boolean"
                },
                "can_see_more_info": {
                  "type": "boolean"
                },
                "can_add_counterparty": {
                  "type": "boolean"
                },
                "is_system": {
                  "type": "boolean"
                },
                "can_revoke_access_to_views": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "can_see_physical_location": {
                  "type": "boolean"
                },
                "can_query_available_funds": {
                  "type": "boolean"
                },
                "can_edit_owner_comment": {
                  "type": "boolean"
                },
                "can_see_private_alias": {
                  "type": "boolean"
                },
                "can_see_bank_account_credit_limit": {
                  "type": "boolean"
                },
                "can_see_other_account_routing_address": {
                  "type": "boolean"
                },
                "can_see_bank_account_balance": {
                  "type": "boolean"
                },
                "can_add_public_alias": {
                  "type": "boolean"
                },
                "can_see_bank_routing_scheme": {
                  "type": "boolean"
                },
                "can_see_bank_account_owners": {
                  "type": "boolean"
                },
                "can_see_other_account_metadata": {
                  "type": "boolean"
                },
                "can_delete_physical_location": {
                  "type": "boolean"
                },
                "hide_metadata_if_alias_used": {
                  "type": "boolean"
                },
                "can_see_transaction_this_bank_account": {
                  "type": "boolean"
                },
                "can_see_image_url": {
                  "type": "boolean"
                },
                "can_see_transaction_type": {
                  "type": "boolean"
                },
                "can_see_images": {
                  "type": "boolean"
                },
                "can_see_transaction_amount": {
                  "type": "boolean"
                },
                "metadata_view": {
                  "type": "string"
                },
                "can_see_transaction_metadata": {
                  "type": "boolean"
                },
                "can_see_comments": {
                  "type": "boolean"
                },
                "can_grant_access_to_views": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "can_see_other_account_iban": {
                  "type": "boolean"
                },
                "can_add_image": {
                  "type": "boolean"
                },
                "can_see_bank_account_routing_scheme": {
                  "type": "boolean"
                },
                "can_see_bank_account_type": {
                  "type": "boolean"
                },
                "can_see_other_account_kind": {
                  "type": "boolean"
                },
                "can_see_bank_account_currency": {
                  "type": "boolean"
                },
                "can_add_where_tag": {
                  "type": "boolean"
                },
                "can_see_transaction_start_date": {
                  "type": "boolean"
                },
                "can_see_bank_account_label": {
                  "type": "boolean"
                },
                "can_add_private_alias": {
                  "type": "boolean"
                },
                "can_see_transaction_currency": {
                  "type": "boolean"
                },
                "can_add_more_info": {
                  "type": "boolean"
                },
                "can_delete_comment": {
                  "type": "boolean"
                },
                "can_create_standing_order": {
                  "type": "boolean"
                },
                "can_see_other_bank_routing_address": {
                  "type": "boolean"
                },
                "can_see_transaction_other_bank_account": {
                  "type": "boolean"
                },
                "can_see_bank_account_number": {
                  "type": "boolean"
                },
                "can_add_corporate_location": {
                  "type": "boolean"
                },
                "alias": {
                  "type": "string"
                },
                "can_add_url": {
                  "type": "boolean"
                },
                "short_name": {
                  "type": "string"
                },
                "can_delete_where_tag": {
                  "type": "boolean"
                },
                "is_public": {
                  "type": "boolean"
                },
                "can_see_owner_comment": {
                  "type": "boolean"
                },
                "can_see_transaction_finish_date": {
                  "type": "boolean"
                },
                "can_see_open_corporates_url": {
                  "type": "boolean"
                },
                "can_add_physical_location": {
                  "type": "boolean"
                },
                "can_see_bank_account_iban": {
                  "type": "boolean"
                },
                "can_see_other_account_national_identifier": {
                  "type": "boolean"
                },
                "can_see_bank_routing_address": {
                  "type": "boolean"
                },
                "can_delete_image": {
                  "type": "boolean"
                },
                "can_add_transaction_request_to_any_account": {
                  "type": "boolean"
                },
                "can_add_tag": {
                  "type": "boolean"
                },
                "id": {
                  "type": "string"
                },
                "can_see_other_account_routing_scheme": {
                  "type": "boolean"
                },
                "can_add_open_corporates_url": {
                  "type": "boolean"
                },
                "can_delete_tag": {
                  "type": "boolean"
                },
                "can_see_transaction_description": {
                  "type": "boolean"
                },
                "can_see_bank_account_national_identifier": {
                  "type": "boolean"
                },
                "can_see_other_account_number": {
                  "type": "boolean"
                },
                "can_see_bank_account_bank_name": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/views",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv1.2.1-updateCounterpartyPhysicalLocation",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "updateCounterpartyPhysicalLocation"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/metadata/physical_location",
      "summary": "Update Counterparty Physical Location",
      "description": "<p>Update geocoordinates of the counterparty's main location</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#other_account_id\">OTHER_ACCOUNT_ID</a>:</p>\n<p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#success\"><strong>success</strong></a>:</p>\n",
      "description_markdown": "Update geocoordinates of the counterparty's main location\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[OTHER_ACCOUNT_ID](/glossary#other_account_id): \n\n\n\n[VIEW_ID](/glossary#this_view_id): owner\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**success**](/glossary#success): \n\n\n",
      "example_request_body": {
        "physical_location": {
          "latitude": 1.532,
          "longitude": 1.535
        }
      },
      "success_response_body": {
        "success": "Success"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-10001: Incorrect json format.",
        "the view does not allow metadata access",
        "the view does not allow updating a physical location",
        "Coordinates not possible",
        "Physical Location cannot be updated",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Counterparty-Metadata", "Counterparty"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "physical_location": {
            "type": "object",
            "properties": {
              "longitude": {
                "type": "number"
              },
              "latitude": {
                "type": "number"
              }
            }
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "success": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/metadata/physical_location",
      "connector_methods": [
        "obp.getCounterpartyByCounterpartyIdLegacy",
        "obp.getCounterpartyFromTransaction",
        "obp.getBankAccountOld"
      ]
    },
    {
      "operation_id": "OBPv4.0.0-buildDynamicEndpointTemplate",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "buildDynamicEndpointTemplate"
      },
      "request_verb": "POST",
      "request_url": "/obp/v4.0.0/management/dynamic-resource-docs/endpoint-code",
      "summary": "Create Dynamic Resource Doc endpoint code",
      "description": "<p>Create a Dynamic Resource Doc endpoint code.</p>\n<p>copy the response and past to PractiseEndpoint, So you can have the benefits of<br />\nauto compilation and debug</p>\n<p>Authentication is Mandatory</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><strong>JSON response body fields:</strong></p>\n",
      "description_markdown": "Create a Dynamic Resource Doc endpoint code.\n\ncopy the response and past to PractiseEndpoint, So you can have the benefits of\nauto compilation and debug\n\n\nAuthentication is Mandatory\n\n\n**JSON request body fields:**\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n\n\n**JSON response body fields:**\n\n\n",
      "example_request_body": {
        "request_verb": "POST",
        "request_url": "/my_user/MY_USER_ID",
        "example_request_body": {
          "name": "Jhon",
          "age": 12,
          "hobby": ["coding"],
          "_optional_fields_": ["hobby"]
        },
        "success_response_body": {
          "my_user_id": "some_id_value",
          "name": "Jhon",
          "age": 12,
          "hobby": ["coding"],
          "_optional_fields_": ["hobby"]
        }
      },
      "success_response_body": {
        "code": "println%28%22hello%22%29"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Dynamic-Resource-Doc", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "request_verb": {
            "type": "string"
          },
          "example_request_body": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "age": {
                "type": "integer"
              },
              "hobby": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "s": {
                      "type": "string"
                    }
                  }
                }
              },
              "_optional_fields_": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "s": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "success_response_body": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "hobby": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "s": {
                      "type": "string"
                    }
                  }
                }
              },
              "my_user_id": {
                "type": "string"
              },
              "age": {
                "type": "integer"
              },
              "_optional_fields_": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "s": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "request_url": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "_2": {
            "type": "string"
          },
          "_1": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/dynamic-resource-docs/endpoint-code",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv4.0.0-createUserWithRoles",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "createUserWithRoles"
      },
      "request_verb": "POST",
      "request_url": "/obp/v4.0.0/user-entitlements",
      "summary": "Create (DAuth) User with Roles",
      "description": "<p>This endpoint is used as part of the DAuth solution to grant Entitlements for Roles to a smart contract on the blockchain.</p>\n<p>Put the smart contract address in username</p>\n<p>For provider use &quot;dauth&quot;</p>\n<p>This endpoint will create the User with username and provider if the User does not already exist.</p>\n<p>Then it will create Entitlements i.e. grant Roles to the User.</p>\n<p>Entitlements are used to grant System or Bank level roles to Users. (For Account level privileges, see Views)</p>\n<p>i.e. Entitlements are used to create / consume system or bank level resources where as views / account access are used to consume / create customer level resources.</p>\n<p>For a System level Role (.e.g CanGetAnyUser), set bank_id to an empty string i.e. &quot;bank_id&quot;:&quot;&quot;</p>\n<p>For a Bank level Role (e.g. CanCreateAccount), set bank_id to a valid value e.g. &quot;bank_id&quot;:&quot;my-bank-id&quot;</p>\n<p>Note: The Roles actually granted will depend on the Roles that the calling user has.</p>\n<p>If you try to grant Entitlements to a user that already exist (duplicate entitilements) you will get an error.</p>\n<p>For information about DAuth see below:</p>\n<details>\n  <summary style=\"display:list-item;cursor:s-resize;\">DAuth</summary>\n  <h3><a href=\"#dauth-introduction-setup-and-usage\" id=\"dauth-introduction-setup-and-usage\">DAuth Introduction, Setup and Usage</a></h3>\n<p>DAuth is an experimental authentication mechanism that aims to pin an ethereum or other blockchain Smart Contract to an OBP &quot;User&quot;.</p>\n<p>In the future, it might be possible to be more specific and pin specific actors (wallets) that are acting within the smart contract, but so far, one smart contract acts on behalf of one User.</p>\n<p>Thus, if a smart contract &quot;X&quot; calls the OBP API using the DAuth header, OBP will get or create a user called X and the call will proceed in the context of that User &quot;X&quot;.</p>\n<p>DAuth is invoked by the REST client (caller) including a specific header (see step 3 below) in any OBP REST call.</p>\n<p>When OBP receives the DAuth token, it creates or gets a User with a username based on the smart_contract_address and the provider based on the network_name. The combination of username and provider is unique in OBP.</p>\n<p>If you are calling OBP-API via an API3 Airnode, the Airnode will take care of constructing the required header.</p>\n<p>When OBP detects a DAuth header / token it first checks if the Consumer is allowed to make such a call. OBP will validate the Consumer ip address and signature etc.</p>\n<p>Note: The DAuth flow does <em>not</em> require an explicit POST like Direct Login to create the token.</p>\n<p>Permissions may be assigned to an OBP User at any time, via the UserAuthContext, Views, Entitlements to Roles or Consents.</p>\n<p>Note: <em>DAuth is NOT enabled on this instance!</em></p>\n<p>Note: <em>The DAuth client is responsible for creating a token which will be trusted by OBP absolutely</em>!</p>\n<p>To use DAuth:</p>\n<h3><a href=\"#1-configure-obp-api-to-accept-dauth\" id=\"1-configure-obp-api-to-accept-dauth\">1) Configure OBP API to accept DAuth.</a></h3>\n<p>Set up properties in your props file</p>\n<pre><code># -- DAuth --------------------------------------\n# Define secret used to validate JWT token\n# jwt.public_key_rsa=path-to-the-pem-file\n# Enable/Disable DAuth communication at all\n# In case isn't defined default value is false\n# allow_dauth=false\n# Define comma separated list of allowed IP addresses\n# dauth.host=127.0.0.1\n# -------------------------------------- DAuth--\n</code></pre>\n<p>Please keep in mind that property jwt.public_key_rsa is used to validate JWT token to check it is not changed or corrupted during transport.</p>\n<h3><a href=\"#2-create-have-access-to-a-jwt\" id=\"2-create-have-access-to-a-jwt\">2) Create / have access to a JWT</a></h3>\n<p>The following videos are available:<br />\n* <a href=\"https://vimeo.com/644315074\">DAuth in local environment</a></p>\n<p>HEADER:ALGORITHM &amp; TOKEN TYPE</p>\n<pre><code>{\n  &quot;alg&quot;: &quot;RS256&quot;,\n  &quot;typ&quot;: &quot;JWT&quot;\n}\n</code></pre>\n<p>PAYLOAD:DATA</p>\n<pre><code>{\n  &quot;smart_contract_address&quot;: &quot;0xe123425E7734CE288F8367e1Bb143E90bb3F051224&quot;,\n  &quot;network_name&quot;: &quot;AIRNODE.TESTNET.ETHEREUM&quot;,\n  &quot;msg_sender&quot;: &quot;0xe12340927f1725E7734CE288F8367e1Bb143E90fhku767&quot;,\n  &quot;consumer_key&quot;: &quot;0x1234a4ec31e89cea54d1f125db7536e874ab4a96b4d4f6438668b6bb10a6adb&quot;,\n  &quot;timestamp&quot;: &quot;2021-11-04T14:13:40Z&quot;,\n  &quot;request_id&quot;: &quot;0Xe876987694328763492876348928736497869273649&quot;\n}\n</code></pre>\n<p>VERIFY SIGNATURE</p>\n<pre><code>RSASHA256(\n  base64UrlEncode(header) + &quot;.&quot; +\n  base64UrlEncode(payload),\n<p>) your-RSA-key-pair</p>\n</code></pre>\n<p>Here is an example token:</p>\n<pre><code>eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzbWFydF9jb250cmFjdF9hZGRyZXNzIjoiMHhlMTIzNDI1RTc3MzRDRTI4OEY4MzY3ZTFCYjE0M0U5MGJiM0YwNTEyMjQiLCJuZXR3b3JrX25hbWUiOiJFVEhFUkVVTSIsIm1zZ19zZW5kZXIiOiIweGUxMjM0MDkyN2YxNzI1RTc3MzRDRTI4OEY4MzY3ZTFCYjE0M0U5MGZoa3U3NjciLCJjb25zdW1lcl9rZXkiOiIweDEyMzRhNGVjMzFlODljZWE1NGQxZjEyNWRiNzUzNmU4NzRhYjRhOTZiNGQ0ZjY0Mzg2NjhiNmJiMTBhNmFkYiIsInRpbWVzdGFtcCI6IjIwMjEtMTEtMDRUMTQ6MTM6NDBaIiwicmVxdWVzdF9pZCI6IjBYZTg3Njk4NzY5NDMyODc2MzQ5Mjg3NjM0ODkyODczNjQ5Nzg2OTI3MzY0OSJ9.XSiQxjEVyCouf7zT8MubEKsbOBZuReGVhnt9uck6z6k\n</code></pre>\n<h3><a href=\"#3-try-a-rest-call-using-the-header\" id=\"3-try-a-rest-call-using-the-header\">3) Try a REST call using the header</a></h3>\n<p>Using your favorite http client:</p>\n<p>GET <a href=\"https://obp-apisandbox.joinfincubator.com/obp/v3.0.0/users/current\">https://obp-apisandbox.joinfincubator.com/obp/v3.0.0/users/current</a></p>\n<p>Body</p>\n<p>Leave Empty!</p>\n<p>Headers:</p>\n<pre><code>   DAuth: your-jwt-from-step-above\n</code></pre>\n<p>Here is it all together:</p>\n<p>GET <a href=\"https://obp-apisandbox.joinfincubator.com/obp/v3.0.0/users/current\">https://obp-apisandbox.joinfincubator.com/obp/v3.0.0/users/current</a> HTTP/1.1<br />\nHost: localhost:8080<br />\nUser-Agent: curl/7.47.0<br />\nAccept: <em>/</em><br />\nDAuth: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzbWFydF9jb250cmFjdF9hZGRyZXNzIjoiMHhlMTIzNDI1RTc3MzRDRTI4OEY4MzY3ZTFCYjE0M0U5MGJiM0YwNTEyMjQiLCJuZXR3b3JrX25hbWUiOiJFVEhFUkVVTSIsIm1zZ19zZW5kZXIiOiIweGUxMjM0MDkyN2YxNzI1RTc3MzRDRTI4OEY4MzY3ZTFCYjE0M0U5MGZoa3U3NjciLCJjb25zdW1lcl9rZXkiOiIweDEyMzRhNGVjMzFlODljZWE1NGQxZjEyNWRiNzUzNmU4NzRhYjRhOTZiNGQ0ZjY0Mzg2NjhiNmJiMTBhNmFkYiIsInRpbWVzdGFtcCI6IjIwMjEtMTEtMDRUMTQ6MTM6NDBaIiwicmVxdWVzdF9pZCI6IjBYZTg3Njk4NzY5NDMyODc2MzQ5Mjg3NjM0ODkyODczNjQ5Nzg2OTI3MzY0OSJ9.XSiQxjEVyCouf7zT8MubEKsbOBZuReGVhnt9uck6z6k</p>\n<p>CURL example</p>\n<pre><code>curl -v -H 'DAuth: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzbWFydF9jb250cmFjdF9hZGRyZXNzIjoiMHhlMTIzNDI1RTc3MzRDRTI4OEY4MzY3ZTFCYjE0M0U5MGJiM0YwNTEyMjQiLCJuZXR3b3JrX25hbWUiOiJFVEhFUkVVTSIsIm1zZ19zZW5kZXIiOiIweGUxMjM0MDkyN2YxNzI1RTc3MzRDRTI4OEY4MzY3ZTFCYjE0M0U5MGZoa3U3NjciLCJjb25zdW1lcl9rZXkiOiIweDEyMzRhNGVjMzFlODljZWE1NGQxZjEyNWRiNzUzNmU4NzRhYjRhOTZiNGQ0ZjY0Mzg2NjhiNmJiMTBhNmFkYiIsInRpbWVzdGFtcCI6IjIwMjEtMTEtMDRUMTQ6MTM6NDBaIiwicmVxdWVzdF9pZCI6IjBYZTg3Njk4NzY5NDMyODc2MzQ5Mjg3NjM0ODkyODczNjQ5Nzg2OTI3MzY0OSJ9.XSiQxjEVyCouf7zT8MubEKsbOBZuReGVhnt9uck6z6k' https://obp-apisandbox.joinfincubator.com/obp/v3.0.0/users/current\n</code></pre>\n<p>You should receive a response like:</p>\n<pre><code>{\n    &quot;user_id&quot;: &quot;4c4d3175-1e5c-4cfd-9b08-dcdc209d8221&quot;,\n    &quot;email&quot;: &quot;&quot;,\n    &quot;provider_id&quot;: &quot;0xe123425E7734CE288F8367e1Bb143E90bb3F051224&quot;,\n    &quot;provider&quot;: &quot;ETHEREUM&quot;,\n    &quot;username&quot;: &quot;0xe123425E7734CE288F8367e1Bb143E90bb3F051224&quot;,\n    &quot;entitlements&quot;: {\n        &quot;list&quot;: []\n    }\n}\n</code></pre>\n<h3><a href=\"#under-the-hood\" id=\"under-the-hood\">Under the hood</a></h3>\n<p>The file, dauth.scala handles the DAuth,</p>\n<p>We:</p>\n<pre><code>-&gt; Check if Props allow_dauth is true\n  -&gt; Check if DAuth header exists\n    -&gt; Check if getRemoteIpAddress is OK\n      -&gt; Look for &quot;token&quot;\n        -&gt; parse the JWT token and getOrCreate the user\n          -&gt; get the data of the user\n</code></pre>\n<h3><a href=\"#more-information\" id=\"more-information\">More information</a></h3>\n<p>Parameter names and values are case sensitive.<br />\nEach parameter MUST NOT appear more than once per request.</p>\n</details>\n<br></br>\n<p>Authentication is Mandatory</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p>\n<p><a href=\"/glossary#role_name\"><strong>role_name</strong></a>:</p>\n<p><a href=\"/glossary#roles\"><strong>roles</strong></a>: CanCreateMyUser</p>\n<p><a href=\"/glossary#\"><strong>username</strong></a>: felixsmith</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#entitlement_id\"><strong>entitlement_id</strong></a>:</p>\n<p><a href=\"/glossary#list\"><strong>list</strong></a>:</p>\n<p><a href=\"/glossary#role_name\"><strong>role_name</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p>\n",
      "description_markdown": "This endpoint is used as part of the DAuth solution to grant Entitlements for Roles to a smart contract on the blockchain.\n\nPut the smart contract address in username\n\nFor provider use \"dauth\"\n\nThis endpoint will create the User with username and provider if the User does not already exist.\n\nThen it will create Entitlements i.e. grant Roles to the User.\n\nEntitlements are used to grant System or Bank level roles to Users. (For Account level privileges, see Views)\n\ni.e. Entitlements are used to create / consume system or bank level resources where as views / account access are used to consume / create customer level resources.\n\nFor a System level Role (.e.g CanGetAnyUser), set bank_id to an empty string i.e. \"bank_id\":\"\"\n\nFor a Bank level Role (e.g. CanCreateAccount), set bank_id to a valid value e.g. \"bank_id\":\"my-bank-id\"\n\nNote: The Roles actually granted will depend on the Roles that the calling user has.\n\nIf you try to grant Entitlements to a user that already exist (duplicate entitilements) you will get an error.\n\nFor information about DAuth see below:\n\n\n<details>\n  <summary style=\"display:list-item;cursor:s-resize;\">DAuth</summary>\n  \n  <h3><a href=\"#dauth-introduction-setup-and-usage\" id=\"dauth-introduction-setup-and-usage\">DAuth Introduction, Setup and Usage</a></h3>\n<p>DAuth is an experimental authentication mechanism that aims to pin an ethereum or other blockchain Smart Contract to an OBP &quot;User&quot;.</p>\n<p>In the future, it might be possible to be more specific and pin specific actors (wallets) that are acting within the smart contract, but so far, one smart contract acts on behalf of one User.</p>\n<p>Thus, if a smart contract &quot;X&quot; calls the OBP API using the DAuth header, OBP will get or create a user called X and the call will proceed in the context of that User &quot;X&quot;.</p>\n<p>DAuth is invoked by the REST client (caller) including a specific header (see step 3 below) in any OBP REST call.</p>\n<p>When OBP receives the DAuth token, it creates or gets a User with a username based on the smart_contract_address and the provider based on the network_name. The combination of username and provider is unique in OBP.</p>\n<p>If you are calling OBP-API via an API3 Airnode, the Airnode will take care of constructing the required header.</p>\n<p>When OBP detects a DAuth header / token it first checks if the Consumer is allowed to make such a call. OBP will validate the Consumer ip address and signature etc.</p>\n<p>Note: The DAuth flow does <em>not</em> require an explicit POST like Direct Login to create the token.</p>\n<p>Permissions may be assigned to an OBP User at any time, via the UserAuthContext, Views, Entitlements to Roles or Consents.</p>\n<p>Note: <em>DAuth is NOT enabled on this instance!</em></p>\n<p>Note: <em>The DAuth client is responsible for creating a token which will be trusted by OBP absolutely</em>!</p>\n<p>To use DAuth:</p>\n<h3><a href=\"#1-configure-obp-api-to-accept-dauth\" id=\"1-configure-obp-api-to-accept-dauth\">1) Configure OBP API to accept DAuth.</a></h3>\n<p>Set up properties in your props file</p>\n<pre><code># -- DAuth --------------------------------------\n# Define secret used to validate JWT token\n# jwt.public_key_rsa=path-to-the-pem-file\n# Enable/Disable DAuth communication at all\n# In case isn't defined default value is false\n# allow_dauth=false\n# Define comma separated list of allowed IP addresses\n# dauth.host=127.0.0.1\n# -------------------------------------- DAuth--\n</code></pre>\n<p>Please keep in mind that property jwt.public_key_rsa is used to validate JWT token to check it is not changed or corrupted during transport.</p>\n<h3><a href=\"#2-create-have-access-to-a-jwt\" id=\"2-create-have-access-to-a-jwt\">2) Create / have access to a JWT</a></h3>\n<p>The following videos are available:<br />\n* <a href=\"https://vimeo.com/644315074\">DAuth in local environment</a></p>\n<p>HEADER:ALGORITHM &amp; TOKEN TYPE</p>\n<pre><code>{\n  &quot;alg&quot;: &quot;RS256&quot;,\n  &quot;typ&quot;: &quot;JWT&quot;\n}\n</code></pre>\n<p>PAYLOAD:DATA</p>\n<pre><code>{\n  &quot;smart_contract_address&quot;: &quot;0xe123425E7734CE288F8367e1Bb143E90bb3F051224&quot;,\n  &quot;network_name&quot;: &quot;AIRNODE.TESTNET.ETHEREUM&quot;,\n  &quot;msg_sender&quot;: &quot;0xe12340927f1725E7734CE288F8367e1Bb143E90fhku767&quot;,\n  &quot;consumer_key&quot;: &quot;0x1234a4ec31e89cea54d1f125db7536e874ab4a96b4d4f6438668b6bb10a6adb&quot;,\n  &quot;timestamp&quot;: &quot;2021-11-04T14:13:40Z&quot;,\n  &quot;request_id&quot;: &quot;0Xe876987694328763492876348928736497869273649&quot;\n}\n</code></pre>\n<p>VERIFY SIGNATURE</p>\n<pre><code>RSASHA256(\n  base64UrlEncode(header) + &quot;.&quot; +\n  base64UrlEncode(payload),\n\n) your-RSA-key-pair\n</code></pre>\n<p>Here is an example token:</p>\n<pre><code>eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzbWFydF9jb250cmFjdF9hZGRyZXNzIjoiMHhlMTIzNDI1RTc3MzRDRTI4OEY4MzY3ZTFCYjE0M0U5MGJiM0YwNTEyMjQiLCJuZXR3b3JrX25hbWUiOiJFVEhFUkVVTSIsIm1zZ19zZW5kZXIiOiIweGUxMjM0MDkyN2YxNzI1RTc3MzRDRTI4OEY4MzY3ZTFCYjE0M0U5MGZoa3U3NjciLCJjb25zdW1lcl9rZXkiOiIweDEyMzRhNGVjMzFlODljZWE1NGQxZjEyNWRiNzUzNmU4NzRhYjRhOTZiNGQ0ZjY0Mzg2NjhiNmJiMTBhNmFkYiIsInRpbWVzdGFtcCI6IjIwMjEtMTEtMDRUMTQ6MTM6NDBaIiwicmVxdWVzdF9pZCI6IjBYZTg3Njk4NzY5NDMyODc2MzQ5Mjg3NjM0ODkyODczNjQ5Nzg2OTI3MzY0OSJ9.XSiQxjEVyCouf7zT8MubEKsbOBZuReGVhnt9uck6z6k\n</code></pre>\n<h3><a href=\"#3-try-a-rest-call-using-the-header\" id=\"3-try-a-rest-call-using-the-header\">3) Try a REST call using the header</a></h3>\n<p>Using your favorite http client:</p>\n<p>GET <a href=\"https://obp-apisandbox.joinfincubator.com/obp/v3.0.0/users/current\">https://obp-apisandbox.joinfincubator.com/obp/v3.0.0/users/current</a></p>\n<p>Body</p>\n<p>Leave Empty!</p>\n<p>Headers:</p>\n<pre><code>   DAuth: your-jwt-from-step-above\n</code></pre>\n<p>Here is it all together:</p>\n<p>GET <a href=\"https://obp-apisandbox.joinfincubator.com/obp/v3.0.0/users/current\">https://obp-apisandbox.joinfincubator.com/obp/v3.0.0/users/current</a> HTTP/1.1<br />\nHost: localhost:8080<br />\nUser-Agent: curl/7.47.0<br />\nAccept: <em>/</em><br />\nDAuth: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzbWFydF9jb250cmFjdF9hZGRyZXNzIjoiMHhlMTIzNDI1RTc3MzRDRTI4OEY4MzY3ZTFCYjE0M0U5MGJiM0YwNTEyMjQiLCJuZXR3b3JrX25hbWUiOiJFVEhFUkVVTSIsIm1zZ19zZW5kZXIiOiIweGUxMjM0MDkyN2YxNzI1RTc3MzRDRTI4OEY4MzY3ZTFCYjE0M0U5MGZoa3U3NjciLCJjb25zdW1lcl9rZXkiOiIweDEyMzRhNGVjMzFlODljZWE1NGQxZjEyNWRiNzUzNmU4NzRhYjRhOTZiNGQ0ZjY0Mzg2NjhiNmJiMTBhNmFkYiIsInRpbWVzdGFtcCI6IjIwMjEtMTEtMDRUMTQ6MTM6NDBaIiwicmVxdWVzdF9pZCI6IjBYZTg3Njk4NzY5NDMyODc2MzQ5Mjg3NjM0ODkyODczNjQ5Nzg2OTI3MzY0OSJ9.XSiQxjEVyCouf7zT8MubEKsbOBZuReGVhnt9uck6z6k</p>\n<p>CURL example</p>\n<pre><code>curl -v -H 'DAuth: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzbWFydF9jb250cmFjdF9hZGRyZXNzIjoiMHhlMTIzNDI1RTc3MzRDRTI4OEY4MzY3ZTFCYjE0M0U5MGJiM0YwNTEyMjQiLCJuZXR3b3JrX25hbWUiOiJFVEhFUkVVTSIsIm1zZ19zZW5kZXIiOiIweGUxMjM0MDkyN2YxNzI1RTc3MzRDRTI4OEY4MzY3ZTFCYjE0M0U5MGZoa3U3NjciLCJjb25zdW1lcl9rZXkiOiIweDEyMzRhNGVjMzFlODljZWE1NGQxZjEyNWRiNzUzNmU4NzRhYjRhOTZiNGQ0ZjY0Mzg2NjhiNmJiMTBhNmFkYiIsInRpbWVzdGFtcCI6IjIwMjEtMTEtMDRUMTQ6MTM6NDBaIiwicmVxdWVzdF9pZCI6IjBYZTg3Njk4NzY5NDMyODc2MzQ5Mjg3NjM0ODkyODczNjQ5Nzg2OTI3MzY0OSJ9.XSiQxjEVyCouf7zT8MubEKsbOBZuReGVhnt9uck6z6k' https://obp-apisandbox.joinfincubator.com/obp/v3.0.0/users/current\n</code></pre>\n<p>You should receive a response like:</p>\n<pre><code>{\n    &quot;user_id&quot;: &quot;4c4d3175-1e5c-4cfd-9b08-dcdc209d8221&quot;,\n    &quot;email&quot;: &quot;&quot;,\n    &quot;provider_id&quot;: &quot;0xe123425E7734CE288F8367e1Bb143E90bb3F051224&quot;,\n    &quot;provider&quot;: &quot;ETHEREUM&quot;,\n    &quot;username&quot;: &quot;0xe123425E7734CE288F8367e1Bb143E90bb3F051224&quot;,\n    &quot;entitlements&quot;: {\n        &quot;list&quot;: []\n    }\n}\n</code></pre>\n<h3><a href=\"#under-the-hood\" id=\"under-the-hood\">Under the hood</a></h3>\n<p>The file, dauth.scala handles the DAuth,</p>\n<p>We:</p>\n<pre><code>-&gt; Check if Props allow_dauth is true\n  -&gt; Check if DAuth header exists\n    -&gt; Check if getRemoteIpAddress is OK\n      -&gt; Look for &quot;token&quot;\n        -&gt; parse the JWT token and getOrCreate the user\n          -&gt; get the data of the user\n</code></pre>\n<h3><a href=\"#more-information\" id=\"more-information\">More information</a></h3>\n<p>Parameter names and values are case sensitive.<br />\nEach parameter MUST NOT appear more than once per request.</p>\n\n</details>\n<br></br>\n\n\n\n\nAuthentication is Mandatory\n\n\n**JSON request body fields:**\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**provider**](/glossary#provider): ETHEREUM\n\n\n\n[**role_name**](/glossary#role_name): \n\n\n\n[**roles**](/glossary#roles): CanCreateMyUser\n\n\n\n[**username**](/glossary#): felixsmith\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**entitlement_id**](/glossary#entitlement_id): \n\n\n\n[**list**](/glossary#list): \n\n\n\n[**role_name**](/glossary#role_name): \n\n\n\n[**user_id**](/glossary#): 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\n\n\n",
      "example_request_body": {
        "username": "felixsmith",
        "provider": "dauth.ETHEREUM",
        "roles": [
          {
            "bank_id": "gh.29.uk",
            "role_name": "CanCreateBranch"
          }
        ]
      },
      "success_response_body": {
        "list": [
          {
            "entitlement_id": "",
            "role_name": "",
            "bank_id": "gh.29.uk",
            "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-10001: Incorrect json format.",
        "OBP-10007: Incorrect Role name:",
        "OBP-30205: This entitlement is a Bank Role. Please set bank_id to a valid bank id.",
        "OBP-30206: This entitlement is a System Role. Please set bank_id to empty string.",
        "OBP-30216: Entitlement already exists for the user.",
        "OBP-20103: Invalid DAuth User Provider.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Role", "Entitlement", "User", "New-Style", "DAuth"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "roles": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "bank_id": {
                  "type": "string"
                },
                "role_name": {
                  "type": "string"
                }
              }
            }
          },
          "provider": {
            "type": "string"
          },
          "username": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "entitlement_id": {
                  "type": "string"
                },
                "bank_id": {
                  "type": "string"
                },
                "role_name": {
                  "type": "string"
                },
                "user_id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/user-entitlements",
      "connector_methods": ["obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv4.0.0-deleteTransactionRequestAttributeDefinition",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "deleteTransactionRequestAttributeDefinition"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/attribute-definitions/ATTRIBUTE_DEFINITION_ID/transaction-request",
      "summary": "Delete Transaction Request Attribute Definition",
      "description": "<p>Delete Transaction Request Attribute Definition by ATTRIBUTE_DEFINITION_ID</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#attribute_definition_id\">ATTRIBUTE_DEFINITION_ID</a>:</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n",
      "description_markdown": "Delete Transaction Request Attribute Definition by ATTRIBUTE_DEFINITION_ID\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ATTRIBUTE_DEFINITION_ID](/glossary#attribute_definition_id): \n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**value**](/glossary#): 5987953\n\n\n",
      "success_response_body": {
        "value": true
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["Transaction-Request", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "value": {
            "type": "boolean"
          }
        }
      },
      "roles": [
        {
          "role": "CanDeleteTransactionRequestAttributeDefinitionAtOneBank",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/attribute-definitions/ATTRIBUTE_DEFINITION_ID/transaction-request",
      "connector_methods": ["obp.deleteAttributeDefinition"]
    },
    {
      "operation_id": "OBPv4.0.0-updateBankAttribute",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "updateBankAttribute"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/attributes/BANK_ATTRIBUTE_ID",
      "summary": "Update Bank Attribute",
      "description": "<p>Update Bank Attribute.</p>\n<p>Update one Bak Attribute by its id.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#\">BANK_ATTRIBUTE_ID</a>: BANK_ATTRIBUTE_ID</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#alias\"><strong>alias</strong></a>:</p>\n<p><a href=\"/glossary#can_be_seen_on_views\"><strong>can_be_seen_on_views</strong></a>: true</p>\n<p><a href=\"/glossary#category\"><strong>category</strong></a>:</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#is_active\"><strong>is_active</strong></a>: true</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n",
      "description_markdown": "Update Bank Attribute. \n\nUpdate one Bak Attribute by its id.\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ATTRIBUTE_ID](/glossary#): BANK_ATTRIBUTE_ID\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**alias**](/glossary#alias): \n\n\n\n[**can_be_seen_on_views**](/glossary#can_be_seen_on_views): true\n\n\n\n[**category**](/glossary#category): \n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**is_active**](/glossary#is_active): true\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**type**](/glossary#type): \n\n\n",
      "example_request_body": {
        "name": "TAX_ID",
        "type": "INTEGER",
        "value": "12345678",
        "is_active": true
      },
      "success_response_body": {
        "name": "SPECIAL_TAX_NUMBER",
        "category": "Bank",
        "type": "STRING",
        "description": "description",
        "alias": "STRING",
        "can_be_seen_on_views": ["bank"],
        "is_active": true
      },
      "error_response_bodies": [
        "OBP-50000: Unknown Error.",
        "OBP-20001: User not logged in. Authentication is required!"
      ],
      "tags": ["Bank", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "is_active": {
            "type": "boolean"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "can_be_seen_on_views": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "description": {
            "type": "string"
          },
          "is_active": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "alias": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/attributes/BANK_ATTRIBUTE_ID",
      "connector_methods": [
        "obp.createOrUpdateBankAttribute",
        "obp.getBankAttributeById",
        "obp.getBank",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv4.0.0-createSystemAccountNotificationWebhook",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "createSystemAccountNotificationWebhook"
      },
      "request_verb": "POST",
      "request_url": "/obp/v4.0.0/web-hooks/account/notifications/on-create-transaction",
      "summary": "Create system level Account Notification Webhook",
      "description": "<p>Create a notification Webhook that will fire for all accounts on the system.</p>\n<p>Webhooks are used to call external web services when certain events happen.</p>\n<p>For instance, a webhook can be used to notify an external service if a transaction is created on an account.</p>\n<p>When an account notification webhook fires it will POST to the URL you specify during the creation of the webhook.</p>\n<p>Inside the payload you will find account_id and transaction_id and also user_ids and customer_ids of the Users / Customers linked to the Account.</p>\n<p>The webhook will POST the following structure to your service:</p>\n<p>{<br />\n&quot;event_name&quot;: &quot;OnCreateTransaction&quot;,<br />\n&quot;event_id&quot;: &quot;9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1&quot;,<br />\n&quot;bank_id&quot;: &quot;gh.29.uk&quot;,<br />\n&quot;account_id&quot;: &quot;8ca9a7e4-6d02-40e3-a129-0b2bf89de9b1&quot;,<br />\n&quot;transaction_id&quot;: &quot;7ca9a7e4-6d02-40e3-a129-0b2bf89de9b1&quot;,<br />\n&quot;related_entities&quot;: [<br />\n{<br />\n&quot;user_id&quot;: &quot;8ca9a7e4-6d02-40e3-a129-0b2bf89de9b1&quot;,<br />\n&quot;customer_ids&quot;: [&quot;3ca9a7e4-6d02-40e3-a129-0b2bf89de9b1&quot;]<br />\n}<br />\n]<br />\n}</p>\n<p>Thus, your service should accept the above POST body structure.</p>\n<p>In this way, your web service can be informed about an event on an account and act accordingly.</p>\n<p>Further information about the account, transaction or related entities can then be retrieved using the standard REST APIs.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#http_method\"><strong>http_method</strong></a>: GET</p>\n<p><a href=\"/glossary#http_protocol\"><strong>http_protocol</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>url</strong></a>: <a href=\"http://www.example.com/id-docs/123/image.png\">http://www.example.com/id-docs/123/image.png</a></p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#created_by_user_id\"><strong>created_by_user_id</strong></a>:</p>\n<p><a href=\"/glossary#http_method\"><strong>http_method</strong></a>: GET</p>\n<p><a href=\"/glossary#http_protocol\"><strong>http_protocol</strong></a>:</p>\n<p><a href=\"/glossary#trigger_name\"><strong>trigger_name</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>url</strong></a>: <a href=\"http://www.example.com/id-docs/123/image.png\">http://www.example.com/id-docs/123/image.png</a></p>\n<p><a href=\"/glossary#\"><strong>webhook_id</strong></a>: webhook_id</p>\n",
      "description_markdown": "Create a notification Webhook that will fire for all accounts on the system.\n\n\nWebhooks are used to call external web services when certain events happen.\n\nFor instance, a webhook can be used to notify an external service if a transaction is created on an account.\n\n\n\n\nWhen an account notification webhook fires it will POST to the URL you specify during the creation of the webhook.\n\nInside the payload you will find account_id and transaction_id and also user_ids and customer_ids of the Users / Customers linked to the Account.\n                     |\nThe webhook will POST the following structure to your service:\n\n{\n  \"event_name\": \"OnCreateTransaction\",\n  \"event_id\": \"9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\",\n  \"bank_id\": \"gh.29.uk\",\n  \"account_id\": \"8ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\",\n  \"transaction_id\": \"7ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\",\n  \"related_entities\": [\n    {\n      \"user_id\": \"8ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\",\n      \"customer_ids\": [\"3ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\"]\n    }\n  ]\n}\n\nThus, your service should accept the above POST body structure.\n\nIn this way, your web service can be informed about an event on an account and act accordingly.\n\nFurther information about the account, transaction or related entities can then be retrieved using the standard REST APIs.\n\n\n\n\nAuthentication is Mandatory\n\n\n**JSON request body fields:**\n\n\n\n[**http_method**](/glossary#http_method): GET\n\n\n\n[**http_protocol**](/glossary#http_protocol): \n\n\n\n[**url**](/glossary#): http://www.example.com/id-docs/123/image.png\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**created_by_user_id**](/glossary#created_by_user_id): \n\n\n\n[**http_method**](/glossary#http_method): GET\n\n\n\n[**http_protocol**](/glossary#http_protocol): \n\n\n\n[**trigger_name**](/glossary#trigger_name): \n\n\n\n[**url**](/glossary#): http://www.example.com/id-docs/123/image.png\n\n\n\n[**webhook_id**](/glossary#): webhook_id\n\n\n",
      "example_request_body": {
        "url": "https://localhost.openbankproject.com",
        "http_method": "POST",
        "http_protocol": "HTTP/1.1"
      },
      "success_response_body": {
        "webhook_id": "fc23a7e2-7dd2-4bdf-a0b4-ae31232a4762",
        "trigger_name": "OnCreateTransaction",
        "url": "https://localhost.openbankproject.com",
        "http_method": "POST",
        "http_protocol": "HTTP/1.1",
        "created_by_user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
      },
      "error_response_bodies": [
        "OBP-50000: Unknown Error.",
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["Webhook", "Bank", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "http_method": {
            "type": "string"
          },
          "http_protocol": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "created_by_user_id": {
            "type": "string"
          },
          "http_method": {
            "type": "string"
          },
          "webhook_id": {
            "type": "string"
          },
          "http_protocol": {
            "type": "string"
          },
          "trigger_name": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateSystemAccountNotificationWebhook",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/web-hooks/account/notifications/on-create-transaction",
      "connector_methods": ["obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv2.0.0-createUser",
      "implemented_by": {
        "version": "OBPv2.0.0",
        "function": "createUser"
      },
      "request_verb": "POST",
      "request_url": "/obp/v2.0.0/users",
      "summary": "Create User",
      "description": "<p>Creates OBP user.<br />\nNo authorisation (currently) required.</p>\n<p>Mimics current webform to Register.</p>\n<p>Requires username(email) and password.</p>\n<p>Returns 409 error if username not unique.</p>\n<p>May require validation of email address.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"&#x6d;a&#x69;&#x6c;&#x74;&#111;&#x3a;&#x66;&#x65;&#108;&#x69;xs&#x6d;&#x69;&#x74;h&#64;ex&#97;m&#x70;&#108;e&#46;&#x63;&#x6f;&#109;\">&#x66;e&#108;&#x69;&#x78;&#x73;m&#x69;t&#x68;@e&#120;&#x61;&#x6d;&#112;&#x6c;&#x65;&#46;&#99;o&#x6d;</a></p>\n<p><a href=\"/glossary#first_name\"><strong>first_name</strong></a>:</p>\n<p><a href=\"/glossary#last_name\"><strong>last_name</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>password</strong></a>: password</p>\n<p><a href=\"/glossary#\"><strong>username</strong></a>: felixsmith</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"&#x6d;a&#x69;&#x6c;t&#111;:f&#x65;&#108;&#x69;&#x78;sm&#105;&#x74;&#x68;&#x40;&#x65;&#120;&#97;&#x6d;&#112;&#x6c;&#101;&#46;&#99;&#111;&#109;\">&#x66;e&#x6c;i&#120;&#115;m&#x69;t&#x68;&#x40;&#x65;&#x78;&#97;&#109;&#112;&#x6c;&#x65;&#46;&#x63;&#x6f;&#109;</a></p>\n<p><a href=\"/glossary#entitlement_id\"><strong>entitlement_id</strong></a>:</p>\n<p><a href=\"/glossary#entitlements\"><strong>entitlements</strong></a>:</p>\n<p><a href=\"/glossary#list\"><strong>list</strong></a>:</p>\n<p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p>\n<p><a href=\"/glossary#provider_id\"><strong>provider_id</strong></a>:</p>\n<p><a href=\"/glossary#role_name\"><strong>role_name</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p>\n<p><a href=\"/glossary#\"><strong>username</strong></a>: felixsmith</p>\n",
      "description_markdown": "Creates OBP user.\n No authorisation (currently) required.\n\n Mimics current webform to Register.\n\n Requires username(email) and password.\n\n Returns 409 error if username not unique.\n\n May require validation of email address.\n\n\n\nAuthentication is Mandatory\n\n\n**JSON request body fields:**\n\n\n\n[**email**](/glossary#): felixsmith@example.com\n\n\n\n[**first_name**](/glossary#first_name): \n\n\n\n[**last_name**](/glossary#last_name): \n\n\n\n[**password**](/glossary#): password\n\n\n\n[**username**](/glossary#): felixsmith\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**email**](/glossary#): felixsmith@example.com\n\n\n\n[**entitlement_id**](/glossary#entitlement_id): \n\n\n\n[**entitlements**](/glossary#entitlements): \n\n\n\n[**list**](/glossary#list): \n\n\n\n[**provider**](/glossary#provider): ETHEREUM\n\n\n\n[**provider_id**](/glossary#provider_id): \n\n\n\n[**role_name**](/glossary#role_name): \n\n\n\n[**user_id**](/glossary#): 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\n\n\n\n[**username**](/glossary#): felixsmith\n\n\n",
      "example_request_body": {
        "email": "felixsmith@example.com",
        "username": "felixsmith",
        "password": "String",
        "first_name": "Simon",
        "last_name": "Redfern"
      },
      "success_response_body": {
        "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
        "email": "felixsmith@example.com",
        "provider_id": "Chris",
        "provider": "http://127.0.0.1:8080",
        "username": "felixsmith",
        "entitlements": {
          "list": [
            {
              "entitlement_id": "6fb17583-1e49-4435-bb74-a14fe0996723",
              "role_name": "CanQueryOtherUser",
              "bank_id": "gh.29.uk"
            }
          ]
        }
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-10001: Incorrect json format.",
        "OBP-30207: Invalid Password Format. Your password should EITHER be at least 10 characters long and contain mixed numbers and both upper and lower case letters and at least one special character, OR the length should be > 16 and <= 512.",
        "Error occurred during user creation.",
        "User with the same username already exists.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["User", "Onboarding"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "provider_id": {
            "type": "string"
          },
          "entitlements": {
            "type": "object",
            "properties": {
              "list": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "role_name": {
                      "type": "string"
                    },
                    "bank_id": {
                      "type": "string"
                    },
                    "entitlement_id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "username": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/users",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv5.1.0-selfRevokeConsent",
      "implemented_by": {
        "version": "OBPv5.1.0",
        "function": "selfRevokeConsent"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v5.1.0/my/consent/current",
      "summary": "Revoke Consent used in the Current Call",
      "description": "<p>Revoke Consent specified by Consent-Id at Request Header</p>\n<p>There are a few reasons you might need to revoke an application’s access to a user’s account:<br />\n- The user explicitly wishes to revoke the application’s access<br />\n- You as the service provider have determined an application is compromised or malicious, and want to disable it<br />\n- etc.</p>\n<p>OBP as a resource server stores access tokens in a database, then it is relatively easy to revoke some token that belongs to a particular user.<br />\nThe status of the token is changed to &quot;REVOKED&quot; so the next time the revoked client makes a request, their token will fail to validate.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#consent_id\"><strong>consent_id</strong></a>:</p>\n<p><a href=\"/glossary#jwt\"><strong>jwt</strong></a>:</p>\n<p><a href=\"/glossary#status\"><strong>status</strong></a>:</p>\n",
      "description_markdown": "Revoke Consent specified by Consent-Id at Request Header\n\nThere are a few reasons you might need to revoke an application’s access to a user’s account:\n  - The user explicitly wishes to revoke the application’s access\n  - You as the service provider have determined an application is compromised or malicious, and want to disable it\n  - etc.\n\nOBP as a resource server stores access tokens in a database, then it is relatively easy to revoke some token that belongs to a particular user.\nThe status of the token is changed to \"REVOKED\" so the next time the revoked client makes a request, their token will fail to validate.\n\nAuthentication is Mandatory\n\n\n**JSON response body fields:**\n\n\n\n[**consent_id**](/glossary#consent_id): \n\n\n\n[**jwt**](/glossary#jwt): \n\n\n\n[**status**](/glossary#status): \n\n\n",
      "success_response_body": {
        "consent_id": "9d429899-24f5-42c8-8565-943ffa6a7945",
        "jwt": "eyJhbGciOiJIUzI1NiJ9.eyJlbnRpdGxlbWVudHMiOltdLCJjcmVhdGVkQnlVc2VySWQiOiJhYjY1MzlhOS1iMTA1LTQ0ODktYTg4My0wYWQ4ZDZjNjE2NTciLCJzdWIiOiIyMWUxYzhjYy1mOTE4LTRlYWMtYjhlMy01ZTVlZWM2YjNiNGIiLCJhdWQiOiJlanpuazUwNWQxMzJyeW9tbmhieDFxbXRvaHVyYnNiYjBraWphanNrIiwibmJmIjoxNTUzNTU0ODk5LCJpc3MiOiJodHRwczpcL1wvd3d3Lm9wZW5iYW5rcHJvamVjdC5jb20iLCJleHAiOjE1NTM1NTg0OTksImlhdCI6MTU1MzU1NDg5OSwianRpIjoiMDlmODhkNWYtZWNlNi00Mzk4LThlOTktNjYxMWZhMWNkYmQ1Iiwidmlld3MiOlt7ImFjY291bnRfaWQiOiJtYXJrb19wcml2aXRlXzAxIiwiYmFua19pZCI6ImdoLjI5LnVrLngiLCJ2aWV3X2lkIjoib3duZXIifSx7ImFjY291bnRfaWQiOiJtYXJrb19wcml2aXRlXzAyIiwiYmFua19pZCI6ImdoLjI5LnVrLngiLCJ2aWV3X2lkIjoib3duZXIifV19.8cc7cBEf2NyQvJoukBCmDLT7LXYcuzTcSYLqSpbxLp4",
        "status": "REJECTED"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Consent", "Account Information Service (AIS)", "PSD2", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "consent_id": {
            "type": "string"
          },
          "jwt": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/my/consent/current",
      "connector_methods": ["obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv2.1.0-getTransactionRequestTypesSupportedByBank",
      "implemented_by": {
        "version": "OBPv2.1.0",
        "function": "getTransactionRequestTypesSupportedByBank"
      },
      "request_verb": "GET",
      "request_url": "/obp/v2.1.0/banks/BANK_ID/transaction-request-types",
      "summary": "Get Transaction Request Types at Bank",
      "description": "<p>Get the list of the Transaction Request Types supported by the bank.</p>\n<p>Authentication is Optional</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>transaction_request_type</strong></a>: SEPA</p>\n<p><a href=\"/glossary#transaction_request_types\"><strong>transaction_request_types</strong></a>:</p>\n",
      "description_markdown": "Get the list of the Transaction Request Types supported by the bank.\n\nAuthentication is Optional\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**transaction_request_type**](/glossary#): SEPA\n\n\n\n[**transaction_request_types**](/glossary#transaction_request_types): \n\n\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "transaction_request_types": [
          {
            "transaction_request_type": "SandboxTan"
          }
        ]
      },
      "error_response_bodies": ["OBP-50000: Unknown Error."],
      "tags": ["Transaction-Request", "Bank", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "transaction_request_types": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "transaction_request_type": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/transaction-request-types",
      "connector_methods": ["obp.getBank", "obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv3.0.0-dataWarehouseSearch",
      "implemented_by": {
        "version": "OBPv3.0.0",
        "function": "dataWarehouseSearch"
      },
      "request_verb": "POST",
      "request_url": "/obp/v3.0.0/search/warehouse/INDEX",
      "summary": "Data Warehouse Search",
      "description": "<p>Search the data warehouse and get row level results.</p>\n<p>Authentication is Mandatory</p>\n<p>CanSearchWarehouse entitlement is required. You can request the Role below.</p>\n<p>Elastic (search) is used in the background. See links below for syntax.</p>\n<p>Examples of usage:</p>\n<p>POST /search/warehouse/THE_INDEX_YOU_WANT_TO_USE</p>\n<p>POST /search/warehouse/INDEX1,INDEX2</p>\n<p>POST /search/warehouse/ALL</p>\n<p>{ Any valid elasticsearch query DSL in the body }</p>\n<p><a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl.html\">Elasticsearch query DSL</a></p>\n<p><a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/6.2/search-request-body.html\">Elastic simple query</a></p>\n<p><a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/6.2/search-aggregations.html\">Elastic aggregations</a></p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#index\">INDEX</a>:</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#match_all\"><strong>match_all</strong></a>:</p>\n<p><a href=\"/glossary#query\"><strong>query</strong></a>:</p>\n<p><a href=\"/glossary#none\">none</a>:</p>\n<p><strong>JSON response body fields:</strong></p>\n",
      "description_markdown": "Search the data warehouse and get row level results.\n\nAuthentication is Mandatory\n\nCanSearchWarehouse entitlement is required. You can request the Role below.\n\nElastic (search) is used in the background. See links below for syntax.\n\nExamples of usage:\n\n\nPOST /search/warehouse/THE_INDEX_YOU_WANT_TO_USE\n\nPOST /search/warehouse/INDEX1,INDEX2\n\nPOST /search/warehouse/ALL\n\n{ Any valid elasticsearch query DSL in the body }\n\n\n[Elasticsearch query DSL](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl.html)\n\n[Elastic simple query](https://www.elastic.co/guide/en/elasticsearch/reference/6.2/search-request-body.html)\n\n[Elastic aggregations](https://www.elastic.co/guide/en/elasticsearch/reference/6.2/search-aggregations.html)\n\n\n**URL Parameters:**\n\n[INDEX](/glossary#index): \n\n\n\n\n\n**JSON request body fields:**\n\n\n\n[**match_all**](/glossary#match_all): \n\n\n\n[**query**](/glossary#query): \n\n\n\n[none](/glossary#none): \n\n\n\n\n\n**JSON response body fields:**\n\n\n",
      "example_request_body": {
        "query": {
          "match_all": {}
        }
      },
      "success_response_body": {
        "jsonString": "{}"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Data-Warehouse", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "query": {
            "type": "object",
            "properties": {
              "match_all": {
                "type": "object",
                "properties": {}
              }
            }
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanSearchWarehouse",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/search/warehouse/INDEX",
      "connector_methods": ["obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv4.0.0-getMyDynamicEndpoints",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getMyDynamicEndpoints"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/my/dynamic-endpoints",
      "summary": "Get My Dynamic Endpoints",
      "description": "<p>Get My Dynamic Endpoints.</p>\n<p>Authentication is Mandatory</p>\n",
      "description_markdown": "Get My Dynamic Endpoints.\n\nAuthentication is Mandatory",
      "success_response_body": {
        "dynamic_endpoints": [
          {
            "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
            "dynamic_endpoint_id": "dynamic-endpoint-id",
            "swagger_string": {
              "swagger": "2.0",
              "info": {
                "title": "Bank Accounts (Dynamic Endpoint)",
                "version": "1.0.0"
              },
              "definitions": {
                "AccountName": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "family account"
                    },
                    "balance": {
                      "type": "integer",
                      "format": "int64",
                      "example": 1000.123
                    }
                  }
                }
              },
              "paths": {
                "/accounts": {
                  "post": {
                    "operationId": "POST_account",
                    "produces": ["application/json"],
                    "responses": {
                      "201": {
                        "description": "Success Response",
                        "schema": {
                          "$ref": "#/definitions/AccountName"
                        }
                      }
                    },
                    "consumes": ["application/json"],
                    "description": "POST Accounts",
                    "summary": "POST Accounts"
                  }
                },
                "/accounts/{account_id}": {
                  "get": {
                    "operationId": "GET_account",
                    "produces": ["application/json"],
                    "responses": {
                      "200": {
                        "description": "Success Response",
                        "schema": {
                          "$ref": "#/definitions/AccountName"
                        }
                      }
                    },
                    "consumes": ["application/json"],
                    "description": "Get Bank Account",
                    "summary": "Get Bank Account by Id"
                  }
                }
              },
              "host": "obp_mock",
              "schemes": ["http", "https"]
            }
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Dynamic-Endpoint-Manage", "API", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "dynamic_endpoints": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "user_id": {
                  "type": "string"
                },
                "dynamic_endpoint_id": {
                  "type": "string"
                },
                "swagger_string": {
                  "type": "object",
                  "properties": {
                    "swagger": {
                      "type": "string"
                    },
                    "paths": {
                      "type": "object",
                      "properties": {
                        "/accounts": {
                          "type": "object",
                          "properties": {
                            "post": {
                              "type": "object",
                              "properties": {
                                "responses": {
                                  "type": "object",
                                  "properties": {
                                    "201": {
                                      "type": "object",
                                      "properties": {
                                        "description": {
                                          "type": "string"
                                        },
                                        "schema": {
                                          "type": "object",
                                          "properties": {
                                            "$ref": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "consumes": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "s": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "operationId": {
                                  "type": "string"
                                },
                                "summary": {
                                  "type": "string"
                                },
                                "description": {
                                  "type": "string"
                                },
                                "produces": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "s": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "/accounts/{account_id}": {
                          "type": "object",
                          "properties": {
                            "get": {
                              "type": "object",
                              "properties": {
                                "description": {
                                  "type": "string"
                                },
                                "consumes": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "s": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "operationId": {
                                  "type": "string"
                                },
                                "responses": {
                                  "type": "object",
                                  "properties": {
                                    "200": {
                                      "type": "object",
                                      "properties": {
                                        "description": {
                                          "type": "string"
                                        },
                                        "schema": {
                                          "type": "object",
                                          "properties": {
                                            "$ref": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "summary": {
                                  "type": "string"
                                },
                                "produces": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "s": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "info": {
                      "type": "object",
                      "properties": {
                        "title": {
                          "type": "string"
                        },
                        "version": {
                          "type": "string"
                        }
                      }
                    },
                    "definitions": {
                      "type": "object",
                      "properties": {
                        "AccountName": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string"
                            },
                            "properties": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string"
                                    },
                                    "example": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "balance": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string"
                                    },
                                    "format": {
                                      "type": "string"
                                    },
                                    "example": {
                                      "type": "number"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "schemes": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "s": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "host": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/my/dynamic-endpoints",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv4.0.0-updateDynamicMessageDoc",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "updateDynamicMessageDoc"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v4.0.0/management/dynamic-message-docs/DYNAMIC_MESSAGE_DOC_ID",
      "summary": "Update Dynamic Message Doc",
      "description": "<p>Update a Dynamic Message Doc.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#\">DYNAMIC_MESSAGE_DOC_ID</a>:</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#process\"><strong>process</strong></a>: obp.getBank</p>\n",
      "description_markdown": "Update a Dynamic Message Doc.\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[DYNAMIC_MESSAGE_DOC_ID](/glossary#): \n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**process**](/glossary#process): obp.getBank\n\n\n",
      "example_request_body": {
        "outbound_avro_schema": "",
        "inbound_avro_schema": "",
        "adapter_implementation": "",
        "description": "This an optional field. Maximum length is 2000. It can be any characters here.",
        "process": "obp.getBank",
        "outbound_topic": "",
        "method_body": "%20%20%20%20%20%20Future.successful%28%0A%20%20%20%20%20%20%20%20Full%28%28BankCommons%28%0A%20%20%20%20%20%20%20%20%20%20BankId%28%22Hello%20bank%20id%22%29%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%228%22%0A%20%20%20%20%20%20%20%20%29%2C%20None%29%29%0A%20%20%20%20%20%20%29",
        "message_format": "",
        "example_outbound_message": {},
        "inbound_topic": "",
        "example_inbound_message": {},
        "bank_id": "gh.29.uk",
        "programming_lang": "Scala"
      },
      "success_response_body": {
        "outbound_avro_schema": "",
        "inbound_avro_schema": "",
        "adapter_implementation": "",
        "dynamic_message_doc_id": "",
        "description": "This an optional field. Maximum length is 2000. It can be any characters here.",
        "process": "obp.getBank",
        "outbound_topic": "",
        "method_body": "%20%20%20%20%20%20Future.successful%28%0A%20%20%20%20%20%20%20%20Full%28%28BankCommons%28%0A%20%20%20%20%20%20%20%20%20%20BankId%28%22Hello%20bank%20id%22%29%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%228%22%0A%20%20%20%20%20%20%20%20%29%2C%20None%29%29%0A%20%20%20%20%20%20%29",
        "message_format": "",
        "example_outbound_message": {},
        "inbound_topic": "",
        "example_inbound_message": {},
        "bank_id": "gh.29.uk",
        "programming_lang": "Scala"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Dynamic-Message-Doc", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "example_outbound_message": {
            "type": "object",
            "properties": {}
          },
          "outbound_topic": {
            "type": "string"
          },
          "example_inbound_message": {
            "type": "object",
            "properties": {}
          },
          "bank_id": {
            "type": "string"
          },
          "inbound_topic": {
            "type": "string"
          },
          "programming_lang": {
            "type": "string"
          },
          "process": {
            "type": "string"
          },
          "outbound_avro_schema": {
            "type": "string"
          },
          "method_body": {
            "type": "string"
          },
          "message_format": {
            "type": "string"
          },
          "adapter_implementation": {
            "type": "string"
          },
          "inbound_avro_schema": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "example_outbound_message": {
            "type": "object",
            "properties": {}
          },
          "outbound_topic": {
            "type": "string"
          },
          "example_inbound_message": {
            "type": "object",
            "properties": {}
          },
          "bank_id": {
            "type": "string"
          },
          "inbound_topic": {
            "type": "string"
          },
          "programming_lang": {
            "type": "string"
          },
          "dynamic_message_doc_id": {
            "type": "string"
          },
          "process": {
            "type": "string"
          },
          "outbound_avro_schema": {
            "type": "string"
          },
          "method_body": {
            "type": "string"
          },
          "message_format": {
            "type": "string"
          },
          "adapter_implementation": {
            "type": "string"
          },
          "inbound_avro_schema": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanUpdateDynamicMessageDoc",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/dynamic-message-docs/DYNAMIC_MESSAGE_DOC_ID",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv5.1.0-lockUserByProviderAndUsername",
      "implemented_by": {
        "version": "OBPv5.1.0",
        "function": "lockUserByProviderAndUsername"
      },
      "request_verb": "POST",
      "request_url": "/obp/v5.1.0/users/PROVIDER/USERNAME/locks",
      "summary": "Lock the user",
      "description": "<p>Lock a User.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#provider\">PROVIDER</a>: ETHEREUM</p>\n<p><a href=\"/glossary#\">USERNAME</a>: felixsmith</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#last_lock_date\"><strong>last_lock_date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#type_of_lock\"><strong>type_of_lock</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p>\n",
      "description_markdown": "Lock a User.\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[PROVIDER](/glossary#provider): ETHEREUM\n\n\n\n[USERNAME](/glossary#): felixsmith\n\n\n\n\n\n**JSON request body fields:**\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**last_lock_date**](/glossary#last_lock_date): 2020-01-27\n\n\n\n[**type_of_lock**](/glossary#type_of_lock): \n\n\n\n[**user_id**](/glossary#): 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\n\n\n",
      "success_response_body": {
        "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
        "type_of_lock": "lock_via_api",
        "last_lock_date": "1100-01-01T01:01:01Z"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20027: User not found by provider and username.",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["User", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "type_of_lock": {
            "type": "string"
          },
          "last_lock_date": {
            "type": "string",
            "format": "date-time"
          },
          "user_id": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanLockUser",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/users/PROVIDER/USERNAME/locks",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv3.1.0-updatedCardForBank",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "updatedCardForBank"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v3.1.0/management/banks/BANK_ID/cards/CARD_ID",
      "summary": "Update Card",
      "description": "<p>Update Card at bank specified by CARD_ID .<br />\nAuthentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#\">CARD_ID</a>: 36f8a9e6-c2b1-407a-8bd0-421b7119307e</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#Account\"><strong>account</strong></a>:</p>\n<p><a href=\"/glossary#alias\"><strong>alias</strong></a>:</p>\n<p><a href=\"/glossary#allows\"><strong>allows</strong></a>: [credit,debit,cash_withdrawal]</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#can_add_comment\"><strong>can_add_comment</strong></a>:</p>\n<p><a href=\"/glossary#can_add_corporate_location\"><strong>can_add_corporate_location</strong></a>:</p>\n<p><a href=\"/glossary#can_add_image\"><strong>can_add_image</strong></a>:</p>\n<p><a href=\"/glossary#can_add_image_url\"><strong>can_add_image_url</strong></a>: true</p>\n<p><a href=\"/glossary#can_add_more_info\"><strong>can_add_more_info</strong></a>: true</p>\n<p><a href=\"/glossary#can_add_open_corporates_url\"><strong>can_add_open_corporates_url</strong></a>:</p>\n<p><a href=\"/glossary#can_add_physical_location\"><strong>can_add_physical_location</strong></a>:</p>\n<p><a href=\"/glossary#can_add_private_alias\"><strong>can_add_private_alias</strong></a>:</p>\n<p><a href=\"/glossary#can_add_public_alias\"><strong>can_add_public_alias</strong></a>:</p>\n<p><a href=\"/glossary#can_add_tag\"><strong>can_add_tag</strong></a>: true</p>\n<p><a href=\"/glossary#can_add_url\"><strong>can_add_url</strong></a>:</p>\n<p><a href=\"/glossary#can_add_where_tag\"><strong>can_add_where_tag</strong></a>:</p>\n<p><a href=\"/glossary#can_delete_comment\"><strong>can_delete_comment</strong></a>:</p>\n<p><a href=\"/glossary#can_delete_corporate_location\"><strong>can_delete_corporate_location</strong></a>: true</p>\n<p><a href=\"/glossary#can_delete_image\"><strong>can_delete_image</strong></a>: true</p>\n<p><a href=\"/glossary#can_delete_physical_location\"><strong>can_delete_physical_location</strong></a>:</p>\n<p><a href=\"/glossary#can_delete_tag\"><strong>can_delete_tag</strong></a>:</p>\n<p><a href=\"/glossary#can_delete_where_tag\"><strong>can_delete_where_tag</strong></a>: true</p>\n<p><a href=\"/glossary#can_edit_owner_comment\"><strong>can_edit_owner_comment</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_balance\"><strong>can_see_bank_account_balance</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_bank_name\"><strong>can_see_bank_account_bank_name</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_currency\"><strong>can_see_bank_account_currency</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_iban\"><strong>can_see_bank_account_iban</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_label\"><strong>can_see_bank_account_label</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_national_identifier\"><strong>can_see_bank_account_national_identifier</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_number\"><strong>can_see_bank_account_number</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_owners\"><strong>can_see_bank_account_owners</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_swift_bic\"><strong>can_see_bank_account_swift_bic</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_type\"><strong>can_see_bank_account_type</strong></a>:</p>\n<p><a href=\"/glossary#can_see_comments\"><strong>can_see_comments</strong></a>:</p>\n<p><a href=\"/glossary#can_see_corporate_location\"><strong>can_see_corporate_location</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_image_url\"><strong>can_see_image_url</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_images\"><strong>can_see_images</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_more_info\"><strong>can_see_more_info</strong></a>:</p>\n<p><a href=\"/glossary#can_see_open_corporates_url\"><strong>can_see_open_corporates_url</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_bank_name\"><strong>can_see_other_account_bank_name</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_iban\"><strong>can_see_other_account_iban</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_kind\"><strong>can_see_other_account_kind</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_metadata\"><strong>can_see_other_account_metadata</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_national_identifier\"><strong>can_see_other_account_national_identifier</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_other_account_number\"><strong>can_see_other_account_number</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_other_account_swift_bic\"><strong>can_see_other_account_swift_bic</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_owner_comment\"><strong>can_see_owner_comment</strong></a>:</p>\n<p><a href=\"/glossary#can_see_physical_location\"><strong>can_see_physical_location</strong></a>:</p>\n<p><a href=\"/glossary#can_see_private_alias\"><strong>can_see_private_alias</strong></a>:</p>\n<p><a href=\"/glossary#can_see_public_alias\"><strong>can_see_public_alias</strong></a>:</p>\n<p><a href=\"/glossary#can_see_tags\"><strong>can_see_tags</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_amount\"><strong>can_see_transaction_amount</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_transaction_balance\"><strong>can_see_transaction_balance</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_currency\"><strong>can_see_transaction_currency</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_description\"><strong>can_see_transaction_description</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_transaction_finish_date\"><strong>can_see_transaction_finish_date</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_metadata\"><strong>can_see_transaction_metadata</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_other_bank_account\"><strong>can_see_transaction_other_bank_account</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_start_date\"><strong>can_see_transaction_start_date</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_this_bank_account\"><strong>can_see_transaction_this_bank_account</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_type\"><strong>can_see_transaction_type</strong></a>:</p>\n<p><a href=\"/glossary#can_see_url\"><strong>can_see_url</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_where_tag\"><strong>can_see_where_tag</strong></a>: true</p>\n<p><a href=\"/glossary#cancelled\"><strong>cancelled</strong></a>: true</p>\n<p><a href=\"/glossary#\"><strong>card_id</strong></a>: 36f8a9e6-c2b1-407a-8bd0-421b7119307e</p>\n<p><a href=\"/glossary#\"><strong>card_number</strong></a>: 364435172576215</p>\n<p><a href=\"/glossary#\"><strong>card_type</strong></a>: Credit</p>\n<p><a href=\"/glossary#collected\"><strong>collected</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#enabled\"><strong>enabled</strong></a>: true</p>\n<p><a href=\"/glossary#\"><strong>expires_date</strong></a>: 2021-01-27</p>\n<p><a href=\"/glossary#hide_metadata_if_alias_used\"><strong>hide_metadata_if_alias_used</strong></a>:</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#is_public\"><strong>is_public</strong></a>: true</p>\n<p><a href=\"/glossary#\"><strong>issue_number</strong></a>: 1</p>\n<p><a href=\"/glossary#\"><strong>label</strong></a>: My Account</p>\n<p><a href=\"/glossary#\"><strong>name_on_card</strong></a>: SusanSmith</p>\n<p><a href=\"/glossary#networks\"><strong>networks</strong></a>:</p>\n<p><a href=\"/glossary#on_hot_list\"><strong>on_hot_list</strong></a>: false</p>\n<p><a href=\"/glossary#pin_reset\"><strong>pin_reset</strong></a>:</p>\n<p><a href=\"/glossary#posted\"><strong>posted</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#reason_requested\"><strong>reason_requested</strong></a>:</p>\n<p><a href=\"/glossary#replacement\"><strong>replacement</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>requested_date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#\"><strong>serial_number</strong></a>: 1324234</p>\n<p><a href=\"/glossary#short_name\"><strong>short_name</strong></a>:</p>\n<p><a href=\"/glossary#technology\"><strong>technology</strong></a>: technology1</p>\n<p><a href=\"/glossary#\"><strong>valid_from_date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#views_available\"><strong>views_available</strong></a>:</p>\n",
      "description_markdown": "Update Card at bank specified by CARD_ID .\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[CARD_ID](/glossary#): 36f8a9e6-c2b1-407a-8bd0-421b7119307e \n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**account**](/glossary#Account): \n\n\n\n[**alias**](/glossary#alias): \n\n\n\n[**allows**](/glossary#allows): [credit,debit,cash_withdrawal]\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**can_add_comment**](/glossary#can_add_comment): \n\n\n\n[**can_add_corporate_location**](/glossary#can_add_corporate_location): \n\n\n\n[**can_add_image**](/glossary#can_add_image): \n\n\n\n[**can_add_image_url**](/glossary#can_add_image_url): true\n\n\n\n[**can_add_more_info**](/glossary#can_add_more_info): true\n\n\n\n[**can_add_open_corporates_url**](/glossary#can_add_open_corporates_url): \n\n\n\n[**can_add_physical_location**](/glossary#can_add_physical_location): \n\n\n\n[**can_add_private_alias**](/glossary#can_add_private_alias): \n\n\n\n[**can_add_public_alias**](/glossary#can_add_public_alias): \n\n\n\n[**can_add_tag**](/glossary#can_add_tag): true\n\n\n\n[**can_add_url**](/glossary#can_add_url): \n\n\n\n[**can_add_where_tag**](/glossary#can_add_where_tag): \n\n\n\n[**can_delete_comment**](/glossary#can_delete_comment): \n\n\n\n[**can_delete_corporate_location**](/glossary#can_delete_corporate_location): true\n\n\n\n[**can_delete_image**](/glossary#can_delete_image): true\n\n\n\n[**can_delete_physical_location**](/glossary#can_delete_physical_location): \n\n\n\n[**can_delete_tag**](/glossary#can_delete_tag): \n\n\n\n[**can_delete_where_tag**](/glossary#can_delete_where_tag): true\n\n\n\n[**can_edit_owner_comment**](/glossary#can_edit_owner_comment): true\n\n\n\n[**can_see_bank_account_balance**](/glossary#can_see_bank_account_balance): \n\n\n\n[**can_see_bank_account_bank_name**](/glossary#can_see_bank_account_bank_name): true\n\n\n\n[**can_see_bank_account_currency**](/glossary#can_see_bank_account_currency): \n\n\n\n[**can_see_bank_account_iban**](/glossary#can_see_bank_account_iban): \n\n\n\n[**can_see_bank_account_label**](/glossary#can_see_bank_account_label): true\n\n\n\n[**can_see_bank_account_national_identifier**](/glossary#can_see_bank_account_national_identifier): \n\n\n\n[**can_see_bank_account_number**](/glossary#can_see_bank_account_number): true\n\n\n\n[**can_see_bank_account_owners**](/glossary#can_see_bank_account_owners): true\n\n\n\n[**can_see_bank_account_swift_bic**](/glossary#can_see_bank_account_swift_bic): \n\n\n\n[**can_see_bank_account_type**](/glossary#can_see_bank_account_type): \n\n\n\n[**can_see_comments**](/glossary#can_see_comments): \n\n\n\n[**can_see_corporate_location**](/glossary#can_see_corporate_location): true\n\n\n\n[**can_see_image_url**](/glossary#can_see_image_url): true\n\n\n\n[**can_see_images**](/glossary#can_see_images): true\n\n\n\n[**can_see_more_info**](/glossary#can_see_more_info): \n\n\n\n[**can_see_open_corporates_url**](/glossary#can_see_open_corporates_url): \n\n\n\n[**can_see_other_account_bank_name**](/glossary#can_see_other_account_bank_name): \n\n\n\n[**can_see_other_account_iban**](/glossary#can_see_other_account_iban): \n\n\n\n[**can_see_other_account_kind**](/glossary#can_see_other_account_kind): \n\n\n\n[**can_see_other_account_metadata**](/glossary#can_see_other_account_metadata): \n\n\n\n[**can_see_other_account_national_identifier**](/glossary#can_see_other_account_national_identifier): true\n\n\n\n[**can_see_other_account_number**](/glossary#can_see_other_account_number): true\n\n\n\n[**can_see_other_account_swift_bic**](/glossary#can_see_other_account_swift_bic): true\n\n\n\n[**can_see_owner_comment**](/glossary#can_see_owner_comment): \n\n\n\n[**can_see_physical_location**](/glossary#can_see_physical_location): \n\n\n\n[**can_see_private_alias**](/glossary#can_see_private_alias): \n\n\n\n[**can_see_public_alias**](/glossary#can_see_public_alias): \n\n\n\n[**can_see_tags**](/glossary#can_see_tags): \n\n\n\n[**can_see_transaction_amount**](/glossary#can_see_transaction_amount): true\n\n\n\n[**can_see_transaction_balance**](/glossary#can_see_transaction_balance): \n\n\n\n[**can_see_transaction_currency**](/glossary#can_see_transaction_currency): \n\n\n\n[**can_see_transaction_description**](/glossary#can_see_transaction_description): true\n\n\n\n[**can_see_transaction_finish_date**](/glossary#can_see_transaction_finish_date): \n\n\n\n[**can_see_transaction_metadata**](/glossary#can_see_transaction_metadata): \n\n\n\n[**can_see_transaction_other_bank_account**](/glossary#can_see_transaction_other_bank_account): \n\n\n\n[**can_see_transaction_start_date**](/glossary#can_see_transaction_start_date): \n\n\n\n[**can_see_transaction_this_bank_account**](/glossary#can_see_transaction_this_bank_account): \n\n\n\n[**can_see_transaction_type**](/glossary#can_see_transaction_type): \n\n\n\n[**can_see_url**](/glossary#can_see_url): true\n\n\n\n[**can_see_where_tag**](/glossary#can_see_where_tag): true\n\n\n\n[**cancelled**](/glossary#cancelled): true\n\n\n\n[**card_id**](/glossary#): 36f8a9e6-c2b1-407a-8bd0-421b7119307e \n\n\n\n[**card_number**](/glossary#): 364435172576215\n\n\n\n[**card_type**](/glossary#): Credit\n\n\n\n[**collected**](/glossary#collected): 2020-01-27\n\n\n\n[**customer_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**enabled**](/glossary#enabled): true\n\n\n\n[**expires_date**](/glossary#): 2021-01-27\n\n\n\n[**hide_metadata_if_alias_used**](/glossary#hide_metadata_if_alias_used): \n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**is_public**](/glossary#is_public): true\n\n\n\n[**issue_number**](/glossary#): 1\n\n\n\n[**label**](/glossary#): My Account\n\n\n\n[**name_on_card**](/glossary#): SusanSmith\n\n\n\n[**networks**](/glossary#networks): \n\n\n\n[**on_hot_list**](/glossary#on_hot_list): false\n\n\n\n[**pin_reset**](/glossary#pin_reset): \n\n\n\n[**posted**](/glossary#posted): 2020-01-27\n\n\n\n[**reason_requested**](/glossary#reason_requested): \n\n\n\n[**replacement**](/glossary#replacement): \n\n\n\n[**requested_date**](/glossary#): 2020-01-27\n\n\n\n[**serial_number**](/glossary#): 1324234\n\n\n\n[**short_name**](/glossary#short_name): \n\n\n\n[**technology**](/glossary#technology): technology1\n\n\n\n[**valid_from_date**](/glossary#): 2020-01-27\n\n\n\n[**views_available**](/glossary#views_available): \n\n\n",
      "example_request_body": {
        "card_type": "Credit",
        "name_on_card": "SusanSmith",
        "issue_number": "1",
        "serial_number": "1324234",
        "valid_from_date": "1100-01-01T00:00:00Z",
        "expires_date": "1100-01-01T00:00:00Z",
        "enabled": true,
        "technology": "technology1",
        "networks": ["network1", "network2"],
        "allows": ["credit", "debit"],
        "account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0",
        "replacement": {
          "requested_date": "1100-01-01T00:00:00Z",
          "reason_requested": "RENEW"
        },
        "pin_reset": [
          {
            "requested_date": "1100-01-01T00:00:00Z",
            "reason_requested": "FORGOT"
          },
          {
            "requested_date": "2023-04-13T04:30:08Z",
            "reason_requested": "GOOD_SECURITY_PRACTICE"
          }
        ],
        "collected": "1100-01-01T00:00:00Z",
        "posted": "1100-01-01T00:00:00Z",
        "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      },
      "success_response_body": {
        "card_id": "36f8a9e6-c2b1-407a-8bd0-421b7119307e ",
        "bank_id": "gh.29.uk",
        "card_number": "364435172576215",
        "card_type": "Credit",
        "name_on_card": "SusanSmith",
        "issue_number": "1",
        "serial_number": "1324234",
        "valid_from_date": "1100-01-01T00:00:00Z",
        "expires_date": "1100-01-01T00:00:00Z",
        "enabled": true,
        "cancelled": true,
        "on_hot_list": true,
        "technology": "technologyString1",
        "networks": ["networks1"],
        "allows": ["credit", "debit"],
        "account": {
          "id": "123",
          "label": "OBP",
          "views_available": [
            {
              "id": "123",
              "short_name": "short_name",
              "description": "description",
              "is_public": true,
              "alias": "None",
              "hide_metadata_if_alias_used": true,
              "can_add_comment": true,
              "can_add_corporate_location": true,
              "can_add_image": true,
              "can_add_image_url": true,
              "can_add_more_info": true,
              "can_add_open_corporates_url": true,
              "can_add_physical_location": true,
              "can_add_private_alias": true,
              "can_add_public_alias": true,
              "can_add_tag": true,
              "can_add_url": true,
              "can_add_where_tag": true,
              "can_delete_comment": true,
              "can_delete_corporate_location": true,
              "can_delete_image": true,
              "can_delete_physical_location": true,
              "can_delete_tag": true,
              "can_delete_where_tag": true,
              "can_edit_owner_comment": true,
              "can_see_bank_account_balance": true,
              "can_see_bank_account_bank_name": true,
              "can_see_bank_account_currency": true,
              "can_see_bank_account_iban": true,
              "can_see_bank_account_label": true,
              "can_see_bank_account_national_identifier": true,
              "can_see_bank_account_number": true,
              "can_see_bank_account_owners": true,
              "can_see_bank_account_swift_bic": true,
              "can_see_bank_account_type": true,
              "can_see_comments": true,
              "can_see_corporate_location": true,
              "can_see_image_url": true,
              "can_see_images": true,
              "can_see_more_info": true,
              "can_see_open_corporates_url": true,
              "can_see_other_account_bank_name": true,
              "can_see_other_account_iban": true,
              "can_see_other_account_kind": true,
              "can_see_other_account_metadata": true,
              "can_see_other_account_national_identifier": true,
              "can_see_other_account_number": true,
              "can_see_other_account_swift_bic": true,
              "can_see_owner_comment": true,
              "can_see_physical_location": true,
              "can_see_private_alias": true,
              "can_see_public_alias": true,
              "can_see_tags": true,
              "can_see_transaction_amount": true,
              "can_see_transaction_balance": true,
              "can_see_transaction_currency": true,
              "can_see_transaction_description": true,
              "can_see_transaction_finish_date": true,
              "can_see_transaction_metadata": true,
              "can_see_transaction_other_bank_account": true,
              "can_see_transaction_start_date": true,
              "can_see_transaction_this_bank_account": true,
              "can_see_transaction_type": true,
              "can_see_url": true,
              "can_see_where_tag": true
            }
          ],
          "bank_id": "gh.29.uk"
        },
        "replacement": {
          "requested_date": "1100-01-01T00:00:00Z",
          "reason_requested": "RENEW"
        },
        "pin_reset": [
          {
            "requested_date": "1100-01-01T00:00:00Z",
            "reason_requested": "FORGOT"
          }
        ],
        "collected": "1100-01-01T00:00:00Z",
        "posted": "1100-01-01T00:00:00Z",
        "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-10015: Allowed values are:",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Card", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "pin_reset": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "reason_requested": {
                  "type": "string"
                },
                "requested_date": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          "allows": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "technology": {
            "type": "string"
          },
          "collected": {
            "type": "string",
            "format": "date-time"
          },
          "card_type": {
            "type": "string"
          },
          "replacement": {
            "type": "object",
            "properties": {
              "reason_requested": {
                "type": "string"
              },
              "requested_date": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          "name_on_card": {
            "type": "string"
          },
          "expires_date": {
            "type": "string",
            "format": "date-time"
          },
          "posted": {
            "type": "string",
            "format": "date-time"
          },
          "customer_id": {
            "type": "string"
          },
          "networks": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "issue_number": {
            "type": "string"
          },
          "serial_number": {
            "type": "string"
          },
          "account_id": {
            "type": "string"
          },
          "valid_from_date": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "card_number": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "pin_reset": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "reason_requested": {
                  "type": "string"
                },
                "requested_date": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          "allows": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "collected": {
            "type": "string",
            "format": "date-time"
          },
          "on_hot_list": {
            "type": "boolean"
          },
          "card_type": {
            "type": "string"
          },
          "replacement": {
            "type": "object",
            "properties": {
              "reason_requested": {
                "type": "string"
              },
              "requested_date": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          "name_on_card": {
            "type": "string"
          },
          "account": {
            "type": "object",
            "properties": {
              "bank_id": {
                "type": "string"
              },
              "label": {
                "type": "string"
              },
              "views_available": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "can_see_other_account_swift_bic": {
                      "type": "boolean"
                    },
                    "can_see_where_tag": {
                      "type": "boolean"
                    },
                    "can_see_url": {
                      "type": "boolean"
                    },
                    "can_see_bank_account_swift_bic": {
                      "type": "boolean"
                    },
                    "can_see_tags": {
                      "type": "boolean"
                    },
                    "can_see_transaction_balance": {
                      "type": "boolean"
                    },
                    "can_delete_corporate_location": {
                      "type": "boolean"
                    },
                    "can_add_image_url": {
                      "type": "boolean"
                    },
                    "can_see_public_alias": {
                      "type": "boolean"
                    },
                    "can_add_comment": {
                      "type": "boolean"
                    },
                    "description": {
                      "type": "string"
                    },
                    "can_see_corporate_location": {
                      "type": "boolean"
                    },
                    "can_see_other_account_bank_name": {
                      "type": "boolean"
                    },
                    "can_see_more_info": {
                      "type": "boolean"
                    },
                    "can_see_physical_location": {
                      "type": "boolean"
                    },
                    "can_edit_owner_comment": {
                      "type": "boolean"
                    },
                    "can_see_private_alias": {
                      "type": "boolean"
                    },
                    "can_see_bank_account_balance": {
                      "type": "boolean"
                    },
                    "can_add_public_alias": {
                      "type": "boolean"
                    },
                    "can_see_bank_account_owners": {
                      "type": "boolean"
                    },
                    "can_see_other_account_metadata": {
                      "type": "boolean"
                    },
                    "can_delete_physical_location": {
                      "type": "boolean"
                    },
                    "hide_metadata_if_alias_used": {
                      "type": "boolean"
                    },
                    "can_see_transaction_this_bank_account": {
                      "type": "boolean"
                    },
                    "can_see_image_url": {
                      "type": "boolean"
                    },
                    "can_see_transaction_type": {
                      "type": "boolean"
                    },
                    "can_see_images": {
                      "type": "boolean"
                    },
                    "can_see_transaction_amount": {
                      "type": "boolean"
                    },
                    "can_see_transaction_metadata": {
                      "type": "boolean"
                    },
                    "id": {
                      "type": "string"
                    },
                    "can_see_comments": {
                      "type": "boolean"
                    },
                    "can_see_other_account_iban": {
                      "type": "boolean"
                    },
                    "can_add_image": {
                      "type": "boolean"
                    },
                    "can_see_bank_account_type": {
                      "type": "boolean"
                    },
                    "can_see_other_account_kind": {
                      "type": "boolean"
                    },
                    "can_see_bank_account_currency": {
                      "type": "boolean"
                    },
                    "can_add_where_tag": {
                      "type": "boolean"
                    },
                    "can_see_transaction_start_date": {
                      "type": "boolean"
                    },
                    "can_see_bank_account_label": {
                      "type": "boolean"
                    },
                    "can_add_private_alias": {
                      "type": "boolean"
                    },
                    "can_see_transaction_currency": {
                      "type": "boolean"
                    },
                    "can_add_more_info": {
                      "type": "boolean"
                    },
                    "can_delete_comment": {
                      "type": "boolean"
                    },
                    "can_see_transaction_other_bank_account": {
                      "type": "boolean"
                    },
                    "can_see_bank_account_number": {
                      "type": "boolean"
                    },
                    "can_add_corporate_location": {
                      "type": "boolean"
                    },
                    "can_add_url": {
                      "type": "boolean"
                    },
                    "short_name": {
                      "type": "string"
                    },
                    "can_delete_where_tag": {
                      "type": "boolean"
                    },
                    "is_public": {
                      "type": "boolean"
                    },
                    "can_see_owner_comment": {
                      "type": "boolean"
                    },
                    "can_see_transaction_finish_date": {
                      "type": "boolean"
                    },
                    "can_see_open_corporates_url": {
                      "type": "boolean"
                    },
                    "can_add_physical_location": {
                      "type": "boolean"
                    },
                    "can_see_bank_account_iban": {
                      "type": "boolean"
                    },
                    "can_see_other_account_national_identifier": {
                      "type": "boolean"
                    },
                    "can_delete_image": {
                      "type": "boolean"
                    },
                    "can_add_tag": {
                      "type": "boolean"
                    },
                    "can_add_open_corporates_url": {
                      "type": "boolean"
                    },
                    "can_delete_tag": {
                      "type": "boolean"
                    },
                    "can_see_transaction_description": {
                      "type": "boolean"
                    },
                    "can_see_bank_account_national_identifier": {
                      "type": "boolean"
                    },
                    "can_see_other_account_number": {
                      "type": "boolean"
                    },
                    "can_see_bank_account_bank_name": {
                      "type": "boolean"
                    },
                    "alias": {
                      "type": "string"
                    }
                  }
                }
              },
              "id": {
                "type": "string"
              }
            }
          },
          "expires_date": {
            "type": "string",
            "format": "date-time"
          },
          "technology": {
            "type": "string"
          },
          "posted": {
            "type": "string",
            "format": "date-time"
          },
          "customer_id": {
            "type": "string"
          },
          "bank_id": {
            "type": "string"
          },
          "card_id": {
            "type": "string"
          },
          "issue_number": {
            "type": "string"
          },
          "serial_number": {
            "type": "string"
          },
          "cancelled": {
            "type": "boolean"
          },
          "valid_from_date": {
            "type": "string",
            "format": "date-time"
          },
          "networks": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanUpdateCardsForBank",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/banks/BANK_ID/cards/CARD_ID",
      "connector_methods": [
        "obp.updatePhysicalCard",
        "obp.getCustomerByCustomerId",
        "obp.getPhysicalCardForBank",
        "obp.checkBankAccountExists",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv4.0.0-updateBankLevelDynamicMessageDoc",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "updateBankLevelDynamicMessageDoc"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v4.0.0/management/banks/BANK_ID/dynamic-message-docs/DYNAMIC_MESSAGE_DOC_ID",
      "summary": "Update Bank Level Dynamic Message Doc",
      "description": "<p>Update a Bank Level Dynamic Message Doc.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#\">DYNAMIC_MESSAGE_DOC_ID</a>:</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#process\"><strong>process</strong></a>: obp.getBank</p>\n",
      "description_markdown": "Update a Bank Level Dynamic Message Doc.\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[DYNAMIC_MESSAGE_DOC_ID](/glossary#): \n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**process**](/glossary#process): obp.getBank\n\n\n",
      "example_request_body": {
        "outbound_avro_schema": "",
        "inbound_avro_schema": "",
        "adapter_implementation": "",
        "description": "This an optional field. Maximum length is 2000. It can be any characters here.",
        "process": "obp.getBank",
        "outbound_topic": "",
        "method_body": "%20%20%20%20%20%20Future.successful%28%0A%20%20%20%20%20%20%20%20Full%28%28BankCommons%28%0A%20%20%20%20%20%20%20%20%20%20BankId%28%22Hello%20bank%20id%22%29%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%228%22%0A%20%20%20%20%20%20%20%20%29%2C%20None%29%29%0A%20%20%20%20%20%20%29",
        "message_format": "",
        "example_outbound_message": {},
        "inbound_topic": "",
        "example_inbound_message": {},
        "bank_id": "gh.29.uk",
        "programming_lang": "Scala"
      },
      "success_response_body": {
        "outbound_avro_schema": "",
        "inbound_avro_schema": "",
        "adapter_implementation": "",
        "dynamic_message_doc_id": "",
        "description": "This an optional field. Maximum length is 2000. It can be any characters here.",
        "process": "obp.getBank",
        "outbound_topic": "",
        "method_body": "%20%20%20%20%20%20Future.successful%28%0A%20%20%20%20%20%20%20%20Full%28%28BankCommons%28%0A%20%20%20%20%20%20%20%20%20%20BankId%28%22Hello%20bank%20id%22%29%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%228%22%0A%20%20%20%20%20%20%20%20%29%2C%20None%29%29%0A%20%20%20%20%20%20%29",
        "message_format": "",
        "example_outbound_message": {},
        "inbound_topic": "",
        "example_inbound_message": {},
        "bank_id": "gh.29.uk",
        "programming_lang": "Scala"
      },
      "error_response_bodies": [
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Dynamic-Message-Doc", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "example_outbound_message": {
            "type": "object",
            "properties": {}
          },
          "outbound_topic": {
            "type": "string"
          },
          "example_inbound_message": {
            "type": "object",
            "properties": {}
          },
          "bank_id": {
            "type": "string"
          },
          "inbound_topic": {
            "type": "string"
          },
          "programming_lang": {
            "type": "string"
          },
          "process": {
            "type": "string"
          },
          "outbound_avro_schema": {
            "type": "string"
          },
          "method_body": {
            "type": "string"
          },
          "message_format": {
            "type": "string"
          },
          "adapter_implementation": {
            "type": "string"
          },
          "inbound_avro_schema": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "example_outbound_message": {
            "type": "object",
            "properties": {}
          },
          "outbound_topic": {
            "type": "string"
          },
          "example_inbound_message": {
            "type": "object",
            "properties": {}
          },
          "bank_id": {
            "type": "string"
          },
          "inbound_topic": {
            "type": "string"
          },
          "programming_lang": {
            "type": "string"
          },
          "dynamic_message_doc_id": {
            "type": "string"
          },
          "process": {
            "type": "string"
          },
          "outbound_avro_schema": {
            "type": "string"
          },
          "method_body": {
            "type": "string"
          },
          "message_format": {
            "type": "string"
          },
          "adapter_implementation": {
            "type": "string"
          },
          "inbound_avro_schema": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanUpdateDynamicMessageDoc",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/banks/BANK_ID/dynamic-message-docs/DYNAMIC_MESSAGE_DOC_ID",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv3.0.0-getPublicAccountById",
      "implemented_by": {
        "version": "OBPv3.0.0",
        "function": "getPublicAccountById"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.0.0/banks/BANK_ID/public/accounts/ACCOUNT_ID/VIEW_ID/account",
      "summary": "Get Public Account by Id",
      "description": "<p>Returns information about an account that has a public view.</p>\n<p>The account is specified by ACCOUNT_ID. The information is moderated by the view specified by VIEW_ID.</p>\n<ul>\n<li>Number</li>\n<li>Owners</li>\n<li>Type</li>\n<li>Balance</li>\n<li>Routing</li>\n</ul>\n<p>PSD2 Context: PSD2 requires customers to have access to their account information via third party applications.<br />\nThis call provides balance and other account information via delegated authentication using OAuth.</p>\n<p>Authentication is Optional</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#account_routings\"><strong>account_routings</strong></a>:</p>\n<p><a href=\"/glossary#account_rules\"><strong>account_rules</strong></a>:</p>\n<p><a href=\"/glossary#address\"><strong>address</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p>\n<p><a href=\"/glossary#balance\"><strong>balance</strong></a>: 10</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#display_name\"><strong>display_name</strong></a>:</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#\"><strong>label</strong></a>: My Account</p>\n<p><a href=\"/glossary#number\"><strong>number</strong></a>:</p>\n<p><a href=\"/glossary#owners\"><strong>owners</strong></a>:</p>\n<p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p>\n<p><a href=\"/glossary#scheme\"><strong>scheme</strong></a>: scheme value</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n<p><a href=\"/glossary#account_attributes\">account_attributes</a>:</p>\n",
      "description_markdown": "Returns information about an account that has a public view.\n\nThe account is specified by ACCOUNT_ID. The information is moderated by the view specified by VIEW_ID.\n\n* Number\n* Owners\n* Type\n* Balance\n* Routing\n\n\nPSD2 Context: PSD2 requires customers to have access to their account information via third party applications.\nThis call provides balance and other account information via delegated authentication using OAuth.\n\nAuthentication is Optional\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[VIEW_ID](/glossary#this_view_id): owner\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**account_routings**](/glossary#account_routings): \n\n\n\n[**account_rules**](/glossary#account_rules): \n\n\n\n[**address**](/glossary#address): \n\n\n\n[**amount**](/glossary#): 10.12\n\n\n\n[**balance**](/glossary#balance): 10\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**display_name**](/glossary#display_name): \n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**label**](/glossary#): My Account\n\n\n\n[**number**](/glossary#number): \n\n\n\n[**owners**](/glossary#owners): \n\n\n\n[**provider**](/glossary#provider): ETHEREUM\n\n\n\n[**scheme**](/glossary#scheme): scheme value\n\n\n\n[**type**](/glossary#type): \n\n\n\n[**value**](/glossary#): 5987953\n\n\n\n[account_attributes](/glossary#account_attributes): \n\n\n",
      "success_response_body": {
        "id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0",
        "bank_id": "gh.29.uk",
        "label": "My Account",
        "number": "",
        "owners": [
          {
            "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
            "provider": "http://127.0.0.1:8080",
            "display_name": "OBP"
          }
        ],
        "type": "",
        "balance": {
          "currency": "EUR",
          "amount": "0"
        },
        "account_routings": [
          {
            "scheme": "AccountNumber",
            "address": "4930396"
          }
        ],
        "account_rules": [
          {
            "scheme": "OVERDRAFT",
            "value": "10"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30003: Account not found. Please specify a valid value for ACCOUNT_ID.",
        "OBP-30005: View not found for Account. Please specify a valid value for VIEW_ID",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Account-Public", "Account", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "account_rules": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "scheme": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "bank_id": {
            "type": "string"
          },
          "owners": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "provider": {
                  "type": "string"
                },
                "display_name": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                }
              }
            }
          },
          "label": {
            "type": "string"
          },
          "balance": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string"
              },
              "amount": {
                "type": "string"
              }
            }
          },
          "number": {
            "type": "string"
          },
          "account_routings": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "scheme": {
                  "type": "string"
                },
                "address": {
                  "type": "string"
                }
              }
            }
          },
          "id": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/public/accounts/ACCOUNT_ID/VIEW_ID/account",
      "connector_methods": ["obp.checkBankAccountExists"]
    },
    {
      "operation_id": "OBPv4.0.0-deleteProductAttributeDefinition",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "deleteProductAttributeDefinition"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/attribute-definitions/ATTRIBUTE_DEFINITION_ID/product",
      "summary": "Delete Product Attribute Definition",
      "description": "<p>Delete Product Attribute Definition by ATTRIBUTE_DEFINITION_ID</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#attribute_definition_id\">ATTRIBUTE_DEFINITION_ID</a>:</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON response body fields:</strong></p>\n",
      "description_markdown": "Delete Product Attribute Definition by ATTRIBUTE_DEFINITION_ID\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ATTRIBUTE_DEFINITION_ID](/glossary#attribute_definition_id): \n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON response body fields:**\n\n\n",
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["Product", "New-Style"],
      "roles": [
        {
          "role": "CanDeleteProductAttributeDefinitionAtOneBank",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/attribute-definitions/ATTRIBUTE_DEFINITION_ID/product",
      "connector_methods": ["obp.deleteAttributeDefinition"]
    },
    {
      "operation_id": "OBPv4.0.0-getCustomerAttributeDefinition",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getCustomerAttributeDefinition"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/attribute-definitions/customer",
      "summary": "Get Customer Attribute Definition",
      "description": "<p>Get Customer Attribute Definition</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#alias\"><strong>alias</strong></a>:</p>\n<p><a href=\"/glossary#attribute_definition_id\"><strong>attribute_definition_id</strong></a>:</p>\n<p><a href=\"/glossary#attributes\"><strong>attributes</strong></a>: attribute value in form of (name, value)</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#can_be_seen_on_views\"><strong>can_be_seen_on_views</strong></a>: true</p>\n<p><a href=\"/glossary#category\"><strong>category</strong></a>:</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#is_active\"><strong>is_active</strong></a>: true</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n",
      "description_markdown": "Get Customer Attribute Definition\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**alias**](/glossary#alias): \n\n\n\n[**attribute_definition_id**](/glossary#attribute_definition_id): \n\n\n\n[**attributes**](/glossary#attributes): attribute value in form of (name, value)\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**can_be_seen_on_views**](/glossary#can_be_seen_on_views): true\n\n\n\n[**category**](/glossary#category): \n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**is_active**](/glossary#is_active): true\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**type**](/glossary#type): \n\n\n",
      "success_response_body": {
        "attributes": [
          {
            "attribute_definition_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
            "bank_id": "gh.29.uk",
            "name": "SPECIAL_TAX_NUMBER",
            "category": "Customer",
            "type": "STRING",
            "description": "description",
            "alias": "STRING",
            "can_be_seen_on_views": ["bank"],
            "is_active": true
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["Customer", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "attributes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "can_be_seen_on_views": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "attribute_definition_id": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "is_active": {
                  "type": "boolean"
                },
                "bank_id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "category": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "alias": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetCustomerAttributeDefinitionAtOneBank",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/attribute-definitions/customer",
      "connector_methods": ["obp.getAttributeDefinition"]
    },
    {
      "operation_id": "OBPv3.1.0-updateMethodRouting",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "updateMethodRouting"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v3.1.0/management/method_routings/METHOD_ROUTING_ID",
      "summary": "Update MethodRouting",
      "description": "<p>Update a MethodRouting.</p>\n<p>Authentication is Mandatory</p>\n<p>Explaination of Fields:</p>\n<ul>\n<li>method_name is required String value, current supported value: [mapped]</li>\n<li>connector_name is required String value</li>\n<li>is_bank_id_exact_match is required boolean value, if bank_id_pattern is exact bank_id value, this value is true; if bank_id_pattern is null or a regex, this value is false</li>\n<li>bank_id_pattern is optional String value, it can be null, a exact bank_id or a regex</li>\n<li>parameters is optional array of key value pairs. You can set some paremeters for this method<br />\nnote:</li>\n<li>\n<p>if bank_id_pattern is regex, special characters need to do escape, for example: bank_id_pattern = &quot;some-id_pattern_\\d+&quot;</p>\n</li>\n</ul>\n<p>If connector name start with rest, parameters can contain &quot;outBoundMapping&quot; and &quot;inBoundMapping&quot;, to convert OutBound and InBound json structure.<br />\nfor example:<br />\noutBoundMapping example, convert json from source to target:<br />\n<img src=\"https://user-images.githubusercontent.com/2577334/75248007-33332e00-580e-11ea-8d2a-d1856035fa24.png\" alt=\"Snipaste_outBoundMapping\" /><br />\nBuild OutBound json value rules:<br />\n1 set cId value with: outboundAdapterCallContext.correlationId value<br />\n2 set bankId value with: concat bankId.value value with  string helloworld<br />\n3 set originalJson value with: whole source json, note: the field value expression is $root</p>\n<p>inBoundMapping example, convert json from source to target:<br />\n<img src=\"https://user-images.githubusercontent.com/2577334/75248199-a9d02b80-580e-11ea-9238-e073264e9170.png\" alt=\"inBoundMapping\" /><br />\nBuild InBound json value rules:<br />\n1 and 2 set inboundAdapterCallContext and status value: because field name ends with &quot;$default&quot;, remove &quot;$default&quot; from field name, not change the value<br />\n3 set fullName value with: concat string full: with result.name value<br />\n4 set bankRoutingScheme value: because source value is Array, but target value is not Array, the mapping field name must ends with [0].</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#method_routing_id\">METHOD_ROUTING_ID</a>:</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>key</strong></a>: CustomerNumber</p>\n<p><a href=\"/glossary#parameters\"><strong>parameters</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n",
      "description_markdown": "Update a MethodRouting.\n\n\nAuthentication is Mandatory\n\nExplaination of Fields:\n\n* method_name is required String value, current supported value: [mapped]\n* connector_name is required String value\n* is_bank_id_exact_match is required boolean value, if bank_id_pattern is exact bank_id value, this value is true; if bank_id_pattern is null or a regex, this value is false\n* bank_id_pattern is optional String value, it can be null, a exact bank_id or a regex\n* parameters is optional array of key value pairs. You can set some paremeters for this method\nnote:\n\n* if bank_id_pattern is regex, special characters need to do escape, for example: bank_id_pattern = \"some\\-id_pattern_\\d+\"\n\nIf connector name start with rest, parameters can contain \"outBoundMapping\" and \"inBoundMapping\", to convert OutBound and InBound json structure.\nfor example:\n outBoundMapping example, convert json from source to target:\n![Snipaste_outBoundMapping](https://user-images.githubusercontent.com/2577334/75248007-33332e00-580e-11ea-8d2a-d1856035fa24.png)\nBuild OutBound json value rules:\n1 set cId value with: outboundAdapterCallContext.correlationId value\n2 set bankId value with: concat bankId.value value with  string helloworld\n3 set originalJson value with: whole source json, note: the field value expression is $root\n\n\n inBoundMapping example, convert json from source to target:\n![inBoundMapping](https://user-images.githubusercontent.com/2577334/75248199-a9d02b80-580e-11ea-9238-e073264e9170.png)\nBuild InBound json value rules:\n1 and 2 set inboundAdapterCallContext and status value: because field name ends with \"$default\", remove \"$default\" from field name, not change the value\n3 set fullName value with: concat string full: with result.name value\n4 set bankRoutingScheme value: because source value is Array, but target value is not Array, the mapping field name must ends with [0].\n\n\n**URL Parameters:**\n\n[METHOD_ROUTING_ID](/glossary#method_routing_id): \n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**key**](/glossary#): CustomerNumber\n\n\n\n[**parameters**](/glossary#parameters): \n\n\n\n[**value**](/glossary#): 5987953\n\n\n",
      "example_request_body": {
        "is_bank_id_exact_match": true,
        "method_name": "getBank",
        "connector_name": "rest_vMar2019",
        "bank_id_pattern": "some_bankId",
        "parameters": [
          {
            "key": "url",
            "value": "http://mydomain.com/xxx"
          }
        ]
      },
      "success_response_body": {
        "is_bank_id_exact_match": true,
        "method_name": "getBank",
        "connector_name": "rest_vMar2019",
        "method_routing_id": "this-method-routing-Id",
        "bank_id_pattern": "some_bankId",
        "parameters": [
          {
            "key": "url",
            "value": "http://mydomain.com/xxx"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-10001: Incorrect json format.",
        "OBP-10021: Incorrect Connector name.",
        "OBP-10022: Incorrect Connector method name.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Method-Routing", "API", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "is_bank_id_exact_match": {
            "type": "boolean"
          },
          "method_name": {
            "type": "string"
          },
          "parameters": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string"
                },
                "key": {
                  "type": "string"
                }
              }
            }
          },
          "bank_id_pattern": {
            "type": "string"
          },
          "connector_name": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "is_bank_id_exact_match": {
            "type": "boolean"
          },
          "method_name": {
            "type": "string"
          },
          "parameters": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string"
                },
                "key": {
                  "type": "string"
                }
              }
            }
          },
          "bank_id_pattern": {
            "type": "string"
          },
          "method_routing_id": {
            "type": "string"
          },
          "connector_name": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanUpdateMethodRouting",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/method_routings/METHOD_ROUTING_ID",
      "connector_methods": ["obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv4.0.0-updateAuthenticationTypeValidation",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "updateAuthenticationTypeValidation"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v4.0.0/management/authentication-type-validations/OPERATION_ID",
      "summary": "Update an Authentication Type Validation",
      "description": "<p>Update an Authentication Type Validation.</p>\n<p>Please supply allowed authentication types.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#\">OPERATION_ID</a>: OBPv4.0.0-getBanks</p>\n<p><strong>JSON response body fields:</strong></p>\n",
      "description_markdown": "Update an Authentication Type Validation.\n\nPlease supply allowed authentication types.\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[OPERATION_ID](/glossary#): OBPv4.0.0-getBanks\n\n\n\n\n\n**JSON response body fields:**\n\n\n",
      "example_request_body": [
        "DirectLogin",
        "OAuth1.0a",
        "GatewayLogin",
        "DAuth",
        "OAuth2_OIDC",
        "OAuth2_OIDC_FAPI"
      ],
      "success_response_body": {
        "operation_id": "OBPv4.0.0-updateXxx",
        "allowed_authentication_types": [
          "DirectLogin",
          "OAuth1.0a",
          "GatewayLogin",
          "DAuth",
          "OAuth2_OIDC",
          "OAuth2_OIDC_FAPI"
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Authentication-Type-Validation", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "tl": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {}
            }
          },
          "head": {
            "type": "string",
            "enum": [
              "DirectLogin",
              "OAuth1.0a",
              "GatewayLogin",
              "DAuth",
              "OAuth2_OIDC",
              "OAuth2_OIDC_FAPI",
              "Anonymous"
            ]
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "authTypes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {}
            }
          },
          "operationId": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanUpdateAuthenticationTypeValidation",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/authentication-type-validations/OPERATION_ID",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv4.0.0-deleteAtm",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "deleteAtm"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/atms/ATM_ID",
      "summary": "Delete ATM",
      "description": "<p>Delete ATM.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#atm_id\">ATM_ID</a>: atme0352a-9a0f-4bfa-b30b-9003aa467f51</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#accessibility_features\"><strong>accessibility_features</strong></a>: [&quot;ATAC&quot;,&quot;ATAD&quot;]</p>\n<p><a href=\"/glossary#address\"><strong>address</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>balance_inquiry_fee</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#\"><strong>branch_identification</strong></a>: branch_identification</p>\n<p><a href=\"/glossary#\"><strong>cash_withdrawal_international_fee</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>cash_withdrawal_national_fee</strong></a>:</p>\n<p><a href=\"/glossary#city\"><strong>city</strong></a>:</p>\n<p><a href=\"/glossary#closing_time\"><strong>closing_time</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#country_code\"><strong>country_code</strong></a>: 1254</p>\n<p><a href=\"/glossary#county\"><strong>county</strong></a>:</p>\n<p><a href=\"/glossary#friday\"><strong>friday</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>has_deposit_capability</strong></a>: true</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#\"><strong>is_accessible</strong></a>: true</p>\n<p><a href=\"/glossary#latitude\"><strong>latitude</strong></a>: 38.8951</p>\n<p><a href=\"/glossary#license\"><strong>license</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>line_1</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>line_2</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>line_3</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>located_at</strong></a>:</p>\n<p><a href=\"/glossary#location\"><strong>location</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>location_categories</strong></a>: location_categories</p>\n<p><a href=\"/glossary#longitude\"><strong>longitude</strong></a>: -77.0364</p>\n<p><a href=\"/glossary#meta\"><strong>meta</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>minimum_withdrawal</strong></a>: minimum_withdrawal</p>\n<p><a href=\"/glossary#monday\"><strong>monday</strong></a>:</p>\n<p><a href=\"/glossary#more_info\"><strong>more_info</strong></a>: More information about this fee</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#\"><strong>notes</strong></a>: notes</p>\n<p><a href=\"/glossary#opening_time\"><strong>opening_time</strong></a>:</p>\n<p><a href=\"/glossary#postcode\"><strong>postcode</strong></a>:</p>\n<p><a href=\"/glossary#saturday\"><strong>saturday</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>services</strong></a>: services</p>\n<p><a href=\"/glossary#\"><strong>site_identification</strong></a>: site_identification</p>\n<p><a href=\"/glossary#\"><strong>site_name</strong></a>: site_name</p>\n<p><a href=\"/glossary#state\"><strong>state</strong></a>:</p>\n<p><a href=\"/glossary#sunday\"><strong>sunday</strong></a>:</p>\n<p><a href=\"/glossary#supported_currencies\"><strong>supported_currencies</strong></a>: [&quot;EUR&quot;,&quot;MXN&quot;,&quot;USD&quot;]</p>\n<p><a href=\"/glossary#supported_languages\"><strong>supported_languages</strong></a>: [&quot;es&quot;,&quot;fr&quot;,&quot;de&quot;]</p>\n<p><a href=\"/glossary#thursday\"><strong>thursday</strong></a>:</p>\n<p><a href=\"/glossary#tuesday\"><strong>tuesday</strong></a>:</p>\n<p><a href=\"/glossary#wednesday\"><strong>wednesday</strong></a>:</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n",
      "description_markdown": "Delete ATM.\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ATM_ID](/glossary#atm_id): atme0352a-9a0f-4bfa-b30b-9003aa467f51\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**accessibility_features**](/glossary#accessibility_features): [\"ATAC\",\"ATAD\"]\n\n\n\n[**address**](/glossary#address): \n\n\n\n[**balance_inquiry_fee**](/glossary#): \n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**branch_identification**](/glossary#): branch_identification\n\n\n\n[**cash_withdrawal_international_fee**](/glossary#): \n\n\n\n[**cash_withdrawal_national_fee**](/glossary#): \n\n\n\n[**city**](/glossary#city): \n\n\n\n[**closing_time**](/glossary#closing_time): 2020-01-27\n\n\n\n[**country_code**](/glossary#country_code): 1254\n\n\n\n[**county**](/glossary#county): \n\n\n\n[**friday**](/glossary#friday): \n\n\n\n[**has_deposit_capability**](/glossary#): true\n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**is_accessible**](/glossary#): true\n\n\n\n[**latitude**](/glossary#latitude): 38.8951\n\n\n\n[**license**](/glossary#license): \n\n\n\n[**line_1**](/glossary#): \n\n\n\n[**line_2**](/glossary#): \n\n\n\n[**line_3**](/glossary#): \n\n\n\n[**located_at**](/glossary#): \n\n\n\n[**location**](/glossary#location): \n\n\n\n[**location_categories**](/glossary#): location_categories\n\n\n\n[**longitude**](/glossary#longitude): -77.0364\n\n\n\n[**meta**](/glossary#meta): \n\n\n\n[**minimum_withdrawal**](/glossary#): minimum_withdrawal\n\n\n\n[**monday**](/glossary#monday): \n\n\n\n[**more_info**](/glossary#more_info): More information about this fee\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**notes**](/glossary#): notes\n\n\n\n[**opening_time**](/glossary#opening_time): \n\n\n\n[**postcode**](/glossary#postcode): \n\n\n\n[**saturday**](/glossary#saturday): \n\n\n\n[**services**](/glossary#): services\n\n\n\n[**site_identification**](/glossary#): site_identification\n\n\n\n[**site_name**](/glossary#): site_name\n\n\n\n[**state**](/glossary#state): \n\n\n\n[**sunday**](/glossary#sunday): \n\n\n\n[**supported_currencies**](/glossary#supported_currencies): [\"EUR\",\"MXN\",\"USD\"]\n\n\n\n[**supported_languages**](/glossary#supported_languages): [\"es\",\"fr\",\"de\"]\n\n\n\n[**thursday**](/glossary#thursday): \n\n\n\n[**tuesday**](/glossary#tuesday): \n\n\n\n[**wednesday**](/glossary#wednesday): \n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n",
      "example_request_body": {
        "bank_id": "gh.29.uk",
        "name": "Atm by the Lake",
        "address": {
          "line_1": "No 1 the Road",
          "line_2": "The Place",
          "line_3": "The Hill",
          "city": "Berlin",
          "county": "",
          "state": "Brandenburg",
          "postcode": "13359",
          "country_code": "DE"
        },
        "location": {
          "latitude": 11.45,
          "longitude": 11.45
        },
        "meta": {
          "license": {
            "id": "ODbL-1.0",
            "name": "Open Database License"
          }
        },
        "monday": {
          "opening_time": "10:00",
          "closing_time": "18:00"
        },
        "tuesday": {
          "opening_time": "10:00",
          "closing_time": "18:00"
        },
        "wednesday": {
          "opening_time": "10:00",
          "closing_time": "18:00"
        },
        "thursday": {
          "opening_time": "10:00",
          "closing_time": "18:00"
        },
        "friday": {
          "opening_time": "10:00",
          "closing_time": "18:00"
        },
        "saturday": {
          "opening_time": "10:00",
          "closing_time": "18:00"
        },
        "sunday": {
          "opening_time": "10:00",
          "closing_time": "18:00"
        },
        "is_accessible": "true",
        "located_at": "",
        "more_info": "More information about this fee",
        "has_deposit_capability": "true",
        "supported_languages": ["es", "fr", "de"],
        "services": ["ATBP", "ATBA"],
        "accessibility_features": ["ATAC", "ATAD"],
        "supported_currencies": ["EUR", "MXN", "USD"],
        "notes": ["String1", "String2"],
        "location_categories": ["ATBI", "ATBE"],
        "minimum_withdrawal": "5",
        "branch_identification": "",
        "site_identification": "",
        "site_name": "",
        "cash_withdrawal_national_fee": "",
        "cash_withdrawal_international_fee": "",
        "balance_inquiry_fee": ""
      },
      "success_response_body": {
        "id": "atme0352a-9a0f-4bfa-b30b-9003aa467f51",
        "bank_id": "gh.29.uk",
        "name": "Atm by the Lake",
        "address": {
          "line_1": "No 1 the Road",
          "line_2": "The Place",
          "line_3": "The Hill",
          "city": "Berlin",
          "county": "",
          "state": "Brandenburg",
          "postcode": "13359",
          "country_code": "DE"
        },
        "location": {
          "latitude": 11.45,
          "longitude": 11.45
        },
        "meta": {
          "license": {
            "id": "ODbL-1.0",
            "name": "Open Database License"
          }
        },
        "monday": {
          "opening_time": "10:00",
          "closing_time": "18:00"
        },
        "tuesday": {
          "opening_time": "10:00",
          "closing_time": "18:00"
        },
        "wednesday": {
          "opening_time": "10:00",
          "closing_time": "18:00"
        },
        "thursday": {
          "opening_time": "10:00",
          "closing_time": "18:00"
        },
        "friday": {
          "opening_time": "10:00",
          "closing_time": "18:00"
        },
        "saturday": {
          "opening_time": "10:00",
          "closing_time": "18:00"
        },
        "sunday": {
          "opening_time": "10:00",
          "closing_time": "18:00"
        },
        "is_accessible": "true",
        "located_at": "",
        "more_info": "More information about this fee",
        "has_deposit_capability": "true",
        "supported_languages": ["es", "fr", "de"],
        "services": ["ATBP", "ATBA"],
        "accessibility_features": ["ATAC", "ATAD"],
        "supported_currencies": ["EUR", "MXN", "USD"],
        "notes": ["String1", "String2"],
        "location_categories": ["ATBI", "ATBE"],
        "minimum_withdrawal": "5",
        "branch_identification": "",
        "site_identification": "",
        "site_name": "",
        "cash_withdrawal_national_fee": "",
        "cash_withdrawal_international_fee": "",
        "balance_inquiry_fee": ""
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["ATM", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "has_deposit_capability": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "site_name": {
            "type": "string"
          },
          "friday": {
            "type": "object",
            "properties": {
              "closing_time": {
                "type": "string"
              },
              "opening_time": {
                "type": "string"
              }
            }
          },
          "site_identification": {
            "type": "string"
          },
          "is_accessible": {
            "type": "string"
          },
          "accessibility_features": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "supported_currencies": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "bank_id": {
            "type": "string"
          },
          "monday": {
            "type": "object",
            "properties": {
              "closing_time": {
                "type": "string"
              },
              "opening_time": {
                "type": "string"
              }
            }
          },
          "cash_withdrawal_international_fee": {
            "type": "string"
          },
          "supported_languages": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "balance_inquiry_fee": {
            "type": "string"
          },
          "meta": {
            "type": "object",
            "properties": {
              "license": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "notes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "saturday": {
            "type": "object",
            "properties": {
              "closing_time": {
                "type": "string"
              },
              "opening_time": {
                "type": "string"
              }
            }
          },
          "thursday": {
            "type": "object",
            "properties": {
              "closing_time": {
                "type": "string"
              },
              "opening_time": {
                "type": "string"
              }
            }
          },
          "tuesday": {
            "type": "object",
            "properties": {
              "closing_time": {
                "type": "string"
              },
              "opening_time": {
                "type": "string"
              }
            }
          },
          "wednesday": {
            "type": "object",
            "properties": {
              "closing_time": {
                "type": "string"
              },
              "opening_time": {
                "type": "string"
              }
            }
          },
          "sunday": {
            "type": "object",
            "properties": {
              "closing_time": {
                "type": "string"
              },
              "opening_time": {
                "type": "string"
              }
            }
          },
          "located_at": {
            "type": "string"
          },
          "more_info": {
            "type": "string"
          },
          "address": {
            "type": "object",
            "properties": {
              "city": {
                "type": "string"
              },
              "postcode": {
                "type": "string"
              },
              "line_1": {
                "type": "string"
              },
              "line_2": {
                "type": "string"
              },
              "line_3": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "country_code": {
                "type": "string"
              },
              "county": {
                "type": "string"
              }
            }
          },
          "minimum_withdrawal": {
            "type": "string"
          },
          "branch_identification": {
            "type": "string"
          },
          "location": {
            "type": "object",
            "properties": {
              "longitude": {
                "type": "number"
              },
              "latitude": {
                "type": "number"
              }
            }
          },
          "services": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "cash_withdrawal_national_fee": {
            "type": "string"
          },
          "location_categories": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "has_deposit_capability": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "site_name": {
            "type": "string"
          },
          "friday": {
            "type": "object",
            "properties": {
              "closing_time": {
                "type": "string"
              },
              "opening_time": {
                "type": "string"
              }
            }
          },
          "id": {
            "type": "string"
          },
          "site_identification": {
            "type": "string"
          },
          "is_accessible": {
            "type": "string"
          },
          "accessibility_features": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "supported_currencies": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "bank_id": {
            "type": "string"
          },
          "monday": {
            "type": "object",
            "properties": {
              "closing_time": {
                "type": "string"
              },
              "opening_time": {
                "type": "string"
              }
            }
          },
          "cash_withdrawal_international_fee": {
            "type": "string"
          },
          "supported_languages": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "balance_inquiry_fee": {
            "type": "string"
          },
          "meta": {
            "type": "object",
            "properties": {
              "license": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "notes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "saturday": {
            "type": "object",
            "properties": {
              "closing_time": {
                "type": "string"
              },
              "opening_time": {
                "type": "string"
              }
            }
          },
          "thursday": {
            "type": "object",
            "properties": {
              "closing_time": {
                "type": "string"
              },
              "opening_time": {
                "type": "string"
              }
            }
          },
          "tuesday": {
            "type": "object",
            "properties": {
              "closing_time": {
                "type": "string"
              },
              "opening_time": {
                "type": "string"
              }
            }
          },
          "wednesday": {
            "type": "object",
            "properties": {
              "closing_time": {
                "type": "string"
              },
              "opening_time": {
                "type": "string"
              }
            }
          },
          "sunday": {
            "type": "object",
            "properties": {
              "closing_time": {
                "type": "string"
              },
              "opening_time": {
                "type": "string"
              }
            }
          },
          "located_at": {
            "type": "string"
          },
          "more_info": {
            "type": "string"
          },
          "address": {
            "type": "object",
            "properties": {
              "city": {
                "type": "string"
              },
              "postcode": {
                "type": "string"
              },
              "line_1": {
                "type": "string"
              },
              "line_2": {
                "type": "string"
              },
              "line_3": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "country_code": {
                "type": "string"
              },
              "county": {
                "type": "string"
              }
            }
          },
          "minimum_withdrawal": {
            "type": "string"
          },
          "branch_identification": {
            "type": "string"
          },
          "location": {
            "type": "object",
            "properties": {
              "longitude": {
                "type": "number"
              },
              "latitude": {
                "type": "number"
              }
            }
          },
          "services": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "cash_withdrawal_national_fee": {
            "type": "string"
          },
          "location_categories": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanDeleteAtmAtAnyBank",
          "requires_bank_id": false
        },
        {
          "role": "CanDeleteAtm",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/atms/ATM_ID",
      "connector_methods": ["obp.deleteAtm", "obp.getAtm"]
    },
    {
      "operation_id": "OBPv5.0.0-createConsentRequest",
      "implemented_by": {
        "version": "OBPv5.0.0",
        "function": "createConsentRequest"
      },
      "request_verb": "POST",
      "request_url": "/obp/v5.0.0/consumer/consent-requests",
      "summary": "Create Consent Request",
      "description": "<p>Client Authentication (mandatory)</p>\n<p>It is used when applications request an access token to access their own resources, not on behalf of a user.</p>\n<p>The client needs to authenticate themselves for this request.<br />\nIn case of public client we use client_id and private kew to obtain access token, otherwise we use client_id and client_secret.<br />\nThe obtained access token is used in the HTTP Bearer auth header of our request.</p>\n<p>Example:<br />\nAuthorization: Bearer eXtneO-THbQtn3zvK_kQtXXfvOZyZFdBCItlPDbR2Bk.dOWqtXCtFX-tqGTVR0YrIjvAolPIVg7GZ-jz83y6nA0</p>\n<p>Authentication is Optional</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>account_access</strong></a>: account_access</p>\n<p><a href=\"/glossary#account_routing\"><strong>account_routing</strong></a>:</p>\n<p><a href=\"/glossary#address\"><strong>address</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#everything\"><strong>everything</strong></a>:</p>\n<p><a href=\"/glossary#role_name\"><strong>role_name</strong></a>:</p>\n<p><a href=\"/glossary#scheme\"><strong>scheme</strong></a>: scheme value</p>\n<p><a href=\"/glossary#\"><strong>view_id</strong></a>: owner</p>\n<p><a href=\"/glossary#\">consumer_id</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\">email</a>: <a href=\"&#x6d;&#x61;&#x69;&#x6c;&#x74;o&#x3a;&#x66;&#101;&#x6c;&#105;&#120;&#115;m&#x69;&#x74;h&#x40;&#101;&#120;&#x61;&#109;&#112;&#x6c;&#x65;&#x2e;c&#x6f;&#x6d;\">&#x66;e&#x6c;&#105;&#x78;&#x73;m&#105;&#x74;h&#x40;&#x65;&#120;&#x61;&#x6d;&#x70;&#x6c;e&#46;c&#x6f;&#x6d;</a></p>\n<p><a href=\"/glossary#entitlements\">entitlements</a>:</p>\n<p><a href=\"/glossary#phone_number\">phone_number</a>:</p>\n<p><a href=\"/glossary#time_to_live\">time_to_live</a>:</p>\n<p><a href=\"/glossary#valid_from\">valid_from</a>: 2020-01-27</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#consent_request_id\"><strong>consent_request_id</strong></a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#\"><strong>consumer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#payload\"><strong>payload</strong></a>: payload</p>\n",
      "description_markdown": "Client Authentication (mandatory)\n\nIt is used when applications request an access token to access their own resources, not on behalf of a user.\n\nThe client needs to authenticate themselves for this request.\nIn case of public client we use client_id and private kew to obtain access token, otherwise we use client_id and client_secret.\nThe obtained access token is used in the HTTP Bearer auth header of our request.\n\nExample:\nAuthorization: Bearer eXtneO-THbQtn3zvK_kQtXXfvOZyZFdBCItlPDbR2Bk.dOWqtXCtFX-tqGTVR0YrIjvAolPIVg7GZ-jz83y6nA0\n\n\n\nAuthentication is Optional\n\n\n**JSON request body fields:**\n\n\n\n[**account_access**](/glossary#): account_access\n\n\n\n[**account_routing**](/glossary#account_routing): \n\n\n\n[**address**](/glossary#address): \n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**everything**](/glossary#everything): \n\n\n\n[**role_name**](/glossary#role_name): \n\n\n\n[**scheme**](/glossary#scheme): scheme value\n\n\n\n[**view_id**](/glossary#): owner\n\n\n\n[consumer_id](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[email](/glossary#): felixsmith@example.com\n\n\n\n[entitlements](/glossary#entitlements): \n\n\n\n[phone_number](/glossary#phone_number): \n\n\n\n[time_to_live](/glossary#time_to_live): \n\n\n\n[valid_from](/glossary#valid_from): 2020-01-27\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**consent_request_id**](/glossary#consent_request_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[**consumer_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**payload**](/glossary#payload): payload\n\n\n",
      "example_request_body": {
        "everything": false,
        "account_access": [
          {
            "account_routing": {
              "scheme": "AccountNumber",
              "address": "4930396"
            },
            "view_id": "owner"
          }
        ],
        "entitlements": [
          {
            "bank_id": "gh.29.uk",
            "role_name": "CanGetCustomer"
          }
        ],
        "consumer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "email": "felixsmith@example.com",
        "phone_number": "+44 07972 444 876",
        "valid_from": "2023-04-13T04:30:08Z",
        "time_to_live": 3600
      },
      "success_response_body": {
        "consent_request_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0",
        "payload": {
          "everything": false,
          "account_access": [
            {
              "account_routing": {
                "scheme": "AccountNumber",
                "address": "4930396"
              },
              "view_id": "owner"
            }
          ],
          "phone_number": "+44 07972 444 876",
          "valid_from": "2022-06-14T12:42:00Z",
          "time_to_live": 3600
        },
        "consumer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      },
      "error_response_bodies": [
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-10001: Incorrect json format.",
        "OBP-35020: You exceeded max value of time to live of consents.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Consent", "Account Information Service (AIS)", "PSD2", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "account_access": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "view_id": {
                  "type": "string"
                },
                "account_routing": {
                  "type": "object",
                  "properties": {
                    "scheme": {
                      "type": "string"
                    },
                    "address": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "everything": {
            "type": "boolean"
          },
          "phone_number": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "consumer_id": {
            "type": "string"
          },
          "time_to_live": {
            "type": "integer"
          },
          "entitlements": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "bank_id": {
                  "type": "string"
                },
                "role_name": {
                  "type": "string"
                }
              }
            }
          },
          "valid_from": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "consumer_id": {
            "type": "string"
          },
          "payload": {
            "type": "object",
            "properties": {
              "phone_number": {
                "type": "string"
              },
              "everything": {
                "type": "boolean"
              },
              "valid_from": {
                "type": "string"
              },
              "time_to_live": {
                "type": "integer"
              },
              "account_access": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "account_routing": {
                      "type": "object",
                      "properties": {
                        "scheme": {
                          "type": "string"
                        },
                        "address": {
                          "type": "string"
                        }
                      }
                    },
                    "view_id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "consent_request_id": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/consumer/consent-requests",
      "connector_methods": ["obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv5.0.0-getSystemViewsIds",
      "implemented_by": {
        "version": "OBPv5.0.0",
        "function": "getSystemViewsIds"
      },
      "request_verb": "GET",
      "request_url": "/obp/v5.0.0/system-views-ids",
      "summary": "Get Ids of System Views",
      "description": "<p>Get Ids of System Views</p>\n<p>Authentication is Mandatory</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#views\"><strong>views</strong></a>:</p>\n",
      "description_markdown": "Get Ids of System Views\n\nAuthentication is Mandatory\n\n\n**JSON response body fields:**\n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**views**](/glossary#views): \n\n\n",
      "success_response_body": {
        "views": [
          {
            "id": "owner"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["View-System", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "views": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetSystemView",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/system-views-ids",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv5.0.0-getBank",
      "implemented_by": {
        "version": "OBPv5.0.0",
        "function": "getBank"
      },
      "request_verb": "GET",
      "request_url": "/obp/v5.0.0/banks/BANK_ID",
      "summary": "Get Bank",
      "description": "<p>Get the bank specified by BANK_ID<br />\nReturns information about a single bank specified by BANK_ID including:</p>\n<ul>\n<li>Bank code and full name of bank</li>\n<li>Logo URL</li>\n<li>Website</li>\n</ul>\n<p>Authentication is Optional</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#address\"><strong>address</strong></a>:</p>\n<p><a href=\"/glossary#bank_code\"><strong>bank_code</strong></a>: CGHZ</p>\n<p><a href=\"/glossary#bank_routings\"><strong>bank_routings</strong></a>: bank routing in form of (scheme, address)</p>\n<p><a href=\"/glossary#full_name\"><strong>full_name</strong></a>: full name string</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#logo\"><strong>logo</strong></a>: logo url</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#scheme\"><strong>scheme</strong></a>: scheme value</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n<p><a href=\"/glossary#website\"><strong>website</strong></a>: <a href=\"http://www.openbankproject.com\">www.openbankproject.com</a></p>\n<p><a href=\"/glossary#attributes\">attributes</a>: attribute value in form of (name, value)</p>\n",
      "description_markdown": "Get the bank specified by BANK_ID\nReturns information about a single bank specified by BANK_ID including:\n\n* Bank code and full name of bank\n* Logo URL\n* Website\n\nAuthentication is Optional\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**address**](/glossary#address): \n\n\n\n[**bank_code**](/glossary#bank_code): CGHZ\n\n\n\n[**bank_routings**](/glossary#bank_routings): bank routing in form of (scheme, address)\n\n\n\n[**full_name**](/glossary#full_name): full name string\n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**logo**](/glossary#logo): logo url\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**scheme**](/glossary#scheme): scheme value\n\n\n\n[**value**](/glossary#): 5987953\n\n\n\n[**website**](/glossary#website): www.openbankproject.com\n\n\n\n[attributes](/glossary#attributes): attribute value in form of (name, value)\n\n\n",
      "success_response_body": {
        "id": "gh.29.uk",
        "bank_code": "CGHZ",
        "full_name": "bank fullName string",
        "logo": "bank logoUrl string",
        "website": "bank logoUrl string",
        "bank_routings": [
          {
            "scheme": "scheme value",
            "address": ""
          }
        ],
        "attributes": [
          {
            "name": "ACCOUNT_MANAGEMENT_FEE",
            "value": "5987953"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-50000: Unknown Error.",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID."
      ],
      "tags": ["Bank", "Account Information Service (AIS)", "PSD2", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "website": {
            "type": "string"
          },
          "attributes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "bank_routings": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "scheme": {
                  "type": "string"
                },
                "address": {
                  "type": "string"
                }
              }
            }
          },
          "logo": {
            "type": "string"
          },
          "bank_code": {
            "type": "string"
          },
          "full_name": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID",
      "connector_methods": ["obp.getBankAttributesByBank", "obp.getBank"]
    },
    {
      "operation_id": "OBPv4.0.0-createHistoricalTransactionAtBank",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "createHistoricalTransactionAtBank"
      },
      "request_verb": "POST",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/management/historical/transactions",
      "summary": "Create Historical Transactions ",
      "description": "<p>Create historical transactions at one Bank</p>\n<p>Use this endpoint to create transactions between any two accounts at the same bank.<br />\nFrom account and to account must be at the same bank.<br />\nExample:<br />\n{<br />\n&quot;from_account_id&quot;: &quot;1ca8a7e4-6d02-48e3-a029-0b2bf89de9f0&quot;,<br />\n&quot;to_account_id&quot;: &quot;2ca8a7e4-6d02-48e3-a029-0b2bf89de9f0&quot;,<br />\n&quot;value&quot;: {<br />\n&quot;currency&quot;: &quot;GBP&quot;,<br />\n&quot;amount&quot;: &quot;10&quot;<br />\n},<br />\n&quot;description&quot;: &quot;this is for work&quot;,<br />\n&quot;posted&quot;: &quot;2017-09-19T02:31:05Z&quot;,<br />\n&quot;completed&quot;: &quot;2017-09-19T02:31:05Z&quot;,<br />\n&quot;type&quot;: &quot;SANDBOX_TAN&quot;,<br />\n&quot;charge_policy&quot;: &quot;SHARED&quot;<br />\n}</p>\n<p>This call is experimental.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p>\n<p><a href=\"/glossary#\"><strong>charge_policy</strong></a>: SHARED</p>\n<p><a href=\"/glossary#completed\"><strong>completed</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#\"><strong>from_account_id</strong></a>: from_account_id</p>\n<p><a href=\"/glossary#posted\"><strong>posted</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#\"><strong>to_account_id</strong></a>: to_account_id</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p>\n<p><a href=\"/glossary#\"><strong>charge_policy</strong></a>: SHARED</p>\n<p><a href=\"/glossary#completed\"><strong>completed</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#from\"><strong>from</strong></a>:</p>\n<p><a href=\"/glossary#posted\"><strong>posted</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#to\"><strong>to</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>transaction_id</strong></a>: 2fg8a7e4-6d02-40e3-a129-0b2bf89de8ub</p>\n<p><a href=\"/glossary#\"><strong>transaction_request_type</strong></a>: SEPA</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n<p><a href=\"/glossary#\">account_id</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#\">bank_id</a>: gh.29.uk</p>\n<p><a href=\"/glossary#\">counterparty_id</a>: 9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n",
      "description_markdown": "Create historical transactions at one Bank\n\nUse this endpoint to create transactions between any two accounts at the same bank. \nFrom account and to account must be at the same bank.\nExample:\n{\n  \"from_account_id\": \"1ca8a7e4-6d02-48e3-a029-0b2bf89de9f0\",\n  \"to_account_id\": \"2ca8a7e4-6d02-48e3-a029-0b2bf89de9f0\",\n  \"value\": {\n    \"currency\": \"GBP\",\n    \"amount\": \"10\"\n  },\n  \"description\": \"this is for work\",\n  \"posted\": \"2017-09-19T02:31:05Z\",\n  \"completed\": \"2017-09-19T02:31:05Z\",\n  \"type\": \"SANDBOX_TAN\",\n  \"charge_policy\": \"SHARED\"\n}\n\nThis call is experimental.\n       \n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON request body fields:**\n\n\n\n[**amount**](/glossary#): 10.12\n\n\n\n[**charge_policy**](/glossary#): SHARED\n\n\n\n[**completed**](/glossary#completed): 2020-01-27\n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**from_account_id**](/glossary#): from_account_id\n\n\n\n[**posted**](/glossary#posted): 2020-01-27\n\n\n\n[**to_account_id**](/glossary#): to_account_id\n\n\n\n[**type**](/glossary#type): \n\n\n\n[**value**](/glossary#): 5987953\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**amount**](/glossary#): 10.12\n\n\n\n[**charge_policy**](/glossary#): SHARED\n\n\n\n[**completed**](/glossary#completed): 2020-01-27\n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**from**](/glossary#from): \n\n\n\n[**posted**](/glossary#posted): 2020-01-27\n\n\n\n[**to**](/glossary#to): \n\n\n\n[**transaction_id**](/glossary#): 2fg8a7e4-6d02-40e3-a129-0b2bf89de8ub\n\n\n\n[**transaction_request_type**](/glossary#): SEPA\n\n\n\n[**value**](/glossary#): 5987953\n\n\n\n[account_id](/glossary#): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[bank_id](/glossary#): gh.29.uk\n\n\n\n[counterparty_id](/glossary#): 9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n",
      "example_request_body": {
        "from_account_id": "",
        "to_account_id": "",
        "value": {
          "currency": "EUR",
          "amount": "0"
        },
        "description": "this is for work",
        "posted": "1100-01-01T01:01:01Z",
        "completed": "1100-01-01T01:01:01Z",
        "type": "SANDBOX_TAN",
        "charge_policy": "SHARED"
      },
      "success_response_body": {
        "transaction_id": "2fg8a7e4-6d02-40e3-a129-0b2bf89de8ub",
        "from": {
          "bank_id": "gh.29.uk",
          "account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0",
          "counterparty_id": "9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh"
        },
        "to": {
          "bank_id": "gh.29.uk",
          "account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0",
          "counterparty_id": "9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh"
        },
        "value": {
          "currency": "EUR",
          "amount": "0"
        },
        "description": "this is for work",
        "posted": "1100-01-01T01:01:01Z",
        "completed": "1100-01-01T01:01:01Z",
        "transaction_request_type": "SANDBOX_TAN",
        "charge_policy": "SHARED"
      },
      "error_response_bodies": [
        "OBP-10001: Incorrect json format.",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30003: Account not found. Please specify a valid value for ACCOUNT_ID.",
        "OBP-30017: Counterparty not found. Please specify a valid value for COUNTERPARTY_ID.",
        "OBP-10002: Invalid Number. Could not convert value to a number.",
        "OBP-40008: Can't send a payment with a value of 0 or less.",
        "OBP-40003: Transaction Request Currency must be the same as From Account Currency.",
        "OBP-50000: Unknown Error.",
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["Transaction-Request", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "from_account_id": {
            "type": "string"
          },
          "completed": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "value": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string"
              },
              "amount": {
                "type": "string"
              }
            }
          },
          "charge_policy": {
            "type": "string"
          },
          "posted": {
            "type": "string"
          },
          "to_account_id": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "completed": {
            "type": "string",
            "format": "date-time"
          },
          "from": {
            "type": "object",
            "properties": {
              "bank_id": {
                "type": "string"
              },
              "account_id": {
                "type": "string"
              },
              "counterparty_id": {
                "type": "string"
              }
            }
          },
          "transaction_request_type": {
            "type": "string"
          },
          "to": {
            "type": "object",
            "properties": {
              "bank_id": {
                "type": "string"
              },
              "account_id": {
                "type": "string"
              },
              "counterparty_id": {
                "type": "string"
              }
            }
          },
          "value": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string"
              },
              "amount": {
                "type": "string"
              }
            }
          },
          "charge_policy": {
            "type": "string"
          },
          "transaction_id": {
            "type": "string"
          },
          "posted": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateHistoricalTransactionAtBank",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/management/historical/transactions",
      "connector_methods": [
        "obp.makeHistoricalPayment",
        "obp.checkBankAccountExists",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv3.1.0-createConsentEmail",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "createConsentEmail"
      },
      "request_verb": "POST",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/my/consents/EMAIL",
      "summary": "Create Consent (EMAIL)",
      "description": "<p>This endpoint starts the process of creating a Consent.</p>\n<p>The Consent is created in an INITIATED state.</p>\n<p>A One Time Password (OTP) (AKA security challenge) is sent Out of band (OOB) to the User via the transport defined in SCA_METHOD<br />\nSCA_METHOD is typically &quot;SMS&quot; or &quot;EMAIL&quot;. &quot;EMAIL&quot; is used for testing purposes.</p>\n<p>When the Consent is created, OBP (or a backend system) stores the challenge so it can be checked later against the value supplied by the User with the Answer Consent Challenge endpoint.</p>\n<p>An OBP Consent allows the holder of the Consent to call one or more endpoints.</p>\n<p>Consents must be created and authorisied using SCA (Strong Customer Authentication).</p>\n<p>That is, Consents can be created by an authorised User via the OBP REST API but they must be confirmed via an out of band (OOB) mechanism such as a code sent to a mobile phone.</p>\n<p>Each Consent has one of the following states: INITIATED, ACCEPTED, REJECTED, REVOKED, RECEIVED, VALID, REVOKEDBYPSU, EXPIRED, TERMINATEDBYTPP, AUTHORISED, AWAITINGAUTHORISATION.</p>\n<p>Each Consent is bound to a consumer i.e. you need to identify yourself over request header value Consumer-Key.<br />\nFor example:<br />\nGET /obp/v4.0.0/users/current HTTP/1.1<br />\nHost: 127.0.0.1:8080<br />\nConsent-JWT: eyJhbGciOiJIUzI1NiJ9.eyJlbnRpdGxlbWVudHMiOlt7InJvbGVfbmFtZSI6IkNhbkdldEFueVVzZXIiLCJiYW5rX2lkIjoiIn<br />\n1dLCJjcmVhdGVkQnlVc2VySWQiOiJhYjY1MzlhOS1iMTA1LTQ0ODktYTg4My0wYWQ4ZDZjNjE2NTciLCJzdWIiOiIzNDc1MDEzZi03YmY5LTQyNj<br />\nEtOWUxYy0xZTdlNWZjZTJlN2UiLCJhdWQiOiI4MTVhMGVmMS00YjZhLTQyMDUtYjExMi1lNDVmZDZmNGQzYWQiLCJuYmYiOjE1ODA3NDE2NjcsIml<br />\nzcyI6Imh0dHA6XC9cLzEyNy4wLjAuMTo4MDgwIiwiZXhwIjoxNTgwNzQ1MjY3LCJpYXQiOjE1ODA3NDE2NjcsImp0aSI6ImJkYzVjZTk5LTE2ZTY<br />\ntNDM4Yi1hNjllLTU3MTAzN2RhMTg3OCIsInZpZXdzIjpbXX0.L3fEEEhdCVr3qnmyRKBBUaIQ7dk1VjiFaEBW8hUNjfg</p>\n<p>Consumer-Key: ejznk505d132ryomnhbx1qmtohurbsbb0kijajsk<br />\ncache-control: no-cache</p>\n<p>Maximum time to live of the token is specified over props value consents.max_time_to_live. In case isn't defined default value is 3600 seconds.</p>\n<p>Example of POST JSON:<br />\n{<br />\n&quot;everything&quot;: false,<br />\n&quot;views&quot;: [<br />\n{<br />\n&quot;bank_id&quot;: &quot;GENODEM1GLS&quot;,<br />\n&quot;account_id&quot;: &quot;8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0&quot;,<br />\n&quot;view_id&quot;: &quot;owner&quot;<br />\n}<br />\n],<br />\n&quot;entitlements&quot;: [<br />\n{<br />\n&quot;bank_id&quot;: &quot;GENODEM1GLS&quot;,<br />\n&quot;role_name&quot;: &quot;CanGetCustomer&quot;<br />\n}<br />\n],<br />\n&quot;consumer_id&quot;: &quot;7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh&quot;,<br />\n&quot;email&quot;: &quot;<a href=\"&#109;a&#105;&#x6c;&#x74;&#111;&#x3a;&#101;&#x76;&#101;&#108;i&#x6e;&#101;&#64;&#101;&#120;&#x61;&#x6d;&#x70;&#x6c;&#x65;&#46;&#x63;o&#x6d;\">&#x65;&#118;&#x65;&#108;&#105;&#x6e;&#x65;&#x40;&#101;x&#x61;&#109;&#112;&#x6c;&#101;&#x2e;c&#111;m</a>&quot;,<br />\n&quot;valid_from&quot;: &quot;2020-02-07T08:43:34Z&quot;,<br />\n&quot;time_to_live&quot;: 3600<br />\n}<br />\nPlease note that only optional fields are: consumer_id, valid_from and time_to_live.<br />\nIn case you omit they the default values are used:<br />\nconsumer_id = consumer of current user<br />\nvalid_from = current time<br />\ntime_to_live = consents.max_time_to_live</p>\n<p>Authentication is Mandatory</p>\n<p>Example 1:<br />\n{<br />\n&quot;everything&quot;: true,<br />\n&quot;views&quot;: [],<br />\n&quot;entitlements&quot;: [],<br />\n&quot;consumer_id&quot;: &quot;7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh&quot;,<br />\n&quot;email&quot;: &quot;<a href=\"&#109;&#97;&#x69;&#x6c;&#x74;&#x6f;&#x3a;ev&#101;&#108;&#105;&#110;e&#x40;ex&#97;&#109;&#112;&#x6c;e&#x2e;&#x63;&#111;&#109;\">&#x65;&#x76;&#x65;l&#105;&#x6e;&#x65;@&#x65;x&#x61;&#109;&#x70;&#x6c;&#x65;&#46;&#x63;&#111;&#109;</a>&quot;<br />\n}</p>\n<p>Please note that consumer_id is optional field<br />\nExample 2:<br />\n{<br />\n&quot;everything&quot;: true,<br />\n&quot;views&quot;: [],<br />\n&quot;entitlements&quot;: [],<br />\n&quot;email&quot;: &quot;<a href=\"&#x6d;&#97;&#105;&#108;&#116;o&#58;&#x65;&#x76;&#101;l&#x69;&#x6e;e&#x40;ex&#97;&#109;&#x70;&#x6c;&#101;&#x2e;&#x63;&#x6f;&#x6d;\">e&#x76;&#x65;&#x6c;&#x69;&#110;&#x65;&#x40;&#x65;&#120;&#97;&#x6d;&#x70;&#x6c;&#101;&#x2e;&#99;&#x6f;&#x6d;</a>&quot;<br />\n}</p>\n<p>Please note if everything=false you need to explicitly specify views and entitlements<br />\nExample 3:<br />\n{<br />\n&quot;everything&quot;: false,<br />\n&quot;views&quot;: [<br />\n{<br />\n&quot;bank_id&quot;: &quot;GENODEM1GLS&quot;,<br />\n&quot;account_id&quot;: &quot;8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0&quot;,<br />\n&quot;view_id&quot;: &quot;owner&quot;<br />\n}<br />\n],<br />\n&quot;entitlements&quot;: [<br />\n{<br />\n&quot;bank_id&quot;: &quot;GENODEM1GLS&quot;,<br />\n&quot;role_name&quot;: &quot;CanGetCustomer&quot;<br />\n}<br />\n],<br />\n&quot;consumer_id&quot;: &quot;7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh&quot;,<br />\n&quot;email&quot;: &quot;<a href=\"m&#97;&#105;l&#x74;&#111;&#x3a;&#x65;&#118;&#101;&#108;&#x69;&#110;&#x65;&#x40;&#101;&#x78;&#x61;&#109;&#x70;&#x6c;&#101;&#46;c&#111;&#109;\">&#x65;&#118;&#x65;&#108;&#105;&#110;&#101;&#x40;&#101;&#120;a&#x6d;&#x70;&#108;&#101;&#46;&#99;&#x6f;&#109;</a>&quot;<br />\n}</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#\">EMAIL</a>: <a href=\"&#x6d;&#97;&#x69;&#x6c;&#116;&#x6f;&#58;&#x66;&#101;&#x6c;&#105;&#120;&#115;&#x6d;&#x69;&#116;&#104;&#64;e&#x78;&#97;mp&#108;&#x65;.&#99;&#x6f;&#109;\">&#x66;&#101;&#108;&#x69;&#x78;&#115;&#109;&#x69;&#x74;&#104;&#64;&#101;&#120;&#97;m&#x70;&#108;&#101;&#x2e;&#x63;&#x6f;&#109;</a></p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>account_id</strong></a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"&#109;&#97;i&#x6c;&#x74;o&#x3a;f&#x65;l&#x69;&#x78;&#x73;m&#x69;&#x74;&#104;&#x40;&#101;&#120;&#x61;&#x6d;&#x70;l&#x65;&#46;&#x63;om\">&#x66;&#101;&#x6c;&#x69;&#x78;&#x73;&#109;&#105;t&#x68;@e&#x78;&#x61;m&#112;&#x6c;&#x65;&#x2e;&#99;&#x6f;&#x6d;</a></p>\n<p><a href=\"/glossary#entitlements\"><strong>entitlements</strong></a>:</p>\n<p><a href=\"/glossary#everything\"><strong>everything</strong></a>:</p>\n<p><a href=\"/glossary#role_name\"><strong>role_name</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>view_id</strong></a>: owner</p>\n<p><a href=\"/glossary#views\"><strong>views</strong></a>:</p>\n<p><a href=\"/glossary#\">consumer_id</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#time_to_live\">time_to_live</a>:</p>\n<p><a href=\"/glossary#valid_from\">valid_from</a>: 2020-01-27</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#consent_id\"><strong>consent_id</strong></a>:</p>\n<p><a href=\"/glossary#jwt\"><strong>jwt</strong></a>:</p>\n<p><a href=\"/glossary#status\"><strong>status</strong></a>:</p>\n",
      "description_markdown": "This endpoint starts the process of creating a Consent.\n\nThe Consent is created in an INITIATED state.\n\nA One Time Password (OTP) (AKA security challenge) is sent Out of band (OOB) to the User via the transport defined in SCA_METHOD\nSCA_METHOD is typically \"SMS\" or \"EMAIL\". \"EMAIL\" is used for testing purposes.\n\nWhen the Consent is created, OBP (or a backend system) stores the challenge so it can be checked later against the value supplied by the User with the Answer Consent Challenge endpoint.\n\n\n\nAn OBP Consent allows the holder of the Consent to call one or more endpoints.\n\nConsents must be created and authorisied using SCA (Strong Customer Authentication).\n\nThat is, Consents can be created by an authorised User via the OBP REST API but they must be confirmed via an out of band (OOB) mechanism such as a code sent to a mobile phone.\n\nEach Consent has one of the following states: INITIATED, ACCEPTED, REJECTED, REVOKED, RECEIVED, VALID, REVOKEDBYPSU, EXPIRED, TERMINATEDBYTPP, AUTHORISED, AWAITINGAUTHORISATION.\n\nEach Consent is bound to a consumer i.e. you need to identify yourself over request header value Consumer-Key. \nFor example:\nGET /obp/v4.0.0/users/current HTTP/1.1\nHost: 127.0.0.1:8080\nConsent-JWT: eyJhbGciOiJIUzI1NiJ9.eyJlbnRpdGxlbWVudHMiOlt7InJvbGVfbmFtZSI6IkNhbkdldEFueVVzZXIiLCJiYW5rX2lkIjoiIn\n1dLCJjcmVhdGVkQnlVc2VySWQiOiJhYjY1MzlhOS1iMTA1LTQ0ODktYTg4My0wYWQ4ZDZjNjE2NTciLCJzdWIiOiIzNDc1MDEzZi03YmY5LTQyNj\nEtOWUxYy0xZTdlNWZjZTJlN2UiLCJhdWQiOiI4MTVhMGVmMS00YjZhLTQyMDUtYjExMi1lNDVmZDZmNGQzYWQiLCJuYmYiOjE1ODA3NDE2NjcsIml\nzcyI6Imh0dHA6XC9cLzEyNy4wLjAuMTo4MDgwIiwiZXhwIjoxNTgwNzQ1MjY3LCJpYXQiOjE1ODA3NDE2NjcsImp0aSI6ImJkYzVjZTk5LTE2ZTY\ntNDM4Yi1hNjllLTU3MTAzN2RhMTg3OCIsInZpZXdzIjpbXX0.L3fEEEhdCVr3qnmyRKBBUaIQ7dk1VjiFaEBW8hUNjfg\n\nConsumer-Key: ejznk505d132ryomnhbx1qmtohurbsbb0kijajsk\ncache-control: no-cache\n\nMaximum time to live of the token is specified over props value consents.max_time_to_live. In case isn't defined default value is 3600 seconds.\n\nExample of POST JSON:\n{\n  \"everything\": false,\n  \"views\": [\n    {\n      \"bank_id\": \"GENODEM1GLS\",\n      \"account_id\": \"8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\",\n      \"view_id\": \"owner\"\n    }\n  ],\n  \"entitlements\": [\n    {\n      \"bank_id\": \"GENODEM1GLS\",\n      \"role_name\": \"CanGetCustomer\"\n    }\n  ],\n  \"consumer_id\": \"7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\",\n  \"email\": \"eveline@example.com\",\n  \"valid_from\": \"2020-02-07T08:43:34Z\",\n  \"time_to_live\": 3600\n}\nPlease note that only optional fields are: consumer_id, valid_from and time_to_live. \nIn case you omit they the default values are used:\nconsumer_id = consumer of current user\nvalid_from = current time\ntime_to_live = consents.max_time_to_live\n\n      \n\nAuthentication is Mandatory\n\nExample 1: \n{\n  \"everything\": true,\n  \"views\": [],\n  \"entitlements\": [],\n  \"consumer_id\": \"7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\",\n  \"email\": \"eveline@example.com\"\n}\n\nPlease note that consumer_id is optional field\nExample 2:\n{\n  \"everything\": true,\n  \"views\": [],\n  \"entitlements\": [],\n  \"email\": \"eveline@example.com\"\n}\n\nPlease note if everything=false you need to explicitly specify views and entitlements\nExample 3:\n{\n  \"everything\": false,\n  \"views\": [\n    {\n      \"bank_id\": \"GENODEM1GLS\",\n      \"account_id\": \"8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\",\n      \"view_id\": \"owner\"\n    }\n  ],\n  \"entitlements\": [\n    {\n      \"bank_id\": \"GENODEM1GLS\",\n      \"role_name\": \"CanGetCustomer\"\n    }\n  ],\n  \"consumer_id\": \"7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\",\n  \"email\": \"eveline@example.com\"\n}\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[EMAIL](/glossary#): felixsmith@example.com\n\n\n\n\n\n**JSON request body fields:**\n\n\n\n[**account_id**](/glossary#): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**email**](/glossary#): felixsmith@example.com\n\n\n\n[**entitlements**](/glossary#entitlements): \n\n\n\n[**everything**](/glossary#everything): \n\n\n\n[**role_name**](/glossary#role_name): \n\n\n\n[**view_id**](/glossary#): owner\n\n\n\n[**views**](/glossary#views): \n\n\n\n[consumer_id](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[time_to_live](/glossary#time_to_live): \n\n\n\n[valid_from](/glossary#valid_from): 2020-01-27\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**consent_id**](/glossary#consent_id): \n\n\n\n[**jwt**](/glossary#jwt): \n\n\n\n[**status**](/glossary#status): \n\n\n",
      "example_request_body": {
        "everything": false,
        "views": [
          {
            "bank_id": "gh.29.uk",
            "account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0",
            "view_id": "owner"
          }
        ],
        "entitlements": [
          {
            "bank_id": "gh.29.uk",
            "role_name": "CanGetCustomer"
          }
        ],
        "consumer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "email": "felixsmith@example.com",
        "valid_from": "2023-04-13T04:30:08Z",
        "time_to_live": 3600
      },
      "success_response_body": {
        "consent_id": "9d429899-24f5-42c8-8565-943ffa6a7945",
        "jwt": "eyJhbGciOiJIUzI1NiJ9.eyJlbnRpdGxlbWVudHMiOltdLCJjcmVhdGVkQnlVc2VySWQiOiJhYjY1MzlhOS1iMTA1LTQ0ODktYTg4My0wYWQ4ZDZjNjE2NTciLCJzdWIiOiIyMWUxYzhjYy1mOTE4LTRlYWMtYjhlMy01ZTVlZWM2YjNiNGIiLCJhdWQiOiJlanpuazUwNWQxMzJyeW9tbmhieDFxbXRvaHVyYnNiYjBraWphanNrIiwibmJmIjoxNTUzNTU0ODk5LCJpc3MiOiJodHRwczpcL1wvd3d3Lm9wZW5iYW5rcHJvamVjdC5jb20iLCJleHAiOjE1NTM1NTg0OTksImlhdCI6MTU1MzU1NDg5OSwianRpIjoiMDlmODhkNWYtZWNlNi00Mzk4LThlOTktNjYxMWZhMWNkYmQ1Iiwidmlld3MiOlt7ImFjY291bnRfaWQiOiJtYXJrb19wcml2aXRlXzAxIiwiYmFua19pZCI6ImdoLjI5LnVrLngiLCJ2aWV3X2lkIjoib3duZXIifSx7ImFjY291bnRfaWQiOiJtYXJrb19wcml2aXRlXzAyIiwiYmFua19pZCI6ImdoLjI5LnVrLngiLCJ2aWV3X2lkIjoib3duZXIifV19.8cc7cBEf2NyQvJoukBCmDLT7LXYcuzTcSYLqSpbxLp4",
        "status": "INITIATED"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-10001: Incorrect json format.",
        "OBP-35009: Only SMS and EMAIL are supported as SCA methods. ",
        "OBP-35013: Consents can only contain Roles that you already have access to.",
        "OBP-35014: Consents can only contain Views that you already have access to.",
        "OBP-30019: Consumer not found. Please specify a valid value for CONSUMER_ID.",
        "OBP-20058: Consumer is disabled.",
        "OBP-50200: Connector cannot return the data we requested.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Consent", "Account Information Service (AIS)", "PSD2", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "entitlements": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "bank_id": {
                  "type": "string"
                },
                "role_name": {
                  "type": "string"
                }
              }
            }
          },
          "everything": {
            "type": "boolean"
          },
          "views": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "bank_id": {
                  "type": "string"
                },
                "view_id": {
                  "type": "string"
                },
                "account_id": {
                  "type": "string"
                }
              }
            }
          },
          "consumer_id": {
            "type": "string"
          },
          "time_to_live": {
            "type": "integer"
          },
          "valid_from": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "consent_id": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "jwt": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/my/consents/EMAIL",
      "connector_methods": [
        "obp.sendCustomerNotification",
        "obp.getBank",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv4.0.0-getAccountAttributeDefinition",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getAccountAttributeDefinition"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/attribute-definitions/account",
      "summary": "Get Account Attribute Definition",
      "description": "<p>Get Account Attribute Definition</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#alias\"><strong>alias</strong></a>:</p>\n<p><a href=\"/glossary#attribute_definition_id\"><strong>attribute_definition_id</strong></a>:</p>\n<p><a href=\"/glossary#attributes\"><strong>attributes</strong></a>: attribute value in form of (name, value)</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#can_be_seen_on_views\"><strong>can_be_seen_on_views</strong></a>: true</p>\n<p><a href=\"/glossary#category\"><strong>category</strong></a>:</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#is_active\"><strong>is_active</strong></a>: true</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n",
      "description_markdown": "Get Account Attribute Definition\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**alias**](/glossary#alias): \n\n\n\n[**attribute_definition_id**](/glossary#attribute_definition_id): \n\n\n\n[**attributes**](/glossary#attributes): attribute value in form of (name, value)\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**can_be_seen_on_views**](/glossary#can_be_seen_on_views): true\n\n\n\n[**category**](/glossary#category): \n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**is_active**](/glossary#is_active): true\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**type**](/glossary#type): \n\n\n",
      "success_response_body": {
        "attributes": [
          {
            "attribute_definition_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
            "bank_id": "gh.29.uk",
            "name": "SPECIAL_TAX_NUMBER",
            "category": "Account",
            "type": "STRING",
            "description": "description",
            "alias": "STRING",
            "can_be_seen_on_views": ["bank"],
            "is_active": true
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["Account", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "attributes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "can_be_seen_on_views": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "attribute_definition_id": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "is_active": {
                  "type": "boolean"
                },
                "bank_id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "category": {
                  "type": "string"
                },
                "alias": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetAccountAttributeDefinitionAtOneBank",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/attribute-definitions/account",
      "connector_methods": ["obp.getAttributeDefinition"]
    },
    {
      "operation_id": "OBPv4.0.0-createCustomerMessage",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "createCustomerMessage"
      },
      "request_verb": "POST",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/customers/CUSTOMER_ID/messages",
      "summary": "Create Customer Message",
      "description": "<p>Create a message for the customer specified by CUSTOMER_ID<br />\nAuthentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#Customer.customer_id\">CUSTOMER_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#from_department\"><strong>from_department</strong></a>: Open Bank</p>\n<p><a href=\"/glossary#from_person\"><strong>from_person</strong></a>: Tom</p>\n<p><a href=\"/glossary#message\"><strong>message</strong></a>: 123456</p>\n<p><a href=\"/glossary#transport\"><strong>transport</strong></a>: SMS</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#success\"><strong>success</strong></a>:</p>\n",
      "description_markdown": "Create a message for the customer specified by CUSTOMER_ID \nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[CUSTOMER_ID](/glossary#Customer.customer_id): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n\n\n**JSON request body fields:**\n\n\n\n[**from_department**](/glossary#from_department): Open Bank\n\n\n\n[**from_person**](/glossary#from_person): Tom\n\n\n\n[**message**](/glossary#message): 123456\n\n\n\n[**transport**](/glossary#transport): SMS\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**success**](/glossary#success): \n\n\n",
      "example_request_body": {
        "message": "123456",
        "transport": "SMS",
        "from_department": "Open Bank",
        "from_person": "Tom"
      },
      "success_response_body": {
        "success": "Success"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["Customer-Message", "Customer", "Person"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "transport": {
            "type": "string"
          },
          "from_person": {
            "type": "string"
          },
          "from_department": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "success": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateCustomerMessage",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/customers/CUSTOMER_ID/messages",
      "connector_methods": ["obp.createCustomerMessage", "obp.getCustomerByCustomerId"]
    },
    {
      "operation_id": "OBPv2.2.0-getCurrentFxRate",
      "implemented_by": {
        "version": "OBPv2.2.0",
        "function": "getCurrentFxRate"
      },
      "request_verb": "GET",
      "request_url": "/obp/v2.2.0/banks/BANK_ID/fx/FROM_CURRENCY_CODE/TO_CURRENCY_CODE",
      "summary": "Get Current FxRate",
      "description": "<p>Get the latest FX rate specified by BANK_ID, FROM_CURRENCY_CODE and TO_CURRENCY_CODE</p>\n<p>OBP may try different sources of FX rate information depending on the Connector in operation.</p>\n<p>For example we want to convert EUR =&gt; USD:</p>\n<p>OBP will:<br />\n1st try - Connector (database, core banking system or external FX service)<br />\n2nd try part 1 - fallbackexchangerates/eur.json<br />\n2nd try part 2 - fallbackexchangerates/usd.json (the inverse rate is used)<br />\n3rd try - Hardcoded map of FX rates.</p>\n<p><img src=\"https://user-images.githubusercontent.com/485218/60005085-1eded600-966e-11e9-96fb-798b102d9ad0.png\" alt=\"FX Flow\" /></p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#from_currency_code\">FROM_CURRENCY_CODE</a>:</p>\n<p><a href=\"/glossary#to_currency_code\">TO_CURRENCY_CODE</a>: EUR</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#conversion_value\"><strong>conversion_value</strong></a>: 100</p>\n<p><a href=\"/glossary#effective_date\"><strong>effective_date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#from_currency_code\"><strong>from_currency_code</strong></a>:</p>\n<p><a href=\"/glossary#inverse_conversion_value\"><strong>inverse_conversion_value</strong></a>: 50</p>\n<p><a href=\"/glossary#to_currency_code\"><strong>to_currency_code</strong></a>: EUR</p>\n",
      "description_markdown": "Get the latest FX rate specified by BANK_ID, FROM_CURRENCY_CODE and TO_CURRENCY_CODE\n\nOBP may try different sources of FX rate information depending on the Connector in operation.\n\nFor example we want to convert EUR => USD:\n\nOBP will:\n1st try - Connector (database, core banking system or external FX service)\n2nd try part 1 - fallbackexchangerates/eur.json\n2nd try part 2 - fallbackexchangerates/usd.json (the inverse rate is used)\n3rd try - Hardcoded map of FX rates.\n\n![FX Flow](https://user-images.githubusercontent.com/485218/60005085-1eded600-966e-11e9-96fb-798b102d9ad0.png)\n\n      \n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[FROM_CURRENCY_CODE](/glossary#from_currency_code): \n\n\n\n[TO_CURRENCY_CODE](/glossary#to_currency_code): EUR\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**conversion_value**](/glossary#conversion_value): 100\n\n\n\n[**effective_date**](/glossary#effective_date): 2020-01-27\n\n\n\n[**from_currency_code**](/glossary#from_currency_code): \n\n\n\n[**inverse_conversion_value**](/glossary#inverse_conversion_value): 50\n\n\n\n[**to_currency_code**](/glossary#to_currency_code): EUR\n\n\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "bank_id": "gh.29.uk",
        "from_currency_code": "EUR",
        "to_currency_code": "GBP",
        "conversion_value": 1.001,
        "inverse_conversion_value": 0.998,
        "effective_date": "1100-01-01T00:00:00Z"
      },
      "error_response_bodies": [
        "OBP-10003: Invalid Currency Value. It should be three letters ISO Currency Code. ",
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-10004: ISO Currency code combination not supported for FX. Please modify the FROM_CURRENCY_CODE or TO_CURRENCY_CODE. ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["FX", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "effective_date": {
            "type": "string",
            "format": "date-time"
          },
          "to_currency_code": {
            "type": "string"
          },
          "from_currency_code": {
            "type": "string"
          },
          "bank_id": {
            "type": "string"
          },
          "inverse_conversion_value": {
            "type": "number"
          },
          "conversion_value": {
            "type": "number"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/fx/FROM_CURRENCY_CODE/TO_CURRENCY_CODE",
      "connector_methods": ["obp.getBank", "obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv3.1.0-revokeConsent",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "revokeConsent"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/my/consents/CONSENT_ID/revoke",
      "summary": "Revoke Consent",
      "description": "<p>Revoke Consent for current user specified by CONSENT_ID</p>\n<p>There are a few reasons you might need to revoke an application’s access to a user’s account:<br />\n- The user explicitly wishes to revoke the application’s access<br />\n- You as the service provider have determined an application is compromised or malicious, and want to disable it<br />\n- etc.</p>\n<p>Please note that this endpoint only supports the case:: &quot;The user explicitly wishes to revoke the application’s access&quot;</p>\n<p>OBP as a resource server stores access tokens in a database, then it is relatively easy to revoke some token that belongs to a particular user.<br />\nThe status of the token is changed to &quot;REVOKED&quot; so the next time the revoked client makes a request, their token will fail to validate.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#consent_id\">CONSENT_ID</a>:</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#consent_id\"><strong>consent_id</strong></a>:</p>\n<p><a href=\"/glossary#jwt\"><strong>jwt</strong></a>:</p>\n<p><a href=\"/glossary#status\"><strong>status</strong></a>:</p>\n",
      "description_markdown": "Revoke Consent for current user specified by CONSENT_ID\n\nThere are a few reasons you might need to revoke an application’s access to a user’s account:\n  - The user explicitly wishes to revoke the application’s access\n  - You as the service provider have determined an application is compromised or malicious, and want to disable it\n  - etc.\n\nPlease note that this endpoint only supports the case:: \"The user explicitly wishes to revoke the application’s access\"\n\nOBP as a resource server stores access tokens in a database, then it is relatively easy to revoke some token that belongs to a particular user.\nThe status of the token is changed to \"REVOKED\" so the next time the revoked client makes a request, their token will fail to validate.\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[CONSENT_ID](/glossary#consent_id): \n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**consent_id**](/glossary#consent_id): \n\n\n\n[**jwt**](/glossary#jwt): \n\n\n\n[**status**](/glossary#status): \n\n\n",
      "success_response_body": {
        "consent_id": "9d429899-24f5-42c8-8565-943ffa6a7945",
        "jwt": "eyJhbGciOiJIUzI1NiJ9.eyJlbnRpdGxlbWVudHMiOltdLCJjcmVhdGVkQnlVc2VySWQiOiJhYjY1MzlhOS1iMTA1LTQ0ODktYTg4My0wYWQ4ZDZjNjE2NTciLCJzdWIiOiIyMWUxYzhjYy1mOTE4LTRlYWMtYjhlMy01ZTVlZWM2YjNiNGIiLCJhdWQiOiJlanpuazUwNWQxMzJyeW9tbmhieDFxbXRvaHVyYnNiYjBraWphanNrIiwibmJmIjoxNTUzNTU0ODk5LCJpc3MiOiJodHRwczpcL1wvd3d3Lm9wZW5iYW5rcHJvamVjdC5jb20iLCJleHAiOjE1NTM1NTg0OTksImlhdCI6MTU1MzU1NDg5OSwianRpIjoiMDlmODhkNWYtZWNlNi00Mzk4LThlOTktNjYxMWZhMWNkYmQ1Iiwidmlld3MiOlt7ImFjY291bnRfaWQiOiJtYXJrb19wcml2aXRlXzAxIiwiYmFua19pZCI6ImdoLjI5LnVrLngiLCJ2aWV3X2lkIjoib3duZXIifSx7ImFjY291bnRfaWQiOiJtYXJrb19wcml2aXRlXzAyIiwiYmFua19pZCI6ImdoLjI5LnVrLngiLCJ2aWV3X2lkIjoib3duZXIifV19.8cc7cBEf2NyQvJoukBCmDLT7LXYcuzTcSYLqSpbxLp4",
        "status": "REJECTED"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Consent", "Account Information Service (AIS)", "PSD2", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "consent_id": {
            "type": "string"
          },
          "jwt": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/my/consents/CONSENT_ID/revoke",
      "connector_methods": ["obp.getBank", "obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv4.0.0-getBankAccountBalances",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getBankAccountBalances"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/balances",
      "summary": "Get Account Balances",
      "description": "<p>Get the Balances for one Account of the current User at one bank.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>account_id</strong></a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#account_routings\"><strong>account_routings</strong></a>:</p>\n<p><a href=\"/glossary#address\"><strong>address</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p>\n<p><a href=\"/glossary#\"><strong>balances</strong></a>: balances</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#\"><strong>label</strong></a>: My Account</p>\n<p><a href=\"/glossary#scheme\"><strong>scheme</strong></a>: scheme value</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n",
      "description_markdown": "Get the Balances for one Account of the current User at one bank.\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**account_id**](/glossary#): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[**account_routings**](/glossary#account_routings): \n\n\n\n[**address**](/glossary#address): \n\n\n\n[**amount**](/glossary#): 10.12\n\n\n\n[**balances**](/glossary#): balances\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**label**](/glossary#): My Account\n\n\n\n[**scheme**](/glossary#scheme): scheme value\n\n\n\n[**type**](/glossary#type): \n\n\n",
      "success_response_body": {
        "account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0",
        "bank_id": "gh.29.uk",
        "account_routings": [
          {
            "scheme": "accountNumber",
            "address": "123456"
          }
        ],
        "label": "My Account",
        "balances": [
          {
            "type": "",
            "currency": "EUR",
            "amount": "10"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30065: Cannot find account access.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Account", "Account Information Service (AIS)", "PSD2", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "bank_id": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "balances": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string"
                },
                "amount": {
                  "type": "string"
                },
                "currency": {
                  "type": "string"
                }
              }
            }
          },
          "account_routings": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "scheme": {
                  "type": "string"
                },
                "address": {
                  "type": "string"
                }
              }
            }
          },
          "account_id": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/balances",
      "connector_methods": ["obp.getBankAccountBalances"]
    },
    {
      "operation_id": "OBPv3.1.0-createConsentSms",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "createConsentSms"
      },
      "request_verb": "POST",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/my/consents/SMS",
      "summary": "Create Consent (SMS)",
      "description": "<p>This endpoint starts the process of creating a Consent.</p>\n<p>The Consent is created in an INITIATED state.</p>\n<p>A One Time Password (OTP) (AKA security challenge) is sent Out of Band (OOB) to the User via the transport defined in SCA_METHOD<br />\nSCA_METHOD is typically &quot;SMS&quot; or &quot;EMAIL&quot;. &quot;EMAIL&quot; is used for testing purposes.</p>\n<p>When the Consent is created, OBP (or a backend system) stores the challenge so it can be checked later against the value supplied by the User with the Answer Consent Challenge endpoint.</p>\n<p>An OBP Consent allows the holder of the Consent to call one or more endpoints.</p>\n<p>Consents must be created and authorisied using SCA (Strong Customer Authentication).</p>\n<p>That is, Consents can be created by an authorised User via the OBP REST API but they must be confirmed via an out of band (OOB) mechanism such as a code sent to a mobile phone.</p>\n<p>Each Consent has one of the following states: INITIATED, ACCEPTED, REJECTED, REVOKED, RECEIVED, VALID, REVOKEDBYPSU, EXPIRED, TERMINATEDBYTPP, AUTHORISED, AWAITINGAUTHORISATION.</p>\n<p>Each Consent is bound to a consumer i.e. you need to identify yourself over request header value Consumer-Key.<br />\nFor example:<br />\nGET /obp/v4.0.0/users/current HTTP/1.1<br />\nHost: 127.0.0.1:8080<br />\nConsent-JWT: eyJhbGciOiJIUzI1NiJ9.eyJlbnRpdGxlbWVudHMiOlt7InJvbGVfbmFtZSI6IkNhbkdldEFueVVzZXIiLCJiYW5rX2lkIjoiIn<br />\n1dLCJjcmVhdGVkQnlVc2VySWQiOiJhYjY1MzlhOS1iMTA1LTQ0ODktYTg4My0wYWQ4ZDZjNjE2NTciLCJzdWIiOiIzNDc1MDEzZi03YmY5LTQyNj<br />\nEtOWUxYy0xZTdlNWZjZTJlN2UiLCJhdWQiOiI4MTVhMGVmMS00YjZhLTQyMDUtYjExMi1lNDVmZDZmNGQzYWQiLCJuYmYiOjE1ODA3NDE2NjcsIml<br />\nzcyI6Imh0dHA6XC9cLzEyNy4wLjAuMTo4MDgwIiwiZXhwIjoxNTgwNzQ1MjY3LCJpYXQiOjE1ODA3NDE2NjcsImp0aSI6ImJkYzVjZTk5LTE2ZTY<br />\ntNDM4Yi1hNjllLTU3MTAzN2RhMTg3OCIsInZpZXdzIjpbXX0.L3fEEEhdCVr3qnmyRKBBUaIQ7dk1VjiFaEBW8hUNjfg</p>\n<p>Consumer-Key: ejznk505d132ryomnhbx1qmtohurbsbb0kijajsk<br />\ncache-control: no-cache</p>\n<p>Maximum time to live of the token is specified over props value consents.max_time_to_live. In case isn't defined default value is 3600 seconds.</p>\n<p>Example of POST JSON:<br />\n{<br />\n&quot;everything&quot;: false,<br />\n&quot;views&quot;: [<br />\n{<br />\n&quot;bank_id&quot;: &quot;GENODEM1GLS&quot;,<br />\n&quot;account_id&quot;: &quot;8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0&quot;,<br />\n&quot;view_id&quot;: &quot;owner&quot;<br />\n}<br />\n],<br />\n&quot;entitlements&quot;: [<br />\n{<br />\n&quot;bank_id&quot;: &quot;GENODEM1GLS&quot;,<br />\n&quot;role_name&quot;: &quot;CanGetCustomer&quot;<br />\n}<br />\n],<br />\n&quot;consumer_id&quot;: &quot;7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh&quot;,<br />\n&quot;email&quot;: &quot;<a href=\"ma&#x69;&#x6c;&#x74;&#111;&#x3a;e&#x76;e&#x6c;i&#110;&#x65;&#x40;e&#x78;&#97;&#109;&#112;&#108;&#101;&#x2e;&#x63;o&#109;\">&#x65;&#118;&#x65;&#108;&#105;&#110;&#x65;@e&#120;amp&#108;&#101;&#x2e;&#x63;&#111;m</a>&quot;,<br />\n&quot;valid_from&quot;: &quot;2020-02-07T08:43:34Z&quot;,<br />\n&quot;time_to_live&quot;: 3600<br />\n}<br />\nPlease note that only optional fields are: consumer_id, valid_from and time_to_live.<br />\nIn case you omit they the default values are used:<br />\nconsumer_id = consumer of current user<br />\nvalid_from = current time<br />\ntime_to_live = consents.max_time_to_live</p>\n<p>Authentication is Mandatory</p>\n<p>Example 1:<br />\n{<br />\n&quot;everything&quot;: true,<br />\n&quot;views&quot;: [],<br />\n&quot;entitlements&quot;: [],<br />\n&quot;consumer_id&quot;: &quot;7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh&quot;,<br />\n&quot;email&quot;: &quot;<a href=\"&#x6d;&#97;&#105;&#x6c;&#116;&#x6f;&#x3a;&#x65;v&#101;l&#x69;&#x6e;e@&#101;x&#97;&#109;p&#108;&#x65;&#46;&#99;om\">&#x65;&#118;&#x65;&#108;&#x69;n&#x65;@&#x65;x&#x61;&#109;&#112;l&#101;&#46;c&#111;&#x6d;</a>&quot;<br />\n}</p>\n<p>Please note that consumer_id is optional field<br />\nExample 2:<br />\n{<br />\n&quot;everything&quot;: true,<br />\n&quot;views&quot;: [],<br />\n&quot;entitlements&quot;: [],<br />\n&quot;email&quot;: &quot;<a href=\"&#109;&#97;&#x69;&#108;&#x74;o&#x3a;&#x65;&#118;e&#x6c;i&#x6e;&#x65;&#x40;&#x65;&#120;&#97;m&#112;&#108;&#101;.&#x63;&#x6f;&#109;\">e&#x76;&#x65;li&#x6e;&#101;&#x40;&#101;&#x78;&#x61;&#x6d;&#x70;&#x6c;&#x65;&#x2e;&#99;&#111;&#109;</a>&quot;<br />\n}</p>\n<p>Please note if everything=false you need to explicitly specify views and entitlements<br />\nExample 3:<br />\n{<br />\n&quot;everything&quot;: false,<br />\n&quot;views&quot;: [<br />\n{<br />\n&quot;bank_id&quot;: &quot;GENODEM1GLS&quot;,<br />\n&quot;account_id&quot;: &quot;8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0&quot;,<br />\n&quot;view_id&quot;: &quot;owner&quot;<br />\n}<br />\n],<br />\n&quot;entitlements&quot;: [<br />\n{<br />\n&quot;bank_id&quot;: &quot;GENODEM1GLS&quot;,<br />\n&quot;role_name&quot;: &quot;CanGetCustomer&quot;<br />\n}<br />\n],<br />\n&quot;consumer_id&quot;: &quot;7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh&quot;,<br />\n&quot;email&quot;: &quot;<a href=\"&#x6d;&#97;&#x69;&#x6c;t&#x6f;&#x3a;e&#x76;&#101;l&#105;&#x6e;&#x65;&#x40;&#x65;&#x78;&#97;&#x6d;&#112;&#108;&#x65;&#x2e;c&#111;&#109;\">e&#x76;&#101;&#x6c;&#x69;&#110;&#x65;&#x40;&#101;&#120;a&#109;p&#108;&#x65;&#x2e;co&#x6d;</a>&quot;<br />\n}</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#sms\">SMS</a>:</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>account_id</strong></a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#entitlements\"><strong>entitlements</strong></a>:</p>\n<p><a href=\"/glossary#everything\"><strong>everything</strong></a>:</p>\n<p><a href=\"/glossary#phone_number\"><strong>phone_number</strong></a>:</p>\n<p><a href=\"/glossary#role_name\"><strong>role_name</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>view_id</strong></a>: owner</p>\n<p><a href=\"/glossary#views\"><strong>views</strong></a>:</p>\n<p><a href=\"/glossary#\">consumer_id</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#time_to_live\">time_to_live</a>:</p>\n<p><a href=\"/glossary#valid_from\">valid_from</a>: 2020-01-27</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#consent_id\"><strong>consent_id</strong></a>:</p>\n<p><a href=\"/glossary#jwt\"><strong>jwt</strong></a>:</p>\n<p><a href=\"/glossary#status\"><strong>status</strong></a>:</p>\n",
      "description_markdown": "This endpoint starts the process of creating a Consent.\n\nThe Consent is created in an INITIATED state.\n\nA One Time Password (OTP) (AKA security challenge) is sent Out of Band (OOB) to the User via the transport defined in SCA_METHOD\nSCA_METHOD is typically \"SMS\" or \"EMAIL\". \"EMAIL\" is used for testing purposes.\n\nWhen the Consent is created, OBP (or a backend system) stores the challenge so it can be checked later against the value supplied by the User with the Answer Consent Challenge endpoint.\n\n\n\nAn OBP Consent allows the holder of the Consent to call one or more endpoints.\n\nConsents must be created and authorisied using SCA (Strong Customer Authentication).\n\nThat is, Consents can be created by an authorised User via the OBP REST API but they must be confirmed via an out of band (OOB) mechanism such as a code sent to a mobile phone.\n\nEach Consent has one of the following states: INITIATED, ACCEPTED, REJECTED, REVOKED, RECEIVED, VALID, REVOKEDBYPSU, EXPIRED, TERMINATEDBYTPP, AUTHORISED, AWAITINGAUTHORISATION.\n\nEach Consent is bound to a consumer i.e. you need to identify yourself over request header value Consumer-Key. \nFor example:\nGET /obp/v4.0.0/users/current HTTP/1.1\nHost: 127.0.0.1:8080\nConsent-JWT: eyJhbGciOiJIUzI1NiJ9.eyJlbnRpdGxlbWVudHMiOlt7InJvbGVfbmFtZSI6IkNhbkdldEFueVVzZXIiLCJiYW5rX2lkIjoiIn\n1dLCJjcmVhdGVkQnlVc2VySWQiOiJhYjY1MzlhOS1iMTA1LTQ0ODktYTg4My0wYWQ4ZDZjNjE2NTciLCJzdWIiOiIzNDc1MDEzZi03YmY5LTQyNj\nEtOWUxYy0xZTdlNWZjZTJlN2UiLCJhdWQiOiI4MTVhMGVmMS00YjZhLTQyMDUtYjExMi1lNDVmZDZmNGQzYWQiLCJuYmYiOjE1ODA3NDE2NjcsIml\nzcyI6Imh0dHA6XC9cLzEyNy4wLjAuMTo4MDgwIiwiZXhwIjoxNTgwNzQ1MjY3LCJpYXQiOjE1ODA3NDE2NjcsImp0aSI6ImJkYzVjZTk5LTE2ZTY\ntNDM4Yi1hNjllLTU3MTAzN2RhMTg3OCIsInZpZXdzIjpbXX0.L3fEEEhdCVr3qnmyRKBBUaIQ7dk1VjiFaEBW8hUNjfg\n\nConsumer-Key: ejznk505d132ryomnhbx1qmtohurbsbb0kijajsk\ncache-control: no-cache\n\nMaximum time to live of the token is specified over props value consents.max_time_to_live. In case isn't defined default value is 3600 seconds.\n\nExample of POST JSON:\n{\n  \"everything\": false,\n  \"views\": [\n    {\n      \"bank_id\": \"GENODEM1GLS\",\n      \"account_id\": \"8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\",\n      \"view_id\": \"owner\"\n    }\n  ],\n  \"entitlements\": [\n    {\n      \"bank_id\": \"GENODEM1GLS\",\n      \"role_name\": \"CanGetCustomer\"\n    }\n  ],\n  \"consumer_id\": \"7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\",\n  \"email\": \"eveline@example.com\",\n  \"valid_from\": \"2020-02-07T08:43:34Z\",\n  \"time_to_live\": 3600\n}\nPlease note that only optional fields are: consumer_id, valid_from and time_to_live. \nIn case you omit they the default values are used:\nconsumer_id = consumer of current user\nvalid_from = current time\ntime_to_live = consents.max_time_to_live\n\n      \n\nAuthentication is Mandatory\n\nExample 1: \n{\n  \"everything\": true,\n  \"views\": [],\n  \"entitlements\": [],\n  \"consumer_id\": \"7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\",\n  \"email\": \"eveline@example.com\"\n}\n\nPlease note that consumer_id is optional field\nExample 2:\n{\n  \"everything\": true,\n  \"views\": [],\n  \"entitlements\": [],\n  \"email\": \"eveline@example.com\"\n}\n\nPlease note if everything=false you need to explicitly specify views and entitlements\nExample 3:\n{\n  \"everything\": false,\n  \"views\": [\n    {\n      \"bank_id\": \"GENODEM1GLS\",\n      \"account_id\": \"8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\",\n      \"view_id\": \"owner\"\n    }\n  ],\n  \"entitlements\": [\n    {\n      \"bank_id\": \"GENODEM1GLS\",\n      \"role_name\": \"CanGetCustomer\"\n    }\n  ],\n  \"consumer_id\": \"7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\",\n  \"email\": \"eveline@example.com\"\n}\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[SMS](/glossary#sms): \n\n\n\n\n\n**JSON request body fields:**\n\n\n\n[**account_id**](/glossary#): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**entitlements**](/glossary#entitlements): \n\n\n\n[**everything**](/glossary#everything): \n\n\n\n[**phone_number**](/glossary#phone_number): \n\n\n\n[**role_name**](/glossary#role_name): \n\n\n\n[**view_id**](/glossary#): owner\n\n\n\n[**views**](/glossary#views): \n\n\n\n[consumer_id](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[time_to_live](/glossary#time_to_live): \n\n\n\n[valid_from](/glossary#valid_from): 2020-01-27\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**consent_id**](/glossary#consent_id): \n\n\n\n[**jwt**](/glossary#jwt): \n\n\n\n[**status**](/glossary#status): \n\n\n",
      "example_request_body": {
        "everything": false,
        "views": [
          {
            "bank_id": "gh.29.uk",
            "account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0",
            "view_id": "owner"
          }
        ],
        "entitlements": [
          {
            "bank_id": "gh.29.uk",
            "role_name": "CanGetCustomer"
          }
        ],
        "consumer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "phone_number": "+44 07972 444 876",
        "valid_from": "2023-04-13T04:30:08Z",
        "time_to_live": 3600
      },
      "success_response_body": {
        "consent_id": "9d429899-24f5-42c8-8565-943ffa6a7945",
        "jwt": "eyJhbGciOiJIUzI1NiJ9.eyJlbnRpdGxlbWVudHMiOltdLCJjcmVhdGVkQnlVc2VySWQiOiJhYjY1MzlhOS1iMTA1LTQ0ODktYTg4My0wYWQ4ZDZjNjE2NTciLCJzdWIiOiIyMWUxYzhjYy1mOTE4LTRlYWMtYjhlMy01ZTVlZWM2YjNiNGIiLCJhdWQiOiJlanpuazUwNWQxMzJyeW9tbmhieDFxbXRvaHVyYnNiYjBraWphanNrIiwibmJmIjoxNTUzNTU0ODk5LCJpc3MiOiJodHRwczpcL1wvd3d3Lm9wZW5iYW5rcHJvamVjdC5jb20iLCJleHAiOjE1NTM1NTg0OTksImlhdCI6MTU1MzU1NDg5OSwianRpIjoiMDlmODhkNWYtZWNlNi00Mzk4LThlOTktNjYxMWZhMWNkYmQ1Iiwidmlld3MiOlt7ImFjY291bnRfaWQiOiJtYXJrb19wcml2aXRlXzAxIiwiYmFua19pZCI6ImdoLjI5LnVrLngiLCJ2aWV3X2lkIjoib3duZXIifSx7ImFjY291bnRfaWQiOiJtYXJrb19wcml2aXRlXzAyIiwiYmFua19pZCI6ImdoLjI5LnVrLngiLCJ2aWV3X2lkIjoib3duZXIifV19.8cc7cBEf2NyQvJoukBCmDLT7LXYcuzTcSYLqSpbxLp4",
        "status": "INITIATED"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-10001: Incorrect json format.",
        "OBP-35009: Only SMS and EMAIL are supported as SCA methods. ",
        "OBP-35013: Consents can only contain Roles that you already have access to.",
        "OBP-35014: Consents can only contain Views that you already have access to.",
        "OBP-30019: Consumer not found. Please specify a valid value for CONSUMER_ID.",
        "OBP-20058: Consumer is disabled.",
        "OBP-00010: Missing props value at this API instance - ",
        "OBP-35010: SMS server is not working or SMS server can not send the message to the phone number:",
        "OBP-50200: Connector cannot return the data we requested.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Consent", "Account Information Service (AIS)", "PSD2", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "entitlements": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "bank_id": {
                  "type": "string"
                },
                "role_name": {
                  "type": "string"
                }
              }
            }
          },
          "valid_from": {
            "type": "string",
            "format": "date-time"
          },
          "phone_number": {
            "type": "string"
          },
          "everything": {
            "type": "boolean"
          },
          "views": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "bank_id": {
                  "type": "string"
                },
                "view_id": {
                  "type": "string"
                },
                "account_id": {
                  "type": "string"
                }
              }
            }
          },
          "consumer_id": {
            "type": "string"
          },
          "time_to_live": {
            "type": "integer"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "consent_id": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "jwt": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/my/consents/SMS",
      "connector_methods": [
        "obp.sendCustomerNotification",
        "obp.getBank",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv3.0.0-corePrivateAccountsAllBanks",
      "implemented_by": {
        "version": "OBPv3.0.0",
        "function": "corePrivateAccountsAllBanks"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.0.0/my/accounts",
      "summary": "Get Accounts at all Banks (private)",
      "description": "<p>Returns the list of accounts containing private views for the user.<br />\nEach account lists the views available to the user.</p>\n<p>optional request parameters:</p>\n<ul>\n<li>account_type_filter: one or many accountType value, split by comma</li>\n<li>account_type_filter_operation: the filter type of account_type_filter, value must be INCLUDE or EXCLUDE</li>\n</ul>\n<p>whole url example:<br />\n/my/accounts?account_type_filter=330,CURRENT+PLUS&amp;account_type_filter_operation=INCLUDE</p>\n<p>Authentication is Mandatory</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#account_routings\"><strong>account_routings</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>account_type</strong></a>: AC</p>\n<p><a href=\"/glossary#accounts\"><strong>accounts</strong></a>:</p>\n<p><a href=\"/glossary#address\"><strong>address</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#is_public\"><strong>is_public</strong></a>: true</p>\n<p><a href=\"/glossary#\"><strong>label</strong></a>: My Account</p>\n<p><a href=\"/glossary#scheme\"><strong>scheme</strong></a>: scheme value</p>\n<p><a href=\"/glossary#short_name\"><strong>short_name</strong></a>:</p>\n<p><a href=\"/glossary#views\"><strong>views</strong></a>:</p>\n",
      "description_markdown": "Returns the list of accounts containing private views for the user.\nEach account lists the views available to the user.\n\n\noptional request parameters:\n\n* account_type_filter: one or many accountType value, split by comma\n* account_type_filter_operation: the filter type of account_type_filter, value must be INCLUDE or EXCLUDE\n\nwhole url example:\n/my/accounts?account_type_filter=330,CURRENT+PLUS&account_type_filter_operation=INCLUDE\n    \n\nAuthentication is Mandatory\n\n\n**JSON response body fields:**\n\n\n\n[**account_routings**](/glossary#account_routings): \n\n\n\n[**account_type**](/glossary#): AC\n\n\n\n[**accounts**](/glossary#accounts): \n\n\n\n[**address**](/glossary#address): \n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**is_public**](/glossary#is_public): true\n\n\n\n[**label**](/glossary#): My Account\n\n\n\n[**scheme**](/glossary#scheme): scheme value\n\n\n\n[**short_name**](/glossary#short_name): \n\n\n\n[**views**](/glossary#views): \n\n\n",
      "success_response_body": {
        "accounts": [
          {
            "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
            "label": "String",
            "bank_id": "gh.29.uk",
            "account_type": "330",
            "account_routings": [
              {
                "scheme": "AccountNumber",
                "address": "4930396"
              }
            ],
            "views": [
              {
                "id": "owner",
                "short_name": "Owner",
                "description": "This view is for the owner for the account.",
                "is_public": false
              }
            ]
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Account", "Account Information Service (AIS)", "PrivateData", "PSD2", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "accounts": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "views": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "short_name": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "is_public": {
                        "type": "boolean"
                      },
                      "id": {
                        "type": "string"
                      }
                    }
                  }
                },
                "account_type": {
                  "type": "string"
                },
                "bank_id": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "label": {
                  "type": "string"
                },
                "account_routings": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "scheme": {
                        "type": "string"
                      },
                      "address": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/my/accounts",
      "connector_methods": ["obp.getCoreBankAccounts", "obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv3.1.0-deleteBranch",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "deleteBranch"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/branches/BRANCH_ID",
      "summary": "Delete Branch",
      "description": "<p>Delete Branch from given Bank.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#\">BRANCH_ID</a>: DERBY6</p>\n<p><strong>JSON response body fields:</strong></p>\n",
      "description_markdown": "Delete Branch from given Bank.\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[BRANCH_ID](/glossary#): DERBY6\n\n\n\n\n\n**JSON response body fields:**\n\n\n",
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30218: Insufficient authorisation to Create Branch. You do not have the role CanCreateBranch.",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["Branch", "New-Style"],
      "roles": [
        {
          "role": "CanDeleteBranch",
          "requires_bank_id": true
        },
        {
          "role": "CanDeleteBranchAtAnyBank",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/branches/BRANCH_ID",
      "connector_methods": ["obp.getBranch", "obp.getBank", "obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv1.4.0-createCustomerMessage",
      "implemented_by": {
        "version": "OBPv1.4.0",
        "function": "createCustomerMessage"
      },
      "request_verb": "POST",
      "request_url": "/obp/v1.4.0/banks/BANK_ID/customer/CUSTOMER_ID/messages",
      "summary": "Create Customer Message",
      "description": "<p>Create a message for the customer specified by CUSTOMER_ID</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#Customer.customer_id\">CUSTOMER_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#from_department\"><strong>from_department</strong></a>: Open Bank</p>\n<p><a href=\"/glossary#from_person\"><strong>from_person</strong></a>: Tom</p>\n<p><a href=\"/glossary#message\"><strong>message</strong></a>: 123456</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#success\"><strong>success</strong></a>:</p>\n",
      "description_markdown": "Create a message for the customer specified by CUSTOMER_ID\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[CUSTOMER_ID](/glossary#Customer.customer_id): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n\n\n**JSON request body fields:**\n\n\n\n[**from_department**](/glossary#from_department): Open Bank\n\n\n\n[**from_person**](/glossary#from_person): Tom\n\n\n\n[**message**](/glossary#message): 123456\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**success**](/glossary#success): \n\n\n",
      "example_request_body": {
        "message": "String",
        "from_department": "String",
        "from_person": "String"
      },
      "success_response_body": {
        "success": "Success"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Customer-Message", "Customer", "Person"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "from_department": {
            "type": "string"
          },
          "from_person": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "success": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/customer/CUSTOMER_ID/messages",
      "connector_methods": [
        "obp.createMessage",
        "obp.getCustomerByCustomerId",
        "obp.getBank",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv3.1.0-getCardForBank",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "getCardForBank"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.1.0/management/banks/BANK_ID/cards/CARD_ID",
      "summary": "Get Card By Id",
      "description": "<p>This will the datails of the card.<br />\nIt shows the account infomation which linked the the card.<br />\nAlso shows the card attributes of the card.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#\">CARD_ID</a>: 36f8a9e6-c2b1-407a-8bd0-421b7119307e</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#Account\"><strong>account</strong></a>:</p>\n<p><a href=\"/glossary#allows\"><strong>allows</strong></a>: [credit,debit,cash_withdrawal]</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#cancelled\"><strong>cancelled</strong></a>: true</p>\n<p><a href=\"/glossary#card_attributes\"><strong>card_attributes</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>card_id</strong></a>: 36f8a9e6-c2b1-407a-8bd0-421b7119307e</p>\n<p><a href=\"/glossary#\"><strong>card_number</strong></a>: 364435172576215</p>\n<p><a href=\"/glossary#\"><strong>card_type</strong></a>: Credit</p>\n<p><a href=\"/glossary#collected\"><strong>collected</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#enabled\"><strong>enabled</strong></a>: true</p>\n<p><a href=\"/glossary#\"><strong>expires_date</strong></a>: 2021-01-27</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#\"><strong>issue_number</strong></a>: 1</p>\n<p><a href=\"/glossary#\"><strong>label</strong></a>: My Account</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#\"><strong>name_on_card</strong></a>: SusanSmith</p>\n<p><a href=\"/glossary#networks\"><strong>networks</strong></a>:</p>\n<p><a href=\"/glossary#on_hot_list\"><strong>on_hot_list</strong></a>: false</p>\n<p><a href=\"/glossary#pin_reset\"><strong>pin_reset</strong></a>:</p>\n<p><a href=\"/glossary#posted\"><strong>posted</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#reason_requested\"><strong>reason_requested</strong></a>:</p>\n<p><a href=\"/glossary#replacement\"><strong>replacement</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>requested_date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#\"><strong>serial_number</strong></a>: 1324234</p>\n<p><a href=\"/glossary#technology\"><strong>technology</strong></a>: technology1</p>\n<p><a href=\"/glossary#\"><strong>valid_from_date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n<p><a href=\"/glossary#views_available\"><strong>views_available</strong></a>:</p>\n",
      "description_markdown": "This will the datails of the card.\nIt shows the account infomation which linked the the card.\nAlso shows the card attributes of the card. \n\n       \n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[CARD_ID](/glossary#): 36f8a9e6-c2b1-407a-8bd0-421b7119307e \n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**account**](/glossary#Account): \n\n\n\n[**allows**](/glossary#allows): [credit,debit,cash_withdrawal]\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**cancelled**](/glossary#cancelled): true\n\n\n\n[**card_attributes**](/glossary#card_attributes): \n\n\n\n[**card_id**](/glossary#): 36f8a9e6-c2b1-407a-8bd0-421b7119307e \n\n\n\n[**card_number**](/glossary#): 364435172576215\n\n\n\n[**card_type**](/glossary#): Credit\n\n\n\n[**collected**](/glossary#collected): 2020-01-27\n\n\n\n[**customer_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**enabled**](/glossary#enabled): true\n\n\n\n[**expires_date**](/glossary#): 2021-01-27\n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**issue_number**](/glossary#): 1\n\n\n\n[**label**](/glossary#): My Account\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**name_on_card**](/glossary#): SusanSmith\n\n\n\n[**networks**](/glossary#networks): \n\n\n\n[**on_hot_list**](/glossary#on_hot_list): false\n\n\n\n[**pin_reset**](/glossary#pin_reset): \n\n\n\n[**posted**](/glossary#posted): 2020-01-27\n\n\n\n[**reason_requested**](/glossary#reason_requested): \n\n\n\n[**replacement**](/glossary#replacement): \n\n\n\n[**requested_date**](/glossary#): 2020-01-27\n\n\n\n[**serial_number**](/glossary#): 1324234\n\n\n\n[**technology**](/glossary#technology): technology1\n\n\n\n[**valid_from_date**](/glossary#): 2020-01-27\n\n\n\n[**value**](/glossary#): 5987953\n\n\n\n[**views_available**](/glossary#views_available): \n\n\n",
      "success_response_body": {
        "card_id": "36f8a9e6-c2b1-407a-8bd0-421b7119307e ",
        "bank_id": "gh.29.uk",
        "card_number": "364435172576215",
        "card_type": "Credit",
        "name_on_card": "SusanSmith",
        "issue_number": "1",
        "serial_number": "1324234",
        "valid_from_date": "1100-01-01T00:00:00Z",
        "expires_date": "1100-01-01T00:00:00Z",
        "enabled": true,
        "cancelled": true,
        "on_hot_list": true,
        "technology": "technologyString1",
        "networks": ["networks1"],
        "allows": ["credit", "debit"],
        "account": {
          "id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0",
          "label": "My Account",
          "views_available": [
            {
              "id": "owner",
              "name": "Owner",
              "description": "This view is for the owner for the account."
            }
          ],
          "bank_id": "gh.29.uk"
        },
        "replacement": {
          "requested_date": "1100-01-01T00:00:00Z",
          "reason_requested": "RENEW"
        },
        "pin_reset": [
          {
            "requested_date": "1100-01-01T00:00:00Z",
            "reason_requested": "FORGOT"
          }
        ],
        "collected": "1100-01-01T00:00:00Z",
        "posted": "1100-01-01T00:00:00Z",
        "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "card_attributes": [
          {
            "name": "OVERDRAFT_START_DATE",
            "card_id": "36f8a9e6-c2b1-407a-8bd0-421b7119307e ",
            "attribute_type": "STRING",
            "bank_id": {
              "value": "gh.29.uk"
            },
            "value": "2012-04-23",
            "card_attribute_id": "b4e0352a-9a0f-4bfa-b30b-9003aa467f50"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["Card", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "card_number": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "pin_reset": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "reason_requested": {
                  "type": "string"
                },
                "requested_date": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          "allows": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "collected": {
            "type": "string",
            "format": "date-time"
          },
          "on_hot_list": {
            "type": "boolean"
          },
          "card_type": {
            "type": "string"
          },
          "replacement": {
            "type": "object",
            "properties": {
              "reason_requested": {
                "type": "string"
              },
              "requested_date": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          "card_attributes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string"
                },
                "attribute_type": {
                  "type": "string",
                  "enum": ["STRING", "INTEGER", "DOUBLE", "DATE_WITH_DAY"]
                },
                "bank_id": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "card_id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "card_attribute_id": {
                  "type": "string"
                }
              }
            }
          },
          "name_on_card": {
            "type": "string"
          },
          "expires_date": {
            "type": "string",
            "format": "date-time"
          },
          "technology": {
            "type": "string"
          },
          "posted": {
            "type": "string",
            "format": "date-time"
          },
          "customer_id": {
            "type": "string"
          },
          "bank_id": {
            "type": "string"
          },
          "account": {
            "type": "object",
            "properties": {
              "views_available": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                }
              },
              "bank_id": {
                "type": "string"
              },
              "label": {
                "type": "string"
              },
              "id": {
                "type": "string"
              }
            }
          },
          "card_id": {
            "type": "string"
          },
          "issue_number": {
            "type": "string"
          },
          "serial_number": {
            "type": "string"
          },
          "cancelled": {
            "type": "boolean"
          },
          "valid_from_date": {
            "type": "string",
            "format": "date-time"
          },
          "networks": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetCardsForBank",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/banks/BANK_ID/cards/CARD_ID",
      "connector_methods": [
        "obp.getCardAttributesFromProvider",
        "obp.getPhysicalCardForBank",
        "obp.getBank",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv4.0.0-createSettlementAccount",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "createSettlementAccount"
      },
      "request_verb": "POST",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/settlement-accounts",
      "summary": "Create Settlement Account",
      "description": "<p>Create a new settlement account at a bank.</p>\n<p>The created settlement account id will be the concatenation of the payment system and the account currency.<br />\nFor examples: SEPA_SETTLEMENT_ACCOUNT_EUR, CARD_SETTLEMENT_ACCOUNT_USD</p>\n<p>By default, when you create a new bank, two settlements accounts are created automatically: OBP_DEFAULT_INCOMING_ACCOUNT_ID and OBP_DEFAULT_OUTGOING_ACCOUNT_ID<br />\nThose two accounts have EUR as default currency.</p>\n<p>If you want to create default settlement account for a specific currency, you can fill the <code>payment_system</code> field with the <code>DEFAULT</code> value.</p>\n<p>When a transaction is saved in OBP through the mapped connector, OBP-API look for the account to save the double-entry transaction.<br />\nIf no OBP account can be found from the counterparty, the double-entry transaction will be saved on a bank settlement account.<br />\n- First, the mapped connector looks for a settlement account specific to the payment system and currency. E.g SEPA_SETTLEMENT_ACCOUNT_EUR.<br />\n- If we don't find any specific settlement account with the payment system, we look for a default settlement account for the counterparty currency. E.g DEFAULT_SETTLEMENT_ACCOUNT_EUR.<br />\n- Else, we select one of the two OBP default settlement accounts (OBP_DEFAULT_INCOMING_ACCOUNT_ID/OBP_DEFAULT_OUTGOING_ACCOUNT_ID) according to the transaction direction.</p>\n<p>If the POST body USER_ID <em>is</em> specified, the logged in user must have the Role CanCreateAccount. Once created, the Account will be owned by the User specified by USER_ID.</p>\n<p>If the POST body USER_ID is <em>not</em> specified, the account will be owned by the logged in User.</p>\n<p>Note: The Amount MUST be zero.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#account_routings\"><strong>account_routings</strong></a>:</p>\n<p><a href=\"/glossary#address\"><strong>address</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p>\n<p><a href=\"/glossary#balance\"><strong>balance</strong></a>: 10</p>\n<p><a href=\"/glossary#\"><strong>branch_id</strong></a>: DERBY6</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#\"><strong>label</strong></a>: My Account</p>\n<p><a href=\"/glossary#\"><strong>payment_system</strong></a>: SEPA</p>\n<p><a href=\"/glossary#scheme\"><strong>scheme</strong></a>: scheme value</p>\n<p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#account_attribute_id\"><strong>account_attribute_id</strong></a>:</p>\n<p><a href=\"/glossary#account_attributes\"><strong>account_attributes</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>account_id</strong></a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#account_routings\"><strong>account_routings</strong></a>:</p>\n<p><a href=\"/glossary#address\"><strong>address</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p>\n<p><a href=\"/glossary#balance\"><strong>balance</strong></a>: 10</p>\n<p><a href=\"/glossary#\"><strong>branch_id</strong></a>: DERBY6</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#\"><strong>label</strong></a>: My Account</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#\"><strong>payment_system</strong></a>: SEPA</p>\n<p><a href=\"/glossary#product_code\"><strong>product_code</strong></a>: 1234BW</p>\n<p><a href=\"/glossary#scheme\"><strong>scheme</strong></a>: scheme value</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n<p><a href=\"/glossary#\">product_instance_code</a>: product_instance_code</p>\n",
      "description_markdown": "Create a new settlement account at a bank.\n\nThe created settlement account id will be the concatenation of the payment system and the account currency.\nFor examples: SEPA_SETTLEMENT_ACCOUNT_EUR, CARD_SETTLEMENT_ACCOUNT_USD\n\nBy default, when you create a new bank, two settlements accounts are created automatically: OBP_DEFAULT_INCOMING_ACCOUNT_ID and OBP_DEFAULT_OUTGOING_ACCOUNT_ID\nThose two accounts have EUR as default currency.\n\nIf you want to create default settlement account for a specific currency, you can fill the `payment_system` field with the `DEFAULT` value.\n\nWhen a transaction is saved in OBP through the mapped connector, OBP-API look for the account to save the double-entry transaction.\nIf no OBP account can be found from the counterparty, the double-entry transaction will be saved on a bank settlement account.\n- First, the mapped connector looks for a settlement account specific to the payment system and currency. E.g SEPA_SETTLEMENT_ACCOUNT_EUR.\n- If we don't find any specific settlement account with the payment system, we look for a default settlement account for the counterparty currency. E.g DEFAULT_SETTLEMENT_ACCOUNT_EUR.\n- Else, we select one of the two OBP default settlement accounts (OBP_DEFAULT_INCOMING_ACCOUNT_ID/OBP_DEFAULT_OUTGOING_ACCOUNT_ID) according to the transaction direction.\n\nIf the POST body USER_ID *is* specified, the logged in user must have the Role CanCreateAccount. Once created, the Account will be owned by the User specified by USER_ID.\n\nIf the POST body USER_ID is *not* specified, the account will be owned by the logged in User.\n\nNote: The Amount MUST be zero.\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON request body fields:**\n\n\n\n[**account_routings**](/glossary#account_routings): \n\n\n\n[**address**](/glossary#address): \n\n\n\n[**amount**](/glossary#): 10.12\n\n\n\n[**balance**](/glossary#balance): 10\n\n\n\n[**branch_id**](/glossary#): DERBY6\n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**label**](/glossary#): My Account\n\n\n\n[**payment_system**](/glossary#): SEPA\n\n\n\n[**scheme**](/glossary#scheme): scheme value\n\n\n\n[**user_id**](/glossary#): 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**account_attribute_id**](/glossary#account_attribute_id): \n\n\n\n[**account_attributes**](/glossary#account_attributes): \n\n\n\n[**account_id**](/glossary#): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[**account_routings**](/glossary#account_routings): \n\n\n\n[**address**](/glossary#address): \n\n\n\n[**amount**](/glossary#): 10.12\n\n\n\n[**balance**](/glossary#balance): 10\n\n\n\n[**branch_id**](/glossary#): DERBY6\n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**label**](/glossary#): My Account\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**payment_system**](/glossary#): SEPA\n\n\n\n[**product_code**](/glossary#product_code): 1234BW\n\n\n\n[**scheme**](/glossary#scheme): scheme value\n\n\n\n[**type**](/glossary#type): \n\n\n\n[**user_id**](/glossary#): 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\n\n\n\n[**value**](/glossary#): 5987953\n\n\n\n[product_instance_code](/glossary#): product_instance_code\n\n\n",
      "example_request_body": {
        "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
        "payment_system": "SEPA",
        "balance": {
          "currency": "EUR",
          "amount": "0"
        },
        "label": "My Account",
        "branch_id": "DERBY6",
        "account_routings": [
          {
            "scheme": "AccountNumber",
            "address": "4930396"
          }
        ]
      },
      "success_response_body": {
        "account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0",
        "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
        "payment_system": "SEPA",
        "balance": {
          "currency": "EUR",
          "amount": "0"
        },
        "label": "My Account",
        "branch_id": "DERBY6",
        "account_routings": [
          {
            "scheme": "AccountNumber",
            "address": "4930396"
          }
        ],
        "account_attributes": [
          {
            "product_code": "1234BW",
            "account_attribute_id": "613c83ea-80f9-4560-8404-b9cd4ec42a7f",
            "name": "OVERDRAFT_START_DATE",
            "type": "DATE_WITH_DAY",
            "value": "2012-04-23",
            "product_instance_code": "LKJL98769F"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-10001: Incorrect json format.",
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30112: Invalid Number. Initial balance must be a number, e.g 1000.00",
        "OBP-30109: Initial Balance of Account must be Zero (0).",
        "OBP-10003: Invalid Currency Value. It should be three letters ISO Currency Code. ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Bank", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "payment_system": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "balance": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string"
              },
              "amount": {
                "type": "string"
              }
            }
          },
          "account_routings": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "scheme": {
                  "type": "string"
                },
                "address": {
                  "type": "string"
                }
              }
            }
          },
          "branch_id": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "payment_system": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "balance": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string"
              },
              "amount": {
                "type": "string"
              }
            }
          },
          "account_attributes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string"
                },
                "product_code": {
                  "type": "string"
                },
                "account_attribute_id": {
                  "type": "string"
                },
                "product_instance_code": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              }
            }
          },
          "account_routings": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "scheme": {
                  "type": "string"
                },
                "address": {
                  "type": "string"
                }
              }
            }
          },
          "branch_id": {
            "type": "string"
          },
          "account_id": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateSettlementAccountAtOneBank",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/settlement-accounts",
      "connector_methods": [
        "obp.getBankAccountsForUser",
        "obp.createAccountAttributes",
        "obp.getProductAttributesByBankAndCode",
        "obp.createBankAccount",
        "obp.getBank"
      ]
    },
    {
      "operation_id": "OBPv1.2.1-deleteCounterpartyOpenCorporatesUrl",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "deleteCounterpartyOpenCorporatesUrl"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/metadata/open_corporates_url",
      "summary": "Delete Counterparty Open Corporates URL",
      "description": "<p>Delete open corporate url of other bank account</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#other_account_id\">OTHER_ACCOUNT_ID</a>:</p>\n<p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p>\n<p><strong>JSON response body fields:</strong></p>\n",
      "description_markdown": "Delete open corporate url of other bank account\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[OTHER_ACCOUNT_ID](/glossary#other_account_id): \n\n\n\n[VIEW_ID](/glossary#this_view_id): owner\n\n\n\n\n\n**JSON response body fields:**\n\n\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "jsonString": "{}"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "the view does not allow metadata access",
        "the view does not allow deleting an open corporate url",
        "URL cannot be deleted",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Counterparty-Metadata", "Counterparty", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/metadata/open_corporates_url",
      "connector_methods": [
        "obp.checkBankAccountExists",
        "obp.getBank",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv4.0.0-getProductAttribute",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getProductAttribute"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/products/PRODUCT_CODE/attributes/PRODUCT_ATTRIBUTE_ID",
      "summary": "Get Product Attribute",
      "description": "<p>Get Product Attribute</p>\n<p>Product Attributes are used to describe a financial Product with a list of typed key value pairs.</p>\n<p>Each Product Attribute is linked to its Product by PRODUCT_CODE</p>\n<p>Get one product attribute by its id.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#product_attribute_id\">PRODUCT_ATTRIBUTE_ID</a>:</p>\n<p><a href=\"/glossary#product_code\">PRODUCT_CODE</a>: 1234BW</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#product_attribute_id\"><strong>product_attribute_id</strong></a>:</p>\n<p><a href=\"/glossary#product_code\"><strong>product_code</strong></a>: 1234BW</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n<p><a href=\"/glossary#is_active\">is_active</a>: true</p>\n",
      "description_markdown": "Get Product Attribute\n\n\nProduct Attributes are used to describe a financial Product with a list of typed key value pairs.\n\nEach Product Attribute is linked to its Product by PRODUCT_CODE\n\n\n       \n\nGet one product attribute by its id.\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[PRODUCT_ATTRIBUTE_ID](/glossary#product_attribute_id): \n\n\n\n[PRODUCT_CODE](/glossary#product_code): 1234BW\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**product_attribute_id**](/glossary#product_attribute_id): \n\n\n\n[**product_code**](/glossary#product_code): 1234BW\n\n\n\n[**type**](/glossary#type): \n\n\n\n[**value**](/glossary#): 5987953\n\n\n\n[is_active](/glossary#is_active): true\n\n\n",
      "success_response_body": {
        "bank_id": "gh.29.uk",
        "product_code": "1234BW",
        "product_attribute_id": "613c83ea-80f9-4560-8404-b9cd4ec42a7f",
        "name": "OVERDRAFT_START_DATE",
        "type": "DATE_WITH_DAY",
        "value": "2012-04-23",
        "is_active": true
      },
      "error_response_bodies": [
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error.",
        "OBP-20001: User not logged in. Authentication is required!"
      ],
      "tags": ["Product", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "product_code": {
            "type": "string"
          },
          "product_attribute_id": {
            "type": "string"
          },
          "bank_id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "is_active": {
            "type": "boolean"
          }
        }
      },
      "roles": [
        {
          "role": "CanUpdateProductAttribute",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/products/PRODUCT_CODE/attributes/PRODUCT_ATTRIBUTE_ID",
      "connector_methods": [
        "obp.getProductAttributeById",
        "obp.getBank",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv4.0.0-getDynamicMessageDoc",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getDynamicMessageDoc"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/management/dynamic-message-docs/DYNAMIC_MESSAGE_DOC_ID",
      "summary": "Get Dynamic Message Doc",
      "description": "<p>Get a Dynamic Message Doc by DYNAMIC_MESSAGE_DOC_ID.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#\">DYNAMIC_MESSAGE_DOC_ID</a>:</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#process\"><strong>process</strong></a>: obp.getBank</p>\n",
      "description_markdown": "Get a Dynamic Message Doc by DYNAMIC_MESSAGE_DOC_ID.\n\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[DYNAMIC_MESSAGE_DOC_ID](/glossary#): \n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**process**](/glossary#process): obp.getBank\n\n\n",
      "success_response_body": {
        "outbound_avro_schema": "",
        "inbound_avro_schema": "",
        "adapter_implementation": "",
        "dynamic_message_doc_id": "",
        "description": "This an optional field. Maximum length is 2000. It can be any characters here.",
        "process": "obp.getBank",
        "outbound_topic": "",
        "method_body": "%20%20%20%20%20%20Future.successful%28%0A%20%20%20%20%20%20%20%20Full%28%28BankCommons%28%0A%20%20%20%20%20%20%20%20%20%20BankId%28%22Hello%20bank%20id%22%29%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%228%22%0A%20%20%20%20%20%20%20%20%29%2C%20None%29%29%0A%20%20%20%20%20%20%29",
        "message_format": "",
        "example_outbound_message": {},
        "inbound_topic": "",
        "example_inbound_message": {},
        "bank_id": "gh.29.uk",
        "programming_lang": "Scala"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Dynamic-Message-Doc", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "example_outbound_message": {
            "type": "object",
            "properties": {}
          },
          "outbound_topic": {
            "type": "string"
          },
          "example_inbound_message": {
            "type": "object",
            "properties": {}
          },
          "bank_id": {
            "type": "string"
          },
          "inbound_topic": {
            "type": "string"
          },
          "programming_lang": {
            "type": "string"
          },
          "dynamic_message_doc_id": {
            "type": "string"
          },
          "process": {
            "type": "string"
          },
          "outbound_avro_schema": {
            "type": "string"
          },
          "method_body": {
            "type": "string"
          },
          "message_format": {
            "type": "string"
          },
          "adapter_implementation": {
            "type": "string"
          },
          "inbound_avro_schema": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanGetDynamicMessageDoc",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/dynamic-message-docs/DYNAMIC_MESSAGE_DOC_ID",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv4.0.0-updateAtmSupportedCurrencies",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "updateAtmSupportedCurrencies"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/atms/ATM_ID/supported-currencies",
      "summary": "Update ATM Supported Currencies",
      "description": "<p>Update ATM Supported Currencies.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#atm_id\">ATM_ID</a>: atme0352a-9a0f-4bfa-b30b-9003aa467f51</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#atm_id\"><strong>atm_id</strong></a>: atme0352a-9a0f-4bfa-b30b-9003aa467f51</p>\n<p><a href=\"/glossary#supported_currencies\"><strong>supported_currencies</strong></a>: [&quot;EUR&quot;,&quot;MXN&quot;,&quot;USD&quot;]</p>\n",
      "description_markdown": "Update ATM Supported Currencies.\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ATM_ID](/glossary#atm_id): atme0352a-9a0f-4bfa-b30b-9003aa467f51\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**atm_id**](/glossary#atm_id): atme0352a-9a0f-4bfa-b30b-9003aa467f51\n\n\n\n[**supported_currencies**](/glossary#supported_currencies): [\"EUR\",\"MXN\",\"USD\"]\n\n\n",
      "example_request_body": {
        "supported_currencies": ["EUR", "MXN", "USD"]
      },
      "success_response_body": {
        "atm_id": "atme0352a-9a0f-4bfa-b30b-9003aa467f51",
        "supported_currencies": ["EUR", "MXN", "USD"]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["ATM", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "supported_currencies": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "atm_id": {
            "type": "string"
          },
          "supported_currencies": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/atms/ATM_ID/supported-currencies",
      "connector_methods": ["obp.updateAtmSupportedCurrencies", "obp.getAtm"]
    },
    {
      "operation_id": "OBPv4.0.0-ibanChecker",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "ibanChecker"
      },
      "request_verb": "POST",
      "request_url": "/obp/v4.0.0/account/check/scheme/iban",
      "summary": "Validate and check IBAN number",
      "description": "<p>Validate and check IBAN number for errors</p>\n<p>Authentication is Optional</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#address\"><strong>address</strong></a>:</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#address\"><strong>address</strong></a>:</p>\n<p><a href=\"/glossary#attributes\"><strong>attributes</strong></a>: attribute value in form of (name, value)</p>\n<p><a href=\"/glossary#Bank\"><strong>bank</strong></a>:</p>\n<p><a href=\"/glossary#bank_routings\"><strong>bank_routings</strong></a>: bank routing in form of (scheme, address)</p>\n<p><a href=\"/glossary#Branch\"><strong>branch</strong></a>: branch</p>\n<p><a href=\"/glossary#city\"><strong>city</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>country</strong></a>: country</p>\n<p><a href=\"/glossary#\"><strong>is_valid</strong></a>: is_valid</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#phone\"><strong>phone</strong></a>:</p>\n<p><a href=\"/glossary#postcode\"><strong>postcode</strong></a>:</p>\n<p><a href=\"/glossary#scheme\"><strong>scheme</strong></a>: scheme value</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n<p><a href=\"/glossary#details\">details</a>:</p>\n",
      "description_markdown": "Validate and check IBAN number for errors\n\n\n\nAuthentication is Optional\n\n\n**JSON request body fields:**\n\n\n\n[**address**](/glossary#address): \n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**address**](/glossary#address): \n\n\n\n[**attributes**](/glossary#attributes): attribute value in form of (name, value)\n\n\n\n[**bank**](/glossary#Bank): \n\n\n\n[**bank_routings**](/glossary#bank_routings): bank routing in form of (scheme, address)\n\n\n\n[**branch**](/glossary#Branch): branch\n\n\n\n[**city**](/glossary#city): \n\n\n\n[**country**](/glossary#): country\n\n\n\n[**is_valid**](/glossary#): is_valid\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**phone**](/glossary#phone): \n\n\n\n[**postcode**](/glossary#postcode): \n\n\n\n[**scheme**](/glossary#scheme): scheme value\n\n\n\n[**value**](/glossary#): 5987953\n\n\n\n[details](/glossary#details): \n\n\n",
      "example_request_body": {
        "address": "DE75512108001245126199"
      },
      "success_response_body": {
        "is_valid": true,
        "details": {
          "bank_routings": [
            {
              "scheme": "BIC",
              "address": "SOGEDEFF"
            }
          ],
          "bank": "Societe Generale",
          "branch": "",
          "address": "Neue mainzer strasse 46-50",
          "city": "Frankfurt am Main",
          "postcode": "60311",
          "phone": "",
          "country": "Germany",
          "attributes": [
            {
              "name": "country_iso",
              "value": ""
            },
            {
              "name": "sepa_credit_transfer",
              "value": "YES"
            },
            {
              "name": "sepa_direct_debit",
              "value": "YES"
            },
            {
              "name": "sepa_sdd_core",
              "value": "YES"
            },
            {
              "name": "sepa_b2b",
              "value": "YES"
            },
            {
              "name": "sepa_card_clearing",
              "value": "YES"
            }
          ]
        }
      },
      "error_response_bodies": ["OBP-50000: Unknown Error."],
      "tags": ["Account", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "is_valid": {
            "type": "boolean"
          },
          "details": {
            "type": "object",
            "properties": {
              "postcode": {
                "type": "string"
              },
              "branch": {
                "type": "string"
              },
              "attributes": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              "address": {
                "type": "string"
              },
              "bank_routings": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "scheme": {
                      "type": "string"
                    },
                    "address": {
                      "type": "string"
                    }
                  }
                }
              },
              "city": {
                "type": "string"
              },
              "country": {
                "type": "string"
              },
              "bank": {
                "type": "string"
              },
              "phone": {
                "type": "string"
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/account/check/scheme/iban",
      "connector_methods": ["obp.validateAndCheckIbanNumber"]
    },
    {
      "operation_id": "OBPv4.0.0-getCounterpartyByNameForAnyAccount",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getCounterpartyByNameForAnyAccount"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/management/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/counterparty-names/COUNTERPARTY_NAME",
      "summary": "Get Counterparty by name for any account (Explicit) ",
      "description": "<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#\">COUNTERPARTY_NAME</a>: John Smith Ltd.</p>\n<p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#bespoke\"><strong>bespoke</strong></a>:</p>\n<p><a href=\"/glossary#corporate_location\"><strong>corporate_location</strong></a>: 10</p>\n<p><a href=\"/glossary#\"><strong>counterparty_id</strong></a>: 9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#created_by_user_id\"><strong>created_by_user_id</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#image_url\"><strong>image_url</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>is_beneficiary</strong></a>: true</p>\n<p><a href=\"/glossary#\"><strong>key</strong></a>: CustomerNumber</p>\n<p><a href=\"/glossary#latitude\"><strong>latitude</strong></a>: 38.8951</p>\n<p><a href=\"/glossary#longitude\"><strong>longitude</strong></a>: -77.0364</p>\n<p><a href=\"/glossary#metadata\"><strong>metadata</strong></a>:</p>\n<p><a href=\"/glossary#more_info\"><strong>more_info</strong></a>: More information about this fee</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#open_corporates_url\"><strong>open_corporates_url</strong></a>:</p>\n<p><a href=\"/glossary#other_account_routing_address\"><strong>other_account_routing_address</strong></a>:</p>\n<p><a href=\"/glossary#other_account_routing_scheme\"><strong>other_account_routing_scheme</strong></a>:</p>\n<p><a href=\"/glossary#other_account_secondary_routing_address\"><strong>other_account_secondary_routing_address</strong></a>:</p>\n<p><a href=\"/glossary#other_account_secondary_routing_scheme\"><strong>other_account_secondary_routing_scheme</strong></a>:</p>\n<p><a href=\"/glossary#other_bank_routing_address\"><strong>other_bank_routing_address</strong></a>:</p>\n<p><a href=\"/glossary#other_bank_routing_scheme\"><strong>other_bank_routing_scheme</strong></a>:</p>\n<p><a href=\"/glossary#other_branch_routing_address\"><strong>other_branch_routing_address</strong></a>:</p>\n<p><a href=\"/glossary#other_branch_routing_scheme\"><strong>other_branch_routing_scheme</strong></a>:</p>\n<p><a href=\"/glossary#physical_location\"><strong>physical_location</strong></a>:</p>\n<p><a href=\"/glossary#private_alias\"><strong>private_alias</strong></a>:</p>\n<p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p>\n<p><a href=\"/glossary#public_alias\"><strong>public_alias</strong></a>:</p>\n<p><a href=\"/glossary#this_account_id\"><strong>this_account_id</strong></a>:</p>\n<p><a href=\"/glossary#this_bank_id\"><strong>this_bank_id</strong></a>:</p>\n<p><a href=\"/glossary#this_view_id\"><strong>this_view_id</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>url</strong></a>: <a href=\"http://www.example.com/id-docs/123/image.png\">http://www.example.com/id-docs/123/image.png</a></p>\n<p><a href=\"/glossary#User\"><strong>user</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>username</strong></a>: felixsmith</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n",
      "description_markdown": "Authentication is Mandatory\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[COUNTERPARTY_NAME](/glossary#): John Smith Ltd.\n\n\n\n[VIEW_ID](/glossary#this_view_id): owner\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**bespoke**](/glossary#bespoke): \n\n\n\n[**corporate_location**](/glossary#corporate_location): 10\n\n\n\n[**counterparty_id**](/glossary#): 9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**created_by_user_id**](/glossary#created_by_user_id): \n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**date**](/glossary#): 2020-01-27\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**image_url**](/glossary#image_url): \n\n\n\n[**is_beneficiary**](/glossary#): true\n\n\n\n[**key**](/glossary#): CustomerNumber\n\n\n\n[**latitude**](/glossary#latitude): 38.8951\n\n\n\n[**longitude**](/glossary#longitude): -77.0364\n\n\n\n[**metadata**](/glossary#metadata): \n\n\n\n[**more_info**](/glossary#more_info): More information about this fee\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**open_corporates_url**](/glossary#open_corporates_url): \n\n\n\n[**other_account_routing_address**](/glossary#other_account_routing_address): \n\n\n\n[**other_account_routing_scheme**](/glossary#other_account_routing_scheme): \n\n\n\n[**other_account_secondary_routing_address**](/glossary#other_account_secondary_routing_address): \n\n\n\n[**other_account_secondary_routing_scheme**](/glossary#other_account_secondary_routing_scheme): \n\n\n\n[**other_bank_routing_address**](/glossary#other_bank_routing_address): \n\n\n\n[**other_bank_routing_scheme**](/glossary#other_bank_routing_scheme): \n\n\n\n[**other_branch_routing_address**](/glossary#other_branch_routing_address): \n\n\n\n[**other_branch_routing_scheme**](/glossary#other_branch_routing_scheme): \n\n\n\n[**physical_location**](/glossary#physical_location): \n\n\n\n[**private_alias**](/glossary#private_alias): \n\n\n\n[**provider**](/glossary#provider): ETHEREUM\n\n\n\n[**public_alias**](/glossary#public_alias): \n\n\n\n[**this_account_id**](/glossary#this_account_id): \n\n\n\n[**this_bank_id**](/glossary#this_bank_id): \n\n\n\n[**this_view_id**](/glossary#this_view_id): \n\n\n\n[**url**](/glossary#): http://www.example.com/id-docs/123/image.png\n\n\n\n[**user**](/glossary#User): \n\n\n\n[**username**](/glossary#): felixsmith\n\n\n\n[**value**](/glossary#): 5987953\n\n\n",
      "success_response_body": {
        "name": "CounterpartyName",
        "description": "My landlord",
        "currency": "EUR",
        "created_by_user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
        "this_bank_id": "gh.29.uk",
        "this_account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0",
        "this_view_id": "owner",
        "counterparty_id": "9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "other_bank_routing_scheme": "OBP",
        "other_bank_routing_address": "gh.29.uk",
        "other_branch_routing_scheme": "OBP",
        "other_branch_routing_address": "12f8a9e6-c2b1-407a-8bd0-421b7119307e",
        "other_account_routing_scheme": "OBP",
        "other_account_routing_address": "36f8a9e6-c2b1-407a-8bd0-421b7119307e",
        "other_account_secondary_routing_scheme": "IBAN",
        "other_account_secondary_routing_address": "DE89370400440532013000",
        "is_beneficiary": true,
        "bespoke": [
          {
            "key": "englishName",
            "value": "english Name"
          }
        ],
        "metadata": {
          "public_alias": "String",
          "more_info": "String",
          "url": "String",
          "image_url": "String",
          "open_corporates_url": "String",
          "corporate_location": {
            "latitude": 11.45,
            "longitude": 11.45,
            "date": "1100-01-01T00:00:00Z",
            "user": {
              "id": "123",
              "provider": "http://127.0.0.1:8080",
              "username": "felixsmith"
            }
          },
          "physical_location": {
            "latitude": 11.45,
            "longitude": 11.45,
            "date": "1100-01-01T00:00:00Z",
            "user": {
              "id": "123",
              "provider": "http://127.0.0.1:8080",
              "username": "felixsmith"
            }
          },
          "private_alias": "String"
        }
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30110: Invalid Account Id. The ACCOUNT_ID should only contain 0-9/a-z/A-Z/'-'/'.'/'_', the length should be smaller than 255.",
        "OBP-30111: Invalid Bank Id. The BANK_ID should only contain 0-9/a-z/A-Z/'-'/'.'/'_', the length should be smaller than 255.",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-10001: Incorrect json format.",
        "OBP-30005: View not found for Account. Please specify a valid value for VIEW_ID",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["Counterparty", "Account", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "bespoke": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string"
                },
                "key": {
                  "type": "string"
                }
              }
            }
          },
          "created_by_user_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "metadata": {
            "type": "object",
            "properties": {
              "private_alias": {
                "type": "string"
              },
              "physical_location": {
                "type": "object",
                "properties": {
                  "user": {
                    "type": "object",
                    "properties": {
                      "provider": {
                        "type": "string"
                      },
                      "id": {
                        "type": "string"
                      },
                      "username": {
                        "type": "string"
                      }
                    }
                  },
                  "date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "longitude": {
                    "type": "number"
                  },
                  "latitude": {
                    "type": "number"
                  }
                }
              },
              "url": {
                "type": "string"
              },
              "public_alias": {
                "type": "string"
              },
              "open_corporates_url": {
                "type": "string"
              },
              "more_info": {
                "type": "string"
              },
              "corporate_location": {
                "type": "object",
                "properties": {
                  "user": {
                    "type": "object",
                    "properties": {
                      "provider": {
                        "type": "string"
                      },
                      "id": {
                        "type": "string"
                      },
                      "username": {
                        "type": "string"
                      }
                    }
                  },
                  "date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "longitude": {
                    "type": "number"
                  },
                  "latitude": {
                    "type": "number"
                  }
                }
              },
              "image_url": {
                "type": "string"
              }
            }
          },
          "this_bank_id": {
            "type": "string"
          },
          "other_bank_routing_scheme": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "other_account_secondary_routing_address": {
            "type": "string"
          },
          "counterparty_id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "other_bank_routing_address": {
            "type": "string"
          },
          "other_account_routing_address": {
            "type": "string"
          },
          "other_branch_routing_scheme": {
            "type": "string"
          },
          "this_account_id": {
            "type": "string"
          },
          "other_account_secondary_routing_scheme": {
            "type": "string"
          },
          "is_beneficiary": {
            "type": "boolean"
          },
          "other_account_routing_scheme": {
            "type": "string"
          },
          "other_branch_routing_address": {
            "type": "string"
          },
          "this_view_id": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanGetCounterpartyAtAnyBank",
          "requires_bank_id": false
        },
        {
          "role": "CanGetCounterparty",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/counterparty-names/COUNTERPARTY_NAME",
      "connector_methods": ["obp.checkCounterpartyExists"]
    },
    {
      "operation_id": "OBPv4.0.0-getAllDynamicResourceDocs",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getAllDynamicResourceDocs"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/management/dynamic-resource-docs",
      "summary": "Get all Dynamic Resource Docs",
      "description": "<p>Get all Dynamic Resource Docs.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#roles\"><strong>roles</strong></a>: CanCreateMyUser</p>\n<p><a href=\"/glossary#summary\"><strong>summary</strong></a>:</p>\n<p><a href=\"/glossary#tags\"><strong>tags</strong></a>: Create-My-User</p>\n",
      "description_markdown": "Get all Dynamic Resource Docs.\n\n\n\nAuthentication is Mandatory\n\n\n**JSON response body fields:**\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**roles**](/glossary#roles): CanCreateMyUser\n\n\n\n[**summary**](/glossary#summary): \n\n\n\n[**tags**](/glossary#tags): Create-My-User\n\n\n",
      "success_response_body": {
        "dynamic-resource-docs": [
          {
            "error_response_bodies": "OBP-50000: Unknown Error.,OBP-20001: User not logged in. Authentication is required!,OBP-20006: User is missing one or more roles: ,OBP-10001: Incorrect json format.",
            "description": "Create one User",
            "tags": "Create-My-User",
            "dynamic_resource_doc_id": "vce035ca-9a0f-4bfa-b30b-9003aa467f51",
            "request_verb": "POST",
            "method_body": "%20%20%20%20val%20Some(resourceDoc)%20%3D%20callContext.resourceDocument%0A%20%20%20%20val%20hasRequestBody%20%3D%20request.body.isDefined%0A%0A%20%20%20%20%2F%2F%20get%20Path%20Parameters%2C%20example%3A%0A%20%20%20%20%2F%2F%20if%20the%20requestUrl%20of%20resourceDoc%20is%20%2Fhello%2Fbanks%2FBANK_ID%2Fworld%0A%20%20%20%20%2F%2F%20the%20request%20path%20is%20%2Fhello%2Fbanks%2Fbank_x%2Fworld%0A%20%20%20%20%2F%2FpathParams.get(%22BANK_ID%22)%20will%20get%20Option(%22bank_x%22)%20value%0A%0A%20%20%20%20val%20myUserId%20%3D%20pathParams(%22MY_USER_ID%22)%0A%0A%0A%20%20%20%20val%20requestEntity%20%3D%20request.json%20match%20%7B%0A%20%20%20%20%20%20case%20Full(zson)%20%3D%3E%0A%20%20%20%20%20%20%20%20try%20%7B%0A%20%20%20%20%20%20%20%20%20%20zson.extract%5BRequestRootJsonClass%5D%0A%20%20%20%20%20%20%20%20%7D%20catch%20%7B%0A%20%20%20%20%20%20%20%20%20%20case%20e%3A%20MappingException%20%3D%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20return%20Full(errorJsonResponse(s%22%24InvalidJsonFormat%20%24%7Be.msg%7D%22))%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20case%20_%3A%20EmptyBox%20%3D%3E%0A%20%20%20%20%20%20%20%20return%20Full(errorJsonResponse(s%22%24InvalidRequestPayload%20Current%20request%20has%20no%20payload%22))%0A%20%20%20%20%7D%0A%0A%0A%20%20%20%20%2F%2F%20please%20add%20business%20logic%20here%0A%20%20%20%20val%20responseBody%3AResponseRootJsonClass%20%3D%20ResponseRootJsonClass(s%22%24%7BmyUserId%7D_from_path%22%2C%20requestEntity.name%2C%20requestEntity.age%2C%20requestEntity.hobby)%0A%20%20%20%20Future.successful%20%7B%0A%20%20%20%20%20%20(responseBody%2C%20HttpCode.%60200%60(callContext.callContext))%0A%20%20%20%20%7D",
            "roles": "CanCreateMyUser",
            "example_request_body": {
              "name": "Jhon",
              "age": 12,
              "hobby": ["coding"],
              "_optional_fields_": ["hobby"]
            },
            "request_url": "/my_user/MY_USER_ID",
            "bank_id": "gh.29.uk",
            "partial_function_name": "createUser",
            "summary": "Create My User",
            "success_response_body": {
              "my_user_id": "some_id_value",
              "name": "Jhon",
              "age": 12,
              "hobby": ["coding"],
              "_optional_fields_": ["hobby"]
            }
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Dynamic-Resource-Doc", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "dynamic-resource-docs": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "tags": {
                  "type": "string"
                },
                "request_verb": {
                  "type": "string"
                },
                "example_request_body": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "age": {
                      "type": "integer"
                    },
                    "hobby": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "s": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "_optional_fields_": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "s": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "bank_id": {
                  "type": "string"
                },
                "partial_function_name": {
                  "type": "string"
                },
                "success_response_body": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "hobby": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "s": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "my_user_id": {
                      "type": "string"
                    },
                    "age": {
                      "type": "integer"
                    },
                    "_optional_fields_": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "s": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "roles": {
                  "type": "string"
                },
                "dynamic_resource_doc_id": {
                  "type": "string"
                },
                "summary": {
                  "type": "string"
                },
                "request_url": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "method_body": {
                  "type": "string"
                },
                "error_response_bodies": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetAllDynamicResourceDocs",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/dynamic-resource-docs",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv3.0.0-getEntitlementsForCurrentUser",
      "implemented_by": {
        "version": "OBPv3.0.0",
        "function": "getEntitlementsForCurrentUser"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.0.0/my/entitlements",
      "summary": "Get Entitlements for the current User",
      "description": "<p>Get Entitlements for the current User.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#entitlement_id\"><strong>entitlement_id</strong></a>:</p>\n<p><a href=\"/glossary#list\"><strong>list</strong></a>:</p>\n<p><a href=\"/glossary#role_name\"><strong>role_name</strong></a>:</p>\n",
      "description_markdown": "Get Entitlements for the current User.\n\n\nAuthentication is Mandatory\n\n\n**JSON response body fields:**\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**entitlement_id**](/glossary#entitlement_id): \n\n\n\n[**list**](/glossary#list): \n\n\n\n[**role_name**](/glossary#role_name): \n\n\n",
      "success_response_body": {
        "list": [
          {
            "entitlement_id": "6fb17583-1e49-4435-bb74-a14fe0996723",
            "role_name": "CanQueryOtherUser",
            "bank_id": "gh.29.uk"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-50200: Connector cannot return the data we requested.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Role", "Entitlement", "User", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "role_name": {
                  "type": "string"
                },
                "bank_id": {
                  "type": "string"
                },
                "entitlement_id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/my/entitlements",
      "connector_methods": ["obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv4.0.0-updateCustomerAttribute",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "updateCustomerAttribute"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/customers/CUSTOMER_ID/attributes/CUSTOMER_ATTRIBUTE_ID",
      "summary": "Update Customer Attribute",
      "description": "<p>Update Customer Attribute</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#\">CUSTOMER_ATTRIBUTE_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#Customer.customer_id\">CUSTOMER_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>customer_attribute_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n",
      "description_markdown": "Update Customer Attribute\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[CUSTOMER_ATTRIBUTE_ID](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[CUSTOMER_ID](/glossary#Customer.customer_id): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**customer_attribute_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**type**](/glossary#type): \n\n\n\n[**value**](/glossary#): 5987953\n\n\n",
      "example_request_body": {
        "name": "SPECIAL_TAX_NUMBER",
        "type": "STRING",
        "value": "123456789"
      },
      "success_response_body": {
        "customer_attribute_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "name": "SPECIAL_TAX_NUMBER",
        "type": "STRING",
        "value": "123456789"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["Customer", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "customer_attribute_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanUpdateCustomerAttributeAtOneBank",
          "requires_bank_id": true
        },
        {
          "role": "CanUpdateCustomerAttributeAtAnyBank",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/customers/CUSTOMER_ID/attributes/CUSTOMER_ATTRIBUTE_ID",
      "connector_methods": [
        "obp.createOrUpdateCustomerAttribute",
        "obp.getCustomerAttributeById",
        "obp.getCustomerByCustomerId"
      ]
    },
    {
      "operation_id": "OBPv1.2.1-addWhereTagForViewOnTransaction",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "addWhereTagForViewOnTransaction"
      },
      "request_verb": "POST",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transactions/TRANSACTION_ID/metadata/where",
      "summary": "Add a Transaction where Tag",
      "description": "<p>Creates a &quot;where&quot; Geo tag on a transaction TRANSACTION_ID in a <a href=\"#1_2_1-getViewsForBankAccount\">view</a>.</p>\n<p>Authentication is Mandatory</p>\n<p>The geo tag is linked with the user.</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#transaction_ids\">TRANSACTION_ID</a>: 2fg8a7e4-6d02-40e3-a129-0b2bf89de8ub</p>\n<p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#latitude\"><strong>latitude</strong></a>: 38.8951</p>\n<p><a href=\"/glossary#longitude\"><strong>longitude</strong></a>: -77.0364</p>\n<p><a href=\"/glossary#where\"><strong>where</strong></a>:</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#success\"><strong>success</strong></a>:</p>\n",
      "description_markdown": "Creates a \"where\" Geo tag on a transaction TRANSACTION_ID in a [view](#1_2_1-getViewsForBankAccount).\n\nAuthentication is Mandatory\n\nThe geo tag is linked with the user.\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[TRANSACTION_ID](/glossary#transaction_ids): 2fg8a7e4-6d02-40e3-a129-0b2bf89de8ub\n\n\n\n[VIEW_ID](/glossary#this_view_id): owner\n\n\n\n\n\n**JSON request body fields:**\n\n\n\n[**latitude**](/glossary#latitude): 38.8951\n\n\n\n[**longitude**](/glossary#longitude): -77.0364\n\n\n\n[**where**](/glossary#where): \n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**success**](/glossary#success): \n\n\n",
      "example_request_body": {
        "where": {
          "latitude": 1.532,
          "longitude": 1.535
        }
      },
      "success_response_body": {
        "success": "Success"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-10001: Incorrect json format.",
        "OBP-30005: View not found for Account. Please specify a valid value for VIEW_ID",
        "OBP-30022: The current view does not have the permission:",
        "Coordinates not possible",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Transaction-Metadata", "Transaction", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "where": {
            "type": "object",
            "properties": {
              "longitude": {
                "type": "number"
              },
              "latitude": {
                "type": "number"
              }
            }
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "success": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transactions/TRANSACTION_ID/metadata/where",
      "connector_methods": ["obp.checkBankAccountExists", "obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv2.1.0-getRoles",
      "implemented_by": {
        "version": "OBPv2.1.0",
        "function": "getRoles"
      },
      "request_verb": "GET",
      "request_url": "/obp/v2.1.0/roles",
      "summary": "Get Roles",
      "description": "<p>Returns all available roles</p>\n<p>Authentication is Mandatory</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#requires_bank_id\"><strong>requires_bank_id</strong></a>:</p>\n<p><a href=\"/glossary#role\"><strong>role</strong></a>:</p>\n<p><a href=\"/glossary#roles\"><strong>roles</strong></a>: CanCreateMyUser</p>\n",
      "description_markdown": "Returns all available roles\n\nAuthentication is Mandatory\n\n\n**JSON response body fields:**\n\n\n\n[**requires_bank_id**](/glossary#requires_bank_id): \n\n\n\n[**role**](/glossary#role): \n\n\n\n[**roles**](/glossary#roles): CanCreateMyUser\n\n\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "roles": [
          {
            "role": "CanCreateBranch",
            "requires_bank_id": true
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Role", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "roles": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "role": {
                  "type": "string"
                },
                "requires_bank_id": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/roles",
      "connector_methods": ["obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv3.1.0-createProductCollection",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "createProductCollection"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/product-collections/COLLECTION_CODE",
      "summary": "Create Product Collection",
      "description": "<p>Create or Update a Product Collection at the Bank.</p>\n<p>Use Product Collections to create Product &quot;Baskets&quot;, &quot;Portfolios&quot;, &quot;Indices&quot;, &quot;Collections&quot;, &quot;Underlyings-lists&quot;, &quot;Buckets&quot; etc. etc.</p>\n<p>There is a many to many relationship between Products and Product Collections:</p>\n<ul>\n<li>\n<p>A Product can exist in many Collections</p>\n</li>\n<li>\n<p>A Collection can contain many Products.</p>\n</li>\n</ul>\n<p>A collection has collection code, one parent Product and one or more child Products.</p>\n<p>Product hiearchy vs Product Collections:</p>\n<ul>\n<li>\n<p>You can define a hierarchy of products - so that a child Product inherits attributes of its parent Product -  using the parent_product_code in Product.</p>\n</li>\n<li>\n<p>You can define a collection (also known as baskets or buckets) of products using Product Collections.</p>\n</li>\n</ul>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#collection_code\">COLLECTION_CODE</a>:</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#collection_code\"><strong>collection_code</strong></a>:</p>\n<p><a href=\"/glossary#items\"><strong>items</strong></a>:</p>\n<p><a href=\"/glossary#member_product_code\"><strong>member_product_code</strong></a>:</p>\n<p><a href=\"/glossary#product_code\"><strong>product_code</strong></a>: 1234BW</p>\n<p><a href=\"/glossary#product_collection\"><strong>product_collection</strong></a>:</p>\n",
      "description_markdown": "Create or Update a Product Collection at the Bank.\n\nUse Product Collections to create Product \"Baskets\", \"Portfolios\", \"Indices\", \"Collections\", \"Underlyings-lists\", \"Buckets\" etc. etc.\n\nThere is a many to many relationship between Products and Product Collections:\n\n* A Product can exist in many Collections\n\n* A Collection can contain many Products.\n\nA collection has collection code, one parent Product and one or more child Products.\n\n\n\n\nProduct hiearchy vs Product Collections:\n\n* You can define a hierarchy of products - so that a child Product inherits attributes of its parent Product -  using the parent_product_code in Product.\n\n* You can define a collection (also known as baskets or buckets) of products using Product Collections.\n\n      \n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[COLLECTION_CODE](/glossary#collection_code): \n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**collection_code**](/glossary#collection_code): \n\n\n\n[**items**](/glossary#items): \n\n\n\n[**member_product_code**](/glossary#member_product_code): \n\n\n\n[**product_code**](/glossary#product_code): 1234BW\n\n\n\n[**product_collection**](/glossary#product_collection): \n\n\n",
      "example_request_body": {
        "parent_product_code": "A",
        "children_product_codes": ["B", "C", "D"]
      },
      "success_response_body": {
        "product_collection": [
          {
            "collection_code": "C",
            "product_code": "1234BW",
            "items": [
              {
                "member_product_code": "A"
              },
              {
                "member_product_code": "B"
              }
            ]
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Product-Collection", "Product", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "parent_product_code": {
            "type": "string"
          },
          "children_product_codes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "product_collection": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "collection_code": {
                  "type": "string"
                },
                "product_code": {
                  "type": "string"
                },
                "items": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "member_product_code": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanMaintainProductCollection",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/product-collections/COLLECTION_CODE",
      "connector_methods": [
        "obp.getProducts",
        "obp.getOrCreateProductCollectionItem",
        "obp.getOrCreateProductCollection",
        "obp.getBank",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv4.0.0-getMyCorrelatedEntities",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getMyCorrelatedEntities"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/my/correlated-entities",
      "summary": "Get Correlated Entities for the current User",
      "description": "<p>Correlated Entities are users and customers linked to the currently authenticated user via User-Customer-Links</p>\n<p>Authentication is Mandatory</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#\"><strong>branch_id</strong></a>: DERBY6</p>\n<p><a href=\"/glossary#\"><strong>correlated_entities</strong></a>: correlated_entities</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#Customer\"><strong>customer</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>customer_number</strong></a>: 5987953</p>\n<p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#\"><strong>date_of_birth</strong></a>: 2018-03-09</p>\n<p><a href=\"/glossary#\"><strong>dependants</strong></a>: 1</p>\n<p><a href=\"/glossary#dob_of_dependants\"><strong>dob_of_dependants</strong></a>: [2019-09-08, 2017-07-12]</p>\n<p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"&#109;&#x61;&#x69;&#x6c;&#x74;&#111;&#x3a;&#x66;&#101;&#108;&#x69;&#x78;s&#x6d;i&#x74;h&#64;ex&#x61;&#x6d;&#x70;&#108;&#101;&#x2e;&#x63;o&#109;\">&#102;&#101;&#108;&#105;&#x78;sm&#x69;&#x74;&#x68;&#64;&#101;&#x78;&#x61;&#109;&#112;&#x6c;&#101;&#46;&#x63;&#x6f;&#109;</a></p>\n<p><a href=\"/glossary#\"><strong>employment_status</strong></a>: worker</p>\n<p><a href=\"/glossary#face_image\"><strong>face_image</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>highest_education_attained</strong></a>: Master</p>\n<p><a href=\"/glossary#\"><strong>insert_date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#\"><strong>kyc_status</strong></a>: true</p>\n<p><a href=\"/glossary#last_ok_date\"><strong>last_ok_date</strong></a>: 2022-04-13T04:30:07.985Z</p>\n<p><a href=\"/glossary#\"><strong>legal_name</strong></a>: Eveline Tripman</p>\n<p><a href=\"/glossary#mobile_phone_number\"><strong>mobile_phone_number</strong></a>: +49 30 901820</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#\"><strong>name_suffix</strong></a>: Sr</p>\n<p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p>\n<p><a href=\"/glossary#provider_id\"><strong>provider_id</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>rating</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>relationship_status</strong></a>: single</p>\n<p><a href=\"/glossary#\"><strong>source</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>title</strong></a>: Dr.</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>url</strong></a>: <a href=\"http://www.example.com/id-docs/123/image.png\">http://www.example.com/id-docs/123/image.png</a></p>\n<p><a href=\"/glossary#\"><strong>user_attribute_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>user_attributes</strong></a>: user_attributes</p>\n<p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p>\n<p><a href=\"/glossary#\"><strong>username</strong></a>: felixsmith</p>\n<p><a href=\"/glossary#users\"><strong>users</strong></a>: user list</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n<p><a href=\"/glossary#credit_limit\">credit_limit</a>:</p>\n<p><a href=\"/glossary#credit_rating\">credit_rating</a>:</p>\n",
      "description_markdown": "Correlated Entities are users and customers linked to the currently authenticated user via User-Customer-Links\n\nAuthentication is Mandatory\n\n\n**JSON response body fields:**\n\n\n\n[**amount**](/glossary#): 10.12\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**branch_id**](/glossary#): DERBY6\n\n\n\n[**correlated_entities**](/glossary#): correlated_entities\n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**customer**](/glossary#Customer): \n\n\n\n[**customer_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**customer_number**](/glossary#): 5987953\n\n\n\n[**date**](/glossary#): 2020-01-27\n\n\n\n[**date_of_birth**](/glossary#): 2018-03-09\n\n\n\n[**dependants**](/glossary#): 1\n\n\n\n[**dob_of_dependants**](/glossary#dob_of_dependants): [2019-09-08, 2017-07-12]\n\n\n\n[**email**](/glossary#): felixsmith@example.com\n\n\n\n[**employment_status**](/glossary#): worker\n\n\n\n[**face_image**](/glossary#face_image): \n\n\n\n[**highest_education_attained**](/glossary#): Master\n\n\n\n[**insert_date**](/glossary#): 2020-01-27\n\n\n\n[**kyc_status**](/glossary#): true\n\n\n\n[**last_ok_date**](/glossary#last_ok_date): 2022-04-13T04:30:07.985Z\n\n\n\n[**legal_name**](/glossary#): Eveline Tripman\n\n\n\n[**mobile_phone_number**](/glossary#mobile_phone_number): +49 30 901820\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**name_suffix**](/glossary#): Sr\n\n\n\n[**provider**](/glossary#provider): ETHEREUM\n\n\n\n[**provider_id**](/glossary#provider_id): \n\n\n\n[**rating**](/glossary#): \n\n\n\n[**relationship_status**](/glossary#): single\n\n\n\n[**source**](/glossary#): \n\n\n\n[**title**](/glossary#): Dr.\n\n\n\n[**type**](/glossary#type): \n\n\n\n[**url**](/glossary#): http://www.example.com/id-docs/123/image.png\n\n\n\n[**user_attribute_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**user_attributes**](/glossary#): user_attributes\n\n\n\n[**user_id**](/glossary#): 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\n\n\n\n[**username**](/glossary#): felixsmith\n\n\n\n[**users**](/glossary#users): user list\n\n\n\n[**value**](/glossary#): 5987953\n\n\n\n[credit_limit](/glossary#credit_limit): \n\n\n\n[credit_rating](/glossary#credit_rating): \n\n\n",
      "success_response_body": {
        "correlated_entities": [
          {
            "customer": {
              "bank_id": "gh.29.uk",
              "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
              "customer_number": "5987953",
              "legal_name": "Eveline Tripman",
              "mobile_phone_number": "+44 07972 444 876",
              "email": "felixsmith@example.com",
              "face_image": {
                "url": "www.openbankproject",
                "date": "1100-01-01T00:00:00Z"
              },
              "date_of_birth": "1100-01-01T00:00:00Z",
              "relationship_status": "single",
              "dependants": 1,
              "dob_of_dependants": ["1100-01-01T00:00:00Z"],
              "credit_rating": {
                "rating": "OBP",
                "source": "OBP"
              },
              "credit_limit": {
                "currency": "EUR",
                "amount": "0"
              },
              "highest_education_attained": "Master",
              "employment_status": "worker",
              "kyc_status": true,
              "last_ok_date": "2022-04-13T04:30:08Z",
              "title": "Dr.",
              "branch_id": "DERBY6",
              "name_suffix": "Sr"
            },
            "users": [
              {
                "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
                "email": "felixsmith@example.com",
                "provider_id": "Chris",
                "provider": "http://127.0.0.1:8080",
                "username": "felixsmith",
                "user_attributes": [
                  {
                    "user_attribute_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
                    "name": "BATTERY_LEVEL",
                    "type": "STRING",
                    "value": "90",
                    "insert_date": "2023-04-13T04:30:08Z"
                  }
                ]
              }
            ]
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Customer", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "correlated_entities": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "customer": {
                  "type": "object",
                  "properties": {
                    "dependants": {
                      "type": "integer"
                    },
                    "dob_of_dependants": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "format": "date-time"
                      }
                    },
                    "face_image": {
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string"
                        },
                        "date": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    },
                    "credit_limit": {
                      "type": "object",
                      "properties": {
                        "currency": {
                          "type": "string"
                        },
                        "amount": {
                          "type": "string"
                        }
                      }
                    },
                    "employment_status": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "customer_id": {
                      "type": "string"
                    },
                    "relationship_status": {
                      "type": "string"
                    },
                    "bank_id": {
                      "type": "string"
                    },
                    "highest_education_attained": {
                      "type": "string"
                    },
                    "customer_number": {
                      "type": "string"
                    },
                    "credit_rating": {
                      "type": "object",
                      "properties": {
                        "rating": {
                          "type": "string"
                        },
                        "source": {
                          "type": "string"
                        }
                      }
                    },
                    "name_suffix": {
                      "type": "string"
                    },
                    "last_ok_date": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "legal_name": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "branch_id": {
                      "type": "string"
                    },
                    "date_of_birth": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "mobile_phone_number": {
                      "type": "string"
                    },
                    "kyc_status": {
                      "type": "boolean"
                    }
                  }
                },
                "users": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "provider": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string"
                      },
                      "provider_id": {
                        "type": "string"
                      },
                      "user_attributes": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "string"
                            },
                            "user_attribute_id": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string"
                            },
                            "insert_date": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "username": {
                        "type": "string"
                      },
                      "user_id": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/my/correlated-entities",
      "connector_methods": ["obp.getCustomerByCustomerId"]
    },
    {
      "operation_id": "OBPv4.0.0-grantUserAccessToView",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "grantUserAccessToView"
      },
      "request_verb": "POST",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/account-access/grant",
      "summary": "Grant User access to View",
      "description": "<p>Grants the User identified by USER_ID access to the view identified by VIEW_ID.</p>\n<p>Authentication is Mandatory and the user needs to be account holder.</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>is_system</strong></a>: true</p>\n<p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p>\n<p><a href=\"/glossary#view\"><strong>view</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>view_id</strong></a>: owner</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#alias\"><strong>alias</strong></a>:</p>\n<p><a href=\"/glossary#can_add_comment\"><strong>can_add_comment</strong></a>:</p>\n<p><a href=\"/glossary#can_add_corporate_location\"><strong>can_add_corporate_location</strong></a>:</p>\n<p><a href=\"/glossary#can_add_counterparty\"><strong>can_add_counterparty</strong></a>: true</p>\n<p><a href=\"/glossary#can_add_image\"><strong>can_add_image</strong></a>:</p>\n<p><a href=\"/glossary#can_add_image_url\"><strong>can_add_image_url</strong></a>: true</p>\n<p><a href=\"/glossary#can_add_more_info\"><strong>can_add_more_info</strong></a>: true</p>\n<p><a href=\"/glossary#can_add_open_corporates_url\"><strong>can_add_open_corporates_url</strong></a>:</p>\n<p><a href=\"/glossary#can_add_physical_location\"><strong>can_add_physical_location</strong></a>:</p>\n<p><a href=\"/glossary#can_add_private_alias\"><strong>can_add_private_alias</strong></a>:</p>\n<p><a href=\"/glossary#can_add_public_alias\"><strong>can_add_public_alias</strong></a>:</p>\n<p><a href=\"/glossary#can_add_tag\"><strong>can_add_tag</strong></a>: true</p>\n<p><a href=\"/glossary#can_add_transaction_request_to_any_account\"><strong>can_add_transaction_request_to_any_account</strong></a>:</p>\n<p><a href=\"/glossary#can_add_transaction_request_to_own_account\"><strong>can_add_transaction_request_to_own_account</strong></a>:</p>\n<p><a href=\"/glossary#can_add_url\"><strong>can_add_url</strong></a>:</p>\n<p><a href=\"/glossary#can_add_where_tag\"><strong>can_add_where_tag</strong></a>:</p>\n<p><a href=\"/glossary#can_create_direct_debit\"><strong>can_create_direct_debit</strong></a>: true</p>\n<p><a href=\"/glossary#can_create_standing_order\"><strong>can_create_standing_order</strong></a>:</p>\n<p><a href=\"/glossary#can_delete_comment\"><strong>can_delete_comment</strong></a>:</p>\n<p><a href=\"/glossary#can_delete_corporate_location\"><strong>can_delete_corporate_location</strong></a>: true</p>\n<p><a href=\"/glossary#can_delete_image\"><strong>can_delete_image</strong></a>: true</p>\n<p><a href=\"/glossary#can_delete_physical_location\"><strong>can_delete_physical_location</strong></a>:</p>\n<p><a href=\"/glossary#can_delete_tag\"><strong>can_delete_tag</strong></a>:</p>\n<p><a href=\"/glossary#can_delete_where_tag\"><strong>can_delete_where_tag</strong></a>: true</p>\n<p><a href=\"/glossary#can_edit_owner_comment\"><strong>can_edit_owner_comment</strong></a>: true</p>\n<p><a href=\"/glossary#can_query_available_funds\"><strong>can_query_available_funds</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_balance\"><strong>can_see_bank_account_balance</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_bank_name\"><strong>can_see_bank_account_bank_name</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_credit_limit\"><strong>can_see_bank_account_credit_limit</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_currency\"><strong>can_see_bank_account_currency</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_iban\"><strong>can_see_bank_account_iban</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_label\"><strong>can_see_bank_account_label</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_national_identifier\"><strong>can_see_bank_account_national_identifier</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_number\"><strong>can_see_bank_account_number</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_owners\"><strong>can_see_bank_account_owners</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_routing_address\"><strong>can_see_bank_account_routing_address</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_routing_scheme\"><strong>can_see_bank_account_routing_scheme</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_swift_bic\"><strong>can_see_bank_account_swift_bic</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_type\"><strong>can_see_bank_account_type</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_routing_address\"><strong>can_see_bank_routing_address</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_routing_scheme\"><strong>can_see_bank_routing_scheme</strong></a>:</p>\n<p><a href=\"/glossary#can_see_comments\"><strong>can_see_comments</strong></a>:</p>\n<p><a href=\"/glossary#can_see_corporate_location\"><strong>can_see_corporate_location</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_image_url\"><strong>can_see_image_url</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_images\"><strong>can_see_images</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_more_info\"><strong>can_see_more_info</strong></a>:</p>\n<p><a href=\"/glossary#can_see_open_corporates_url\"><strong>can_see_open_corporates_url</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_bank_name\"><strong>can_see_other_account_bank_name</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_iban\"><strong>can_see_other_account_iban</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_kind\"><strong>can_see_other_account_kind</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_metadata\"><strong>can_see_other_account_metadata</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_national_identifier\"><strong>can_see_other_account_national_identifier</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_other_account_number\"><strong>can_see_other_account_number</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_other_account_routing_address\"><strong>can_see_other_account_routing_address</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_other_account_routing_scheme\"><strong>can_see_other_account_routing_scheme</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_swift_bic\"><strong>can_see_other_account_swift_bic</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_other_bank_routing_address\"><strong>can_see_other_bank_routing_address</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_bank_routing_scheme\"><strong>can_see_other_bank_routing_scheme</strong></a>:</p>\n<p><a href=\"/glossary#can_see_owner_comment\"><strong>can_see_owner_comment</strong></a>:</p>\n<p><a href=\"/glossary#can_see_physical_location\"><strong>can_see_physical_location</strong></a>:</p>\n<p><a href=\"/glossary#can_see_private_alias\"><strong>can_see_private_alias</strong></a>:</p>\n<p><a href=\"/glossary#can_see_public_alias\"><strong>can_see_public_alias</strong></a>:</p>\n<p><a href=\"/glossary#can_see_tags\"><strong>can_see_tags</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_amount\"><strong>can_see_transaction_amount</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_transaction_balance\"><strong>can_see_transaction_balance</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_currency\"><strong>can_see_transaction_currency</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_description\"><strong>can_see_transaction_description</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_transaction_finish_date\"><strong>can_see_transaction_finish_date</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_metadata\"><strong>can_see_transaction_metadata</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_other_bank_account\"><strong>can_see_transaction_other_bank_account</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_start_date\"><strong>can_see_transaction_start_date</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_this_bank_account\"><strong>can_see_transaction_this_bank_account</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_type\"><strong>can_see_transaction_type</strong></a>:</p>\n<p><a href=\"/glossary#can_see_url\"><strong>can_see_url</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_where_tag\"><strong>can_see_where_tag</strong></a>: true</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#hide_metadata_if_alias_used\"><strong>hide_metadata_if_alias_used</strong></a>:</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#is_public\"><strong>is_public</strong></a>: true</p>\n<p><a href=\"/glossary#\"><strong>is_system</strong></a>: true</p>\n<p><a href=\"/glossary#metadata_view\"><strong>metadata_view</strong></a>:</p>\n<p><a href=\"/glossary#short_name\"><strong>short_name</strong></a>:</p>\n<p><a href=\"/glossary#is_firehose\">is_firehose</a>:</p>\n",
      "description_markdown": "Grants the User identified by USER_ID access to the view identified by VIEW_ID.\n\nAuthentication is Mandatory and the user needs to be account holder.\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON request body fields:**\n\n\n\n[**is_system**](/glossary#): true\n\n\n\n[**user_id**](/glossary#): 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\n\n\n\n[**view**](/glossary#view): \n\n\n\n[**view_id**](/glossary#): owner\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**alias**](/glossary#alias): \n\n\n\n[**can_add_comment**](/glossary#can_add_comment): \n\n\n\n[**can_add_corporate_location**](/glossary#can_add_corporate_location): \n\n\n\n[**can_add_counterparty**](/glossary#can_add_counterparty): true\n\n\n\n[**can_add_image**](/glossary#can_add_image): \n\n\n\n[**can_add_image_url**](/glossary#can_add_image_url): true\n\n\n\n[**can_add_more_info**](/glossary#can_add_more_info): true\n\n\n\n[**can_add_open_corporates_url**](/glossary#can_add_open_corporates_url): \n\n\n\n[**can_add_physical_location**](/glossary#can_add_physical_location): \n\n\n\n[**can_add_private_alias**](/glossary#can_add_private_alias): \n\n\n\n[**can_add_public_alias**](/glossary#can_add_public_alias): \n\n\n\n[**can_add_tag**](/glossary#can_add_tag): true\n\n\n\n[**can_add_transaction_request_to_any_account**](/glossary#can_add_transaction_request_to_any_account): \n\n\n\n[**can_add_transaction_request_to_own_account**](/glossary#can_add_transaction_request_to_own_account): \n\n\n\n[**can_add_url**](/glossary#can_add_url): \n\n\n\n[**can_add_where_tag**](/glossary#can_add_where_tag): \n\n\n\n[**can_create_direct_debit**](/glossary#can_create_direct_debit): true\n\n\n\n[**can_create_standing_order**](/glossary#can_create_standing_order): \n\n\n\n[**can_delete_comment**](/glossary#can_delete_comment): \n\n\n\n[**can_delete_corporate_location**](/glossary#can_delete_corporate_location): true\n\n\n\n[**can_delete_image**](/glossary#can_delete_image): true\n\n\n\n[**can_delete_physical_location**](/glossary#can_delete_physical_location): \n\n\n\n[**can_delete_tag**](/glossary#can_delete_tag): \n\n\n\n[**can_delete_where_tag**](/glossary#can_delete_where_tag): true\n\n\n\n[**can_edit_owner_comment**](/glossary#can_edit_owner_comment): true\n\n\n\n[**can_query_available_funds**](/glossary#can_query_available_funds): true\n\n\n\n[**can_see_bank_account_balance**](/glossary#can_see_bank_account_balance): \n\n\n\n[**can_see_bank_account_bank_name**](/glossary#can_see_bank_account_bank_name): true\n\n\n\n[**can_see_bank_account_credit_limit**](/glossary#can_see_bank_account_credit_limit): true\n\n\n\n[**can_see_bank_account_currency**](/glossary#can_see_bank_account_currency): \n\n\n\n[**can_see_bank_account_iban**](/glossary#can_see_bank_account_iban): \n\n\n\n[**can_see_bank_account_label**](/glossary#can_see_bank_account_label): true\n\n\n\n[**can_see_bank_account_national_identifier**](/glossary#can_see_bank_account_national_identifier): \n\n\n\n[**can_see_bank_account_number**](/glossary#can_see_bank_account_number): true\n\n\n\n[**can_see_bank_account_owners**](/glossary#can_see_bank_account_owners): true\n\n\n\n[**can_see_bank_account_routing_address**](/glossary#can_see_bank_account_routing_address): \n\n\n\n[**can_see_bank_account_routing_scheme**](/glossary#can_see_bank_account_routing_scheme): \n\n\n\n[**can_see_bank_account_swift_bic**](/glossary#can_see_bank_account_swift_bic): \n\n\n\n[**can_see_bank_account_type**](/glossary#can_see_bank_account_type): \n\n\n\n[**can_see_bank_routing_address**](/glossary#can_see_bank_routing_address): true\n\n\n\n[**can_see_bank_routing_scheme**](/glossary#can_see_bank_routing_scheme): \n\n\n\n[**can_see_comments**](/glossary#can_see_comments): \n\n\n\n[**can_see_corporate_location**](/glossary#can_see_corporate_location): true\n\n\n\n[**can_see_image_url**](/glossary#can_see_image_url): true\n\n\n\n[**can_see_images**](/glossary#can_see_images): true\n\n\n\n[**can_see_more_info**](/glossary#can_see_more_info): \n\n\n\n[**can_see_open_corporates_url**](/glossary#can_see_open_corporates_url): \n\n\n\n[**can_see_other_account_bank_name**](/glossary#can_see_other_account_bank_name): \n\n\n\n[**can_see_other_account_iban**](/glossary#can_see_other_account_iban): \n\n\n\n[**can_see_other_account_kind**](/glossary#can_see_other_account_kind): \n\n\n\n[**can_see_other_account_metadata**](/glossary#can_see_other_account_metadata): \n\n\n\n[**can_see_other_account_national_identifier**](/glossary#can_see_other_account_national_identifier): true\n\n\n\n[**can_see_other_account_number**](/glossary#can_see_other_account_number): true\n\n\n\n[**can_see_other_account_routing_address**](/glossary#can_see_other_account_routing_address): true\n\n\n\n[**can_see_other_account_routing_scheme**](/glossary#can_see_other_account_routing_scheme): \n\n\n\n[**can_see_other_account_swift_bic**](/glossary#can_see_other_account_swift_bic): true\n\n\n\n[**can_see_other_bank_routing_address**](/glossary#can_see_other_bank_routing_address): \n\n\n\n[**can_see_other_bank_routing_scheme**](/glossary#can_see_other_bank_routing_scheme): \n\n\n\n[**can_see_owner_comment**](/glossary#can_see_owner_comment): \n\n\n\n[**can_see_physical_location**](/glossary#can_see_physical_location): \n\n\n\n[**can_see_private_alias**](/glossary#can_see_private_alias): \n\n\n\n[**can_see_public_alias**](/glossary#can_see_public_alias): \n\n\n\n[**can_see_tags**](/glossary#can_see_tags): \n\n\n\n[**can_see_transaction_amount**](/glossary#can_see_transaction_amount): true\n\n\n\n[**can_see_transaction_balance**](/glossary#can_see_transaction_balance): \n\n\n\n[**can_see_transaction_currency**](/glossary#can_see_transaction_currency): \n\n\n\n[**can_see_transaction_description**](/glossary#can_see_transaction_description): true\n\n\n\n[**can_see_transaction_finish_date**](/glossary#can_see_transaction_finish_date): \n\n\n\n[**can_see_transaction_metadata**](/glossary#can_see_transaction_metadata): \n\n\n\n[**can_see_transaction_other_bank_account**](/glossary#can_see_transaction_other_bank_account): \n\n\n\n[**can_see_transaction_start_date**](/glossary#can_see_transaction_start_date): \n\n\n\n[**can_see_transaction_this_bank_account**](/glossary#can_see_transaction_this_bank_account): \n\n\n\n[**can_see_transaction_type**](/glossary#can_see_transaction_type): \n\n\n\n[**can_see_url**](/glossary#can_see_url): true\n\n\n\n[**can_see_where_tag**](/glossary#can_see_where_tag): true\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**hide_metadata_if_alias_used**](/glossary#hide_metadata_if_alias_used): \n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**is_public**](/glossary#is_public): true\n\n\n\n[**is_system**](/glossary#): true\n\n\n\n[**metadata_view**](/glossary#metadata_view): \n\n\n\n[**short_name**](/glossary#short_name): \n\n\n\n[is_firehose](/glossary#is_firehose): \n\n\n",
      "example_request_body": {
        "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
        "view": {
          "view_id": "owner",
          "is_system": true
        }
      },
      "success_response_body": {
        "id": "1234",
        "short_name": "short_name",
        "description": "description",
        "metadata_view": "owner",
        "is_public": true,
        "is_system": true,
        "alias": "No",
        "hide_metadata_if_alias_used": true,
        "can_add_comment": true,
        "can_add_corporate_location": true,
        "can_add_image": true,
        "can_add_image_url": true,
        "can_add_more_info": true,
        "can_add_open_corporates_url": true,
        "can_add_physical_location": true,
        "can_add_private_alias": true,
        "can_add_public_alias": true,
        "can_add_tag": true,
        "can_add_url": true,
        "can_add_where_tag": true,
        "can_delete_comment": true,
        "can_add_counterparty": true,
        "can_delete_corporate_location": true,
        "can_delete_image": true,
        "can_delete_physical_location": true,
        "can_delete_tag": true,
        "can_delete_where_tag": true,
        "can_edit_owner_comment": true,
        "can_see_bank_account_balance": true,
        "can_query_available_funds": true,
        "can_see_bank_account_bank_name": true,
        "can_see_bank_account_currency": true,
        "can_see_bank_account_iban": true,
        "can_see_bank_account_label": true,
        "can_see_bank_account_national_identifier": true,
        "can_see_bank_account_number": true,
        "can_see_bank_account_owners": true,
        "can_see_bank_account_swift_bic": true,
        "can_see_bank_account_type": true,
        "can_see_comments": true,
        "can_see_corporate_location": true,
        "can_see_image_url": true,
        "can_see_images": true,
        "can_see_more_info": true,
        "can_see_open_corporates_url": true,
        "can_see_other_account_bank_name": true,
        "can_see_other_account_iban": true,
        "can_see_other_account_kind": true,
        "can_see_other_account_metadata": true,
        "can_see_other_account_national_identifier": true,
        "can_see_other_account_number": true,
        "can_see_other_account_swift_bic": true,
        "can_see_owner_comment": true,
        "can_see_physical_location": true,
        "can_see_private_alias": true,
        "can_see_public_alias": true,
        "can_see_tags": true,
        "can_see_transaction_amount": true,
        "can_see_transaction_balance": true,
        "can_see_transaction_currency": true,
        "can_see_transaction_description": true,
        "can_see_transaction_finish_date": true,
        "can_see_transaction_metadata": true,
        "can_see_transaction_other_bank_account": true,
        "can_see_transaction_start_date": true,
        "can_see_transaction_this_bank_account": true,
        "can_see_transaction_type": true,
        "can_see_url": true,
        "can_see_where_tag": true,
        "can_see_bank_routing_scheme": true,
        "can_see_bank_routing_address": true,
        "can_see_bank_account_routing_scheme": true,
        "can_see_bank_account_routing_address": true,
        "can_see_other_bank_routing_scheme": true,
        "can_see_other_bank_routing_address": true,
        "can_see_other_account_routing_scheme": true,
        "can_see_other_account_routing_address": true,
        "can_add_transaction_request_to_own_account": true,
        "can_add_transaction_request_to_any_account": true,
        "can_see_bank_account_credit_limit": true,
        "can_create_direct_debit": true,
        "can_create_standing_order": true
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20047: User must have access to the owner view or must be an account holder.",
        "OBP-10001: Incorrect json format.",
        "OBP-20005: User not found. Please specify a valid value for USER_ID.",
        "OBP-30252: System view not found. Please specify a valid value for VIEW_ID",
        "OBP-30005: View not found for Account. Please specify a valid value for VIEW_ID",
        "OBP-30063: Cannot grant account access.",
        "OBP-50000: Unknown Error."
      ],
      "tags": [
        "Account-Access",
        "View-Custom",
        "Account",
        "User",
        "OwnerViewRequired",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "view": {
            "type": "object",
            "properties": {
              "is_system": {
                "type": "boolean"
              },
              "view_id": {
                "type": "string"
              }
            }
          },
          "user_id": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "can_see_other_account_swift_bic": {
            "type": "boolean"
          },
          "can_see_where_tag": {
            "type": "boolean"
          },
          "can_see_url": {
            "type": "boolean"
          },
          "can_create_direct_debit": {
            "type": "boolean"
          },
          "can_see_bank_account_swift_bic": {
            "type": "boolean"
          },
          "can_see_bank_account_routing_address": {
            "type": "boolean"
          },
          "can_see_tags": {
            "type": "boolean"
          },
          "can_see_transaction_balance": {
            "type": "boolean"
          },
          "can_delete_corporate_location": {
            "type": "boolean"
          },
          "can_add_image_url": {
            "type": "boolean"
          },
          "can_see_public_alias": {
            "type": "boolean"
          },
          "can_add_transaction_request_to_own_account": {
            "type": "boolean"
          },
          "can_add_comment": {
            "type": "boolean"
          },
          "can_see_other_bank_routing_scheme": {
            "type": "boolean"
          },
          "description": {
            "type": "string"
          },
          "can_see_corporate_location": {
            "type": "boolean"
          },
          "can_see_other_account_bank_name": {
            "type": "boolean"
          },
          "can_see_more_info": {
            "type": "boolean"
          },
          "can_add_counterparty": {
            "type": "boolean"
          },
          "is_system": {
            "type": "boolean"
          },
          "can_see_physical_location": {
            "type": "boolean"
          },
          "can_query_available_funds": {
            "type": "boolean"
          },
          "can_edit_owner_comment": {
            "type": "boolean"
          },
          "can_see_private_alias": {
            "type": "boolean"
          },
          "can_see_bank_account_credit_limit": {
            "type": "boolean"
          },
          "can_see_other_account_routing_address": {
            "type": "boolean"
          },
          "can_see_bank_account_balance": {
            "type": "boolean"
          },
          "can_add_public_alias": {
            "type": "boolean"
          },
          "can_see_bank_routing_scheme": {
            "type": "boolean"
          },
          "can_see_bank_account_owners": {
            "type": "boolean"
          },
          "can_see_other_account_metadata": {
            "type": "boolean"
          },
          "can_delete_physical_location": {
            "type": "boolean"
          },
          "hide_metadata_if_alias_used": {
            "type": "boolean"
          },
          "can_see_transaction_this_bank_account": {
            "type": "boolean"
          },
          "can_see_image_url": {
            "type": "boolean"
          },
          "can_see_transaction_type": {
            "type": "boolean"
          },
          "can_see_images": {
            "type": "boolean"
          },
          "can_see_transaction_amount": {
            "type": "boolean"
          },
          "metadata_view": {
            "type": "string"
          },
          "can_see_transaction_metadata": {
            "type": "boolean"
          },
          "can_see_comments": {
            "type": "boolean"
          },
          "can_see_other_account_iban": {
            "type": "boolean"
          },
          "can_add_image": {
            "type": "boolean"
          },
          "can_see_bank_account_routing_scheme": {
            "type": "boolean"
          },
          "can_see_bank_account_type": {
            "type": "boolean"
          },
          "can_see_other_account_kind": {
            "type": "boolean"
          },
          "can_see_bank_account_currency": {
            "type": "boolean"
          },
          "can_add_where_tag": {
            "type": "boolean"
          },
          "can_see_transaction_start_date": {
            "type": "boolean"
          },
          "can_see_bank_account_label": {
            "type": "boolean"
          },
          "can_add_private_alias": {
            "type": "boolean"
          },
          "can_see_transaction_currency": {
            "type": "boolean"
          },
          "can_add_more_info": {
            "type": "boolean"
          },
          "can_delete_comment": {
            "type": "boolean"
          },
          "can_create_standing_order": {
            "type": "boolean"
          },
          "can_see_other_bank_routing_address": {
            "type": "boolean"
          },
          "can_see_transaction_other_bank_account": {
            "type": "boolean"
          },
          "can_see_bank_account_number": {
            "type": "boolean"
          },
          "can_add_corporate_location": {
            "type": "boolean"
          },
          "alias": {
            "type": "string"
          },
          "can_add_url": {
            "type": "boolean"
          },
          "short_name": {
            "type": "string"
          },
          "can_delete_where_tag": {
            "type": "boolean"
          },
          "is_public": {
            "type": "boolean"
          },
          "can_see_owner_comment": {
            "type": "boolean"
          },
          "can_see_transaction_finish_date": {
            "type": "boolean"
          },
          "can_see_open_corporates_url": {
            "type": "boolean"
          },
          "can_add_physical_location": {
            "type": "boolean"
          },
          "can_see_bank_account_iban": {
            "type": "boolean"
          },
          "can_see_other_account_national_identifier": {
            "type": "boolean"
          },
          "can_see_bank_routing_address": {
            "type": "boolean"
          },
          "can_delete_image": {
            "type": "boolean"
          },
          "can_add_transaction_request_to_any_account": {
            "type": "boolean"
          },
          "can_add_tag": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "can_see_other_account_routing_scheme": {
            "type": "boolean"
          },
          "can_add_open_corporates_url": {
            "type": "boolean"
          },
          "can_delete_tag": {
            "type": "boolean"
          },
          "can_see_transaction_description": {
            "type": "boolean"
          },
          "can_see_bank_account_national_identifier": {
            "type": "boolean"
          },
          "can_see_other_account_number": {
            "type": "boolean"
          },
          "can_see_bank_account_bank_name": {
            "type": "boolean"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/account-access/grant",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv3.1.0-getMeeting",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "getMeeting"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/meetings/MEETING_ID",
      "summary": "Get Meeting",
      "description": "<p>Get Meeting specified by BANK_ID / MEETING_ID<br />\nMeetings contain meta data about, and are used to facilitate, video conferences / chats etc.</p>\n<p>The actual conference/chats are handled by external services.</p>\n<p>Login is required.</p>\n<p>This call is <strong>experimental</strong> and will require further authorisation in the future.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#meeting_id\">MEETING_ID</a>:</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#contact_details\"><strong>contact_details</strong></a>:</p>\n<p><a href=\"/glossary#creator\"><strong>creator</strong></a>:</p>\n<p><a href=\"/glossary#customer_token\"><strong>customer_token</strong></a>:</p>\n<p><a href=\"/glossary#customer_user_id\"><strong>customer_user_id</strong></a>:</p>\n<p><a href=\"/glossary#email_address\"><strong>email_address</strong></a>:</p>\n<p><a href=\"/glossary#invitees\"><strong>invitees</strong></a>:</p>\n<p><a href=\"/glossary#keys\"><strong>keys</strong></a>:</p>\n<p><a href=\"/glossary#meeting_id\"><strong>meeting_id</strong></a>:</p>\n<p><a href=\"/glossary#mobile_phone\"><strong>mobile_phone</strong></a>:</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#present\"><strong>present</strong></a>:</p>\n<p><a href=\"/glossary#provider_id\"><strong>provider_id</strong></a>:</p>\n<p><a href=\"/glossary#purpose_id\"><strong>purpose_id</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>session_id</strong></a>: b4e0352a-9a0f-4bfa-b30b-9003aa467f50</p>\n<p><a href=\"/glossary#staff_token\"><strong>staff_token</strong></a>:</p>\n<p><a href=\"/glossary#staff_user_id\"><strong>staff_user_id</strong></a>:</p>\n<p><a href=\"/glossary#status\"><strong>status</strong></a>:</p>\n<p><a href=\"/glossary#when\"><strong>when</strong></a>: 2020-01-27</p>\n",
      "description_markdown": "Get Meeting specified by BANK_ID / MEETING_ID\nMeetings contain meta data about, and are used to facilitate, video conferences / chats etc.\n\nThe actual conference/chats are handled by external services.\n\nLogin is required.\n\nThis call is **experimental** and will require further authorisation in the future.\n      \n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[MEETING_ID](/glossary#meeting_id): \n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**contact_details**](/glossary#contact_details): \n\n\n\n[**creator**](/glossary#creator): \n\n\n\n[**customer_token**](/glossary#customer_token): \n\n\n\n[**customer_user_id**](/glossary#customer_user_id): \n\n\n\n[**email_address**](/glossary#email_address): \n\n\n\n[**invitees**](/glossary#invitees): \n\n\n\n[**keys**](/glossary#keys): \n\n\n\n[**meeting_id**](/glossary#meeting_id): \n\n\n\n[**mobile_phone**](/glossary#mobile_phone): \n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**present**](/glossary#present): \n\n\n\n[**provider_id**](/glossary#provider_id): \n\n\n\n[**purpose_id**](/glossary#purpose_id): \n\n\n\n[**session_id**](/glossary#): b4e0352a-9a0f-4bfa-b30b-9003aa467f50\n\n\n\n[**staff_token**](/glossary#staff_token): \n\n\n\n[**staff_user_id**](/glossary#staff_user_id): \n\n\n\n[**status**](/glossary#status): \n\n\n\n[**when**](/glossary#when): 2020-01-27\n\n\n",
      "success_response_body": {
        "meeting_id": "UUID-String",
        "provider_id": "Chris",
        "purpose_id": "String, eg: onboarding",
        "bank_id": "gh.29.uk",
        "present": {
          "staff_user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
          "customer_user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
        },
        "keys": {
          "session_id": "String",
          "staff_token": "String",
          "customer_token": "String"
        },
        "when": "1100-01-01T00:00:00Z",
        "creator": {
          "name": "Simon ",
          "mobile_phone": "+44 07972 444 876",
          "email_address": "felixsmith@example.com"
        },
        "invitees": [
          {
            "contact_details": {
              "name": "Simon ",
              "mobile_phone": "+44 07972 444 876",
              "email_address": "felixsmith@example.com"
            },
            "status": "String, eg: Good"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30104: Meeting not found.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Customer-Meeting", "Customer", "Experimental", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "present": {
            "type": "object",
            "properties": {
              "staff_user_id": {
                "type": "string"
              },
              "customer_user_id": {
                "type": "string"
              }
            }
          },
          "invitees": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string"
                },
                "contact_details": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "mobile_phone": {
                      "type": "string"
                    },
                    "email_address": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "bank_id": {
            "type": "string"
          },
          "when": {
            "type": "string",
            "format": "date-time"
          },
          "provider_id": {
            "type": "string"
          },
          "purpose_id": {
            "type": "string"
          },
          "keys": {
            "type": "object",
            "properties": {
              "customer_token": {
                "type": "string"
              },
              "session_id": {
                "type": "string"
              },
              "staff_token": {
                "type": "string"
              }
            }
          },
          "creator": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "mobile_phone": {
                "type": "string"
              },
              "email_address": {
                "type": "string"
              }
            }
          },
          "meeting_id": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/meetings/MEETING_ID",
      "connector_methods": ["obp.getMeeting", "obp.getBank", "obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv3.1.0-getMessageDocsSwagger",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "getMessageDocsSwagger"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.1.0/message-docs/CONNECTOR/swagger2.0",
      "summary": "Get Message Docs Swagger",
      "description": "<p>This endpoint provides example message docs in swagger format.<br />\nIt is only relavent for REST Connectors.</p>\n<p>This endpoint can be used by the developer building a REST Adapter that connects to the Core Banking System (CBS).<br />\nThat is, the Adapter developer can use the Swagger surfaced here to build the REST APIs that the OBP REST connector will call to consume CBS services.</p>\n<p>i.e.:</p>\n<p>OBP API (Core OBP API code) -&gt; OBP REST Connector (OBP REST Connector code) -&gt; OBP REST Adapter (Adapter developer code) -&gt; CBS (Main Frame)</p>\n<p>Authentication is Optional</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Connector\">CONNECTOR</a>: CONNECTOR</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#adapter_implementation\"><strong>adapter_implementation</strong></a>:</p>\n<p><a href=\"/glossary#dependent_endpoints\"><strong>dependent_endpoints</strong></a>:</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#example_inbound_message\"><strong>example_inbound_message</strong></a>: {}</p>\n<p><a href=\"/glossary#example_outbound_message\"><strong>example_outbound_message</strong></a>: {}</p>\n<p><a href=\"/glossary#group\"><strong>group</strong></a>:</p>\n<p><a href=\"/glossary#message_docs\"><strong>message_docs</strong></a>:</p>\n<p><a href=\"/glossary#message_format\"><strong>message_format</strong></a>:</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#process\"><strong>process</strong></a>: obp.getBank</p>\n<p><a href=\"/glossary#suggested_order\"><strong>suggested_order</strong></a>:</p>\n<p><a href=\"/glossary#version\"><strong>version</strong></a>:</p>\n<p><a href=\"/glossary#inboundavroschema\">inboundAvroSchema</a>:</p>\n<p><a href=\"/glossary#inbound_topic\">inbound_topic</a>:</p>\n<p><a href=\"/glossary#outboundavroschema\">outboundAvroSchema</a>:</p>\n<p><a href=\"/glossary#outbound_topic\">outbound_topic</a>:</p>\n<p><a href=\"/glossary#requiredfieldinfo\">requiredFieldInfo</a>: false</p>\n",
      "description_markdown": "This endpoint provides example message docs in swagger format.\nIt is only relavent for REST Connectors.\n\nThis endpoint can be used by the developer building a REST Adapter that connects to the Core Banking System (CBS).\nThat is, the Adapter developer can use the Swagger surfaced here to build the REST APIs that the OBP REST connector will call to consume CBS services.\n\ni.e.:\n\nOBP API (Core OBP API code) -> OBP REST Connector (OBP REST Connector code) -> OBP REST Adapter (Adapter developer code) -> CBS (Main Frame)\n\n      \n\nAuthentication is Optional\n\n\n**URL Parameters:**\n\n[CONNECTOR](/glossary#Connector): CONNECTOR\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**adapter_implementation**](/glossary#adapter_implementation): \n\n\n\n[**dependent_endpoints**](/glossary#dependent_endpoints): \n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**example_inbound_message**](/glossary#example_inbound_message): {}\n\n\n\n[**example_outbound_message**](/glossary#example_outbound_message): {}\n\n\n\n[**group**](/glossary#group): \n\n\n\n[**message_docs**](/glossary#message_docs): \n\n\n\n[**message_format**](/glossary#message_format): \n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**process**](/glossary#process): obp.getBank\n\n\n\n[**suggested_order**](/glossary#suggested_order): \n\n\n\n[**version**](/glossary#version): \n\n\n\n[inboundAvroSchema](/glossary#inboundavroschema): \n\n\n\n[inbound_topic](/glossary#inbound_topic): \n\n\n\n[outboundAvroSchema](/glossary#outboundavroschema): \n\n\n\n[outbound_topic](/glossary#outbound_topic): \n\n\n\n[requiredFieldInfo](/glossary#requiredfieldinfo): false\n\n\n",
      "success_response_body": {
        "message_docs": [
          {
            "process": "getAccounts",
            "message_format": "KafkaV2017",
            "outbound_topic": "to.obp.api.1.caseclass.OutboundGetAccounts",
            "inbound_topic": "from.obp.api.1.to.adapter.mf.caseclass.OutboundGetAccounts",
            "description": "get Banks",
            "example_outbound_message": {
              "jsonString": "{}"
            },
            "example_inbound_message": {
              "jsonString": "{}"
            },
            "outboundAvroSchema": {
              "jsonString": "{}"
            },
            "inboundAvroSchema": {
              "jsonString": "{}"
            },
            "adapter_implementation": {
              "group": "CORE",
              "suggested_order": 3
            },
            "dependent_endpoints": [
              {
                "name": "getAccounts",
                "version": "OBPv3.0.0"
              },
              {
                "name": "getBalances",
                "version": "OBPv2.0.0"
              }
            ],
            "requiredFieldInfo": {
              "data.bankId": ["v2.2.0", "v3.1.0"]
            }
          }
        ]
      },
      "error_response_bodies": ["OBP-50000: Unknown Error."],
      "tags": ["Documentation", "API", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "message_docs": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "dependent_endpoints": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "version": {
                        "type": "string"
                      }
                    }
                  }
                },
                "requiredFieldInfo": {
                  "type": "object",
                  "properties": {
                    "data.bankId": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "inbound_topic": {
                  "type": "string"
                },
                "message_format": {
                  "type": "string"
                },
                "outbound_topic": {
                  "type": "string"
                },
                "outboundAvroSchema": {
                  "type": "object",
                  "properties": {
                    "jsonString": {
                      "type": "string"
                    }
                  }
                },
                "adapter_implementation": {
                  "type": "object",
                  "properties": {
                    "group": {
                      "type": "string"
                    },
                    "suggested_order": {
                      "type": "integer"
                    }
                  }
                },
                "example_inbound_message": {
                  "type": "object",
                  "properties": {
                    "jsonString": {
                      "type": "string"
                    }
                  }
                },
                "process": {
                  "type": "string"
                },
                "inboundAvroSchema": {
                  "type": "object",
                  "properties": {
                    "jsonString": {
                      "type": "string"
                    }
                  }
                },
                "description": {
                  "type": "string"
                },
                "example_outbound_message": {
                  "type": "object",
                  "properties": {
                    "jsonString": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/message-docs/CONNECTOR/swagger2.0",
      "connector_methods": ["obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv4.0.0-createJsonSchemaValidation",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "createJsonSchemaValidation"
      },
      "request_verb": "POST",
      "request_url": "/obp/v4.0.0/management/json-schema-validations/OPERATION_ID",
      "summary": "Create a JSON Schema Validation",
      "description": "<p>Create a JSON Schema Validation.</p>\n<p>Please supply a json-schema as request body.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#\">OPERATION_ID</a>: OBPv4.0.0-getBanks</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>$schema</strong></a>: $schema</p>\n<p><a href=\"/glossary#\"><strong>additionalProperties</strong></a>: additionalProperties</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#\"><strong>examples</strong></a>: examples</p>\n<p><a href=\"/glossary#\"><strong>maxLength</strong></a>: maxLength</p>\n<p><a href=\"/glossary#\"><strong>minLength</strong></a>: minLength</p>\n<p><a href=\"/glossary#\"><strong>properties</strong></a>: properties</p>\n<p><a href=\"/glossary#\"><strong>required</strong></a>: required</p>\n<p><a href=\"/glossary#\"><strong>title</strong></a>: Dr.</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>xxx_id</strong></a>: xxx_id</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>$schema</strong></a>: $schema</p>\n<p><a href=\"/glossary#\"><strong>additionalProperties</strong></a>: additionalProperties</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#\"><strong>examples</strong></a>: examples</p>\n<p><a href=\"/glossary#\"><strong>json_schema</strong></a>: json_schema</p>\n<p><a href=\"/glossary#\"><strong>maxLength</strong></a>: maxLength</p>\n<p><a href=\"/glossary#\"><strong>minLength</strong></a>: minLength</p>\n<p><a href=\"/glossary#\"><strong>operation_id</strong></a>: OBPv4.0.0-getBanks</p>\n<p><a href=\"/glossary#\"><strong>properties</strong></a>: properties</p>\n<p><a href=\"/glossary#\"><strong>required</strong></a>: required</p>\n<p><a href=\"/glossary#\"><strong>title</strong></a>: Dr.</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>xxx_id</strong></a>: xxx_id</p>\n",
      "description_markdown": "Create a JSON Schema Validation.\n\nPlease supply a json-schema as request body.\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[OPERATION_ID](/glossary#): OBPv4.0.0-getBanks\n\n\n\n\n\n**JSON request body fields:**\n\n\n\n[**$schema**](/glossary#): $schema\n\n\n\n[**additionalProperties**](/glossary#): additionalProperties\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**examples**](/glossary#): examples\n\n\n\n[**maxLength**](/glossary#): maxLength\n\n\n\n[**minLength**](/glossary#): minLength\n\n\n\n[**properties**](/glossary#): properties\n\n\n\n[**required**](/glossary#): required\n\n\n\n[**title**](/glossary#): Dr.\n\n\n\n[**type**](/glossary#type): \n\n\n\n[**xxx_id**](/glossary#): xxx_id\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**$schema**](/glossary#): $schema\n\n\n\n[**additionalProperties**](/glossary#): additionalProperties\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**examples**](/glossary#): examples\n\n\n\n[**json_schema**](/glossary#): json_schema\n\n\n\n[**maxLength**](/glossary#): maxLength\n\n\n\n[**minLength**](/glossary#): minLength\n\n\n\n[**operation_id**](/glossary#): OBPv4.0.0-getBanks\n\n\n\n[**properties**](/glossary#): properties\n\n\n\n[**required**](/glossary#): required\n\n\n\n[**title**](/glossary#): Dr.\n\n\n\n[**type**](/glossary#type): \n\n\n\n[**xxx_id**](/glossary#): xxx_id\n\n\n",
      "example_request_body": {
        "$schema": "http://json-schema.org/draft-07/schema",
        "description": "The demo json-schema",
        "title": "The demo schema",
        "required": ["xxx_id"],
        "type": "object",
        "properties": {
          "xxx_id": {
            "type": "string",
            "minLength": 2,
            "maxLength": 50,
            "examples": ["xxx_id_demo_value"]
          }
        },
        "additionalProperties": true
      },
      "success_response_body": {
        "operation_id": "OBPv4.0.0-createXxx",
        "json_schema": {
          "$schema": "http://json-schema.org/draft-07/schema",
          "description": "The demo json-schema",
          "title": "The demo schema",
          "required": ["xxx_id"],
          "type": "object",
          "properties": {
            "xxx_id": {
              "type": "string",
              "minLength": 2,
              "maxLength": 50,
              "examples": ["xxx_id_demo_value"]
            }
          },
          "additionalProperties": true
        }
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["JSON-Schema-Validation", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "required": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "$schema": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "properties": {
            "type": "object",
            "properties": {
              "xxx_id": {
                "type": "object",
                "properties": {
                  "minLength": {
                    "type": "integer"
                  },
                  "maxLength": {
                    "type": "integer"
                  },
                  "type": {
                    "type": "string"
                  },
                  "examples": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "additionalProperties": {
            "type": "boolean"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "json_schema": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string"
              },
              "required": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "$schema": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "properties": {
                "type": "object",
                "properties": {
                  "xxx_id": {
                    "type": "object",
                    "properties": {
                      "minLength": {
                        "type": "integer"
                      },
                      "maxLength": {
                        "type": "integer"
                      },
                      "type": {
                        "type": "string"
                      },
                      "examples": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "additionalProperties": {
                "type": "boolean"
              }
            }
          },
          "operation_id": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateJsonSchemaValidation",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/json-schema-validations/OPERATION_ID",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv1.3.0-getCards",
      "implemented_by": {
        "version": "OBPv1.3.0",
        "function": "getCards"
      },
      "request_verb": "GET",
      "request_url": "/obp/v1.3.0/cards",
      "summary": "Get cards for the current user",
      "description": "<p>Returns data about all the physical cards a user has been issued. These could be debit cards, credit cards, etc.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#Account\"><strong>account</strong></a>:</p>\n<p><a href=\"/glossary#alias\"><strong>alias</strong></a>:</p>\n<p><a href=\"/glossary#allows\"><strong>allows</strong></a>: [credit,debit,cash_withdrawal]</p>\n<p><a href=\"/glossary#\"><strong>bank_card_number</strong></a>: 364435172576215</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#can_add_comment\"><strong>can_add_comment</strong></a>:</p>\n<p><a href=\"/glossary#can_add_corporate_location\"><strong>can_add_corporate_location</strong></a>:</p>\n<p><a href=\"/glossary#can_add_image\"><strong>can_add_image</strong></a>:</p>\n<p><a href=\"/glossary#can_add_image_url\"><strong>can_add_image_url</strong></a>: true</p>\n<p><a href=\"/glossary#can_add_more_info\"><strong>can_add_more_info</strong></a>: true</p>\n<p><a href=\"/glossary#can_add_open_corporates_url\"><strong>can_add_open_corporates_url</strong></a>:</p>\n<p><a href=\"/glossary#can_add_physical_location\"><strong>can_add_physical_location</strong></a>:</p>\n<p><a href=\"/glossary#can_add_private_alias\"><strong>can_add_private_alias</strong></a>:</p>\n<p><a href=\"/glossary#can_add_public_alias\"><strong>can_add_public_alias</strong></a>:</p>\n<p><a href=\"/glossary#can_add_tag\"><strong>can_add_tag</strong></a>: true</p>\n<p><a href=\"/glossary#can_add_url\"><strong>can_add_url</strong></a>:</p>\n<p><a href=\"/glossary#can_add_where_tag\"><strong>can_add_where_tag</strong></a>:</p>\n<p><a href=\"/glossary#can_delete_comment\"><strong>can_delete_comment</strong></a>:</p>\n<p><a href=\"/glossary#can_delete_corporate_location\"><strong>can_delete_corporate_location</strong></a>: true</p>\n<p><a href=\"/glossary#can_delete_image\"><strong>can_delete_image</strong></a>: true</p>\n<p><a href=\"/glossary#can_delete_physical_location\"><strong>can_delete_physical_location</strong></a>:</p>\n<p><a href=\"/glossary#can_delete_tag\"><strong>can_delete_tag</strong></a>:</p>\n<p><a href=\"/glossary#can_delete_where_tag\"><strong>can_delete_where_tag</strong></a>: true</p>\n<p><a href=\"/glossary#can_edit_owner_comment\"><strong>can_edit_owner_comment</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_balance\"><strong>can_see_bank_account_balance</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_bank_name\"><strong>can_see_bank_account_bank_name</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_currency\"><strong>can_see_bank_account_currency</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_iban\"><strong>can_see_bank_account_iban</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_label\"><strong>can_see_bank_account_label</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_national_identifier\"><strong>can_see_bank_account_national_identifier</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_number\"><strong>can_see_bank_account_number</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_owners\"><strong>can_see_bank_account_owners</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_swift_bic\"><strong>can_see_bank_account_swift_bic</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_type\"><strong>can_see_bank_account_type</strong></a>:</p>\n<p><a href=\"/glossary#can_see_comments\"><strong>can_see_comments</strong></a>:</p>\n<p><a href=\"/glossary#can_see_corporate_location\"><strong>can_see_corporate_location</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_image_url\"><strong>can_see_image_url</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_images\"><strong>can_see_images</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_more_info\"><strong>can_see_more_info</strong></a>:</p>\n<p><a href=\"/glossary#can_see_open_corporates_url\"><strong>can_see_open_corporates_url</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_bank_name\"><strong>can_see_other_account_bank_name</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_iban\"><strong>can_see_other_account_iban</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_kind\"><strong>can_see_other_account_kind</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_metadata\"><strong>can_see_other_account_metadata</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_national_identifier\"><strong>can_see_other_account_national_identifier</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_other_account_number\"><strong>can_see_other_account_number</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_other_account_swift_bic\"><strong>can_see_other_account_swift_bic</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_owner_comment\"><strong>can_see_owner_comment</strong></a>:</p>\n<p><a href=\"/glossary#can_see_physical_location\"><strong>can_see_physical_location</strong></a>:</p>\n<p><a href=\"/glossary#can_see_private_alias\"><strong>can_see_private_alias</strong></a>:</p>\n<p><a href=\"/glossary#can_see_public_alias\"><strong>can_see_public_alias</strong></a>:</p>\n<p><a href=\"/glossary#can_see_tags\"><strong>can_see_tags</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_amount\"><strong>can_see_transaction_amount</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_transaction_balance\"><strong>can_see_transaction_balance</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_currency\"><strong>can_see_transaction_currency</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_description\"><strong>can_see_transaction_description</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_transaction_finish_date\"><strong>can_see_transaction_finish_date</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_metadata\"><strong>can_see_transaction_metadata</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_other_bank_account\"><strong>can_see_transaction_other_bank_account</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_start_date\"><strong>can_see_transaction_start_date</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_this_bank_account\"><strong>can_see_transaction_this_bank_account</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_type\"><strong>can_see_transaction_type</strong></a>:</p>\n<p><a href=\"/glossary#can_see_url\"><strong>can_see_url</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_where_tag\"><strong>can_see_where_tag</strong></a>: true</p>\n<p><a href=\"/glossary#cancelled\"><strong>cancelled</strong></a>: true</p>\n<p><a href=\"/glossary#cards\"><strong>cards</strong></a>:</p>\n<p><a href=\"/glossary#collected\"><strong>collected</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#enabled\"><strong>enabled</strong></a>: true</p>\n<p><a href=\"/glossary#\"><strong>expires_date</strong></a>: 2021-01-27</p>\n<p><a href=\"/glossary#hide_metadata_if_alias_used\"><strong>hide_metadata_if_alias_used</strong></a>:</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#is_public\"><strong>is_public</strong></a>: true</p>\n<p><a href=\"/glossary#\"><strong>issue_number</strong></a>: 1</p>\n<p><a href=\"/glossary#\"><strong>label</strong></a>: My Account</p>\n<p><a href=\"/glossary#\"><strong>name_on_card</strong></a>: SusanSmith</p>\n<p><a href=\"/glossary#networks\"><strong>networks</strong></a>:</p>\n<p><a href=\"/glossary#on_hot_list\"><strong>on_hot_list</strong></a>: false</p>\n<p><a href=\"/glossary#pin_reset\"><strong>pin_reset</strong></a>:</p>\n<p><a href=\"/glossary#posted\"><strong>posted</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#reason_requested\"><strong>reason_requested</strong></a>:</p>\n<p><a href=\"/glossary#replacement\"><strong>replacement</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>requested_date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#\"><strong>serial_number</strong></a>: 1324234</p>\n<p><a href=\"/glossary#short_name\"><strong>short_name</strong></a>:</p>\n<p><a href=\"/glossary#technology\"><strong>technology</strong></a>: technology1</p>\n<p><a href=\"/glossary#\"><strong>valid_from_date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#views_available\"><strong>views_available</strong></a>:</p>\n",
      "description_markdown": "Returns data about all the physical cards a user has been issued. These could be debit cards, credit cards, etc.\n\nAuthentication is Mandatory\n\n\n**JSON response body fields:**\n\n\n\n[**account**](/glossary#Account): \n\n\n\n[**alias**](/glossary#alias): \n\n\n\n[**allows**](/glossary#allows): [credit,debit,cash_withdrawal]\n\n\n\n[**bank_card_number**](/glossary#): 364435172576215\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**can_add_comment**](/glossary#can_add_comment): \n\n\n\n[**can_add_corporate_location**](/glossary#can_add_corporate_location): \n\n\n\n[**can_add_image**](/glossary#can_add_image): \n\n\n\n[**can_add_image_url**](/glossary#can_add_image_url): true\n\n\n\n[**can_add_more_info**](/glossary#can_add_more_info): true\n\n\n\n[**can_add_open_corporates_url**](/glossary#can_add_open_corporates_url): \n\n\n\n[**can_add_physical_location**](/glossary#can_add_physical_location): \n\n\n\n[**can_add_private_alias**](/glossary#can_add_private_alias): \n\n\n\n[**can_add_public_alias**](/glossary#can_add_public_alias): \n\n\n\n[**can_add_tag**](/glossary#can_add_tag): true\n\n\n\n[**can_add_url**](/glossary#can_add_url): \n\n\n\n[**can_add_where_tag**](/glossary#can_add_where_tag): \n\n\n\n[**can_delete_comment**](/glossary#can_delete_comment): \n\n\n\n[**can_delete_corporate_location**](/glossary#can_delete_corporate_location): true\n\n\n\n[**can_delete_image**](/glossary#can_delete_image): true\n\n\n\n[**can_delete_physical_location**](/glossary#can_delete_physical_location): \n\n\n\n[**can_delete_tag**](/glossary#can_delete_tag): \n\n\n\n[**can_delete_where_tag**](/glossary#can_delete_where_tag): true\n\n\n\n[**can_edit_owner_comment**](/glossary#can_edit_owner_comment): true\n\n\n\n[**can_see_bank_account_balance**](/glossary#can_see_bank_account_balance): \n\n\n\n[**can_see_bank_account_bank_name**](/glossary#can_see_bank_account_bank_name): true\n\n\n\n[**can_see_bank_account_currency**](/glossary#can_see_bank_account_currency): \n\n\n\n[**can_see_bank_account_iban**](/glossary#can_see_bank_account_iban): \n\n\n\n[**can_see_bank_account_label**](/glossary#can_see_bank_account_label): true\n\n\n\n[**can_see_bank_account_national_identifier**](/glossary#can_see_bank_account_national_identifier): \n\n\n\n[**can_see_bank_account_number**](/glossary#can_see_bank_account_number): true\n\n\n\n[**can_see_bank_account_owners**](/glossary#can_see_bank_account_owners): true\n\n\n\n[**can_see_bank_account_swift_bic**](/glossary#can_see_bank_account_swift_bic): \n\n\n\n[**can_see_bank_account_type**](/glossary#can_see_bank_account_type): \n\n\n\n[**can_see_comments**](/glossary#can_see_comments): \n\n\n\n[**can_see_corporate_location**](/glossary#can_see_corporate_location): true\n\n\n\n[**can_see_image_url**](/glossary#can_see_image_url): true\n\n\n\n[**can_see_images**](/glossary#can_see_images): true\n\n\n\n[**can_see_more_info**](/glossary#can_see_more_info): \n\n\n\n[**can_see_open_corporates_url**](/glossary#can_see_open_corporates_url): \n\n\n\n[**can_see_other_account_bank_name**](/glossary#can_see_other_account_bank_name): \n\n\n\n[**can_see_other_account_iban**](/glossary#can_see_other_account_iban): \n\n\n\n[**can_see_other_account_kind**](/glossary#can_see_other_account_kind): \n\n\n\n[**can_see_other_account_metadata**](/glossary#can_see_other_account_metadata): \n\n\n\n[**can_see_other_account_national_identifier**](/glossary#can_see_other_account_national_identifier): true\n\n\n\n[**can_see_other_account_number**](/glossary#can_see_other_account_number): true\n\n\n\n[**can_see_other_account_swift_bic**](/glossary#can_see_other_account_swift_bic): true\n\n\n\n[**can_see_owner_comment**](/glossary#can_see_owner_comment): \n\n\n\n[**can_see_physical_location**](/glossary#can_see_physical_location): \n\n\n\n[**can_see_private_alias**](/glossary#can_see_private_alias): \n\n\n\n[**can_see_public_alias**](/glossary#can_see_public_alias): \n\n\n\n[**can_see_tags**](/glossary#can_see_tags): \n\n\n\n[**can_see_transaction_amount**](/glossary#can_see_transaction_amount): true\n\n\n\n[**can_see_transaction_balance**](/glossary#can_see_transaction_balance): \n\n\n\n[**can_see_transaction_currency**](/glossary#can_see_transaction_currency): \n\n\n\n[**can_see_transaction_description**](/glossary#can_see_transaction_description): true\n\n\n\n[**can_see_transaction_finish_date**](/glossary#can_see_transaction_finish_date): \n\n\n\n[**can_see_transaction_metadata**](/glossary#can_see_transaction_metadata): \n\n\n\n[**can_see_transaction_other_bank_account**](/glossary#can_see_transaction_other_bank_account): \n\n\n\n[**can_see_transaction_start_date**](/glossary#can_see_transaction_start_date): \n\n\n\n[**can_see_transaction_this_bank_account**](/glossary#can_see_transaction_this_bank_account): \n\n\n\n[**can_see_transaction_type**](/glossary#can_see_transaction_type): \n\n\n\n[**can_see_url**](/glossary#can_see_url): true\n\n\n\n[**can_see_where_tag**](/glossary#can_see_where_tag): true\n\n\n\n[**cancelled**](/glossary#cancelled): true\n\n\n\n[**cards**](/glossary#cards): \n\n\n\n[**collected**](/glossary#collected): 2020-01-27\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**enabled**](/glossary#enabled): true\n\n\n\n[**expires_date**](/glossary#): 2021-01-27\n\n\n\n[**hide_metadata_if_alias_used**](/glossary#hide_metadata_if_alias_used): \n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**is_public**](/glossary#is_public): true\n\n\n\n[**issue_number**](/glossary#): 1\n\n\n\n[**label**](/glossary#): My Account\n\n\n\n[**name_on_card**](/glossary#): SusanSmith\n\n\n\n[**networks**](/glossary#networks): \n\n\n\n[**on_hot_list**](/glossary#on_hot_list): false\n\n\n\n[**pin_reset**](/glossary#pin_reset): \n\n\n\n[**posted**](/glossary#posted): 2020-01-27\n\n\n\n[**reason_requested**](/glossary#reason_requested): \n\n\n\n[**replacement**](/glossary#replacement): \n\n\n\n[**requested_date**](/glossary#): 2020-01-27\n\n\n\n[**serial_number**](/glossary#): 1324234\n\n\n\n[**short_name**](/glossary#short_name): \n\n\n\n[**technology**](/glossary#technology): technology1\n\n\n\n[**valid_from_date**](/glossary#): 2020-01-27\n\n\n\n[**views_available**](/glossary#views_available): \n\n\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "cards": [
          {
            "bank_id": "gh.29.uk",
            "bank_card_number": "364435172576215",
            "name_on_card": "String",
            "issue_number": "1",
            "serial_number": "1324234",
            "valid_from_date": "1100-01-01T00:00:00Z",
            "expires_date": "1100-01-01T00:00:00Z",
            "enabled": true,
            "cancelled": true,
            "on_hot_list": true,
            "technology": "String",
            "networks": ["String"],
            "allows": ["String"],
            "account": {
              "id": "123",
              "label": "OBP",
              "views_available": [
                {
                  "id": "123",
                  "short_name": "short_name",
                  "description": "description",
                  "is_public": true,
                  "alias": "None",
                  "hide_metadata_if_alias_used": true,
                  "can_add_comment": true,
                  "can_add_corporate_location": true,
                  "can_add_image": true,
                  "can_add_image_url": true,
                  "can_add_more_info": true,
                  "can_add_open_corporates_url": true,
                  "can_add_physical_location": true,
                  "can_add_private_alias": true,
                  "can_add_public_alias": true,
                  "can_add_tag": true,
                  "can_add_url": true,
                  "can_add_where_tag": true,
                  "can_delete_comment": true,
                  "can_delete_corporate_location": true,
                  "can_delete_image": true,
                  "can_delete_physical_location": true,
                  "can_delete_tag": true,
                  "can_delete_where_tag": true,
                  "can_edit_owner_comment": true,
                  "can_see_bank_account_balance": true,
                  "can_see_bank_account_bank_name": true,
                  "can_see_bank_account_currency": true,
                  "can_see_bank_account_iban": true,
                  "can_see_bank_account_label": true,
                  "can_see_bank_account_national_identifier": true,
                  "can_see_bank_account_number": true,
                  "can_see_bank_account_owners": true,
                  "can_see_bank_account_swift_bic": true,
                  "can_see_bank_account_type": true,
                  "can_see_comments": true,
                  "can_see_corporate_location": true,
                  "can_see_image_url": true,
                  "can_see_images": true,
                  "can_see_more_info": true,
                  "can_see_open_corporates_url": true,
                  "can_see_other_account_bank_name": true,
                  "can_see_other_account_iban": true,
                  "can_see_other_account_kind": true,
                  "can_see_other_account_metadata": true,
                  "can_see_other_account_national_identifier": true,
                  "can_see_other_account_number": true,
                  "can_see_other_account_swift_bic": true,
                  "can_see_owner_comment": true,
                  "can_see_physical_location": true,
                  "can_see_private_alias": true,
                  "can_see_public_alias": true,
                  "can_see_tags": true,
                  "can_see_transaction_amount": true,
                  "can_see_transaction_balance": true,
                  "can_see_transaction_currency": true,
                  "can_see_transaction_description": true,
                  "can_see_transaction_finish_date": true,
                  "can_see_transaction_metadata": true,
                  "can_see_transaction_other_bank_account": true,
                  "can_see_transaction_start_date": true,
                  "can_see_transaction_this_bank_account": true,
                  "can_see_transaction_type": true,
                  "can_see_url": true,
                  "can_see_where_tag": true
                }
              ],
              "bank_id": "gh.29.uk"
            },
            "replacement": {
              "requested_date": "1100-01-01T00:00:00Z",
              "reason_requested": "RENEW"
            },
            "pin_reset": [
              {
                "requested_date": "1100-01-01T00:00:00Z",
                "reason_requested": "FORGOT"
              }
            ],
            "collected": "1100-01-01T00:00:00Z",
            "posted": "1100-01-01T00:00:00Z"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Card"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "cards": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "technology": {
                  "type": "string"
                },
                "name_on_card": {
                  "type": "string"
                },
                "enabled": {
                  "type": "boolean"
                },
                "pin_reset": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "reason_requested": {
                        "type": "string"
                      },
                      "requested_date": {
                        "type": "string",
                        "format": "date-time"
                      }
                    }
                  }
                },
                "collected": {
                  "type": "string",
                  "format": "date-time"
                },
                "on_hot_list": {
                  "type": "boolean"
                },
                "replacement": {
                  "type": "object",
                  "properties": {
                    "reason_requested": {
                      "type": "string"
                    },
                    "requested_date": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                },
                "account": {
                  "type": "object",
                  "properties": {
                    "bank_id": {
                      "type": "string"
                    },
                    "label": {
                      "type": "string"
                    },
                    "views_available": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "can_see_other_account_swift_bic": {
                            "type": "boolean"
                          },
                          "can_see_where_tag": {
                            "type": "boolean"
                          },
                          "can_see_url": {
                            "type": "boolean"
                          },
                          "can_see_bank_account_swift_bic": {
                            "type": "boolean"
                          },
                          "can_see_tags": {
                            "type": "boolean"
                          },
                          "can_see_transaction_balance": {
                            "type": "boolean"
                          },
                          "can_delete_corporate_location": {
                            "type": "boolean"
                          },
                          "can_add_image_url": {
                            "type": "boolean"
                          },
                          "can_see_public_alias": {
                            "type": "boolean"
                          },
                          "can_add_comment": {
                            "type": "boolean"
                          },
                          "description": {
                            "type": "string"
                          },
                          "can_see_corporate_location": {
                            "type": "boolean"
                          },
                          "can_see_other_account_bank_name": {
                            "type": "boolean"
                          },
                          "can_see_more_info": {
                            "type": "boolean"
                          },
                          "can_see_physical_location": {
                            "type": "boolean"
                          },
                          "can_edit_owner_comment": {
                            "type": "boolean"
                          },
                          "can_see_private_alias": {
                            "type": "boolean"
                          },
                          "can_see_bank_account_balance": {
                            "type": "boolean"
                          },
                          "can_add_public_alias": {
                            "type": "boolean"
                          },
                          "can_see_bank_account_owners": {
                            "type": "boolean"
                          },
                          "can_see_other_account_metadata": {
                            "type": "boolean"
                          },
                          "can_delete_physical_location": {
                            "type": "boolean"
                          },
                          "hide_metadata_if_alias_used": {
                            "type": "boolean"
                          },
                          "can_see_transaction_this_bank_account": {
                            "type": "boolean"
                          },
                          "can_see_image_url": {
                            "type": "boolean"
                          },
                          "can_see_transaction_type": {
                            "type": "boolean"
                          },
                          "can_see_images": {
                            "type": "boolean"
                          },
                          "can_see_transaction_amount": {
                            "type": "boolean"
                          },
                          "can_see_transaction_metadata": {
                            "type": "boolean"
                          },
                          "id": {
                            "type": "string"
                          },
                          "can_see_comments": {
                            "type": "boolean"
                          },
                          "can_see_other_account_iban": {
                            "type": "boolean"
                          },
                          "can_add_image": {
                            "type": "boolean"
                          },
                          "can_see_bank_account_type": {
                            "type": "boolean"
                          },
                          "can_see_other_account_kind": {
                            "type": "boolean"
                          },
                          "can_see_bank_account_currency": {
                            "type": "boolean"
                          },
                          "can_add_where_tag": {
                            "type": "boolean"
                          },
                          "can_see_transaction_start_date": {
                            "type": "boolean"
                          },
                          "can_see_bank_account_label": {
                            "type": "boolean"
                          },
                          "can_add_private_alias": {
                            "type": "boolean"
                          },
                          "can_see_transaction_currency": {
                            "type": "boolean"
                          },
                          "can_add_more_info": {
                            "type": "boolean"
                          },
                          "can_delete_comment": {
                            "type": "boolean"
                          },
                          "can_see_transaction_other_bank_account": {
                            "type": "boolean"
                          },
                          "can_see_bank_account_number": {
                            "type": "boolean"
                          },
                          "can_add_corporate_location": {
                            "type": "boolean"
                          },
                          "can_add_url": {
                            "type": "boolean"
                          },
                          "short_name": {
                            "type": "string"
                          },
                          "can_delete_where_tag": {
                            "type": "boolean"
                          },
                          "is_public": {
                            "type": "boolean"
                          },
                          "can_see_owner_comment": {
                            "type": "boolean"
                          },
                          "can_see_transaction_finish_date": {
                            "type": "boolean"
                          },
                          "can_see_open_corporates_url": {
                            "type": "boolean"
                          },
                          "can_add_physical_location": {
                            "type": "boolean"
                          },
                          "can_see_bank_account_iban": {
                            "type": "boolean"
                          },
                          "can_see_other_account_national_identifier": {
                            "type": "boolean"
                          },
                          "can_delete_image": {
                            "type": "boolean"
                          },
                          "can_add_tag": {
                            "type": "boolean"
                          },
                          "can_add_open_corporates_url": {
                            "type": "boolean"
                          },
                          "can_delete_tag": {
                            "type": "boolean"
                          },
                          "can_see_transaction_description": {
                            "type": "boolean"
                          },
                          "can_see_bank_account_national_identifier": {
                            "type": "boolean"
                          },
                          "can_see_other_account_number": {
                            "type": "boolean"
                          },
                          "can_see_bank_account_bank_name": {
                            "type": "boolean"
                          },
                          "alias": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                },
                "expires_date": {
                  "type": "string",
                  "format": "date-time"
                },
                "posted": {
                  "type": "string",
                  "format": "date-time"
                },
                "networks": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "bank_id": {
                  "type": "string"
                },
                "bank_card_number": {
                  "type": "string"
                },
                "issue_number": {
                  "type": "string"
                },
                "serial_number": {
                  "type": "string"
                },
                "cancelled": {
                  "type": "boolean"
                },
                "allows": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "valid_from_date": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/cards",
      "connector_methods": ["obp.getPhysicalCardsForUser", "obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv4.0.0-revokeGrantUserAccessToViews",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "revokeGrantUserAccessToViews"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/account-access",
      "summary": "Revoke/Grant User access to View",
      "description": "<p>Revoke/Grant the logged in User access to the views identified by json.</p>\n<p>Authentication is Mandatory and the user needs to be an account holder or has owner view access.</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#revoked\"><strong>revoked</strong></a>:</p>\n",
      "description_markdown": "Revoke/Grant the logged in User access to the views identified by json.\n\nAuthentication is Mandatory and the user needs to be an account holder or has owner view access.\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**revoked**](/glossary#revoked): \n\n\n",
      "example_request_body": {
        "views": ["ReadAccountsBasic"]
      },
      "success_response_body": {
        "revoked": true
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20047: User must have access to the owner view or must be an account holder.",
        "OBP-10001: Incorrect json format.",
        "OBP-20005: User not found. Please specify a valid value for USER_ID.",
        "OBP-30252: System view not found. Please specify a valid value for VIEW_ID",
        "OBP-30005: View not found for Account. Please specify a valid value for VIEW_ID",
        "OBP-30064: Cannot revoke account access.",
        "OBP-30065: Cannot find account access.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Account-Access", "View-Custom", "Account", "User", "OwnerViewRequired"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "views": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "revoked": {
            "type": "boolean"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/account-access",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv3.0.0-getPrivateAccountIdsbyBankId",
      "implemented_by": {
        "version": "OBPv3.0.0",
        "function": "getPrivateAccountIdsbyBankId"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.0.0/banks/BANK_ID/accounts/account_ids/private",
      "summary": "Get Accounts at Bank (IDs only)",
      "description": "<p>Returns only the list of accounts ids at BANK_ID that the user has access to.</p>\n<p>Each account must have at least one private View.</p>\n<p>For each account the API returns its account ID.</p>\n<p>If you want to see more information on the Views, use the Account Detail call.</p>\n<p>optional request parameters:</p>\n<ul>\n<li>account_type_filter: one or many accountType value, split by comma</li>\n<li>account_type_filter_operation: the filter type of account_type_filter, value must be INCLUDE or EXCLUDE</li>\n</ul>\n<p>whole url example:<br />\n/banks/BANK_ID/accounts/account_ids/private?account_type_filter=330,CURRENT+PLUS&amp;account_type_filter_operation=INCLUDE</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#accounts\"><strong>accounts</strong></a>:</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n",
      "description_markdown": "Returns only the list of accounts ids at BANK_ID that the user has access to.\n\nEach account must have at least one private View.\n\nFor each account the API returns its account ID.\n\nIf you want to see more information on the Views, use the Account Detail call.\n\n\noptional request parameters:\n\n* account_type_filter: one or many accountType value, split by comma\n* account_type_filter_operation: the filter type of account_type_filter, value must be INCLUDE or EXCLUDE\n\nwhole url example:\n/banks/BANK_ID/accounts/account_ids/private?account_type_filter=330,CURRENT+PLUS&account_type_filter_operation=INCLUDE\n    \n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**accounts**](/glossary#accounts): \n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n",
      "success_response_body": {
        "accounts": [
          {
            "id": "5995d6a2-01b3-423c-a173-5481df49bdaf"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Account", "Account Information Service (AIS)", "PSD2", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "accounts": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/account_ids/private",
      "connector_methods": ["obp.getCoreBankAccounts", "obp.getBank", "obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv4.0.0-getBankLevelEndpointMapping",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getBankLevelEndpointMapping"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/management/banks/BANK_ID/endpoint-mappings/ENDPOINT_MAPPING_ID",
      "summary": "Get Bank Level Endpoint Mapping",
      "description": "<p>Get an Bank Level Endpoint Mapping by ENDPOINT_MAPPING_ID.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#\">ENDPOINT_MAPPING_ID</a>: ENDPOINT_MAPPING_ID</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n",
      "description_markdown": "Get an Bank Level Endpoint Mapping by ENDPOINT_MAPPING_ID.\n\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[ENDPOINT_MAPPING_ID](/glossary#): ENDPOINT_MAPPING_ID\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n",
      "success_response_body": {
        "operation_id": "OBPv4.0.0-dynamicEndpoint_POST_account",
        "request_mapping": {},
        "response_mapping": {
          "name": {
            "entity": "FooBar",
            "field": "name",
            "query": "number"
          },
          "balance": {
            "entity": "FashionBrand",
            "field": "number",
            "query": "number"
          }
        },
        "endpoint_mapping_id": "b4e0352a-9a0f-4bfa-b30b-9003aa467f50"
      },
      "error_response_bodies": [
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Endpoint-Mapping", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "operation_id": {
            "type": "string"
          },
          "request_mapping": {
            "type": "object",
            "properties": {}
          },
          "response_mapping": {
            "type": "object",
            "properties": {
              "name": {
                "type": "object",
                "properties": {
                  "entity": {
                    "type": "string"
                  },
                  "field": {
                    "type": "string"
                  },
                  "query": {
                    "type": "string"
                  }
                }
              },
              "balance": {
                "type": "object",
                "properties": {
                  "entity": {
                    "type": "string"
                  },
                  "field": {
                    "type": "string"
                  },
                  "query": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "endpoint_mapping_id": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanGetBankLevelEndpointMapping",
          "requires_bank_id": true
        },
        {
          "role": "CanGetEndpointMapping",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/banks/BANK_ID/endpoint-mappings/ENDPOINT_MAPPING_ID",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv4.0.0-getUserWithAttributes",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getUserWithAttributes"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/users/USER_ID/attributes",
      "summary": "Get User Attributes for the user",
      "description": "<p>Get User Attributes for the user defined via USER_ID.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#User.user_id\">USER_ID</a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"&#x6d;&#x61;&#105;&#108;&#116;&#111;&#x3a;f&#101;l&#105;&#x78;s&#109;i&#116;h@&#x65;x&#97;&#x6d;&#x70;&#x6c;&#101;&#46;c&#x6f;&#x6d;\">&#x66;&#x65;&#108;i&#x78;&#x73;&#109;&#105;&#x74;&#x68;&#x40;&#x65;xa&#x6d;&#x70;&#x6c;&#x65;&#x2e;&#x63;&#111;&#109;</a></p>\n<p><a href=\"/glossary#\"><strong>insert_date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p>\n<p><a href=\"/glossary#provider_id\"><strong>provider_id</strong></a>:</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>user_attribute_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>user_attributes</strong></a>: user_attributes</p>\n<p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p>\n<p><a href=\"/glossary#\"><strong>username</strong></a>: felixsmith</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n",
      "description_markdown": "Get User Attributes for the user defined via USER_ID.\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[USER_ID](/glossary#User.user_id): 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**email**](/glossary#): felixsmith@example.com\n\n\n\n[**insert_date**](/glossary#): 2020-01-27\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**provider**](/glossary#provider): ETHEREUM\n\n\n\n[**provider_id**](/glossary#provider_id): \n\n\n\n[**type**](/glossary#type): \n\n\n\n[**user_attribute_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**user_attributes**](/glossary#): user_attributes\n\n\n\n[**user_id**](/glossary#): 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\n\n\n\n[**username**](/glossary#): felixsmith\n\n\n\n[**value**](/glossary#): 5987953\n\n\n",
      "success_response_body": {
        "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
        "email": "felixsmith@example.com",
        "provider_id": "Chris",
        "provider": "http://127.0.0.1:8080",
        "username": "felixsmith",
        "user_attributes": [
          {
            "user_attribute_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
            "name": "BATTERY_LEVEL",
            "type": "STRING",
            "value": "90",
            "insert_date": "2023-04-13T04:30:08Z"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["User", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "provider_id": {
            "type": "string"
          },
          "user_attributes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string"
                },
                "user_attribute_id": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "insert_date": {
                  "type": "string",
                  "format": "date-time"
                },
                "name": {
                  "type": "string"
                }
              }
            }
          },
          "username": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanGetUsersWithAttributes",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/users/USER_ID/attributes",
      "connector_methods": ["obp.getUserAttributes"]
    },
    {
      "operation_id": "OBPv1.4.0-getCustomerMessages",
      "implemented_by": {
        "version": "OBPv1.4.0",
        "function": "getCustomerMessages"
      },
      "request_verb": "GET",
      "request_url": "/obp/v1.4.0/banks/BANK_ID/customer/messages",
      "summary": "Get Customer Messages for a Customer",
      "description": "<p>Get messages for the logged in customer<br />\nMessages sent to the currently authenticated user.</p>\n<p>Authentication via OAuth is required.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#from_department\"><strong>from_department</strong></a>: Open Bank</p>\n<p><a href=\"/glossary#from_person\"><strong>from_person</strong></a>: Tom</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#message\"><strong>message</strong></a>: 123456</p>\n<p><a href=\"/glossary#messages\"><strong>messages</strong></a>:</p>\n",
      "description_markdown": "Get messages for the logged in customer\nMessages sent to the currently authenticated user.\n\nAuthentication via OAuth is required.\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**date**](/glossary#): 2020-01-27\n\n\n\n[**from_department**](/glossary#from_department): Open Bank\n\n\n\n[**from_person**](/glossary#from_person): Tom\n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**message**](/glossary#message): 123456\n\n\n\n[**messages**](/glossary#messages): \n\n\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "messages": [
          {
            "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
            "date": "1100-01-01T00:00:00Z",
            "message": "String",
            "from_department": "String",
            "from_person": "String"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Customer-Message", "Customer"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "messages": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                },
                "from_department": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "date": {
                  "type": "string",
                  "format": "date-time"
                },
                "from_person": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/customer/messages",
      "connector_methods": ["obp.getBankLegacy"]
    },
    {
      "operation_id": "OBPv4.0.0-getCounterpartyByIdForAnyAccount",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getCounterpartyByIdForAnyAccount"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/management/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/counterparties/COUNTERPARTY_ID",
      "summary": "Get Counterparty by Id for any account (Explicit) ",
      "description": "<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#\">COUNTERPARTY_ID</a>: 9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#bespoke\"><strong>bespoke</strong></a>:</p>\n<p><a href=\"/glossary#corporate_location\"><strong>corporate_location</strong></a>: 10</p>\n<p><a href=\"/glossary#\"><strong>counterparty_id</strong></a>: 9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#created_by_user_id\"><strong>created_by_user_id</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#image_url\"><strong>image_url</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>is_beneficiary</strong></a>: true</p>\n<p><a href=\"/glossary#\"><strong>key</strong></a>: CustomerNumber</p>\n<p><a href=\"/glossary#latitude\"><strong>latitude</strong></a>: 38.8951</p>\n<p><a href=\"/glossary#longitude\"><strong>longitude</strong></a>: -77.0364</p>\n<p><a href=\"/glossary#metadata\"><strong>metadata</strong></a>:</p>\n<p><a href=\"/glossary#more_info\"><strong>more_info</strong></a>: More information about this fee</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#open_corporates_url\"><strong>open_corporates_url</strong></a>:</p>\n<p><a href=\"/glossary#other_account_routing_address\"><strong>other_account_routing_address</strong></a>:</p>\n<p><a href=\"/glossary#other_account_routing_scheme\"><strong>other_account_routing_scheme</strong></a>:</p>\n<p><a href=\"/glossary#other_account_secondary_routing_address\"><strong>other_account_secondary_routing_address</strong></a>:</p>\n<p><a href=\"/glossary#other_account_secondary_routing_scheme\"><strong>other_account_secondary_routing_scheme</strong></a>:</p>\n<p><a href=\"/glossary#other_bank_routing_address\"><strong>other_bank_routing_address</strong></a>:</p>\n<p><a href=\"/glossary#other_bank_routing_scheme\"><strong>other_bank_routing_scheme</strong></a>:</p>\n<p><a href=\"/glossary#other_branch_routing_address\"><strong>other_branch_routing_address</strong></a>:</p>\n<p><a href=\"/glossary#other_branch_routing_scheme\"><strong>other_branch_routing_scheme</strong></a>:</p>\n<p><a href=\"/glossary#physical_location\"><strong>physical_location</strong></a>:</p>\n<p><a href=\"/glossary#private_alias\"><strong>private_alias</strong></a>:</p>\n<p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p>\n<p><a href=\"/glossary#public_alias\"><strong>public_alias</strong></a>:</p>\n<p><a href=\"/glossary#this_account_id\"><strong>this_account_id</strong></a>:</p>\n<p><a href=\"/glossary#this_bank_id\"><strong>this_bank_id</strong></a>:</p>\n<p><a href=\"/glossary#this_view_id\"><strong>this_view_id</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>url</strong></a>: <a href=\"http://www.example.com/id-docs/123/image.png\">http://www.example.com/id-docs/123/image.png</a></p>\n<p><a href=\"/glossary#User\"><strong>user</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>username</strong></a>: felixsmith</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n",
      "description_markdown": "Authentication is Mandatory\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[COUNTERPARTY_ID](/glossary#): 9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[VIEW_ID](/glossary#this_view_id): owner\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**bespoke**](/glossary#bespoke): \n\n\n\n[**corporate_location**](/glossary#corporate_location): 10\n\n\n\n[**counterparty_id**](/glossary#): 9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**created_by_user_id**](/glossary#created_by_user_id): \n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**date**](/glossary#): 2020-01-27\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**image_url**](/glossary#image_url): \n\n\n\n[**is_beneficiary**](/glossary#): true\n\n\n\n[**key**](/glossary#): CustomerNumber\n\n\n\n[**latitude**](/glossary#latitude): 38.8951\n\n\n\n[**longitude**](/glossary#longitude): -77.0364\n\n\n\n[**metadata**](/glossary#metadata): \n\n\n\n[**more_info**](/glossary#more_info): More information about this fee\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**open_corporates_url**](/glossary#open_corporates_url): \n\n\n\n[**other_account_routing_address**](/glossary#other_account_routing_address): \n\n\n\n[**other_account_routing_scheme**](/glossary#other_account_routing_scheme): \n\n\n\n[**other_account_secondary_routing_address**](/glossary#other_account_secondary_routing_address): \n\n\n\n[**other_account_secondary_routing_scheme**](/glossary#other_account_secondary_routing_scheme): \n\n\n\n[**other_bank_routing_address**](/glossary#other_bank_routing_address): \n\n\n\n[**other_bank_routing_scheme**](/glossary#other_bank_routing_scheme): \n\n\n\n[**other_branch_routing_address**](/glossary#other_branch_routing_address): \n\n\n\n[**other_branch_routing_scheme**](/glossary#other_branch_routing_scheme): \n\n\n\n[**physical_location**](/glossary#physical_location): \n\n\n\n[**private_alias**](/glossary#private_alias): \n\n\n\n[**provider**](/glossary#provider): ETHEREUM\n\n\n\n[**public_alias**](/glossary#public_alias): \n\n\n\n[**this_account_id**](/glossary#this_account_id): \n\n\n\n[**this_bank_id**](/glossary#this_bank_id): \n\n\n\n[**this_view_id**](/glossary#this_view_id): \n\n\n\n[**url**](/glossary#): http://www.example.com/id-docs/123/image.png\n\n\n\n[**user**](/glossary#User): \n\n\n\n[**username**](/glossary#): felixsmith\n\n\n\n[**value**](/glossary#): 5987953\n\n\n",
      "success_response_body": {
        "name": "CounterpartyName",
        "description": "My landlord",
        "currency": "EUR",
        "created_by_user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
        "this_bank_id": "gh.29.uk",
        "this_account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0",
        "this_view_id": "owner",
        "counterparty_id": "9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "other_bank_routing_scheme": "OBP",
        "other_bank_routing_address": "gh.29.uk",
        "other_branch_routing_scheme": "OBP",
        "other_branch_routing_address": "12f8a9e6-c2b1-407a-8bd0-421b7119307e",
        "other_account_routing_scheme": "OBP",
        "other_account_routing_address": "36f8a9e6-c2b1-407a-8bd0-421b7119307e",
        "other_account_secondary_routing_scheme": "IBAN",
        "other_account_secondary_routing_address": "DE89370400440532013000",
        "is_beneficiary": true,
        "bespoke": [
          {
            "key": "englishName",
            "value": "english Name"
          }
        ],
        "metadata": {
          "public_alias": "String",
          "more_info": "String",
          "url": "String",
          "image_url": "String",
          "open_corporates_url": "String",
          "corporate_location": {
            "latitude": 11.45,
            "longitude": 11.45,
            "date": "1100-01-01T00:00:00Z",
            "user": {
              "id": "123",
              "provider": "http://127.0.0.1:8080",
              "username": "felixsmith"
            }
          },
          "physical_location": {
            "latitude": 11.45,
            "longitude": 11.45,
            "date": "1100-01-01T00:00:00Z",
            "user": {
              "id": "123",
              "provider": "http://127.0.0.1:8080",
              "username": "felixsmith"
            }
          },
          "private_alias": "String"
        }
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30110: Invalid Account Id. The ACCOUNT_ID should only contain 0-9/a-z/A-Z/'-'/'.'/'_', the length should be smaller than 255.",
        "OBP-30111: Invalid Bank Id. The BANK_ID should only contain 0-9/a-z/A-Z/'-'/'.'/'_', the length should be smaller than 255.",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-10001: Incorrect json format.",
        "OBP-30005: View not found for Account. Please specify a valid value for VIEW_ID",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["Counterparty", "Account", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "bespoke": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string"
                },
                "key": {
                  "type": "string"
                }
              }
            }
          },
          "created_by_user_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "metadata": {
            "type": "object",
            "properties": {
              "private_alias": {
                "type": "string"
              },
              "physical_location": {
                "type": "object",
                "properties": {
                  "user": {
                    "type": "object",
                    "properties": {
                      "provider": {
                        "type": "string"
                      },
                      "id": {
                        "type": "string"
                      },
                      "username": {
                        "type": "string"
                      }
                    }
                  },
                  "date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "longitude": {
                    "type": "number"
                  },
                  "latitude": {
                    "type": "number"
                  }
                }
              },
              "url": {
                "type": "string"
              },
              "public_alias": {
                "type": "string"
              },
              "open_corporates_url": {
                "type": "string"
              },
              "more_info": {
                "type": "string"
              },
              "corporate_location": {
                "type": "object",
                "properties": {
                  "user": {
                    "type": "object",
                    "properties": {
                      "provider": {
                        "type": "string"
                      },
                      "id": {
                        "type": "string"
                      },
                      "username": {
                        "type": "string"
                      }
                    }
                  },
                  "date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "longitude": {
                    "type": "number"
                  },
                  "latitude": {
                    "type": "number"
                  }
                }
              },
              "image_url": {
                "type": "string"
              }
            }
          },
          "this_bank_id": {
            "type": "string"
          },
          "other_bank_routing_scheme": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "other_account_secondary_routing_address": {
            "type": "string"
          },
          "counterparty_id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "other_bank_routing_address": {
            "type": "string"
          },
          "other_account_routing_address": {
            "type": "string"
          },
          "other_branch_routing_scheme": {
            "type": "string"
          },
          "this_account_id": {
            "type": "string"
          },
          "other_account_secondary_routing_scheme": {
            "type": "string"
          },
          "is_beneficiary": {
            "type": "boolean"
          },
          "other_account_routing_scheme": {
            "type": "string"
          },
          "other_branch_routing_address": {
            "type": "string"
          },
          "this_view_id": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanGetCounterpartyAtAnyBank",
          "requires_bank_id": false
        },
        {
          "role": "CanGetCounterparty",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/counterparties/COUNTERPARTY_ID",
      "connector_methods": ["obp.getCounterpartyByCounterpartyId"]
    },
    {
      "operation_id": "OBPv3.1.0-config",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "config"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.1.0/config",
      "summary": "Get API Configuration",
      "description": "<p>Returns information about:</p>\n<ul>\n<li>The default bank_id</li>\n<li>Akka configuration</li>\n<li>Elastic Search configuration</li>\n<li>Cached functions</li>\n</ul>\n<p>Authentication is Mandatory</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#akka\"><strong>akka</strong></a>:</p>\n<p><a href=\"/glossary#cache\"><strong>cache</strong></a>:</p>\n<p><a href=\"/glossary#elastic_search\"><strong>elastic_search</strong></a>:</p>\n<p><a href=\"/glossary#function_name\"><strong>function_name</strong></a>:</p>\n<p><a href=\"/glossary#log_level\"><strong>log_level</strong></a>:</p>\n<p><a href=\"/glossary#metrics\"><strong>metrics</strong></a>:</p>\n<p><a href=\"/glossary#ports\"><strong>ports</strong></a>:</p>\n<p><a href=\"/glossary#property\"><strong>property</strong></a>:</p>\n<p><a href=\"/glossary#require_scopes_for_all_roles\"><strong>require_scopes_for_all_roles</strong></a>:</p>\n<p><a href=\"/glossary#require_scopes_for_listed_roles\"><strong>require_scopes_for_listed_roles</strong></a>: true</p>\n<p><a href=\"/glossary#scopes\"><strong>scopes</strong></a>:</p>\n<p><a href=\"/glossary#ttl_in_seconds\"><strong>ttl_in_seconds</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n<p><a href=\"/glossary#warehouse\"><strong>warehouse</strong></a>:</p>\n<p><a href=\"/glossary#remote_data_secret_matched\">remote_data_secret_matched</a>:</p>\n",
      "description_markdown": "Returns information about:\n\n* The default bank_id\n* Akka configuration\n* Elastic Search configuration\n* Cached functions \n\nAuthentication is Mandatory\n\n\n**JSON response body fields:**\n\n\n\n[**akka**](/glossary#akka): \n\n\n\n[**cache**](/glossary#cache): \n\n\n\n[**elastic_search**](/glossary#elastic_search): \n\n\n\n[**function_name**](/glossary#function_name): \n\n\n\n[**log_level**](/glossary#log_level): \n\n\n\n[**metrics**](/glossary#metrics): \n\n\n\n[**ports**](/glossary#ports): \n\n\n\n[**property**](/glossary#property): \n\n\n\n[**require_scopes_for_all_roles**](/glossary#require_scopes_for_all_roles): \n\n\n\n[**require_scopes_for_listed_roles**](/glossary#require_scopes_for_listed_roles): true\n\n\n\n[**scopes**](/glossary#scopes): \n\n\n\n[**ttl_in_seconds**](/glossary#ttl_in_seconds): \n\n\n\n[**value**](/glossary#): 5987953\n\n\n\n[**warehouse**](/glossary#warehouse): \n\n\n\n[remote_data_secret_matched](/glossary#remote_data_secret_matched): \n\n\n",
      "success_response_body": {
        "akka": {
          "ports": [
            {
              "property": "default",
              "value": "8080"
            }
          ],
          "log_level": "Debug",
          "remote_data_secret_matched": true
        },
        "elastic_search": {
          "metrics": [
            {
              "property": "String",
              "value": "Mapper"
            }
          ],
          "warehouse": [
            {
              "property": "String",
              "value": "ElasticSearch"
            }
          ]
        },
        "cache": [
          {
            "function_name": "getBanks",
            "ttl_in_seconds": 5
          }
        ],
        "scopes": {
          "require_scopes_for_all_roles": true,
          "require_scopes_for_listed_roles": ["CanCreateUserAuthContextUpdate"]
        }
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["API", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "elastic_search": {
            "type": "object",
            "properties": {
              "metrics": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "property": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              "warehouse": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string"
                    },
                    "property": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "scopes": {
            "type": "object",
            "properties": {
              "require_scopes_for_all_roles": {
                "type": "boolean"
              },
              "require_scopes_for_listed_roles": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "akka": {
            "type": "object",
            "properties": {
              "ports": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string"
                    },
                    "property": {
                      "type": "string"
                    }
                  }
                }
              },
              "remote_data_secret_matched": {
                "type": "boolean"
              },
              "log_level": {
                "type": "string"
              }
            }
          },
          "cache": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "ttl_in_seconds": {
                  "type": "integer"
                },
                "function_name": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetConfig",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/config",
      "connector_methods": ["obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv4.0.0-createBankLevelDynamicResourceDoc",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "createBankLevelDynamicResourceDoc"
      },
      "request_verb": "POST",
      "request_url": "/obp/v4.0.0/management/banks/BANK_ID/dynamic-resource-docs",
      "summary": "Create Bank Level Dynamic Resource Doc",
      "description": "<p>Create a Bank Level Dynamic Resource Doc.</p>\n<p>The connector_method_body is URL-encoded format String</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#roles\"><strong>roles</strong></a>: CanCreateMyUser</p>\n<p><a href=\"/glossary#summary\"><strong>summary</strong></a>:</p>\n<p><a href=\"/glossary#tags\"><strong>tags</strong></a>: Create-My-User</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#roles\"><strong>roles</strong></a>: CanCreateMyUser</p>\n<p><a href=\"/glossary#summary\"><strong>summary</strong></a>:</p>\n<p><a href=\"/glossary#tags\"><strong>tags</strong></a>: Create-My-User</p>\n",
      "description_markdown": "Create a Bank Level Dynamic Resource Doc.\n\nThe connector_method_body is URL-encoded format String\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON request body fields:**\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**roles**](/glossary#roles): CanCreateMyUser\n\n\n\n[**summary**](/glossary#summary): \n\n\n\n[**tags**](/glossary#tags): Create-My-User\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**roles**](/glossary#roles): CanCreateMyUser\n\n\n\n[**summary**](/glossary#summary): \n\n\n\n[**tags**](/glossary#tags): Create-My-User\n\n\n",
      "example_request_body": {
        "error_response_bodies": "OBP-50000: Unknown Error.,OBP-20001: User not logged in. Authentication is required!,OBP-20006: User is missing one or more roles: ,OBP-10001: Incorrect json format.",
        "description": "Create one User",
        "tags": "Create-My-User",
        "request_verb": "POST",
        "method_body": "%20%20%20%20val%20Some(resourceDoc)%20%3D%20callContext.resourceDocument%0A%20%20%20%20val%20hasRequestBody%20%3D%20request.body.isDefined%0A%0A%20%20%20%20%2F%2F%20get%20Path%20Parameters%2C%20example%3A%0A%20%20%20%20%2F%2F%20if%20the%20requestUrl%20of%20resourceDoc%20is%20%2Fhello%2Fbanks%2FBANK_ID%2Fworld%0A%20%20%20%20%2F%2F%20the%20request%20path%20is%20%2Fhello%2Fbanks%2Fbank_x%2Fworld%0A%20%20%20%20%2F%2FpathParams.get(%22BANK_ID%22)%20will%20get%20Option(%22bank_x%22)%20value%0A%0A%20%20%20%20val%20myUserId%20%3D%20pathParams(%22MY_USER_ID%22)%0A%0A%0A%20%20%20%20val%20requestEntity%20%3D%20request.json%20match%20%7B%0A%20%20%20%20%20%20case%20Full(zson)%20%3D%3E%0A%20%20%20%20%20%20%20%20try%20%7B%0A%20%20%20%20%20%20%20%20%20%20zson.extract%5BRequestRootJsonClass%5D%0A%20%20%20%20%20%20%20%20%7D%20catch%20%7B%0A%20%20%20%20%20%20%20%20%20%20case%20e%3A%20MappingException%20%3D%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20return%20Full(errorJsonResponse(s%22%24InvalidJsonFormat%20%24%7Be.msg%7D%22))%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20case%20_%3A%20EmptyBox%20%3D%3E%0A%20%20%20%20%20%20%20%20return%20Full(errorJsonResponse(s%22%24InvalidRequestPayload%20Current%20request%20has%20no%20payload%22))%0A%20%20%20%20%7D%0A%0A%0A%20%20%20%20%2F%2F%20please%20add%20business%20logic%20here%0A%20%20%20%20val%20responseBody%3AResponseRootJsonClass%20%3D%20ResponseRootJsonClass(s%22%24%7BmyUserId%7D_from_path%22%2C%20requestEntity.name%2C%20requestEntity.age%2C%20requestEntity.hobby)%0A%20%20%20%20Future.successful%20%7B%0A%20%20%20%20%20%20(responseBody%2C%20HttpCode.%60200%60(callContext.callContext))%0A%20%20%20%20%7D",
        "roles": "CanCreateMyUser",
        "example_request_body": {
          "name": "Jhon",
          "age": 12,
          "hobby": ["coding"],
          "_optional_fields_": ["hobby"]
        },
        "request_url": "/my_user/MY_USER_ID",
        "bank_id": "gh.29.uk",
        "partial_function_name": "createUser",
        "summary": "Create My User",
        "success_response_body": {
          "my_user_id": "some_id_value",
          "name": "Jhon",
          "age": 12,
          "hobby": ["coding"],
          "_optional_fields_": ["hobby"]
        }
      },
      "success_response_body": {
        "error_response_bodies": "OBP-50000: Unknown Error.,OBP-20001: User not logged in. Authentication is required!,OBP-20006: User is missing one or more roles: ,OBP-10001: Incorrect json format.",
        "description": "Create one User",
        "tags": "Create-My-User",
        "dynamic_resource_doc_id": "vce035ca-9a0f-4bfa-b30b-9003aa467f51",
        "request_verb": "POST",
        "method_body": "%20%20%20%20val%20Some(resourceDoc)%20%3D%20callContext.resourceDocument%0A%20%20%20%20val%20hasRequestBody%20%3D%20request.body.isDefined%0A%0A%20%20%20%20%2F%2F%20get%20Path%20Parameters%2C%20example%3A%0A%20%20%20%20%2F%2F%20if%20the%20requestUrl%20of%20resourceDoc%20is%20%2Fhello%2Fbanks%2FBANK_ID%2Fworld%0A%20%20%20%20%2F%2F%20the%20request%20path%20is%20%2Fhello%2Fbanks%2Fbank_x%2Fworld%0A%20%20%20%20%2F%2FpathParams.get(%22BANK_ID%22)%20will%20get%20Option(%22bank_x%22)%20value%0A%0A%20%20%20%20val%20myUserId%20%3D%20pathParams(%22MY_USER_ID%22)%0A%0A%0A%20%20%20%20val%20requestEntity%20%3D%20request.json%20match%20%7B%0A%20%20%20%20%20%20case%20Full(zson)%20%3D%3E%0A%20%20%20%20%20%20%20%20try%20%7B%0A%20%20%20%20%20%20%20%20%20%20zson.extract%5BRequestRootJsonClass%5D%0A%20%20%20%20%20%20%20%20%7D%20catch%20%7B%0A%20%20%20%20%20%20%20%20%20%20case%20e%3A%20MappingException%20%3D%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20return%20Full(errorJsonResponse(s%22%24InvalidJsonFormat%20%24%7Be.msg%7D%22))%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20case%20_%3A%20EmptyBox%20%3D%3E%0A%20%20%20%20%20%20%20%20return%20Full(errorJsonResponse(s%22%24InvalidRequestPayload%20Current%20request%20has%20no%20payload%22))%0A%20%20%20%20%7D%0A%0A%0A%20%20%20%20%2F%2F%20please%20add%20business%20logic%20here%0A%20%20%20%20val%20responseBody%3AResponseRootJsonClass%20%3D%20ResponseRootJsonClass(s%22%24%7BmyUserId%7D_from_path%22%2C%20requestEntity.name%2C%20requestEntity.age%2C%20requestEntity.hobby)%0A%20%20%20%20Future.successful%20%7B%0A%20%20%20%20%20%20(responseBody%2C%20HttpCode.%60200%60(callContext.callContext))%0A%20%20%20%20%7D",
        "roles": "CanCreateMyUser",
        "example_request_body": {
          "name": "Jhon",
          "age": 12,
          "hobby": ["coding"],
          "_optional_fields_": ["hobby"]
        },
        "request_url": "/my_user/MY_USER_ID",
        "bank_id": "gh.29.uk",
        "partial_function_name": "createUser",
        "summary": "Create My User",
        "success_response_body": {
          "my_user_id": "some_id_value",
          "name": "Jhon",
          "age": 12,
          "hobby": ["coding"],
          "_optional_fields_": ["hobby"]
        }
      },
      "error_response_bodies": [
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Dynamic-Resource-Doc", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "tags": {
            "type": "string"
          },
          "request_verb": {
            "type": "string"
          },
          "example_request_body": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "age": {
                "type": "integer"
              },
              "hobby": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "s": {
                      "type": "string"
                    }
                  }
                }
              },
              "_optional_fields_": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "s": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "bank_id": {
            "type": "string"
          },
          "partial_function_name": {
            "type": "string"
          },
          "success_response_body": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "hobby": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "s": {
                      "type": "string"
                    }
                  }
                }
              },
              "my_user_id": {
                "type": "string"
              },
              "age": {
                "type": "integer"
              },
              "_optional_fields_": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "s": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "roles": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          },
          "request_url": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "method_body": {
            "type": "string"
          },
          "error_response_bodies": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "tags": {
            "type": "string"
          },
          "request_verb": {
            "type": "string"
          },
          "example_request_body": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "age": {
                "type": "integer"
              },
              "hobby": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "s": {
                      "type": "string"
                    }
                  }
                }
              },
              "_optional_fields_": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "s": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "bank_id": {
            "type": "string"
          },
          "partial_function_name": {
            "type": "string"
          },
          "success_response_body": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "hobby": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "s": {
                      "type": "string"
                    }
                  }
                }
              },
              "my_user_id": {
                "type": "string"
              },
              "age": {
                "type": "integer"
              },
              "_optional_fields_": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "s": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "roles": {
            "type": "string"
          },
          "dynamic_resource_doc_id": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          },
          "request_url": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "method_body": {
            "type": "string"
          },
          "error_response_bodies": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateBankLevelDynamicResourceDoc",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/banks/BANK_ID/dynamic-resource-docs",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv5.0.0-getCustomerAccountLinksByBankIdAccountId",
      "implemented_by": {
        "version": "OBPv5.0.0",
        "function": "getCustomerAccountLinksByBankIdAccountId"
      },
      "request_verb": "GET",
      "request_url": "/obp/v5.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/customer-account-links",
      "summary": "Get Customer Account Links by ACCOUNT_ID",
      "description": "<p>Get Customer Account Links by ACCOUNT_ID</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>account_id</strong></a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#\"><strong>customer_account_link_id</strong></a>: xyz8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>links</strong></a>: links</p>\n<p><a href=\"/glossary#\"><strong>relationship_type</strong></a>: Owner</p>\n",
      "description_markdown": "Get Customer Account Links by ACCOUNT_ID\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**account_id**](/glossary#): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**customer_account_link_id**](/glossary#): xyz8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**customer_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**links**](/glossary#): links\n\n\n\n[**relationship_type**](/glossary#): Owner\n\n\n",
      "success_response_body": {
        "links": [
          {
            "customer_account_link_id": "xyz8a7e4-6d02-40e3-a129-0b2bf89de8uh",
            "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
            "bank_id": "gh.29.uk",
            "account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0",
            "relationship_type": "Owner"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Customer", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "customer_account_link_id": {
                  "type": "string"
                },
                "customer_id": {
                  "type": "string"
                },
                "bank_id": {
                  "type": "string"
                },
                "account_id": {
                  "type": "string"
                },
                "relationship_type": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetCustomerAccountLinks",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/customer-account-links",
      "connector_methods": ["obp.getCustomerAccountLinksByBankIdAccountId"]
    },
    {
      "operation_id": "OBPv4.0.0-deleteTagForViewOnAccount",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "deleteTagForViewOnAccount"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/metadata/tags/TAG_ID",
      "summary": "Delete a tag on account",
      "description": "<p>Deletes the tag TAG_ID about the account ACCOUNT_ID made on <a href=\"#1_2_1-getViewsForBankAccount\">view</a>.</p>\n<p>Authentication is Mandatory</p>\n<p>Authentication is required as the tag is linked with the user.</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#tag_id\">TAG_ID</a>:</p>\n<p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p>\n<p><strong>JSON response body fields:</strong></p>\n",
      "description_markdown": "Deletes the tag TAG_ID about the account ACCOUNT_ID made on [view](#1_2_1-getViewsForBankAccount).\n\nAuthentication is Mandatory\n\nAuthentication is required as the tag is linked with the user.\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[TAG_ID](/glossary#tag_id): \n\n\n\n[VIEW_ID](/glossary#this_view_id): owner\n\n\n\n\n\n**JSON response body fields:**\n\n\n",
      "error_response_bodies": [
        "OBP-30022: The current view does not have the permission:",
        "OBP-30005: View not found for Account. Please specify a valid value for VIEW_ID",
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-20017: Current user does not have access to the view. Please specify a valid value for VIEW_ID.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Account-Metadata", "Account", "New-Style"],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/metadata/tags/TAG_ID",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv3.1.0-getMethodRoutings",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "getMethodRoutings"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.1.0/management/method_routings",
      "summary": "Get MethodRoutings",
      "description": "<p>Get the all MethodRoutings.</p>\n<p>Query url parameters:</p>\n<ul>\n<li>method_name: filter with method_name</li>\n<li>active: if active = true, it will show all the webui_ props. Even if they are set yet, we will return all the default webui_ props</li>\n</ul>\n<p>eg:<br />\n<a href=\"https://obp-apisandbox.joinfincubator.com/obp/v3.1.0/management/method_routings?active=true\">https://obp-apisandbox.joinfincubator.com/obp/v3.1.0/management/method_routings?active=true</a><br />\n<a href=\"https://obp-apisandbox.joinfincubator.com/obp/v3.1.0/management/method_routings?method_name=getBank\">https://obp-apisandbox.joinfincubator.com/obp/v3.1.0/management/method_routings?method_name=getBank</a></p>\n<p>Authentication is Mandatory</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>key</strong></a>: CustomerNumber</p>\n<p><a href=\"/glossary#parameters\"><strong>parameters</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n",
      "description_markdown": "Get the all MethodRoutings.\n\nQuery url parameters:\n\n* method_name: filter with method_name\n* active: if active = true, it will show all the webui_ props. Even if they are set yet, we will return all the default webui_ props\n\neg: \nhttps://obp-apisandbox.joinfincubator.com/obp/v3.1.0/management/method_routings?active=true\nhttps://obp-apisandbox.joinfincubator.com/obp/v3.1.0/management/method_routings?method_name=getBank\n\n\n\nAuthentication is Mandatory\n\n\n**JSON response body fields:**\n\n\n\n[**key**](/glossary#): CustomerNumber\n\n\n\n[**parameters**](/glossary#parameters): \n\n\n\n[**value**](/glossary#): 5987953\n\n\n",
      "success_response_body": {
        "method_routings": [
          {
            "is_bank_id_exact_match": false,
            "method_name": "getBanks",
            "connector_name": "rest_vMar2019",
            "method_routing_id": "method-routing-id",
            "bank_id_pattern": "some_bank_.*",
            "parameters": [
              {
                "key": "url",
                "value": "http://mydomain.com/xxx"
              }
            ]
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Method-Routing", "API", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "method_routings": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "parameters": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "value": {
                        "type": "string"
                      },
                      "key": {
                        "type": "string"
                      }
                    }
                  }
                },
                "is_bank_id_exact_match": {
                  "type": "boolean"
                },
                "method_name": {
                  "type": "string"
                },
                "connector_name": {
                  "type": "string"
                },
                "bank_id_pattern": {
                  "type": "string"
                },
                "method_routing_id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetMethodRoutings",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/method_routings",
      "connector_methods": ["obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv4.0.0-getBankAccountsBalances",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getBankAccountsBalances"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/balances",
      "summary": "Get Accounts Balances",
      "description": "<p>Get the Balances for the Accounts of the current User at one bank.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>account_id</strong></a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#account_routings\"><strong>account_routings</strong></a>:</p>\n<p><a href=\"/glossary#accounts\"><strong>accounts</strong></a>:</p>\n<p><a href=\"/glossary#address\"><strong>address</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p>\n<p><a href=\"/glossary#\"><strong>balances</strong></a>: balances</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#\"><strong>label</strong></a>: My Account</p>\n<p><a href=\"/glossary#scheme\"><strong>scheme</strong></a>: scheme value</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n",
      "description_markdown": "Get the Balances for the Accounts of the current User at one bank.\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**account_id**](/glossary#): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[**account_routings**](/glossary#account_routings): \n\n\n\n[**accounts**](/glossary#accounts): \n\n\n\n[**address**](/glossary#address): \n\n\n\n[**amount**](/glossary#): 10.12\n\n\n\n[**balances**](/glossary#): balances\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**label**](/glossary#): My Account\n\n\n\n[**scheme**](/glossary#scheme): scheme value\n\n\n\n[**type**](/glossary#type): \n\n\n",
      "success_response_body": {
        "accounts": [
          {
            "account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0",
            "bank_id": "gh.29.uk",
            "account_routings": [
              {
                "scheme": "accountNumber",
                "address": "123456"
              }
            ],
            "label": "My Account",
            "balances": [
              {
                "type": "",
                "currency": "EUR",
                "amount": "10"
              }
            ]
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Account", "Account Information Service (AIS)", "PSD2", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "accounts": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "bank_id": {
                  "type": "string"
                },
                "label": {
                  "type": "string"
                },
                "balances": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string"
                      },
                      "amount": {
                        "type": "string"
                      },
                      "currency": {
                        "type": "string"
                      }
                    }
                  }
                },
                "account_routings": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "scheme": {
                        "type": "string"
                      },
                      "address": {
                        "type": "string"
                      }
                    }
                  }
                },
                "account_id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/balances",
      "connector_methods": ["obp.getBankAccountsBalances"]
    },
    {
      "operation_id": "OBPv4.0.0-deleteUserCustomerLink",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "deleteUserCustomerLink"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/user_customer_links/USER_CUSTOMER_LINK_ID",
      "summary": "Delete User Customer Link",
      "description": "<p>Delete User Customer Link by USER_CUSTOMER_LINK_ID</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#user_customer_link_id\">USER_CUSTOMER_LINK_ID</a>:</p>\n<p><strong>JSON response body fields:</strong></p>\n",
      "description_markdown": "Delete User Customer Link by USER_CUSTOMER_LINK_ID\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[USER_CUSTOMER_LINK_ID](/glossary#user_customer_link_id): \n\n\n\n\n\n**JSON response body fields:**\n\n\n",
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Customer", "New-Style"],
      "roles": [
        {
          "role": "CanDeleteUserCustomerLink",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/user_customer_links/USER_CUSTOMER_LINK_ID",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv4.0.0-getProductFee",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getProductFee"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/products/PRODUCT_CODE/fees/PRODUCT_FEE_ID",
      "summary": "Get Product Fee",
      "description": "<p>Get Product Fee</p>\n<p>Get one product fee by its id.</p>\n<p>Authentication is Optional</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#product_code\">PRODUCT_CODE</a>: 1234BW</p>\n<p><a href=\"/glossary#product_fee_id\">PRODUCT_FEE_ID</a>: 696hlAHLFKUHE37469287634</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#frequency\"><strong>frequency</strong></a>: DAILY</p>\n<p><a href=\"/glossary#is_active\"><strong>is_active</strong></a>: true</p>\n<p><a href=\"/glossary#more_info\"><strong>more_info</strong></a>: More information about this fee</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#product_code\"><strong>product_code</strong></a>: 1234BW</p>\n<p><a href=\"/glossary#product_fee_id\"><strong>product_fee_id</strong></a>: 696hlAHLFKUHE37469287634</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n",
      "description_markdown": "Get Product Fee\n\nGet one product fee by its id.\n\nAuthentication is Optional\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[PRODUCT_CODE](/glossary#product_code): 1234BW\n\n\n\n[PRODUCT_FEE_ID](/glossary#product_fee_id): 696hlAHLFKUHE37469287634\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**amount**](/glossary#): 10.12\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**frequency**](/glossary#frequency): DAILY\n\n\n\n[**is_active**](/glossary#is_active): true\n\n\n\n[**more_info**](/glossary#more_info): More information about this fee\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**product_code**](/glossary#product_code): 1234BW\n\n\n\n[**product_fee_id**](/glossary#product_fee_id): 696hlAHLFKUHE37469287634\n\n\n\n[**type**](/glossary#type): \n\n\n\n[**value**](/glossary#): 5987953\n\n\n",
      "success_response_body": {
        "bank_id": "gh.29.uk",
        "product_code": "1234BW",
        "product_fee_id": "696hlAHLFKUHE37469287634",
        "name": "ACCOUNT_MANAGEMENT_FEE",
        "is_active": true,
        "more_info": "More information about this fee",
        "value": {
          "currency": "EUR",
          "amount": "10.12",
          "frequency": "DAILY",
          "type": ""
        }
      },
      "error_response_bodies": [
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Product", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "product_code": {
            "type": "string"
          },
          "is_active": {
            "type": "boolean"
          },
          "bank_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "more_info": {
            "type": "string"
          },
          "value": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "currency": {
                "type": "string"
              },
              "frequency": {
                "type": "string"
              },
              "amount": {
                "type": "number"
              }
            }
          },
          "product_fee_id": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/products/PRODUCT_CODE/fees/PRODUCT_FEE_ID",
      "connector_methods": ["obp.getProductFeeById", "obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv4.0.0-updateConsentStatus",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "updateConsentStatus"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/consents/CONSENT_ID",
      "summary": "Update Consent Status",
      "description": "<p>This endpoint is used to update the Status of Consent.</p>\n<p>Each Consent has one of the following states: INITIATED, ACCEPTED, REJECTED, REVOKED, RECEIVED, VALID, REVOKEDBYPSU, EXPIRED, TERMINATEDBYTPP, AUTHORISED, AWAITINGAUTHORISATION.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#consent_id\">CONSENT_ID</a>:</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#consent_id\"><strong>consent_id</strong></a>:</p>\n<p><a href=\"/glossary#jwt\"><strong>jwt</strong></a>:</p>\n<p><a href=\"/glossary#status\"><strong>status</strong></a>:</p>\n",
      "description_markdown": "This endpoint is used to update the Status of Consent.\n\nEach Consent has one of the following states: INITIATED, ACCEPTED, REJECTED, REVOKED, RECEIVED, VALID, REVOKEDBYPSU, EXPIRED, TERMINATEDBYTPP, AUTHORISED, AWAITINGAUTHORISATION.\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[CONSENT_ID](/glossary#consent_id): \n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**consent_id**](/glossary#consent_id): \n\n\n\n[**jwt**](/glossary#jwt): \n\n\n\n[**status**](/glossary#status): \n\n\n",
      "example_request_body": {
        "status": "AUTHORISED"
      },
      "success_response_body": {
        "consent_id": "9d429899-24f5-42c8-8565-943ffa6a7945",
        "jwt": "eyJhbGciOiJIUzI1NiJ9.eyJlbnRpdGxlbWVudHMiOltdLCJjcmVhdGVkQnlVc2VySWQiOiJhYjY1MzlhOS1iMTA1LTQ0ODktYTg4My0wYWQ4ZDZjNjE2NTciLCJzdWIiOiIyMWUxYzhjYy1mOTE4LTRlYWMtYjhlMy01ZTVlZWM2YjNiNGIiLCJhdWQiOiJlanpuazUwNWQxMzJyeW9tbmhieDFxbXRvaHVyYnNiYjBraWphanNrIiwibmJmIjoxNTUzNTU0ODk5LCJpc3MiOiJodHRwczpcL1wvd3d3Lm9wZW5iYW5rcHJvamVjdC5jb20iLCJleHAiOjE1NTM1NTg0OTksImlhdCI6MTU1MzU1NDg5OSwianRpIjoiMDlmODhkNWYtZWNlNi00Mzk4LThlOTktNjYxMWZhMWNkYmQ1Iiwidmlld3MiOlt7ImFjY291bnRfaWQiOiJtYXJrb19wcml2aXRlXzAxIiwiYmFua19pZCI6ImdoLjI5LnVrLngiLCJ2aWV3X2lkIjoib3duZXIifSx7ImFjY291bnRfaWQiOiJtYXJrb19wcml2aXRlXzAyIiwiYmFua19pZCI6ImdoLjI5LnVrLngiLCJ2aWV3X2lkIjoib3duZXIifV19.8cc7cBEf2NyQvJoukBCmDLT7LXYcuzTcSYLqSpbxLp4",
        "status": "AUTHORISED"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-10001: Incorrect json format.",
        "OBP-50200: Connector cannot return the data we requested.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Consent", "Account Information Service (AIS)", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "consent_id": {
            "type": "string"
          },
          "jwt": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/consents/CONSENT_ID",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv1.2.1-getTagsForViewOnTransaction",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "getTagsForViewOnTransaction"
      },
      "request_verb": "GET",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transactions/TRANSACTION_ID/metadata/tags",
      "summary": "Get Transaction Tags",
      "description": "<p>Returns the transaction TRANSACTION_ID tags made on a <a href=\"#1_2_1-getViewsForBankAccount\">view</a> (VIEW_ID).<br />\nAuthentication via OAuth is required if the view is not public.</p>\n<p>Authentication is Optional</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#transaction_ids\">TRANSACTION_ID</a>: 2fg8a7e4-6d02-40e3-a129-0b2bf89de8ub</p>\n<p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#display_name\"><strong>display_name</strong></a>:</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p>\n<p><a href=\"/glossary#User\"><strong>user</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n",
      "description_markdown": "Returns the transaction TRANSACTION_ID tags made on a [view](#1_2_1-getViewsForBankAccount) (VIEW_ID).\n         Authentication via OAuth is required if the view is not public.\n\nAuthentication is Optional\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[TRANSACTION_ID](/glossary#transaction_ids): 2fg8a7e4-6d02-40e3-a129-0b2bf89de8ub\n\n\n\n[VIEW_ID](/glossary#this_view_id): owner\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**date**](/glossary#): 2020-01-27\n\n\n\n[**display_name**](/glossary#display_name): \n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**provider**](/glossary#provider): ETHEREUM\n\n\n\n[**user**](/glossary#User): \n\n\n\n[**value**](/glossary#): 5987953\n\n\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
        "value": "OBP",
        "date": "1100-01-01T00:00:00Z",
        "user": {
          "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
          "provider": "http://127.0.0.1:8080",
          "display_name": "OBP"
        }
      },
      "error_response_bodies": [
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-30022: The current view does not have the permission:",
        "OBP-30005: View not found for Account. Please specify a valid value for VIEW_ID",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Transaction-Metadata", "Transaction", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "user": {
            "type": "object",
            "properties": {
              "provider": {
                "type": "string"
              },
              "display_name": {
                "type": "string"
              },
              "id": {
                "type": "string"
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transactions/TRANSACTION_ID/metadata/tags",
      "connector_methods": ["obp.checkBankAccountExists", "obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv2.0.0-addEntitlement",
      "implemented_by": {
        "version": "OBPv2.0.0",
        "function": "addEntitlement"
      },
      "request_verb": "POST",
      "request_url": "/obp/v2.0.0/users/USER_ID/entitlements",
      "summary": "Add Entitlement for a User",
      "description": "<p>Create Entitlement. Grant Role to User.</p>\n<p>Entitlements are used to grant System or Bank level roles to Users. (For Account level privileges, see Views)</p>\n<p>For a System level Role (.e.g CanGetAnyUser), set bank_id to an empty string i.e. &quot;bank_id&quot;:&quot;&quot;</p>\n<p>For a Bank level Role (e.g. CanCreateAccount), set bank_id to a valid value e.g. &quot;bank_id&quot;:&quot;my-bank-id&quot;</p>\n<p>Authentication is required and the user needs to be a Super Admin. Super Admins are listed in the Props file.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#User.user_id\">USER_ID</a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#role_name\"><strong>role_name</strong></a>:</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#entitlement_id\"><strong>entitlement_id</strong></a>:</p>\n<p><a href=\"/glossary#role_name\"><strong>role_name</strong></a>:</p>\n",
      "description_markdown": "Create Entitlement. Grant Role to User.\n\nEntitlements are used to grant System or Bank level roles to Users. (For Account level privileges, see Views)\n\nFor a System level Role (.e.g CanGetAnyUser), set bank_id to an empty string i.e. \"bank_id\":\"\"\n\nFor a Bank level Role (e.g. CanCreateAccount), set bank_id to a valid value e.g. \"bank_id\":\"my-bank-id\"\n\nAuthentication is required and the user needs to be a Super Admin. Super Admins are listed in the Props file.\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[USER_ID](/glossary#User.user_id): 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\n\n\n\n\n\n**JSON request body fields:**\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**role_name**](/glossary#role_name): \n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**entitlement_id**](/glossary#entitlement_id): \n\n\n\n[**role_name**](/glossary#role_name): \n\n\n",
      "example_request_body": {
        "bank_id": "gh.29.uk",
        "role_name": "CanCreateBranch"
      },
      "success_response_body": {
        "entitlement_id": "6fb17583-1e49-4435-bb74-a14fe0996723",
        "role_name": "CanQueryOtherUser",
        "bank_id": "gh.29.uk"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20005: User not found. Please specify a valid value for USER_ID.",
        "OBP-20050: Current User is not a Super Admin!",
        "OBP-10001: Incorrect json format.",
        "OBP-10007: Incorrect Role name:",
        "OBP-30205: This entitlement is a Bank Role. Please set bank_id to a valid bank id.",
        "OBP-30206: This entitlement is a System Role. Please set bank_id to empty string.",
        "OBP-30216: Entitlement already exists for the user.",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["Role", "Entitlement", "User", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "bank_id": {
            "type": "string"
          },
          "role_name": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "role_name": {
            "type": "string"
          },
          "bank_id": {
            "type": "string"
          },
          "entitlement_id": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateEntitlementAtOneBank",
          "requires_bank_id": true
        },
        {
          "role": "CanCreateEntitlementAtAnyBank",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/users/USER_ID/entitlements",
      "connector_methods": ["obp.getBankLegacy", "obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv2.2.0-getMessageDocs",
      "implemented_by": {
        "version": "OBPv2.2.0",
        "function": "getMessageDocs"
      },
      "request_verb": "GET",
      "request_url": "/obp/v2.2.0/message-docs/CONNECTOR",
      "summary": "Get Message Docs",
      "description": "<p>These message docs provide example messages sent by OBP to the (Kafka) message queue for processing by the Core Banking / Payment system Adapter - together with an example expected response and possible error codes.<br />\nIntegrators can use these messages to build Adapters that provide core banking services to OBP.</p>\n<p>Note: API Explorer provides a Message Docs page where these messages are displayed.</p>\n<p><code>CONNECTOR</code>: kafka_vSept2018, stored_procedure_vDec2019 ...</p>\n<p>Authentication is Optional</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Connector\">CONNECTOR</a>: CONNECTOR</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#adapter_implementation\"><strong>adapter_implementation</strong></a>:</p>\n<p><a href=\"/glossary#dependent_endpoints\"><strong>dependent_endpoints</strong></a>:</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#example_inbound_message\"><strong>example_inbound_message</strong></a>: {}</p>\n<p><a href=\"/glossary#example_outbound_message\"><strong>example_outbound_message</strong></a>: {}</p>\n<p><a href=\"/glossary#group\"><strong>group</strong></a>:</p>\n<p><a href=\"/glossary#message_docs\"><strong>message_docs</strong></a>:</p>\n<p><a href=\"/glossary#message_format\"><strong>message_format</strong></a>:</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#process\"><strong>process</strong></a>: obp.getBank</p>\n<p><a href=\"/glossary#suggested_order\"><strong>suggested_order</strong></a>:</p>\n<p><a href=\"/glossary#version\"><strong>version</strong></a>:</p>\n<p><a href=\"/glossary#inboundavroschema\">inboundAvroSchema</a>:</p>\n<p><a href=\"/glossary#inbound_topic\">inbound_topic</a>:</p>\n<p><a href=\"/glossary#outboundavroschema\">outboundAvroSchema</a>:</p>\n<p><a href=\"/glossary#outbound_topic\">outbound_topic</a>:</p>\n<p><a href=\"/glossary#requiredfieldinfo\">requiredFieldInfo</a>: false</p>\n",
      "description_markdown": "These message docs provide example messages sent by OBP to the (Kafka) message queue for processing by the Core Banking / Payment system Adapter - together with an example expected response and possible error codes.\n Integrators can use these messages to build Adapters that provide core banking services to OBP.\n\n Note: API Explorer provides a Message Docs page where these messages are displayed.\n \n `CONNECTOR`: kafka_vSept2018, stored_procedure_vDec2019 ...\n      \n\nAuthentication is Optional\n\n\n**URL Parameters:**\n\n[CONNECTOR](/glossary#Connector): CONNECTOR\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**adapter_implementation**](/glossary#adapter_implementation): \n\n\n\n[**dependent_endpoints**](/glossary#dependent_endpoints): \n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**example_inbound_message**](/glossary#example_inbound_message): {}\n\n\n\n[**example_outbound_message**](/glossary#example_outbound_message): {}\n\n\n\n[**group**](/glossary#group): \n\n\n\n[**message_docs**](/glossary#message_docs): \n\n\n\n[**message_format**](/glossary#message_format): \n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**process**](/glossary#process): obp.getBank\n\n\n\n[**suggested_order**](/glossary#suggested_order): \n\n\n\n[**version**](/glossary#version): \n\n\n\n[inboundAvroSchema](/glossary#inboundavroschema): \n\n\n\n[inbound_topic](/glossary#inbound_topic): \n\n\n\n[outboundAvroSchema](/glossary#outboundavroschema): \n\n\n\n[outbound_topic](/glossary#outbound_topic): \n\n\n\n[requiredFieldInfo](/glossary#requiredfieldinfo): false\n\n\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "message_docs": [
          {
            "process": "getAccounts",
            "message_format": "KafkaV2017",
            "outbound_topic": "to.obp.api.1.caseclass.OutboundGetAccounts",
            "inbound_topic": "from.obp.api.1.to.adapter.mf.caseclass.OutboundGetAccounts",
            "description": "get Banks",
            "example_outbound_message": {
              "jsonString": "{}"
            },
            "example_inbound_message": {
              "jsonString": "{}"
            },
            "outboundAvroSchema": {
              "jsonString": "{}"
            },
            "inboundAvroSchema": {
              "jsonString": "{}"
            },
            "adapter_implementation": {
              "group": "CORE",
              "suggested_order": 3
            },
            "dependent_endpoints": [
              {
                "name": "getAccounts",
                "version": "OBPv3.0.0"
              },
              {
                "name": "getBalances",
                "version": "OBPv2.0.0"
              }
            ],
            "requiredFieldInfo": {
              "data.bankId": ["v2.2.0", "v3.1.0"]
            }
          }
        ]
      },
      "error_response_bodies": ["OBP-50000: Unknown Error."],
      "tags": ["Documentation", "API", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "message_docs": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "dependent_endpoints": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "version": {
                        "type": "string"
                      }
                    }
                  }
                },
                "requiredFieldInfo": {
                  "type": "object",
                  "properties": {
                    "data.bankId": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "inbound_topic": {
                  "type": "string"
                },
                "message_format": {
                  "type": "string"
                },
                "outbound_topic": {
                  "type": "string"
                },
                "outboundAvroSchema": {
                  "type": "object",
                  "properties": {
                    "jsonString": {
                      "type": "string"
                    }
                  }
                },
                "adapter_implementation": {
                  "type": "object",
                  "properties": {
                    "group": {
                      "type": "string"
                    },
                    "suggested_order": {
                      "type": "integer"
                    }
                  }
                },
                "example_inbound_message": {
                  "type": "object",
                  "properties": {
                    "jsonString": {
                      "type": "string"
                    }
                  }
                },
                "process": {
                  "type": "string"
                },
                "inboundAvroSchema": {
                  "type": "object",
                  "properties": {
                    "jsonString": {
                      "type": "string"
                    }
                  }
                },
                "description": {
                  "type": "string"
                },
                "example_outbound_message": {
                  "type": "object",
                  "properties": {
                    "jsonString": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/message-docs/CONNECTOR",
      "connector_methods": ["obp.messageDocs"]
    },
    {
      "operation_id": "OBPv3.0.0-privateAccountsAtOneBank",
      "implemented_by": {
        "version": "OBPv3.0.0",
        "function": "privateAccountsAtOneBank"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.0.0/banks/BANK_ID/accounts/private",
      "summary": "Get Accounts at Bank (Minimal)",
      "description": "<p>Returns the minimal list of private accounts at BANK_ID that the user has access to.<br />\nFor each account, the API returns the ID, routing addresses and the views available to the current user.</p>\n<p>If you want to see more information on the Views, use the Account Detail call.</p>\n<p>optional request parameters:</p>\n<ul>\n<li>account_type_filter: one or many accountType value, split by comma</li>\n<li>account_type_filter_operation: the filter type of account_type_filter, value must be INCLUDE or EXCLUDE</li>\n</ul>\n<p>whole url example:<br />\n/banks/BANK_ID/accounts/private?account_type_filter=330,CURRENT+PLUS&amp;account_type_filter_operation=INCLUDE</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#account_routings\"><strong>account_routings</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>account_type</strong></a>: AC</p>\n<p><a href=\"/glossary#accounts\"><strong>accounts</strong></a>:</p>\n<p><a href=\"/glossary#address\"><strong>address</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#is_public\"><strong>is_public</strong></a>: true</p>\n<p><a href=\"/glossary#\"><strong>label</strong></a>: My Account</p>\n<p><a href=\"/glossary#scheme\"><strong>scheme</strong></a>: scheme value</p>\n<p><a href=\"/glossary#short_name\"><strong>short_name</strong></a>:</p>\n<p><a href=\"/glossary#views\"><strong>views</strong></a>:</p>\n",
      "description_markdown": "Returns the minimal list of private accounts at BANK_ID that the user has access to.\nFor each account, the API returns the ID, routing addresses and the views available to the current user.\n\nIf you want to see more information on the Views, use the Account Detail call.\n\n\noptional request parameters:\n\n* account_type_filter: one or many accountType value, split by comma\n* account_type_filter_operation: the filter type of account_type_filter, value must be INCLUDE or EXCLUDE\n\nwhole url example:\n/banks/BANK_ID/accounts/private?account_type_filter=330,CURRENT+PLUS&account_type_filter_operation=INCLUDE\n    \n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**account_routings**](/glossary#account_routings): \n\n\n\n[**account_type**](/glossary#): AC\n\n\n\n[**accounts**](/glossary#accounts): \n\n\n\n[**address**](/glossary#address): \n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**is_public**](/glossary#is_public): true\n\n\n\n[**label**](/glossary#): My Account\n\n\n\n[**scheme**](/glossary#scheme): scheme value\n\n\n\n[**short_name**](/glossary#short_name): \n\n\n\n[**views**](/glossary#views): \n\n\n",
      "success_response_body": {
        "accounts": [
          {
            "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
            "label": "String",
            "bank_id": "gh.29.uk",
            "account_type": "330",
            "account_routings": [
              {
                "scheme": "AccountNumber",
                "address": "4930396"
              }
            ],
            "views": [
              {
                "id": "owner",
                "short_name": "Owner",
                "description": "This view is for the owner for the account.",
                "is_public": false
              }
            ]
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Account", "Account Information Service (AIS)", "New-Style", "PSD2"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "accounts": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "views": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "short_name": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "is_public": {
                        "type": "boolean"
                      },
                      "id": {
                        "type": "string"
                      }
                    }
                  }
                },
                "account_type": {
                  "type": "string"
                },
                "bank_id": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "label": {
                  "type": "string"
                },
                "account_routings": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "scheme": {
                        "type": "string"
                      },
                      "address": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/private",
      "connector_methods": ["obp.getCoreBankAccounts", "obp.getBank", "obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv2.0.0-getKycMedia",
      "implemented_by": {
        "version": "OBPv2.0.0",
        "function": "getKycMedia"
      },
      "request_verb": "GET",
      "request_url": "/obp/v2.0.0/customers/CUSTOMER_ID/kyc_media",
      "summary": "Get KYC Media for a customer",
      "description": "<p>Get KYC media (scans, pictures, videos) that affirms the identity of the customer.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Customer.customer_id\">CUSTOMER_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>customer_number</strong></a>: 5987953</p>\n<p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#medias\"><strong>medias</strong></a>:</p>\n<p><a href=\"/glossary#relates_to_kyc_check_id\"><strong>relates_to_kyc_check_id</strong></a>:</p>\n<p><a href=\"/glossary#relates_to_kyc_document_id\"><strong>relates_to_kyc_document_id</strong></a>:</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>url</strong></a>: <a href=\"http://www.example.com/id-docs/123/image.png\">http://www.example.com/id-docs/123/image.png</a></p>\n",
      "description_markdown": "Get KYC media (scans, pictures, videos) that affirms the identity of the customer.\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[CUSTOMER_ID](/glossary#Customer.customer_id): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**customer_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**customer_number**](/glossary#): 5987953\n\n\n\n[**date**](/glossary#): 2020-01-27\n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**medias**](/glossary#medias): \n\n\n\n[**relates_to_kyc_check_id**](/glossary#relates_to_kyc_check_id): \n\n\n\n[**relates_to_kyc_document_id**](/glossary#relates_to_kyc_document_id): \n\n\n\n[**type**](/glossary#type): \n\n\n\n[**url**](/glossary#): http://www.example.com/id-docs/123/image.png\n\n\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "medias": [
          {
            "bank_id": "gh.29.uk",
            "customer_id": "PlaceholderString",
            "id": "PlaceholderString",
            "customer_number": "5987953",
            "type": "PlaceholderString",
            "url": "PlaceholderString",
            "date": "1100-01-01T00:00:00Z",
            "relates_to_kyc_document_id": "PlaceholderString",
            "relates_to_kyc_check_id": "PlaceholderString"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30046: Customer not found. Please specify a valid value for CUSTOMER_ID.",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["KYC", "Customer", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "medias": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "customer_id": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "bank_id": {
                  "type": "string"
                },
                "customer_number": {
                  "type": "string"
                },
                "date": {
                  "type": "string",
                  "format": "date-time"
                },
                "relates_to_kyc_document_id": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "relates_to_kyc_check_id": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetAnyKycMedia",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/customers/CUSTOMER_ID/kyc_media",
      "connector_methods": [
        "obp.getKycMedias",
        "obp.getCustomerByCustomerId",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv4.0.0-getMySpaces",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getMySpaces"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/my/spaces",
      "summary": "Get My Spaces",
      "description": "<p>Get My Spaces.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>bank_ids</strong></a>: bank_ids</p>\n",
      "description_markdown": "Get My Spaces.\n\nAuthentication is Mandatory\n\n\n**JSON response body fields:**\n\n\n\n[**bank_ids**](/glossary#): bank_ids\n\n\n",
      "success_response_body": {
        "bank_ids": ["gh.29.uk"]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["User", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "bank_ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/my/spaces",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv1.2.1-getTransactionNarrative",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "getTransactionNarrative"
      },
      "request_verb": "GET",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transactions/TRANSACTION_ID/metadata/narrative",
      "summary": "Get a Transaction Narrative",
      "description": "<p>Returns the account owner description of the transaction <a href=\"#1_2_1-getViewsForBankAccount\">moderated</a> by the view.</p>\n<p>Authentication via OAuth is required if the view is not public.</p>\n<p>Authentication is Optional</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#transaction_ids\">TRANSACTION_ID</a>: 2fg8a7e4-6d02-40e3-a129-0b2bf89de8ub</p>\n<p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#narrative\"><strong>narrative</strong></a>:</p>\n",
      "description_markdown": "Returns the account owner description of the transaction [moderated](#1_2_1-getViewsForBankAccount) by the view.\n\nAuthentication via OAuth is required if the view is not public.\n\nAuthentication is Optional\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[TRANSACTION_ID](/glossary#transaction_ids): 2fg8a7e4-6d02-40e3-a129-0b2bf89de8ub\n\n\n\n[VIEW_ID](/glossary#this_view_id): owner\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**narrative**](/glossary#narrative): \n\n\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "narrative": "narative"
      },
      "error_response_bodies": [
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-30022: The current view does not have the permission:",
        "OBP-30005: View not found for Account. Please specify a valid value for VIEW_ID",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Transaction-Metadata", "Transaction", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "narrative": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transactions/TRANSACTION_ID/metadata/narrative",
      "connector_methods": ["obp.checkBankAccountExists", "obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv4.0.0-getApiCollectionEndpoints",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getApiCollectionEndpoints"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/api-collections/API_COLLECTION_ID/api-collection-endpoints",
      "summary": "Get Api Collection Endpoints",
      "description": "<p>Get Api Collection Endpoints By API_COLLECTION_ID.</p>\n<p>Authentication is Optional</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#\">API_COLLECTION_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>api_collection_endpoint_id</strong></a>: 8uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>api_collection_endpoints</strong></a>: api_collection_endpoints</p>\n<p><a href=\"/glossary#\"><strong>api_collection_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>operation_id</strong></a>: OBPv4.0.0-getBanks</p>\n",
      "description_markdown": "Get Api Collection Endpoints By API_COLLECTION_ID.\n\nAuthentication is Optional\n\n\n**URL Parameters:**\n\n[API_COLLECTION_ID](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**api_collection_endpoint_id**](/glossary#): 8uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**api_collection_endpoints**](/glossary#): api_collection_endpoints\n\n\n\n[**api_collection_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**operation_id**](/glossary#): OBPv4.0.0-getBanks\n\n\n",
      "success_response_body": {
        "api_collection_endpoints": [
          {
            "api_collection_endpoint_id": "8uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
            "api_collection_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
            "operation_id": "OBPv4.0.0-getBanks"
          }
        ]
      },
      "error_response_bodies": ["OBP-50000: Unknown Error."],
      "tags": ["Api-Collection", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "api_collection_endpoints": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "operation_id": {
                  "type": "string"
                },
                "api_collection_id": {
                  "type": "string"
                },
                "api_collection_endpoint_id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/api-collections/API_COLLECTION_ID/api-collection-endpoints",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv4.0.0-getMapperDatabaseInfo",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getMapperDatabaseInfo"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/database/info",
      "summary": "Get Mapper Database Info",
      "description": "<p>Get basic information about the Mapper Database.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#\"><strong>git_commit</strong></a>: 59623811dd8a41f6ffe67be46954eee11913dc28</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#version\"><strong>version</strong></a>:</p>\n",
      "description_markdown": "Get basic information about the Mapper Database.\n\nAuthentication is Mandatory\n\n\n**JSON response body fields:**\n\n\n\n[**date**](/glossary#): 2020-01-27\n\n\n\n[**git_commit**](/glossary#): 59623811dd8a41f6ffe67be46954eee11913dc28\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**version**](/glossary#version): \n\n\n",
      "success_response_body": {
        "name": "String",
        "version": "String",
        "git_commit": "String",
        "date": "2013-01-21T23:08:00Z"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["API", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "git_commit": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanGetDatabaseInfo",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/database/info",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv4.0.0-updateAtmServices",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "updateAtmServices"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/atms/ATM_ID/services",
      "summary": "Update ATM Services",
      "description": "<p>Update ATM Services.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#atm_id\">ATM_ID</a>: atme0352a-9a0f-4bfa-b30b-9003aa467f51</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#atm_id\"><strong>atm_id</strong></a>: atme0352a-9a0f-4bfa-b30b-9003aa467f51</p>\n<p><a href=\"/glossary#\"><strong>services</strong></a>: services</p>\n",
      "description_markdown": "Update ATM Services.\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ATM_ID](/glossary#atm_id): atme0352a-9a0f-4bfa-b30b-9003aa467f51\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**atm_id**](/glossary#atm_id): atme0352a-9a0f-4bfa-b30b-9003aa467f51\n\n\n\n[**services**](/glossary#): services\n\n\n",
      "example_request_body": {
        "services": ["ATBP", "ATBA"]
      },
      "success_response_body": {
        "atm_id": "atme0352a-9a0f-4bfa-b30b-9003aa467f51",
        "services": ["ATBP", "ATBA"]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["ATM", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "services": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "atm_id": {
            "type": "string"
          },
          "services": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/atms/ATM_ID/services",
      "connector_methods": ["obp.updateAtmServices", "obp.getAtm"]
    },
    {
      "operation_id": "OBPv1.2.1-updateCounterpartyOpenCorporatesUrl",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "updateCounterpartyOpenCorporatesUrl"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/metadata/open_corporates_url",
      "summary": "Update Open Corporates Url of Counterparty",
      "description": "<p>Update open corporate url of other bank account</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#other_account_id\">OTHER_ACCOUNT_ID</a>:</p>\n<p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#success\"><strong>success</strong></a>:</p>\n",
      "description_markdown": "Update open corporate url of other bank account\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[OTHER_ACCOUNT_ID](/glossary#other_account_id): \n\n\n\n[VIEW_ID](/glossary#this_view_id): owner\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**success**](/glossary#success): \n\n\n",
      "example_request_body": {
        "open_corporates_URL": "String"
      },
      "success_response_body": {
        "success": "Success"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-10001: Incorrect json format.",
        "the view does not allow metadata access",
        "the view does not allow updating an open corporate url",
        "URL cannot be updated",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Counterparty-Metadata", "Counterparty", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "open_corporates_URL": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "success": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/metadata/open_corporates_url",
      "connector_methods": [
        "obp.checkBankAccountExists",
        "obp.getBank",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv4.0.0-getFirehoseAccountsAtOneBank",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getFirehoseAccountsAtOneBank"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/firehose/accounts/views/VIEW_ID",
      "summary": "Get Firehose Accounts at Bank",
      "description": "<p>Get Accounts which have a firehose view assigned to them.</p>\n<p>This endpoint allows bulk access to accounts.</p>\n<p>Requires the CanUseFirehoseAtAnyBank Role</p>\n<p>To be shown on the list, each Account must have a firehose View linked to it.</p>\n<p>A firehose view has is_firehose = true</p>\n<p>For VIEW_ID try 'owner'</p>\n<p>optional request parameters for filter with attributes<br />\nURL params example:<br />\n/banks/some-bank-id/firehose/accounts/views/owner?manager=John&amp;count=8</p>\n<p>to invalid Browser cache, add timestamp query parameter as follow, the parameter name must be <code>_timestamp_</code><br />\nURL params example:<br />\n<code>/banks/some-bank-id/firehose/accounts/views/owner?manager=John&amp;count=8&amp;_timestamp_=1596762180358</code></p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#account_routings\"><strong>account_routings</strong></a>:</p>\n<p><a href=\"/glossary#account_rules\"><strong>account_rules</strong></a>:</p>\n<p><a href=\"/glossary#accounts\"><strong>accounts</strong></a>:</p>\n<p><a href=\"/glossary#address\"><strong>address</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p>\n<p><a href=\"/glossary#balance\"><strong>balance</strong></a>: 10</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#display_name\"><strong>display_name</strong></a>:</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#\"><strong>label</strong></a>: My Account</p>\n<p><a href=\"/glossary#number\"><strong>number</strong></a>:</p>\n<p><a href=\"/glossary#owners\"><strong>owners</strong></a>:</p>\n<p><a href=\"/glossary#product_code\"><strong>product_code</strong></a>: 1234BW</p>\n<p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p>\n<p><a href=\"/glossary#scheme\"><strong>scheme</strong></a>: scheme value</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n<p><a href=\"/glossary#account_attributes\">account_attributes</a>:</p>\n",
      "description_markdown": "Get Accounts which have a firehose view assigned to them.\n\nThis endpoint allows bulk access to accounts.\n\nRequires the CanUseFirehoseAtAnyBank Role\n\nTo be shown on the list, each Account must have a firehose View linked to it.\n\nA firehose view has is_firehose = true\n\nFor VIEW_ID try 'owner'\n\noptional request parameters for filter with attributes\nURL params example:\n  /banks/some-bank-id/firehose/accounts/views/owner?manager=John&count=8\n\nto invalid Browser cache, add timestamp query parameter as follow, the parameter name must be `_timestamp_`\nURL params example:\n  `/banks/some-bank-id/firehose/accounts/views/owner?manager=John&count=8&_timestamp_=1596762180358`\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[VIEW_ID](/glossary#this_view_id): owner\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**account_routings**](/glossary#account_routings): \n\n\n\n[**account_rules**](/glossary#account_rules): \n\n\n\n[**accounts**](/glossary#accounts): \n\n\n\n[**address**](/glossary#address): \n\n\n\n[**amount**](/glossary#): 10.12\n\n\n\n[**balance**](/glossary#balance): 10\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**display_name**](/glossary#display_name): \n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**label**](/glossary#): My Account\n\n\n\n[**number**](/glossary#number): \n\n\n\n[**owners**](/glossary#owners): \n\n\n\n[**product_code**](/glossary#product_code): 1234BW\n\n\n\n[**provider**](/glossary#provider): ETHEREUM\n\n\n\n[**scheme**](/glossary#scheme): scheme value\n\n\n\n[**value**](/glossary#): 5987953\n\n\n\n[account_attributes](/glossary#account_attributes): \n\n\n",
      "success_response_body": {
        "accounts": [
          {
            "id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0",
            "bank_id": "gh.29.uk",
            "label": "My Account",
            "number": "",
            "owners": [
              {
                "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
                "provider": "http://127.0.0.1:8080",
                "display_name": "OBP"
              }
            ],
            "product_code": "1234BW",
            "balance": {
              "currency": "EUR",
              "amount": "0"
            },
            "account_routings": [
              {
                "scheme": "AccountNumber",
                "address": "4930396"
              }
            ],
            "account_rules": [
              {
                "scheme": "OVERDRAFT",
                "value": "10"
              }
            ]
          }
        ]
      },
      "error_response_bodies": [
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["Account", "Account-Firehose", "FirehoseData", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "accounts": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "product_code": {
                  "type": "string"
                },
                "account_rules": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "scheme": {
                        "type": "string"
                      },
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                "bank_id": {
                  "type": "string"
                },
                "owners": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "provider": {
                        "type": "string"
                      },
                      "display_name": {
                        "type": "string"
                      },
                      "id": {
                        "type": "string"
                      }
                    }
                  }
                },
                "label": {
                  "type": "string"
                },
                "balance": {
                  "type": "object",
                  "properties": {
                    "currency": {
                      "type": "string"
                    },
                    "amount": {
                      "type": "string"
                    }
                  }
                },
                "number": {
                  "type": "string"
                },
                "account_routings": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "scheme": {
                        "type": "string"
                      },
                      "address": {
                        "type": "string"
                      }
                    }
                  }
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanUseAccountFirehoseAtAnyBank",
          "requires_bank_id": false
        },
        {
          "role": "CanUseAccountFirehose",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/firehose/accounts/views/VIEW_ID",
      "connector_methods": [
        "obp.getBankLegacy",
        "obp.getBankAccountOld",
        "obp.getAccountAttributesByAccount"
      ]
    },
    {
      "operation_id": "OBPv4.0.0-getBankLevelDynamicEndpoints",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getBankLevelDynamicEndpoints"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/management/banks/BANK_ID/dynamic-endpoints",
      "summary": "Get Bank Level Dynamic Endpoints",
      "description": "<p>Get Bank Level Dynamic Endpoints.</p>\n<p>Authentication is Mandatory</p>\n",
      "description_markdown": "Get Bank Level Dynamic Endpoints.\n\n\n\nAuthentication is Mandatory",
      "success_response_body": {
        "dynamic_endpoints": [
          {
            "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
            "dynamic_endpoint_id": "dynamic-endpoint-id",
            "swagger_string": {
              "swagger": "2.0",
              "info": {
                "title": "Bank Accounts (Dynamic Endpoint)",
                "version": "1.0.0"
              },
              "definitions": {
                "AccountName": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "family account"
                    },
                    "balance": {
                      "type": "integer",
                      "format": "int64",
                      "example": 1000.123
                    }
                  }
                }
              },
              "paths": {
                "/accounts": {
                  "post": {
                    "operationId": "POST_account",
                    "produces": ["application/json"],
                    "responses": {
                      "201": {
                        "description": "Success Response",
                        "schema": {
                          "$ref": "#/definitions/AccountName"
                        }
                      }
                    },
                    "consumes": ["application/json"],
                    "description": "POST Accounts",
                    "summary": "POST Accounts"
                  }
                },
                "/accounts/{account_id}": {
                  "get": {
                    "operationId": "GET_account",
                    "produces": ["application/json"],
                    "responses": {
                      "200": {
                        "description": "Success Response",
                        "schema": {
                          "$ref": "#/definitions/AccountName"
                        }
                      }
                    },
                    "consumes": ["application/json"],
                    "description": "Get Bank Account",
                    "summary": "Get Bank Account by Id"
                  }
                }
              },
              "host": "obp_mock",
              "schemes": ["http", "https"]
            }
          }
        ]
      },
      "error_response_bodies": [
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Dynamic-Endpoint-Manage", "API", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "dynamic_endpoints": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "user_id": {
                  "type": "string"
                },
                "dynamic_endpoint_id": {
                  "type": "string"
                },
                "swagger_string": {
                  "type": "object",
                  "properties": {
                    "swagger": {
                      "type": "string"
                    },
                    "paths": {
                      "type": "object",
                      "properties": {
                        "/accounts": {
                          "type": "object",
                          "properties": {
                            "post": {
                              "type": "object",
                              "properties": {
                                "responses": {
                                  "type": "object",
                                  "properties": {
                                    "201": {
                                      "type": "object",
                                      "properties": {
                                        "description": {
                                          "type": "string"
                                        },
                                        "schema": {
                                          "type": "object",
                                          "properties": {
                                            "$ref": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "consumes": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "s": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "operationId": {
                                  "type": "string"
                                },
                                "summary": {
                                  "type": "string"
                                },
                                "description": {
                                  "type": "string"
                                },
                                "produces": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "s": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "/accounts/{account_id}": {
                          "type": "object",
                          "properties": {
                            "get": {
                              "type": "object",
                              "properties": {
                                "description": {
                                  "type": "string"
                                },
                                "consumes": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "s": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "operationId": {
                                  "type": "string"
                                },
                                "responses": {
                                  "type": "object",
                                  "properties": {
                                    "200": {
                                      "type": "object",
                                      "properties": {
                                        "description": {
                                          "type": "string"
                                        },
                                        "schema": {
                                          "type": "object",
                                          "properties": {
                                            "$ref": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "summary": {
                                  "type": "string"
                                },
                                "produces": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "s": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "info": {
                      "type": "object",
                      "properties": {
                        "title": {
                          "type": "string"
                        },
                        "version": {
                          "type": "string"
                        }
                      }
                    },
                    "definitions": {
                      "type": "object",
                      "properties": {
                        "AccountName": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string"
                            },
                            "properties": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string"
                                    },
                                    "example": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "balance": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string"
                                    },
                                    "format": {
                                      "type": "string"
                                    },
                                    "example": {
                                      "type": "number"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "schemes": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "s": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "host": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetBankLevelDynamicEndpoints",
          "requires_bank_id": true
        },
        {
          "role": "CanGetDynamicEndpoints",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/banks/BANK_ID/dynamic-endpoints",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv4.0.0-getSettlementAccounts",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getSettlementAccounts"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/settlement-accounts",
      "summary": "Get Settlement accounts at Bank",
      "description": "<p>Get settlement accounts on this API instance<br />\nReturns a list of settlement accounts at this Bank</p>\n<p>Note: a settlement account is considered as a bank account.<br />\nSo you can update it and add account attributes to it using the regular account endpoints</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#account_attribute_id\"><strong>account_attribute_id</strong></a>:</p>\n<p><a href=\"/glossary#account_attributes\"><strong>account_attributes</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>account_id</strong></a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#account_routings\"><strong>account_routings</strong></a>:</p>\n<p><a href=\"/glossary#address\"><strong>address</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p>\n<p><a href=\"/glossary#balance\"><strong>balance</strong></a>: 10</p>\n<p><a href=\"/glossary#\"><strong>branch_id</strong></a>: DERBY6</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#\"><strong>label</strong></a>: My Account</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#\"><strong>payment_system</strong></a>: SEPA</p>\n<p><a href=\"/glossary#product_code\"><strong>product_code</strong></a>: 1234BW</p>\n<p><a href=\"/glossary#scheme\"><strong>scheme</strong></a>: scheme value</p>\n<p><a href=\"/glossary#settlement_accounts\"><strong>settlement_accounts</strong></a>:</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n<p><a href=\"/glossary#\">product_instance_code</a>: product_instance_code</p>\n",
      "description_markdown": "Get settlement accounts on this API instance\nReturns a list of settlement accounts at this Bank\n\nNote: a settlement account is considered as a bank account.\nSo you can update it and add account attributes to it using the regular account endpoints\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**account_attribute_id**](/glossary#account_attribute_id): \n\n\n\n[**account_attributes**](/glossary#account_attributes): \n\n\n\n[**account_id**](/glossary#): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[**account_routings**](/glossary#account_routings): \n\n\n\n[**address**](/glossary#address): \n\n\n\n[**amount**](/glossary#): 10.12\n\n\n\n[**balance**](/glossary#balance): 10\n\n\n\n[**branch_id**](/glossary#): DERBY6\n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**label**](/glossary#): My Account\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**payment_system**](/glossary#): SEPA\n\n\n\n[**product_code**](/glossary#product_code): 1234BW\n\n\n\n[**scheme**](/glossary#scheme): scheme value\n\n\n\n[**settlement_accounts**](/glossary#settlement_accounts): \n\n\n\n[**type**](/glossary#type): \n\n\n\n[**value**](/glossary#): 5987953\n\n\n\n[product_instance_code](/glossary#): product_instance_code\n\n\n",
      "success_response_body": {
        "settlement_accounts": [
          {
            "account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0",
            "payment_system": "SEPA",
            "balance": {
              "currency": "EUR",
              "amount": "0"
            },
            "label": "My Account",
            "branch_id": "DERBY6",
            "account_routings": [
              {
                "scheme": "AccountNumber",
                "address": "4930396"
              }
            ],
            "account_attributes": [
              {
                "product_code": "1234BW",
                "account_attribute_id": "613c83ea-80f9-4560-8404-b9cd4ec42a7f",
                "name": "OVERDRAFT_START_DATE",
                "type": "DATE_WITH_DAY",
                "value": "2012-04-23",
                "product_instance_code": "LKJL98769F"
              }
            ]
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Bank", "PSD2", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "settlement_accounts": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "payment_system": {
                  "type": "string"
                },
                "label": {
                  "type": "string"
                },
                "balance": {
                  "type": "object",
                  "properties": {
                    "currency": {
                      "type": "string"
                    },
                    "amount": {
                      "type": "string"
                    }
                  }
                },
                "account_attributes": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "value": {
                        "type": "string"
                      },
                      "product_code": {
                        "type": "string"
                      },
                      "account_attribute_id": {
                        "type": "string"
                      },
                      "product_instance_code": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    }
                  }
                },
                "account_routings": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "scheme": {
                        "type": "string"
                      },
                      "address": {
                        "type": "string"
                      }
                    }
                  }
                },
                "branch_id": {
                  "type": "string"
                },
                "account_id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetSettlementAccountAtOneBank",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/settlement-accounts",
      "connector_methods": ["obp.getAccountAttributesByAccount", "obp.getBankSettlementAccounts"]
    },
    {
      "operation_id": "OBPv4.0.0-updateSystemLevelEndpointTag",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "updateSystemLevelEndpointTag"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v4.0.0/management/endpoints/OPERATION_ID/tags/ENDPOINT_TAG_ID",
      "summary": "Update System Level Endpoint Tag",
      "description": "<p>Update System Level Endpoint Tag, you can only update the tag_name here, operation_id can not be updated.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#\">ENDPOINT_TAG_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\">OPERATION_ID</a>: OBPv4.0.0-getBanks</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#\"><strong>endpoint_tag_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>operation_id</strong></a>: OBPv4.0.0-getBanks</p>\n<p><a href=\"/glossary#\"><strong>tag_name</strong></a>: BankAccountTag1</p>\n",
      "description_markdown": "Update System Level Endpoint Tag, you can only update the tag_name here, operation_id can not be updated.\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ENDPOINT_TAG_ID](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[OPERATION_ID](/glossary#): OBPv4.0.0-getBanks\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**endpoint_tag_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**operation_id**](/glossary#): OBPv4.0.0-getBanks\n\n\n\n[**tag_name**](/glossary#): BankAccountTag1\n\n\n",
      "example_request_body": {
        "tag_name": "BankAccountTag1"
      },
      "success_response_body": {
        "bank_id": "gh.29.uk",
        "endpoint_tag_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "operation_id": "OBPv4.0.0-getBanks",
        "tag_name": "BankAccountTag1"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-30099: Invalid ENDPOINT_TAG_ID. Please specify a valid value for ENDPOINT_TAG_ID.",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["API", "API", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "tag_name": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "operation_id": {
            "type": "string"
          },
          "tag_name": {
            "type": "string"
          },
          "bank_id": {
            "type": "string"
          },
          "endpoint_tag_id": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanUpdateSystemLevelEndpointTag",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/endpoints/OPERATION_ID/tags/ENDPOINT_TAG_ID",
      "connector_methods": [
        "obp.updateSystemLevelEndpointTag",
        "obp.getSystemLevelEndpointTag",
        "obp.getEndpointTagById"
      ]
    },
    {
      "operation_id": "OBPv3.0.0-deleteScope",
      "implemented_by": {
        "version": "OBPv3.0.0",
        "function": "deleteScope"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v3.0.0/consumers/CONSUMER_ID/scope/SCOPE_ID",
      "summary": "Delete Consumer Scope",
      "description": "<p>Delete Consumer Scope specified by SCOPE_ID for an consumer specified by CONSUMER_ID</p>\n<p>Authentication is required and the user needs to be a Super Admin.<br />\nSuper Admins are listed in the Props file.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#\">CONSUMER_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#scope_id\">SCOPE_ID</a>:</p>\n<p><strong>JSON response body fields:</strong></p>\n",
      "description_markdown": "Delete Consumer Scope specified by SCOPE_ID for an consumer specified by CONSUMER_ID\n\nAuthentication is required and the user needs to be a Super Admin.\nSuper Admins are listed in the Props file.\n\n\n      \n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[CONSUMER_ID](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[SCOPE_ID](/glossary#scope_id): \n\n\n\n\n\n**JSON response body fields:**\n\n\n",
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30212: EntitlementId not found",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Scope", "Consumer", "New-Style"],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/consumers/CONSUMER_ID/scope/SCOPE_ID",
      "connector_methods": ["obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv4.0.0-deleteMyApiCollectionEndpointById",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "deleteMyApiCollectionEndpointById"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v4.0.0/my/api-collection-ids/API_COLLECTION_ID/api-collection-endpoint-ids/API_COLLECTION_ENDPOINT_ID",
      "summary": "Delete My Api Collection Endpoint By Id",
      "description": "<p>Delete Api Collection Endpoint<br />\nDelete Api Collection Endpoint By Id</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#\">API_COLLECTION_ENDPOINT_ID</a>: 8uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\">API_COLLECTION_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n",
      "description_markdown": "Delete Api Collection Endpoint\nDelete Api Collection Endpoint By Id\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[API_COLLECTION_ENDPOINT_ID](/glossary#): 8uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[API_COLLECTION_ID](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**value**](/glossary#): 5987953\n\n\n",
      "success_response_body": {
        "value": true
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20057: User not found by userId.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Api-Collection", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "value": {
            "type": "boolean"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/my/api-collection-ids/API_COLLECTION_ID/api-collection-endpoint-ids/API_COLLECTION_ENDPOINT_ID",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv3.1.0-updateAccount",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "updateAccount"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v3.1.0/management/banks/BANK_ID/accounts/ACCOUNT_ID",
      "summary": "Update Account",
      "description": "<p>Update the account.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>account_id</strong></a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#account_routings\"><strong>account_routings</strong></a>:</p>\n<p><a href=\"/glossary#address\"><strong>address</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#\"><strong>branch_id</strong></a>: DERBY6</p>\n<p><a href=\"/glossary#\"><strong>label</strong></a>: My Account</p>\n<p><a href=\"/glossary#scheme\"><strong>scheme</strong></a>: scheme value</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n",
      "description_markdown": "Update the account. \n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**account_id**](/glossary#): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[**account_routings**](/glossary#account_routings): \n\n\n\n[**address**](/glossary#address): \n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**branch_id**](/glossary#): DERBY6\n\n\n\n[**label**](/glossary#): My Account\n\n\n\n[**scheme**](/glossary#scheme): scheme value\n\n\n\n[**type**](/glossary#type): \n\n\n",
      "example_request_body": {
        "label": "Label",
        "type": "CURRENT",
        "branch_id": "1234",
        "account_routings": [
          {
            "scheme": "AccountNumber",
            "address": "4930396"
          }
        ]
      },
      "success_response_body": {
        "bank_id": "gh.29.uk",
        "account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0",
        "label": "Label",
        "type": "CURRENT",
        "branch_id": "1234",
        "account_routings": [
          {
            "scheme": "IBAN",
            "address": "DE91 1000 0000 0123 4567 89"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-10001: Incorrect json format.",
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-50000: Unknown Error.",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["Account", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "branch_id": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "account_routings": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "scheme": {
                  "type": "string"
                },
                "address": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "account_routings": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "scheme": {
                  "type": "string"
                },
                "address": {
                  "type": "string"
                }
              }
            }
          },
          "branch_id": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "bank_id": {
            "type": "string"
          },
          "account_id": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanUpdateAccount",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/banks/BANK_ID/accounts/ACCOUNT_ID",
      "connector_methods": [
        "obp.updateBankAccount",
        "obp.checkBankAccountExists",
        "obp.getBank",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv4.0.0-updateJsonSchemaValidation",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "updateJsonSchemaValidation"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v4.0.0/management/json-schema-validations/OPERATION_ID",
      "summary": "Update a JSON Schema Validation",
      "description": "<p>Update a JSON Schema Validation.</p>\n<p>Please supply a json-schema as request body</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#\">OPERATION_ID</a>: OBPv4.0.0-getBanks</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>$schema</strong></a>: $schema</p>\n<p><a href=\"/glossary#\"><strong>additionalProperties</strong></a>: additionalProperties</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#\"><strong>examples</strong></a>: examples</p>\n<p><a href=\"/glossary#\"><strong>json_schema</strong></a>: json_schema</p>\n<p><a href=\"/glossary#\"><strong>maxLength</strong></a>: maxLength</p>\n<p><a href=\"/glossary#\"><strong>minLength</strong></a>: minLength</p>\n<p><a href=\"/glossary#\"><strong>operation_id</strong></a>: OBPv4.0.0-getBanks</p>\n<p><a href=\"/glossary#\"><strong>properties</strong></a>: properties</p>\n<p><a href=\"/glossary#\"><strong>required</strong></a>: required</p>\n<p><a href=\"/glossary#\"><strong>title</strong></a>: Dr.</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>xxx_id</strong></a>: xxx_id</p>\n",
      "description_markdown": "Update a JSON Schema Validation.\n\nPlease supply a json-schema as request body\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[OPERATION_ID](/glossary#): OBPv4.0.0-getBanks\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**$schema**](/glossary#): $schema\n\n\n\n[**additionalProperties**](/glossary#): additionalProperties\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**examples**](/glossary#): examples\n\n\n\n[**json_schema**](/glossary#): json_schema\n\n\n\n[**maxLength**](/glossary#): maxLength\n\n\n\n[**minLength**](/glossary#): minLength\n\n\n\n[**operation_id**](/glossary#): OBPv4.0.0-getBanks\n\n\n\n[**properties**](/glossary#): properties\n\n\n\n[**required**](/glossary#): required\n\n\n\n[**title**](/glossary#): Dr.\n\n\n\n[**type**](/glossary#type): \n\n\n\n[**xxx_id**](/glossary#): xxx_id\n\n\n",
      "example_request_body": {
        "$schema": "http://json-schema.org/draft-07/schema",
        "description": "The demo json-schema",
        "title": "The demo schema",
        "required": ["xxx_id"],
        "type": "object",
        "properties": {
          "xxx_id": {
            "type": "string",
            "minLength": 2,
            "maxLength": 50,
            "examples": ["xxx_id_demo_value"]
          }
        },
        "additionalProperties": true
      },
      "success_response_body": {
        "operation_id": "OBPv4.0.0-createXxx",
        "json_schema": {
          "$schema": "http://json-schema.org/draft-07/schema",
          "description": "The demo json-schema",
          "title": "The demo schema",
          "required": ["xxx_id"],
          "type": "object",
          "properties": {
            "xxx_id": {
              "type": "string",
              "minLength": 2,
              "maxLength": 50,
              "examples": ["xxx_id_demo_value"]
            }
          },
          "additionalProperties": true
        }
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["JSON-Schema-Validation", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "required": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "$schema": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "properties": {
            "type": "object",
            "properties": {
              "xxx_id": {
                "type": "object",
                "properties": {
                  "minLength": {
                    "type": "integer"
                  },
                  "maxLength": {
                    "type": "integer"
                  },
                  "type": {
                    "type": "string"
                  },
                  "examples": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "additionalProperties": {
            "type": "boolean"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "json_schema": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string"
              },
              "required": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "$schema": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "properties": {
                "type": "object",
                "properties": {
                  "xxx_id": {
                    "type": "object",
                    "properties": {
                      "minLength": {
                        "type": "integer"
                      },
                      "maxLength": {
                        "type": "integer"
                      },
                      "type": {
                        "type": "string"
                      },
                      "examples": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "additionalProperties": {
                "type": "boolean"
              }
            }
          },
          "operation_id": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanUpdateJsonSchemaValidation",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/json-schema-validations/OPERATION_ID",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv4.0.0-updateAtmAccessibilityFeatures",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "updateAtmAccessibilityFeatures"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/atms/ATM_ID/accessibility-features",
      "summary": "Update ATM Accessibility Features",
      "description": "<p>Update ATM Accessibility Features.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#atm_id\">ATM_ID</a>: atme0352a-9a0f-4bfa-b30b-9003aa467f51</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#accessibility_features\"><strong>accessibility_features</strong></a>: [&quot;ATAC&quot;,&quot;ATAD&quot;]</p>\n<p><a href=\"/glossary#atm_id\"><strong>atm_id</strong></a>: atme0352a-9a0f-4bfa-b30b-9003aa467f51</p>\n",
      "description_markdown": "Update ATM Accessibility Features.\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ATM_ID](/glossary#atm_id): atme0352a-9a0f-4bfa-b30b-9003aa467f51\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**accessibility_features**](/glossary#accessibility_features): [\"ATAC\",\"ATAD\"]\n\n\n\n[**atm_id**](/glossary#atm_id): atme0352a-9a0f-4bfa-b30b-9003aa467f51\n\n\n",
      "example_request_body": {
        "accessibility_features": ["ATAC", "ATAD"]
      },
      "success_response_body": {
        "atm_id": "atme0352a-9a0f-4bfa-b30b-9003aa467f51",
        "accessibility_features": ["ATAC", "ATAD"]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["ATM", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "accessibility_features": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "atm_id": {
            "type": "string"
          },
          "accessibility_features": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/atms/ATM_ID/accessibility-features",
      "connector_methods": ["obp.updateAtmAccessibilityFeatures", "obp.getAtm"]
    },
    {
      "operation_id": "OBPv4.0.0-deleteProductCascade",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "deleteProductCascade"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v4.0.0/management/cascading/banks/BANK_ID/products/PRODUCT_CODE",
      "summary": "Delete Product Cascade",
      "description": "<p>Delete a Product Cascade specified by PRODUCT_CODE.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#product_code\">PRODUCT_CODE</a>: 1234BW</p>\n<p><strong>JSON response body fields:</strong></p>\n",
      "description_markdown": "Delete a Product Cascade specified by PRODUCT_CODE.\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[PRODUCT_CODE](/glossary#product_code): 1234BW\n\n\n\n\n\n**JSON response body fields:**\n\n\n",
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Product", "New-Style"],
      "roles": [
        {
          "role": "CanDeleteProductCascade",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/cascading/banks/BANK_ID/products/PRODUCT_CODE",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv1.4.0-getResourceDocsSwagger",
      "implemented_by": {
        "version": "OBPv1.4.0",
        "function": "getResourceDocsSwagger"
      },
      "request_verb": "GET",
      "request_url": "/obp/v1.4.0/resource-docs/API_VERSION/swagger",
      "summary": "Get Swagger documentation",
      "description": "<p>Returns documentation about the RESTful resources on this server in Swagger format.</p>\n<p>API_VERSION is the version you want documentation about e.g. v3.0.0</p>\n<p>You may filter this endpoint using the 'tags' url parameter e.g. ?tags=Account,Bank</p>\n<p>(All endpoints are given one or more tags which for used in grouping)</p>\n<p>You may filter this endpoint using the 'functions' url parameter e.g. ?functions=getBanks,bankById</p>\n<p>(Each endpoint is implemented in the OBP Scala code by a 'function')</p>\n<p>See the Resource Doc endpoint for more information.</p>\n<p>Following are more examples:<br />\n<a href=\"https://obp-apisandbox.joinfincubator.com/obp/v3.1.0/resource-docs/v3.1.0/swagger\">https://obp-apisandbox.joinfincubator.com/obp/v3.1.0/resource-docs/v3.1.0/swagger</a><br />\n<a href=\"https://obp-apisandbox.joinfincubator.com/obp/v3.1.0/resource-docs/v3.1.0/swagger?tags=Account,Bank\">https://obp-apisandbox.joinfincubator.com/obp/v3.1.0/resource-docs/v3.1.0/swagger?tags=Account,Bank</a><br />\n<a href=\"https://obp-apisandbox.joinfincubator.com/obp/v3.1.0/resource-docs/v3.1.0/swagger?functions=getBanks,bankById\">https://obp-apisandbox.joinfincubator.com/obp/v3.1.0/resource-docs/v3.1.0/swagger?functions=getBanks,bankById</a><br />\n<a href=\"https://obp-apisandbox.joinfincubator.com/obp/v3.1.0/resource-docs/v3.1.0/swagger?tags=Account,Bank,PSD2&amp;functions=getBanks,bankById\">https://obp-apisandbox.joinfincubator.com/obp/v3.1.0/resource-docs/v3.1.0/swagger?tags=Account,Bank,PSD2&amp;functions=getBanks,bankById</a></p>\n<p>Authentication is Optional</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#api_version\">API_VERSION</a>:</p>\n<p><strong>JSON response body fields:</strong></p>\n",
      "description_markdown": "Returns documentation about the RESTful resources on this server in Swagger format.\n\nAPI_VERSION is the version you want documentation about e.g. v3.0.0\n\nYou may filter this endpoint using the 'tags' url parameter e.g. ?tags=Account,Bank\n\n(All endpoints are given one or more tags which for used in grouping)\n\nYou may filter this endpoint using the 'functions' url parameter e.g. ?functions=getBanks,bankById\n\n(Each endpoint is implemented in the OBP Scala code by a 'function')\n\nSee the Resource Doc endpoint for more information.\n\nFollowing are more examples:\nhttps://obp-apisandbox.joinfincubator.com/obp/v3.1.0/resource-docs/v3.1.0/swagger\nhttps://obp-apisandbox.joinfincubator.com/obp/v3.1.0/resource-docs/v3.1.0/swagger?tags=Account,Bank\nhttps://obp-apisandbox.joinfincubator.com/obp/v3.1.0/resource-docs/v3.1.0/swagger?functions=getBanks,bankById\nhttps://obp-apisandbox.joinfincubator.com/obp/v3.1.0/resource-docs/v3.1.0/swagger?tags=Account,Bank,PSD2&functions=getBanks,bankById\n\n      \n\nAuthentication is Optional\n\n\n**URL Parameters:**\n\n[API_VERSION](/glossary#api_version): \n\n\n\n\n\n**JSON response body fields:**\n\n\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "jsonString": "{}"
      },
      "error_response_bodies": ["OBP-50000: Unknown Error."],
      "tags": ["Documentation", "API"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/resource-docs/API_VERSION/swagger",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv4.0.0-getAtms",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getAtms"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/atms",
      "summary": "Get Bank ATMS",
      "description": "<p>Get Bank ATMS.</p>\n<p>Authentication is Optional</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#accessibility_features\"><strong>accessibility_features</strong></a>: [&quot;ATAC&quot;,&quot;ATAD&quot;]</p>\n<p><a href=\"/glossary#address\"><strong>address</strong></a>:</p>\n<p><a href=\"/glossary#atms\"><strong>atms</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>balance_inquiry_fee</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#\"><strong>branch_identification</strong></a>: branch_identification</p>\n<p><a href=\"/glossary#\"><strong>cash_withdrawal_international_fee</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>cash_withdrawal_national_fee</strong></a>:</p>\n<p><a href=\"/glossary#city\"><strong>city</strong></a>:</p>\n<p><a href=\"/glossary#closing_time\"><strong>closing_time</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#country_code\"><strong>country_code</strong></a>: 1254</p>\n<p><a href=\"/glossary#county\"><strong>county</strong></a>:</p>\n<p><a href=\"/glossary#friday\"><strong>friday</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>has_deposit_capability</strong></a>: true</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#\"><strong>is_accessible</strong></a>: true</p>\n<p><a href=\"/glossary#latitude\"><strong>latitude</strong></a>: 38.8951</p>\n<p><a href=\"/glossary#license\"><strong>license</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>line_1</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>line_2</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>line_3</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>located_at</strong></a>:</p>\n<p><a href=\"/glossary#location\"><strong>location</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>location_categories</strong></a>: location_categories</p>\n<p><a href=\"/glossary#longitude\"><strong>longitude</strong></a>: -77.0364</p>\n<p><a href=\"/glossary#meta\"><strong>meta</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>minimum_withdrawal</strong></a>: minimum_withdrawal</p>\n<p><a href=\"/glossary#monday\"><strong>monday</strong></a>:</p>\n<p><a href=\"/glossary#more_info\"><strong>more_info</strong></a>: More information about this fee</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#\"><strong>notes</strong></a>: notes</p>\n<p><a href=\"/glossary#opening_time\"><strong>opening_time</strong></a>:</p>\n<p><a href=\"/glossary#postcode\"><strong>postcode</strong></a>:</p>\n<p><a href=\"/glossary#saturday\"><strong>saturday</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>services</strong></a>: services</p>\n<p><a href=\"/glossary#\"><strong>site_identification</strong></a>: site_identification</p>\n<p><a href=\"/glossary#\"><strong>site_name</strong></a>: site_name</p>\n<p><a href=\"/glossary#state\"><strong>state</strong></a>:</p>\n<p><a href=\"/glossary#sunday\"><strong>sunday</strong></a>:</p>\n<p><a href=\"/glossary#supported_currencies\"><strong>supported_currencies</strong></a>: [&quot;EUR&quot;,&quot;MXN&quot;,&quot;USD&quot;]</p>\n<p><a href=\"/glossary#supported_languages\"><strong>supported_languages</strong></a>: [&quot;es&quot;,&quot;fr&quot;,&quot;de&quot;]</p>\n<p><a href=\"/glossary#thursday\"><strong>thursday</strong></a>:</p>\n<p><a href=\"/glossary#tuesday\"><strong>tuesday</strong></a>:</p>\n<p><a href=\"/glossary#wednesday\"><strong>wednesday</strong></a>:</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n",
      "description_markdown": "Get Bank ATMS.\n\nAuthentication is Optional\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**accessibility_features**](/glossary#accessibility_features): [\"ATAC\",\"ATAD\"]\n\n\n\n[**address**](/glossary#address): \n\n\n\n[**atms**](/glossary#atms): \n\n\n\n[**balance_inquiry_fee**](/glossary#): \n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**branch_identification**](/glossary#): branch_identification\n\n\n\n[**cash_withdrawal_international_fee**](/glossary#): \n\n\n\n[**cash_withdrawal_national_fee**](/glossary#): \n\n\n\n[**city**](/glossary#city): \n\n\n\n[**closing_time**](/glossary#closing_time): 2020-01-27\n\n\n\n[**country_code**](/glossary#country_code): 1254\n\n\n\n[**county**](/glossary#county): \n\n\n\n[**friday**](/glossary#friday): \n\n\n\n[**has_deposit_capability**](/glossary#): true\n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**is_accessible**](/glossary#): true\n\n\n\n[**latitude**](/glossary#latitude): 38.8951\n\n\n\n[**license**](/glossary#license): \n\n\n\n[**line_1**](/glossary#): \n\n\n\n[**line_2**](/glossary#): \n\n\n\n[**line_3**](/glossary#): \n\n\n\n[**located_at**](/glossary#): \n\n\n\n[**location**](/glossary#location): \n\n\n\n[**location_categories**](/glossary#): location_categories\n\n\n\n[**longitude**](/glossary#longitude): -77.0364\n\n\n\n[**meta**](/glossary#meta): \n\n\n\n[**minimum_withdrawal**](/glossary#): minimum_withdrawal\n\n\n\n[**monday**](/glossary#monday): \n\n\n\n[**more_info**](/glossary#more_info): More information about this fee\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**notes**](/glossary#): notes\n\n\n\n[**opening_time**](/glossary#opening_time): \n\n\n\n[**postcode**](/glossary#postcode): \n\n\n\n[**saturday**](/glossary#saturday): \n\n\n\n[**services**](/glossary#): services\n\n\n\n[**site_identification**](/glossary#): site_identification\n\n\n\n[**site_name**](/glossary#): site_name\n\n\n\n[**state**](/glossary#state): \n\n\n\n[**sunday**](/glossary#sunday): \n\n\n\n[**supported_currencies**](/glossary#supported_currencies): [\"EUR\",\"MXN\",\"USD\"]\n\n\n\n[**supported_languages**](/glossary#supported_languages): [\"es\",\"fr\",\"de\"]\n\n\n\n[**thursday**](/glossary#thursday): \n\n\n\n[**tuesday**](/glossary#tuesday): \n\n\n\n[**wednesday**](/glossary#wednesday): \n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n",
      "success_response_body": {
        "atms": [
          {
            "id": "atme0352a-9a0f-4bfa-b30b-9003aa467f51",
            "bank_id": "gh.29.uk",
            "name": "Atm by the Lake",
            "address": {
              "line_1": "No 1 the Road",
              "line_2": "The Place",
              "line_3": "The Hill",
              "city": "Berlin",
              "county": "",
              "state": "Brandenburg",
              "postcode": "13359",
              "country_code": "DE"
            },
            "location": {
              "latitude": 11.45,
              "longitude": 11.45
            },
            "meta": {
              "license": {
                "id": "ODbL-1.0",
                "name": "Open Database License"
              }
            },
            "monday": {
              "opening_time": "10:00",
              "closing_time": "18:00"
            },
            "tuesday": {
              "opening_time": "10:00",
              "closing_time": "18:00"
            },
            "wednesday": {
              "opening_time": "10:00",
              "closing_time": "18:00"
            },
            "thursday": {
              "opening_time": "10:00",
              "closing_time": "18:00"
            },
            "friday": {
              "opening_time": "10:00",
              "closing_time": "18:00"
            },
            "saturday": {
              "opening_time": "10:00",
              "closing_time": "18:00"
            },
            "sunday": {
              "opening_time": "10:00",
              "closing_time": "18:00"
            },
            "is_accessible": "true",
            "located_at": "",
            "more_info": "More information about this fee",
            "has_deposit_capability": "true",
            "supported_languages": ["es", "fr", "de"],
            "services": ["ATBP", "ATBA"],
            "accessibility_features": ["ATAC", "ATAD"],
            "supported_currencies": ["EUR", "MXN", "USD"],
            "notes": ["String1", "String2"],
            "location_categories": ["ATBI", "ATBE"],
            "minimum_withdrawal": "5",
            "branch_identification": "",
            "site_identification": "",
            "site_name": "",
            "cash_withdrawal_national_fee": "",
            "cash_withdrawal_international_fee": "",
            "balance_inquiry_fee": ""
          }
        ]
      },
      "error_response_bodies": [
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["ATM", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "atms": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "has_deposit_capability": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "site_name": {
                  "type": "string"
                },
                "friday": {
                  "type": "object",
                  "properties": {
                    "closing_time": {
                      "type": "string"
                    },
                    "opening_time": {
                      "type": "string"
                    }
                  }
                },
                "id": {
                  "type": "string"
                },
                "site_identification": {
                  "type": "string"
                },
                "is_accessible": {
                  "type": "string"
                },
                "accessibility_features": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "supported_currencies": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "bank_id": {
                  "type": "string"
                },
                "monday": {
                  "type": "object",
                  "properties": {
                    "closing_time": {
                      "type": "string"
                    },
                    "opening_time": {
                      "type": "string"
                    }
                  }
                },
                "cash_withdrawal_international_fee": {
                  "type": "string"
                },
                "supported_languages": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "balance_inquiry_fee": {
                  "type": "string"
                },
                "meta": {
                  "type": "object",
                  "properties": {
                    "license": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "notes": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "saturday": {
                  "type": "object",
                  "properties": {
                    "closing_time": {
                      "type": "string"
                    },
                    "opening_time": {
                      "type": "string"
                    }
                  }
                },
                "thursday": {
                  "type": "object",
                  "properties": {
                    "closing_time": {
                      "type": "string"
                    },
                    "opening_time": {
                      "type": "string"
                    }
                  }
                },
                "tuesday": {
                  "type": "object",
                  "properties": {
                    "closing_time": {
                      "type": "string"
                    },
                    "opening_time": {
                      "type": "string"
                    }
                  }
                },
                "wednesday": {
                  "type": "object",
                  "properties": {
                    "closing_time": {
                      "type": "string"
                    },
                    "opening_time": {
                      "type": "string"
                    }
                  }
                },
                "sunday": {
                  "type": "object",
                  "properties": {
                    "closing_time": {
                      "type": "string"
                    },
                    "opening_time": {
                      "type": "string"
                    }
                  }
                },
                "located_at": {
                  "type": "string"
                },
                "more_info": {
                  "type": "string"
                },
                "address": {
                  "type": "object",
                  "properties": {
                    "city": {
                      "type": "string"
                    },
                    "postcode": {
                      "type": "string"
                    },
                    "line_1": {
                      "type": "string"
                    },
                    "line_2": {
                      "type": "string"
                    },
                    "line_3": {
                      "type": "string"
                    },
                    "state": {
                      "type": "string"
                    },
                    "country_code": {
                      "type": "string"
                    },
                    "county": {
                      "type": "string"
                    }
                  }
                },
                "minimum_withdrawal": {
                  "type": "string"
                },
                "branch_identification": {
                  "type": "string"
                },
                "location": {
                  "type": "object",
                  "properties": {
                    "longitude": {
                      "type": "number"
                    },
                    "latitude": {
                      "type": "number"
                    }
                  }
                },
                "services": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "cash_withdrawal_national_fee": {
                  "type": "string"
                },
                "location_categories": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/atms",
      "connector_methods": ["obp.getAtms", "obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv3.1.0-getTopAPIs",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "getTopAPIs"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.1.0/management/metrics/top-apis",
      "summary": "Get Top APIs",
      "description": "<p>Get metrics about the most popular APIs. e.g.: total count, response time (in ms), etc.</p>\n<p>Should be able to filter on the following fields</p>\n<p>eg: /management/metrics/top-apis?from_date=1970-01-01T00:00:00.000Z&amp;to_date=2023-04-13T04:30:11.505Z&amp;consumer_id=5<br />\n&amp;user_id=66214b8e-259e-44ad-8868-3eb47be70646&amp;implemented_by_partial_function=getTransactionsForBankAccount<br />\n&amp;implemented_in_version=v3.0.0&amp;url=/obp/v3.0.0/banks/gh.29.uk/accounts/8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0/owner/transactions<br />\n&amp;verb=GET&amp;anon=false&amp;app_name=MapperPostman<br />\n&amp;exclude_app_names=API-EXPLORER,API-Manager,SOFI,null</p>\n<p>1 from_date (defaults to the one year ago): eg:from_date=1970-01-01T00:00:00.000Z</p>\n<p>2 to_date (defaults to the current date) eg:to_date=2023-04-13T04:30:11.505Z</p>\n<p>3 consumer_id  (if null ignore)</p>\n<p>4 user_id (if null ignore)</p>\n<p>5 anon (if null ignore) only support two value : true (return where user_id is null.) or false (return where user_id is not null.)</p>\n<p>6 url (if null ignore), note: can not contain '&amp;'.</p>\n<p>7 app_name (if null ignore)</p>\n<p>8 implemented_by_partial_function (if null ignore),</p>\n<p>9 implemented_in_version (if null ignore)</p>\n<p>10 verb (if null ignore)</p>\n<p>11 correlation_id (if null ignore)</p>\n<p>12 duration (if null ignore) non digit chars will be silently omitted</p>\n<p>13 exclude_app_names (if null ignore).eg: &amp;exclude_app_names=API-EXPLORER,API-Manager,SOFI,null</p>\n<p>14 exclude_url_patterns (if null ignore).you can design you own SQL NOT LIKE pattern. eg: &amp;exclude_url_patterns=%management/metrics%,%management/aggregate-metrics%</p>\n<p>15 exclude_implemented_by_partial_functions (if null ignore).eg: &amp;exclude_implemented_by_partial_functions=getMetrics,getConnectorMetrics,getAggregateMetrics</p>\n<p>Authentication is Mandatory</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#implemented_by_partial_function\"><strong>Implemented_by_partial_function</strong></a>:</p>\n<p><a href=\"/glossary#count\"><strong>count</strong></a>:</p>\n<p><a href=\"/glossary#implemented_in_version\"><strong>implemented_in_version</strong></a>:</p>\n<p><a href=\"/glossary#top_apis\"><strong>top_apis</strong></a>:</p>\n",
      "description_markdown": "Get metrics about the most popular APIs. e.g.: total count, response time (in ms), etc.\n\nShould be able to filter on the following fields\n\neg: /management/metrics/top-apis?from_date=1970-01-01T00:00:00.000Z&to_date=2023-04-13T04:30:11.505Z&consumer_id=5\n&user_id=66214b8e-259e-44ad-8868-3eb47be70646&implemented_by_partial_function=getTransactionsForBankAccount\n&implemented_in_version=v3.0.0&url=/obp/v3.0.0/banks/gh.29.uk/accounts/8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0/owner/transactions\n&verb=GET&anon=false&app_name=MapperPostman\n&exclude_app_names=API-EXPLORER,API-Manager,SOFI,null\n\n1 from_date (defaults to the one year ago): eg:from_date=1970-01-01T00:00:00.000Z\n\n2 to_date (defaults to the current date) eg:to_date=2023-04-13T04:30:11.505Z\n\n3 consumer_id  (if null ignore)\n\n4 user_id (if null ignore)\n\n5 anon (if null ignore) only support two value : true (return where user_id is null.) or false (return where user_id is not null.)\n\n6 url (if null ignore), note: can not contain '&'.\n\n7 app_name (if null ignore)\n\n8 implemented_by_partial_function (if null ignore),\n\n9 implemented_in_version (if null ignore)\n\n10 verb (if null ignore)\n\n11 correlation_id (if null ignore)\n\n12 duration (if null ignore) non digit chars will be silently omitted\n\n13 exclude_app_names (if null ignore).eg: &exclude_app_names=API-EXPLORER,API-Manager,SOFI,null\n\n14 exclude_url_patterns (if null ignore).you can design you own SQL NOT LIKE pattern. eg: &exclude_url_patterns=%management/metrics%,%management/aggregate-metrics%\n\n15 exclude_implemented_by_partial_functions (if null ignore).eg: &exclude_implemented_by_partial_functions=getMetrics,getConnectorMetrics,getAggregateMetrics\n\nAuthentication is Mandatory\n\n\n**JSON response body fields:**\n\n\n\n[**Implemented_by_partial_function**](/glossary#implemented_by_partial_function): \n\n\n\n[**count**](/glossary#count): \n\n\n\n[**implemented_in_version**](/glossary#implemented_in_version): \n\n\n\n[**top_apis**](/glossary#top_apis): \n\n\n",
      "success_response_body": {
        "top_apis": [
          {
            "count": 7076,
            "Implemented_by_partial_function": "getBanks",
            "implemented_in_version": "v1.2.1"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-10016: Incorrect filter Parameters in URL. ",
        "OBP-30042: Could not get the top apis from database.  ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Metric", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "top_apis": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "Implemented_by_partial_function": {
                  "type": "string"
                },
                "implemented_in_version": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanReadMetrics",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/metrics/top-apis",
      "connector_methods": ["obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv3.1.0-deleteTaxResidence",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "deleteTaxResidence"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/customers/CUSTOMER_ID/tax_residencies/TAX_RESIDENCE_ID",
      "summary": "Delete Tax Residence",
      "description": "<p>Delete a Tax Residence of the Customer specified by TAX_RESIDENCE_ID.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#Customer.customer_id\">CUSTOMER_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#tax_residence_id\">TAX_RESIDENCE_ID</a>:</p>\n<p><strong>JSON response body fields:</strong></p>\n",
      "description_markdown": "Delete a Tax Residence of the Customer specified by TAX_RESIDENCE_ID.\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[CUSTOMER_ID](/glossary#Customer.customer_id): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[TAX_RESIDENCE_ID](/glossary#tax_residence_id): \n\n\n\n\n\n**JSON response body fields:**\n\n\n",
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Customer", "KYC", "New-Style"],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/customers/CUSTOMER_ID/tax_residencies/TAX_RESIDENCE_ID",
      "connector_methods": [
        "obp.deleteTaxResidence",
        "obp.getCustomerByCustomerId",
        "obp.getBank",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv4.0.0-getAllBankLevelEndpointMappings",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getAllBankLevelEndpointMappings"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/management/banks/BANK_ID/endpoint-mappings",
      "summary": "Get all Bank Level Endpoint Mappings",
      "description": "<p>Get all Bank Level Endpoint Mappings.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n",
      "description_markdown": "Get all Bank Level Endpoint Mappings.\n\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n",
      "success_response_body": {
        "endpoint-mappings": [
          {
            "operation_id": "OBPv4.0.0-dynamicEndpoint_POST_account",
            "request_mapping": {},
            "response_mapping": {
              "name": {
                "entity": "FooBar",
                "field": "name",
                "query": "number"
              },
              "balance": {
                "entity": "FashionBrand",
                "field": "number",
                "query": "number"
              }
            },
            "endpoint_mapping_id": "b4e0352a-9a0f-4bfa-b30b-9003aa467f50"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Endpoint-Mapping", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "endpoint-mappings": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "operation_id": {
                  "type": "string"
                },
                "request_mapping": {
                  "type": "object",
                  "properties": {}
                },
                "response_mapping": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "object",
                      "properties": {
                        "entity": {
                          "type": "string"
                        },
                        "field": {
                          "type": "string"
                        },
                        "query": {
                          "type": "string"
                        }
                      }
                    },
                    "balance": {
                      "type": "object",
                      "properties": {
                        "entity": {
                          "type": "string"
                        },
                        "field": {
                          "type": "string"
                        },
                        "query": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "endpoint_mapping_id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetAllBankLevelEndpointMappings",
          "requires_bank_id": true
        },
        {
          "role": "CanGetAllEndpointMappings",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/banks/BANK_ID/endpoint-mappings",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv4.0.0-getBanks",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getBanks"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/banks",
      "summary": "Get Banks",
      "description": "<p>Get banks on this API instance<br />\nReturns a list of banks supported on this server:</p>\n<ul>\n<li>ID used as parameter in URLs</li>\n<li>Short and full name of bank</li>\n<li>Logo URL</li>\n<li>Website</li>\n</ul>\n<p>Authentication is Optional</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#address\"><strong>address</strong></a>:</p>\n<p><a href=\"/glossary#bank_routings\"><strong>bank_routings</strong></a>: bank routing in form of (scheme, address)</p>\n<p><a href=\"/glossary#banks\"><strong>banks</strong></a>:</p>\n<p><a href=\"/glossary#full_name\"><strong>full_name</strong></a>: full name string</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#logo\"><strong>logo</strong></a>: logo url</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#scheme\"><strong>scheme</strong></a>: scheme value</p>\n<p><a href=\"/glossary#short_name\"><strong>short_name</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n<p><a href=\"/glossary#website\"><strong>website</strong></a>: <a href=\"http://www.openbankproject.com\">www.openbankproject.com</a></p>\n<p><a href=\"/glossary#attributes\">attributes</a>: attribute value in form of (name, value)</p>\n",
      "description_markdown": "Get banks on this API instance\nReturns a list of banks supported on this server:\n\n* ID used as parameter in URLs\n* Short and full name of bank\n* Logo URL\n* Website\n\nAuthentication is Optional\n\n\n**JSON response body fields:**\n\n\n\n[**address**](/glossary#address): \n\n\n\n[**bank_routings**](/glossary#bank_routings): bank routing in form of (scheme, address)\n\n\n\n[**banks**](/glossary#banks): \n\n\n\n[**full_name**](/glossary#full_name): full name string\n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**logo**](/glossary#logo): logo url\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**scheme**](/glossary#scheme): scheme value\n\n\n\n[**short_name**](/glossary#short_name): \n\n\n\n[**value**](/glossary#): 5987953\n\n\n\n[**website**](/glossary#website): www.openbankproject.com\n\n\n\n[attributes](/glossary#attributes): attribute value in form of (name, value)\n\n\n",
      "success_response_body": {
        "banks": [
          {
            "id": "gh.29.uk",
            "short_name": "short_name ",
            "full_name": "full_name",
            "logo": "logo",
            "website": "www.openbankproject.com",
            "bank_routings": [
              {
                "scheme": "scheme value",
                "address": ""
              }
            ],
            "attributes": [
              {
                "name": "ACCOUNT_MANAGEMENT_FEE",
                "value": "5987953"
              }
            ]
          }
        ]
      },
      "error_response_bodies": ["OBP-50000: Unknown Error."],
      "tags": ["Bank", "Account Information Service (AIS)", "PSD2", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "banks": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "website": {
                  "type": "string"
                },
                "logo": {
                  "type": "string"
                },
                "attributes": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                "short_name": {
                  "type": "string"
                },
                "bank_routings": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "scheme": {
                        "type": "string"
                      },
                      "address": {
                        "type": "string"
                      }
                    }
                  }
                },
                "id": {
                  "type": "string"
                },
                "full_name": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks",
      "connector_methods": ["obp.getBanks"]
    },
    {
      "operation_id": "OBPv4.0.0-getAccountByAccountRouting",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getAccountByAccountRouting"
      },
      "request_verb": "POST",
      "request_url": "/obp/v4.0.0/management/accounts/account-routing-query",
      "summary": "Get Account by Account Routing",
      "description": "<p>This endpoint returns the account (if it exists) linked with the provided scheme and address.</p>\n<p>The <code>bank_id</code> field is optional, but if it's not provided, we don't guarantee that the returned account is unique across all the banks.</p>\n<p>Example of account routing scheme: <code>IBAN</code>, &quot;OBP&quot;, &quot;AccountNumber&quot;, ...<br />\nExample of account routing address: <code>DE17500105178275645584</code>, &quot;321774cc-fccd-11ea-adc1-0242ac120002&quot;, &quot;55897106215&quot;, ...</p>\n<p>Authentication is Mandatory</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#account_routing\"><strong>account_routing</strong></a>:</p>\n<p><a href=\"/glossary#address\"><strong>address</strong></a>:</p>\n<p><a href=\"/glossary#scheme\"><strong>scheme</strong></a>: scheme value</p>\n<p><a href=\"/glossary#\">bank_id</a>: gh.29.uk</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#account_attribute_id\"><strong>account_attribute_id</strong></a>:</p>\n<p><a href=\"/glossary#account_attributes\"><strong>account_attributes</strong></a>:</p>\n<p><a href=\"/glossary#account_routings\"><strong>account_routings</strong></a>:</p>\n<p><a href=\"/glossary#address\"><strong>address</strong></a>:</p>\n<p><a href=\"/glossary#alias\"><strong>alias</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p>\n<p><a href=\"/glossary#balance\"><strong>balance</strong></a>: 10</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#can_add_comment\"><strong>can_add_comment</strong></a>:</p>\n<p><a href=\"/glossary#can_add_corporate_location\"><strong>can_add_corporate_location</strong></a>:</p>\n<p><a href=\"/glossary#can_add_image\"><strong>can_add_image</strong></a>:</p>\n<p><a href=\"/glossary#can_add_image_url\"><strong>can_add_image_url</strong></a>: true</p>\n<p><a href=\"/glossary#can_add_more_info\"><strong>can_add_more_info</strong></a>: true</p>\n<p><a href=\"/glossary#can_add_open_corporates_url\"><strong>can_add_open_corporates_url</strong></a>:</p>\n<p><a href=\"/glossary#can_add_physical_location\"><strong>can_add_physical_location</strong></a>:</p>\n<p><a href=\"/glossary#can_add_private_alias\"><strong>can_add_private_alias</strong></a>:</p>\n<p><a href=\"/glossary#can_add_public_alias\"><strong>can_add_public_alias</strong></a>:</p>\n<p><a href=\"/glossary#can_add_tag\"><strong>can_add_tag</strong></a>: true</p>\n<p><a href=\"/glossary#can_add_url\"><strong>can_add_url</strong></a>:</p>\n<p><a href=\"/glossary#can_add_where_tag\"><strong>can_add_where_tag</strong></a>:</p>\n<p><a href=\"/glossary#can_delete_comment\"><strong>can_delete_comment</strong></a>:</p>\n<p><a href=\"/glossary#can_delete_corporate_location\"><strong>can_delete_corporate_location</strong></a>: true</p>\n<p><a href=\"/glossary#can_delete_image\"><strong>can_delete_image</strong></a>: true</p>\n<p><a href=\"/glossary#can_delete_physical_location\"><strong>can_delete_physical_location</strong></a>:</p>\n<p><a href=\"/glossary#can_delete_tag\"><strong>can_delete_tag</strong></a>:</p>\n<p><a href=\"/glossary#can_delete_where_tag\"><strong>can_delete_where_tag</strong></a>: true</p>\n<p><a href=\"/glossary#can_edit_owner_comment\"><strong>can_edit_owner_comment</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_balance\"><strong>can_see_bank_account_balance</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_bank_name\"><strong>can_see_bank_account_bank_name</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_currency\"><strong>can_see_bank_account_currency</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_iban\"><strong>can_see_bank_account_iban</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_label\"><strong>can_see_bank_account_label</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_national_identifier\"><strong>can_see_bank_account_national_identifier</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_number\"><strong>can_see_bank_account_number</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_owners\"><strong>can_see_bank_account_owners</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_swift_bic\"><strong>can_see_bank_account_swift_bic</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_type\"><strong>can_see_bank_account_type</strong></a>:</p>\n<p><a href=\"/glossary#can_see_comments\"><strong>can_see_comments</strong></a>:</p>\n<p><a href=\"/glossary#can_see_corporate_location\"><strong>can_see_corporate_location</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_image_url\"><strong>can_see_image_url</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_images\"><strong>can_see_images</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_more_info\"><strong>can_see_more_info</strong></a>:</p>\n<p><a href=\"/glossary#can_see_open_corporates_url\"><strong>can_see_open_corporates_url</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_bank_name\"><strong>can_see_other_account_bank_name</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_iban\"><strong>can_see_other_account_iban</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_kind\"><strong>can_see_other_account_kind</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_metadata\"><strong>can_see_other_account_metadata</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_national_identifier\"><strong>can_see_other_account_national_identifier</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_other_account_number\"><strong>can_see_other_account_number</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_other_account_swift_bic\"><strong>can_see_other_account_swift_bic</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_owner_comment\"><strong>can_see_owner_comment</strong></a>:</p>\n<p><a href=\"/glossary#can_see_physical_location\"><strong>can_see_physical_location</strong></a>:</p>\n<p><a href=\"/glossary#can_see_private_alias\"><strong>can_see_private_alias</strong></a>:</p>\n<p><a href=\"/glossary#can_see_public_alias\"><strong>can_see_public_alias</strong></a>:</p>\n<p><a href=\"/glossary#can_see_tags\"><strong>can_see_tags</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_amount\"><strong>can_see_transaction_amount</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_transaction_balance\"><strong>can_see_transaction_balance</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_currency\"><strong>can_see_transaction_currency</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_description\"><strong>can_see_transaction_description</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_transaction_finish_date\"><strong>can_see_transaction_finish_date</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_metadata\"><strong>can_see_transaction_metadata</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_other_bank_account\"><strong>can_see_transaction_other_bank_account</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_start_date\"><strong>can_see_transaction_start_date</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_this_bank_account\"><strong>can_see_transaction_this_bank_account</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_type\"><strong>can_see_transaction_type</strong></a>:</p>\n<p><a href=\"/glossary#can_see_url\"><strong>can_see_url</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_where_tag\"><strong>can_see_where_tag</strong></a>: true</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#display_name\"><strong>display_name</strong></a>:</p>\n<p><a href=\"/glossary#hide_metadata_if_alias_used\"><strong>hide_metadata_if_alias_used</strong></a>:</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#is_public\"><strong>is_public</strong></a>: true</p>\n<p><a href=\"/glossary#\"><strong>label</strong></a>: My Account</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#number\"><strong>number</strong></a>:</p>\n<p><a href=\"/glossary#owners\"><strong>owners</strong></a>:</p>\n<p><a href=\"/glossary#product_code\"><strong>product_code</strong></a>: 1234BW</p>\n<p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p>\n<p><a href=\"/glossary#scheme\"><strong>scheme</strong></a>: scheme value</p>\n<p><a href=\"/glossary#short_name\"><strong>short_name</strong></a>:</p>\n<p><a href=\"/glossary#tags\"><strong>tags</strong></a>: Create-My-User</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n<p><a href=\"/glossary#User\"><strong>user</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n<p><a href=\"/glossary#views_available\"><strong>views_available</strong></a>:</p>\n<p><a href=\"/glossary#\">product_instance_code</a>: product_instance_code</p>\n",
      "description_markdown": "This endpoint returns the account (if it exists) linked with the provided scheme and address.\n\nThe `bank_id` field is optional, but if it's not provided, we don't guarantee that the returned account is unique across all the banks.\n\nExample of account routing scheme: `IBAN`, \"OBP\", \"AccountNumber\", ...\nExample of account routing address: `DE17500105178275645584`, \"321774cc-fccd-11ea-adc1-0242ac120002\", \"55897106215\", ...\n\n\n\nAuthentication is Mandatory\n\n\n**JSON request body fields:**\n\n\n\n[**account_routing**](/glossary#account_routing): \n\n\n\n[**address**](/glossary#address): \n\n\n\n[**scheme**](/glossary#scheme): scheme value\n\n\n\n[bank_id](/glossary#): gh.29.uk\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**account_attribute_id**](/glossary#account_attribute_id): \n\n\n\n[**account_attributes**](/glossary#account_attributes): \n\n\n\n[**account_routings**](/glossary#account_routings): \n\n\n\n[**address**](/glossary#address): \n\n\n\n[**alias**](/glossary#alias): \n\n\n\n[**amount**](/glossary#): 10.12\n\n\n\n[**balance**](/glossary#balance): 10\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**can_add_comment**](/glossary#can_add_comment): \n\n\n\n[**can_add_corporate_location**](/glossary#can_add_corporate_location): \n\n\n\n[**can_add_image**](/glossary#can_add_image): \n\n\n\n[**can_add_image_url**](/glossary#can_add_image_url): true\n\n\n\n[**can_add_more_info**](/glossary#can_add_more_info): true\n\n\n\n[**can_add_open_corporates_url**](/glossary#can_add_open_corporates_url): \n\n\n\n[**can_add_physical_location**](/glossary#can_add_physical_location): \n\n\n\n[**can_add_private_alias**](/glossary#can_add_private_alias): \n\n\n\n[**can_add_public_alias**](/glossary#can_add_public_alias): \n\n\n\n[**can_add_tag**](/glossary#can_add_tag): true\n\n\n\n[**can_add_url**](/glossary#can_add_url): \n\n\n\n[**can_add_where_tag**](/glossary#can_add_where_tag): \n\n\n\n[**can_delete_comment**](/glossary#can_delete_comment): \n\n\n\n[**can_delete_corporate_location**](/glossary#can_delete_corporate_location): true\n\n\n\n[**can_delete_image**](/glossary#can_delete_image): true\n\n\n\n[**can_delete_physical_location**](/glossary#can_delete_physical_location): \n\n\n\n[**can_delete_tag**](/glossary#can_delete_tag): \n\n\n\n[**can_delete_where_tag**](/glossary#can_delete_where_tag): true\n\n\n\n[**can_edit_owner_comment**](/glossary#can_edit_owner_comment): true\n\n\n\n[**can_see_bank_account_balance**](/glossary#can_see_bank_account_balance): \n\n\n\n[**can_see_bank_account_bank_name**](/glossary#can_see_bank_account_bank_name): true\n\n\n\n[**can_see_bank_account_currency**](/glossary#can_see_bank_account_currency): \n\n\n\n[**can_see_bank_account_iban**](/glossary#can_see_bank_account_iban): \n\n\n\n[**can_see_bank_account_label**](/glossary#can_see_bank_account_label): true\n\n\n\n[**can_see_bank_account_national_identifier**](/glossary#can_see_bank_account_national_identifier): \n\n\n\n[**can_see_bank_account_number**](/glossary#can_see_bank_account_number): true\n\n\n\n[**can_see_bank_account_owners**](/glossary#can_see_bank_account_owners): true\n\n\n\n[**can_see_bank_account_swift_bic**](/glossary#can_see_bank_account_swift_bic): \n\n\n\n[**can_see_bank_account_type**](/glossary#can_see_bank_account_type): \n\n\n\n[**can_see_comments**](/glossary#can_see_comments): \n\n\n\n[**can_see_corporate_location**](/glossary#can_see_corporate_location): true\n\n\n\n[**can_see_image_url**](/glossary#can_see_image_url): true\n\n\n\n[**can_see_images**](/glossary#can_see_images): true\n\n\n\n[**can_see_more_info**](/glossary#can_see_more_info): \n\n\n\n[**can_see_open_corporates_url**](/glossary#can_see_open_corporates_url): \n\n\n\n[**can_see_other_account_bank_name**](/glossary#can_see_other_account_bank_name): \n\n\n\n[**can_see_other_account_iban**](/glossary#can_see_other_account_iban): \n\n\n\n[**can_see_other_account_kind**](/glossary#can_see_other_account_kind): \n\n\n\n[**can_see_other_account_metadata**](/glossary#can_see_other_account_metadata): \n\n\n\n[**can_see_other_account_national_identifier**](/glossary#can_see_other_account_national_identifier): true\n\n\n\n[**can_see_other_account_number**](/glossary#can_see_other_account_number): true\n\n\n\n[**can_see_other_account_swift_bic**](/glossary#can_see_other_account_swift_bic): true\n\n\n\n[**can_see_owner_comment**](/glossary#can_see_owner_comment): \n\n\n\n[**can_see_physical_location**](/glossary#can_see_physical_location): \n\n\n\n[**can_see_private_alias**](/glossary#can_see_private_alias): \n\n\n\n[**can_see_public_alias**](/glossary#can_see_public_alias): \n\n\n\n[**can_see_tags**](/glossary#can_see_tags): \n\n\n\n[**can_see_transaction_amount**](/glossary#can_see_transaction_amount): true\n\n\n\n[**can_see_transaction_balance**](/glossary#can_see_transaction_balance): \n\n\n\n[**can_see_transaction_currency**](/glossary#can_see_transaction_currency): \n\n\n\n[**can_see_transaction_description**](/glossary#can_see_transaction_description): true\n\n\n\n[**can_see_transaction_finish_date**](/glossary#can_see_transaction_finish_date): \n\n\n\n[**can_see_transaction_metadata**](/glossary#can_see_transaction_metadata): \n\n\n\n[**can_see_transaction_other_bank_account**](/glossary#can_see_transaction_other_bank_account): \n\n\n\n[**can_see_transaction_start_date**](/glossary#can_see_transaction_start_date): \n\n\n\n[**can_see_transaction_this_bank_account**](/glossary#can_see_transaction_this_bank_account): \n\n\n\n[**can_see_transaction_type**](/glossary#can_see_transaction_type): \n\n\n\n[**can_see_url**](/glossary#can_see_url): true\n\n\n\n[**can_see_where_tag**](/glossary#can_see_where_tag): true\n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**date**](/glossary#): 2020-01-27\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**display_name**](/glossary#display_name): \n\n\n\n[**hide_metadata_if_alias_used**](/glossary#hide_metadata_if_alias_used): \n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**is_public**](/glossary#is_public): true\n\n\n\n[**label**](/glossary#): My Account\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**number**](/glossary#number): \n\n\n\n[**owners**](/glossary#owners): \n\n\n\n[**product_code**](/glossary#product_code): 1234BW\n\n\n\n[**provider**](/glossary#provider): ETHEREUM\n\n\n\n[**scheme**](/glossary#scheme): scheme value\n\n\n\n[**short_name**](/glossary#short_name): \n\n\n\n[**tags**](/glossary#tags): Create-My-User\n\n\n\n[**type**](/glossary#type): \n\n\n\n[**user**](/glossary#User): \n\n\n\n[**value**](/glossary#): 5987953\n\n\n\n[**views_available**](/glossary#views_available): \n\n\n\n[product_instance_code](/glossary#): product_instance_code\n\n\n",
      "example_request_body": {
        "bank_id": "gh.29.uk",
        "account_routing": {
          "scheme": "AccountNumber",
          "address": "4930396"
        }
      },
      "success_response_body": {
        "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
        "label": "NoneLabel",
        "number": "123",
        "owners": [
          {
            "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
            "provider": "http://127.0.0.1:8080",
            "display_name": "OBP"
          }
        ],
        "product_code": "1234BW",
        "balance": {
          "currency": "EUR",
          "amount": "0"
        },
        "views_available": [
          {
            "id": "123",
            "short_name": "short_name",
            "description": "description",
            "is_public": true,
            "alias": "None",
            "hide_metadata_if_alias_used": true,
            "can_add_comment": true,
            "can_add_corporate_location": true,
            "can_add_image": true,
            "can_add_image_url": true,
            "can_add_more_info": true,
            "can_add_open_corporates_url": true,
            "can_add_physical_location": true,
            "can_add_private_alias": true,
            "can_add_public_alias": true,
            "can_add_tag": true,
            "can_add_url": true,
            "can_add_where_tag": true,
            "can_delete_comment": true,
            "can_delete_corporate_location": true,
            "can_delete_image": true,
            "can_delete_physical_location": true,
            "can_delete_tag": true,
            "can_delete_where_tag": true,
            "can_edit_owner_comment": true,
            "can_see_bank_account_balance": true,
            "can_see_bank_account_bank_name": true,
            "can_see_bank_account_currency": true,
            "can_see_bank_account_iban": true,
            "can_see_bank_account_label": true,
            "can_see_bank_account_national_identifier": true,
            "can_see_bank_account_number": true,
            "can_see_bank_account_owners": true,
            "can_see_bank_account_swift_bic": true,
            "can_see_bank_account_type": true,
            "can_see_comments": true,
            "can_see_corporate_location": true,
            "can_see_image_url": true,
            "can_see_images": true,
            "can_see_more_info": true,
            "can_see_open_corporates_url": true,
            "can_see_other_account_bank_name": true,
            "can_see_other_account_iban": true,
            "can_see_other_account_kind": true,
            "can_see_other_account_metadata": true,
            "can_see_other_account_national_identifier": true,
            "can_see_other_account_number": true,
            "can_see_other_account_swift_bic": true,
            "can_see_owner_comment": true,
            "can_see_physical_location": true,
            "can_see_private_alias": true,
            "can_see_public_alias": true,
            "can_see_tags": true,
            "can_see_transaction_amount": true,
            "can_see_transaction_balance": true,
            "can_see_transaction_currency": true,
            "can_see_transaction_description": true,
            "can_see_transaction_finish_date": true,
            "can_see_transaction_metadata": true,
            "can_see_transaction_other_bank_account": true,
            "can_see_transaction_start_date": true,
            "can_see_transaction_this_bank_account": true,
            "can_see_transaction_type": true,
            "can_see_url": true,
            "can_see_where_tag": true
          }
        ],
        "bank_id": "gh.29.uk",
        "account_routings": [
          {
            "scheme": "AccountNumber",
            "address": "4930396"
          }
        ],
        "account_attributes": [
          {
            "product_code": "1234BW",
            "account_attribute_id": "613c83ea-80f9-4560-8404-b9cd4ec42a7f",
            "name": "OVERDRAFT_START_DATE",
            "type": "DATE_WITH_DAY",
            "value": "2012-04-23",
            "product_instance_code": "LKJL98769F"
          }
        ],
        "tags": [
          {
            "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
            "value": "OBP",
            "date": "1100-01-01T00:00:00Z",
            "user": {
              "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
              "provider": "http://127.0.0.1:8080",
              "display_name": "OBP"
            }
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-20017: Current user does not have access to the view. Please specify a valid value for VIEW_ID.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Account", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "bank_id": {
            "type": "string"
          },
          "account_routing": {
            "type": "object",
            "properties": {
              "scheme": {
                "type": "string"
              },
              "address": {
                "type": "string"
              }
            }
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "product_code": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                },
                "date": {
                  "type": "string",
                  "format": "date-time"
                },
                "user": {
                  "type": "object",
                  "properties": {
                    "provider": {
                      "type": "string"
                    },
                    "display_name": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "label": {
            "type": "string"
          },
          "number": {
            "type": "string"
          },
          "bank_id": {
            "type": "string"
          },
          "owners": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "provider": {
                  "type": "string"
                },
                "display_name": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                }
              }
            }
          },
          "id": {
            "type": "string"
          },
          "views_available": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "can_see_other_account_swift_bic": {
                  "type": "boolean"
                },
                "can_see_where_tag": {
                  "type": "boolean"
                },
                "can_see_url": {
                  "type": "boolean"
                },
                "can_see_bank_account_swift_bic": {
                  "type": "boolean"
                },
                "can_see_tags": {
                  "type": "boolean"
                },
                "can_see_transaction_balance": {
                  "type": "boolean"
                },
                "can_delete_corporate_location": {
                  "type": "boolean"
                },
                "can_add_image_url": {
                  "type": "boolean"
                },
                "can_see_public_alias": {
                  "type": "boolean"
                },
                "can_add_comment": {
                  "type": "boolean"
                },
                "description": {
                  "type": "string"
                },
                "can_see_corporate_location": {
                  "type": "boolean"
                },
                "can_see_other_account_bank_name": {
                  "type": "boolean"
                },
                "can_see_more_info": {
                  "type": "boolean"
                },
                "can_see_physical_location": {
                  "type": "boolean"
                },
                "can_edit_owner_comment": {
                  "type": "boolean"
                },
                "can_see_private_alias": {
                  "type": "boolean"
                },
                "can_see_bank_account_balance": {
                  "type": "boolean"
                },
                "can_add_public_alias": {
                  "type": "boolean"
                },
                "can_see_bank_account_owners": {
                  "type": "boolean"
                },
                "can_see_other_account_metadata": {
                  "type": "boolean"
                },
                "can_delete_physical_location": {
                  "type": "boolean"
                },
                "hide_metadata_if_alias_used": {
                  "type": "boolean"
                },
                "can_see_transaction_this_bank_account": {
                  "type": "boolean"
                },
                "can_see_image_url": {
                  "type": "boolean"
                },
                "can_see_transaction_type": {
                  "type": "boolean"
                },
                "can_see_images": {
                  "type": "boolean"
                },
                "can_see_transaction_amount": {
                  "type": "boolean"
                },
                "can_see_transaction_metadata": {
                  "type": "boolean"
                },
                "id": {
                  "type": "string"
                },
                "can_see_comments": {
                  "type": "boolean"
                },
                "can_see_other_account_iban": {
                  "type": "boolean"
                },
                "can_add_image": {
                  "type": "boolean"
                },
                "can_see_bank_account_type": {
                  "type": "boolean"
                },
                "can_see_other_account_kind": {
                  "type": "boolean"
                },
                "can_see_bank_account_currency": {
                  "type": "boolean"
                },
                "can_add_where_tag": {
                  "type": "boolean"
                },
                "can_see_transaction_start_date": {
                  "type": "boolean"
                },
                "can_see_bank_account_label": {
                  "type": "boolean"
                },
                "can_add_private_alias": {
                  "type": "boolean"
                },
                "can_see_transaction_currency": {
                  "type": "boolean"
                },
                "can_add_more_info": {
                  "type": "boolean"
                },
                "can_delete_comment": {
                  "type": "boolean"
                },
                "can_see_transaction_other_bank_account": {
                  "type": "boolean"
                },
                "can_see_bank_account_number": {
                  "type": "boolean"
                },
                "can_add_corporate_location": {
                  "type": "boolean"
                },
                "can_add_url": {
                  "type": "boolean"
                },
                "short_name": {
                  "type": "string"
                },
                "can_delete_where_tag": {
                  "type": "boolean"
                },
                "is_public": {
                  "type": "boolean"
                },
                "can_see_owner_comment": {
                  "type": "boolean"
                },
                "can_see_transaction_finish_date": {
                  "type": "boolean"
                },
                "can_see_open_corporates_url": {
                  "type": "boolean"
                },
                "can_add_physical_location": {
                  "type": "boolean"
                },
                "can_see_bank_account_iban": {
                  "type": "boolean"
                },
                "can_see_other_account_national_identifier": {
                  "type": "boolean"
                },
                "can_delete_image": {
                  "type": "boolean"
                },
                "can_add_tag": {
                  "type": "boolean"
                },
                "can_add_open_corporates_url": {
                  "type": "boolean"
                },
                "can_delete_tag": {
                  "type": "boolean"
                },
                "can_see_transaction_description": {
                  "type": "boolean"
                },
                "can_see_bank_account_national_identifier": {
                  "type": "boolean"
                },
                "can_see_other_account_number": {
                  "type": "boolean"
                },
                "can_see_bank_account_bank_name": {
                  "type": "boolean"
                },
                "alias": {
                  "type": "string"
                }
              }
            }
          },
          "balance": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string"
              },
              "amount": {
                "type": "string"
              }
            }
          },
          "account_attributes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string"
                },
                "product_code": {
                  "type": "string"
                },
                "account_attribute_id": {
                  "type": "string"
                },
                "product_instance_code": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              }
            }
          },
          "account_routings": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "scheme": {
                  "type": "string"
                },
                "address": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/accounts/account-routing-query",
      "connector_methods": ["obp.getAccountAttributesByAccount"]
    },
    {
      "operation_id": "OBPv1.2.1-addCounterpartyCorporateLocation",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "addCounterpartyCorporateLocation"
      },
      "request_verb": "POST",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/metadata/corporate_location",
      "summary": "Add Corporate Location to Counterparty",
      "description": "<p>Add the geolocation of the counterparty's registered address</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#other_account_id\">OTHER_ACCOUNT_ID</a>:</p>\n<p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#corporate_location\"><strong>corporate_location</strong></a>: 10</p>\n<p><a href=\"/glossary#latitude\"><strong>latitude</strong></a>: 38.8951</p>\n<p><a href=\"/glossary#longitude\"><strong>longitude</strong></a>: -77.0364</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#success\"><strong>success</strong></a>:</p>\n",
      "description_markdown": "Add the geolocation of the counterparty's registered address\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[OTHER_ACCOUNT_ID](/glossary#other_account_id): \n\n\n\n[VIEW_ID](/glossary#this_view_id): owner\n\n\n\n\n\n**JSON request body fields:**\n\n\n\n[**corporate_location**](/glossary#corporate_location): 10\n\n\n\n[**latitude**](/glossary#latitude): 38.8951\n\n\n\n[**longitude**](/glossary#longitude): -77.0364\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**success**](/glossary#success): \n\n\n",
      "example_request_body": {
        "corporate_location": {
          "latitude": 1.532,
          "longitude": 1.535
        }
      },
      "success_response_body": {
        "success": "Success"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "the view does not allow metadata access",
        "the view does not allow adding a corporate location",
        "Coordinates not possible",
        "Corporate Location cannot be deleted",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Counterparty-Metadata", "Counterparty"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "corporate_location": {
            "type": "object",
            "properties": {
              "longitude": {
                "type": "number"
              },
              "latitude": {
                "type": "number"
              }
            }
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "success": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/metadata/corporate_location",
      "connector_methods": [
        "obp.getCounterpartyByCounterpartyIdLegacy",
        "obp.getCounterpartyFromTransaction",
        "obp.getBankAccountOld"
      ]
    },
    {
      "operation_id": "OBPv4.0.0-createDynamicEndpoint",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "createDynamicEndpoint"
      },
      "request_verb": "POST",
      "request_url": "/obp/v4.0.0/management/dynamic-endpoints",
      "summary": "Create Dynamic Endpoint",
      "description": "<p>Create dynamic endpoints.</p>\n<p>Create dynamic endpoints with one json format swagger content.</p>\n<p>If the host of swagger is <code>dynamic_entity</code>, then you need link the swagger fields to the dynamic entity fields,<br />\nplease check <code>Endpoint Mapping</code> endpoints.</p>\n<p>If the host of swagger is <code>obp_mock</code>, every dynamic endpoint will return example response of swagger,</p>\n<p>when create MethodRouting for given dynamic endpoint, it will be routed to given url.</p>\n<p>Authentication is Mandatory</p>\n",
      "description_markdown": "Create dynamic endpoints.\n\nCreate dynamic endpoints with one json format swagger content.\n\nIf the host of swagger is `dynamic_entity`, then you need link the swagger fields to the dynamic entity fields, \nplease check `Endpoint Mapping` endpoints.\n\nIf the host of swagger is `obp_mock`, every dynamic endpoint will return example response of swagger,\n\nwhen create MethodRouting for given dynamic endpoint, it will be routed to given url.\n\n\n\nAuthentication is Mandatory",
      "example_request_body": {
        "swagger": "2.0",
        "info": {
          "title": "Bank Accounts (Dynamic Endpoint)",
          "version": "1.0.0"
        },
        "definitions": {
          "AccountName": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "family account"
              },
              "balance": {
                "type": "integer",
                "format": "int64",
                "example": 1000.123
              }
            }
          }
        },
        "paths": {
          "/accounts": {
            "post": {
              "operationId": "POST_account",
              "produces": ["application/json"],
              "responses": {
                "201": {
                  "description": "Success Response",
                  "schema": {
                    "$ref": "#/definitions/AccountName"
                  }
                }
              },
              "consumes": ["application/json"],
              "description": "POST Accounts",
              "summary": "POST Accounts"
            }
          },
          "/accounts/{account_id}": {
            "get": {
              "operationId": "GET_account",
              "produces": ["application/json"],
              "responses": {
                "200": {
                  "description": "Success Response",
                  "schema": {
                    "$ref": "#/definitions/AccountName"
                  }
                }
              },
              "consumes": ["application/json"],
              "description": "Get Bank Account",
              "summary": "Get Bank Account by Id"
            }
          }
        },
        "host": "obp_mock",
        "schemes": ["http", "https"]
      },
      "success_response_body": {
        "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
        "dynamic_endpoint_id": "dynamic-endpoint-id",
        "swagger_string": {
          "swagger": "2.0",
          "info": {
            "title": "Bank Accounts (Dynamic Endpoint)",
            "version": "1.0.0"
          },
          "definitions": {
            "AccountName": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "family account"
                },
                "balance": {
                  "type": "integer",
                  "format": "int64",
                  "example": 1000.123
                }
              }
            }
          },
          "paths": {
            "/accounts": {
              "post": {
                "operationId": "POST_account",
                "produces": ["application/json"],
                "responses": {
                  "201": {
                    "description": "Success Response",
                    "schema": {
                      "$ref": "#/definitions/AccountName"
                    }
                  }
                },
                "consumes": ["application/json"],
                "description": "POST Accounts",
                "summary": "POST Accounts"
              }
            },
            "/accounts/{account_id}": {
              "get": {
                "operationId": "GET_account",
                "produces": ["application/json"],
                "responses": {
                  "200": {
                    "description": "Success Response",
                    "schema": {
                      "$ref": "#/definitions/AccountName"
                    }
                  }
                },
                "consumes": ["application/json"],
                "description": "Get Bank Account",
                "summary": "Get Bank Account by Id"
              }
            }
          },
          "host": "obp_mock",
          "schemes": ["http", "https"]
        }
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-09008: DynamicEndpoint already exists.",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Dynamic-Endpoint-Manage", "API", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "swagger": {
            "type": "string"
          },
          "paths": {
            "type": "object",
            "properties": {
              "/accounts": {
                "type": "object",
                "properties": {
                  "post": {
                    "type": "object",
                    "properties": {
                      "responses": {
                        "type": "object",
                        "properties": {
                          "201": {
                            "type": "object",
                            "properties": {
                              "description": {
                                "type": "string"
                              },
                              "schema": {
                                "type": "object",
                                "properties": {
                                  "$ref": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "consumes": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "s": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "operationId": {
                        "type": "string"
                      },
                      "summary": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "produces": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "s": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "/accounts/{account_id}": {
                "type": "object",
                "properties": {
                  "get": {
                    "type": "object",
                    "properties": {
                      "description": {
                        "type": "string"
                      },
                      "consumes": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "s": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "operationId": {
                        "type": "string"
                      },
                      "responses": {
                        "type": "object",
                        "properties": {
                          "200": {
                            "type": "object",
                            "properties": {
                              "description": {
                                "type": "string"
                              },
                              "schema": {
                                "type": "object",
                                "properties": {
                                  "$ref": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "summary": {
                        "type": "string"
                      },
                      "produces": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "s": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "info": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string"
              },
              "version": {
                "type": "string"
              }
            }
          },
          "definitions": {
            "type": "object",
            "properties": {
              "AccountName": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string"
                          },
                          "example": {
                            "type": "string"
                          }
                        }
                      },
                      "balance": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string"
                          },
                          "format": {
                            "type": "string"
                          },
                          "example": {
                            "type": "number"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "schemes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "s": {
                  "type": "string"
                }
              }
            }
          },
          "host": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "string"
          },
          "dynamic_endpoint_id": {
            "type": "string"
          },
          "swagger_string": {
            "type": "object",
            "properties": {
              "swagger": {
                "type": "string"
              },
              "paths": {
                "type": "object",
                "properties": {
                  "/accounts": {
                    "type": "object",
                    "properties": {
                      "post": {
                        "type": "object",
                        "properties": {
                          "responses": {
                            "type": "object",
                            "properties": {
                              "201": {
                                "type": "object",
                                "properties": {
                                  "description": {
                                    "type": "string"
                                  },
                                  "schema": {
                                    "type": "object",
                                    "properties": {
                                      "$ref": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "consumes": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "s": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "operationId": {
                            "type": "string"
                          },
                          "summary": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "produces": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "s": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "/accounts/{account_id}": {
                    "type": "object",
                    "properties": {
                      "get": {
                        "type": "object",
                        "properties": {
                          "description": {
                            "type": "string"
                          },
                          "consumes": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "s": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "operationId": {
                            "type": "string"
                          },
                          "responses": {
                            "type": "object",
                            "properties": {
                              "200": {
                                "type": "object",
                                "properties": {
                                  "description": {
                                    "type": "string"
                                  },
                                  "schema": {
                                    "type": "object",
                                    "properties": {
                                      "$ref": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "summary": {
                            "type": "string"
                          },
                          "produces": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "s": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "info": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "version": {
                    "type": "string"
                  }
                }
              },
              "definitions": {
                "type": "object",
                "properties": {
                  "AccountName": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string"
                      },
                      "properties": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string"
                              },
                              "example": {
                                "type": "string"
                              }
                            }
                          },
                          "balance": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string"
                              },
                              "format": {
                                "type": "string"
                              },
                              "example": {
                                "type": "number"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "schemes": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "s": {
                      "type": "string"
                    }
                  }
                }
              },
              "host": {
                "type": "string"
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateDynamicEndpoint",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/dynamic-endpoints",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv4.0.0-deleteSystemDynamicEntity",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "deleteSystemDynamicEntity"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v4.0.0/management/system-dynamic-entities/DYNAMIC_ENTITY_ID",
      "summary": "Delete System Level Dynamic Entity",
      "description": "<p>Delete a DynamicEntity specified by DYNAMIC_ENTITY_ID.</p>\n<p>Authentication is Mandatory</p>\n",
      "description_markdown": "Delete a DynamicEntity specified by DYNAMIC_ENTITY_ID.\n\n\n\nAuthentication is Mandatory",
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Dynamic-Entity-Manage", "API", "New-Style"],
      "roles": [
        {
          "role": "CanDeleteSystemLevelDynamicEntity",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/system-dynamic-entities/DYNAMIC_ENTITY_ID",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv4.0.0-createTransactionRequestSimple",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "createTransactionRequestSimple"
      },
      "request_verb": "POST",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transaction-request-types/SIMPLE/transaction-requests",
      "summary": "Create Transaction Request (SIMPLE)",
      "description": "<p>Special instructions for SIMPLE:</p>\n<p>You can transfer money to the Bank Account Number or Iban directly.</p>\n<p>Initiate a Payment via creating a Transaction Request.</p>\n<p>In OBP, a <code>transaction request</code> may or may not result in a <code>transaction</code>. However, a <code>transaction</code> only has one possible state: completed.</p>\n<p>A <code>Transaction Request</code> can have one of several states: INITIATED, NEXT_CHALLENGE_PENDING etc.</p>\n<p><code>Transactions</code> are modeled on items in a bank statement that represent the movement of money.</p>\n<p><code>Transaction Requests</code> are requests to move money which may or may not succeed and thus result in a <code>Transaction</code>.</p>\n<p>A <code>Transaction Request</code> might create a security challenge that needs to be answered before the <code>Transaction Request</code> proceeds.<br />\nIn case 1 person needs to answer security challenge we have next flow of state of an <code>transaction request</code>:<br />\nINITIATED =&gt; COMPLETED<br />\nIn case n persons needs to answer security challenge we have next flow of state of an <code>transaction request</code>:<br />\nINITIATED =&gt; NEXT_CHALLENGE_PENDING =&gt; ... =&gt; NEXT_CHALLENGE_PENDING =&gt; COMPLETED</p>\n<p>The security challenge is bound to a user i.e. in case of right answer and the user is different than expected one the challenge will fail.</p>\n<p>Rule for calculating number of security challenges:<br />\nIf product Account attribute REQUIRED_CHALLENGE_ANSWERS=N then create N challenges<br />\n(one for every user that has a View where permission &quot;can_add_transaction_request_to_any_account&quot;=true)<br />\nIn case REQUIRED_CHALLENGE_ANSWERS is not defined as an account attribute default value is 1.</p>\n<p>Transaction Requests contain charge information giving the client the opportunity to proceed or not (as long as the challenge level is appropriate).</p>\n<p>Transaction Requests can have one of several Transaction Request Types which expect different bodies. The escaped body is returned in the details key of the GET response.<br />\nThis provides some commonality and one URL for many different payment or transfer types with enough flexibility to validate them differently.</p>\n<p>The payer is set in the URL. Money comes out of the BANK_ID and ACCOUNT_ID specified in the URL.</p>\n<p>In sandbox mode, TRANSACTION_REQUEST_TYPE is commonly set to ACCOUNT. See getTransactionRequestTypesSupportedByBank for all supported types.</p>\n<p>In sandbox mode, if the amount is less than 1000 EUR (any currency, unless it is set differently on this server), the transaction request will create a transaction without a challenge, else the Transaction Request will be set to INITIALISED and a challenge will need to be answered.</p>\n<p>If a challenge is created you must answer it using Answer Transaction Request Challenge before the Transaction is created.</p>\n<p>You can transfer between different currency accounts. (new in 2.0.0). The currency in body must match the sending account.</p>\n<p>The following static FX rates are available in sandbox mode:</p>\n<p><a href=\"https://obp-apiexplorer.joinfincubator.com/more?version=OBPv4.0.0&amp;list-all-banks=false&amp;core=&amp;psd2=&amp;obwg=#OBPv2_2_0-getCurrentFxRate\">https://obp-apiexplorer.joinfincubator.com/more?version=OBPv4.0.0&amp;list-all-banks=false&amp;core=&amp;psd2=&amp;obwg=#OBPv2_2_0-getCurrentFxRate</a></p>\n<p>Transaction Requests satisfy PSD2 requirements thus:</p>\n<p>1) A transaction can be initiated by a third party application.</p>\n<p>2) The customer is informed of the charge that will incurred.</p>\n<p>3) The call supports delegated authentication (OAuth)</p>\n<p>See <a href=\"https://github.com/OpenBankProject/Hello-OBP-DirectLogin-Python/blob/master/hello_payments.py\">this python code</a> for a complete example of this flow.</p>\n<p>There is further documentation <a href=\"https://github.com/OpenBankProject/OBP-API/wiki/Transaction-Requests\">here</a></p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#\">SIMPLE</a>: SIMPLE</p>\n<p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p>\n<p><a href=\"/glossary#\"><strong>charge_policy</strong></a>: SHARED</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#other_account_routing_address\"><strong>other_account_routing_address</strong></a>:</p>\n<p><a href=\"/glossary#other_account_routing_scheme\"><strong>other_account_routing_scheme</strong></a>:</p>\n<p><a href=\"/glossary#other_account_secondary_routing_address\"><strong>other_account_secondary_routing_address</strong></a>:</p>\n<p><a href=\"/glossary#other_account_secondary_routing_scheme\"><strong>other_account_secondary_routing_scheme</strong></a>:</p>\n<p><a href=\"/glossary#other_bank_routing_address\"><strong>other_bank_routing_address</strong></a>:</p>\n<p><a href=\"/glossary#other_bank_routing_scheme\"><strong>other_bank_routing_scheme</strong></a>:</p>\n<p><a href=\"/glossary#other_branch_routing_address\"><strong>other_branch_routing_address</strong></a>:</p>\n<p><a href=\"/glossary#other_branch_routing_scheme\"><strong>other_branch_routing_scheme</strong></a>:</p>\n<p><a href=\"/glossary#to\"><strong>to</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n<p><a href=\"/glossary#future_date\">future_date</a>: 20200127</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#Account\"><strong>account</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>account_id</strong></a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#allowed_attempts\"><strong>allowed_attempts</strong></a>: 5</p>\n<p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p>\n<p><a href=\"/glossary#bank_code\"><strong>bank_code</strong></a>: CGHZ</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#branch_number\"><strong>branch_number</strong></a>:</p>\n<p><a href=\"/glossary#challenge_type\"><strong>challenge_type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>challenges</strong></a>: challenges</p>\n<p><a href=\"/glossary#charge\"><strong>charge</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>counterparty_id</strong></a>: 9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#creditoraccount\"><strong>creditorAccount</strong></a>:</p>\n<p><a href=\"/glossary#creditorname\"><strong>creditorName</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#\"><strong>date_of_birth</strong></a>: 2018-03-09</p>\n<p><a href=\"/glossary#debtoraccount\"><strong>debtorAccount</strong></a>:</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#details\"><strong>details</strong></a>:</p>\n<p><a href=\"/glossary#end_date\"><strong>end_date</strong></a>:</p>\n<p><a href=\"/glossary#from\"><strong>from</strong></a>:</p>\n<p><a href=\"/glossary#future_date\"><strong>future_date</strong></a>: 20200127</p>\n<p><a href=\"/glossary#\"><strong>iban</strong></a>: DE91 1000 0000 0123 4567 89</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#instructedamount\"><strong>instructedAmount</strong></a>: 100</p>\n<p><a href=\"/glossary#kyc_document\"><strong>kyc_document</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>legal_name</strong></a>: Eveline Tripman</p>\n<p><a href=\"/glossary#link\"><strong>link</strong></a>:</p>\n<p><a href=\"/glossary#message\"><strong>message</strong></a>: 123456</p>\n<p><a href=\"/glossary#mobile_phone_number\"><strong>mobile_phone_number</strong></a>: +49 30 901820</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#nickname\"><strong>nickname</strong></a>:</p>\n<p><a href=\"/glossary#number\"><strong>number</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>start_date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#status\"><strong>status</strong></a>:</p>\n<p><a href=\"/glossary#summary\"><strong>summary</strong></a>:</p>\n<p><a href=\"/glossary#to\"><strong>to</strong></a>:</p>\n<p><a href=\"/glossary#transaction_ids\"><strong>transaction_ids</strong></a>:</p>\n<p><a href=\"/glossary#transfer_type\"><strong>transfer_type</strong></a>:</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n<p><a href=\"/glossary#to_counterparty\">to_counterparty</a>:</p>\n<p><a href=\"/glossary#to_sandbox_tan\">to_sandbox_tan</a>:</p>\n<p><a href=\"/glossary#to_sepa\">to_sepa</a>:</p>\n<p><a href=\"/glossary#to_sepa_credit_transfers\">to_sepa_credit_transfers</a>:</p>\n<p><a href=\"/glossary#\">to_simple</a>: to_simple</p>\n<p><a href=\"/glossary#to_transfer_to_account\">to_transfer_to_account</a>:</p>\n<p><a href=\"/glossary#to_transfer_to_atm\">to_transfer_to_atm</a>:</p>\n<p><a href=\"/glossary#to_transfer_to_phone\">to_transfer_to_phone</a>:</p>\n",
      "description_markdown": "Special instructions for SIMPLE:\n\nYou can transfer money to the Bank Account Number or Iban directly. \n\nInitiate a Payment via creating a Transaction Request.\n\nIn OBP, a `transaction request` may or may not result in a `transaction`. However, a `transaction` only has one possible state: completed.\n\nA `Transaction Request` can have one of several states: INITIATED, NEXT_CHALLENGE_PENDING etc.\n\n`Transactions` are modeled on items in a bank statement that represent the movement of money.\n\n`Transaction Requests` are requests to move money which may or may not succeed and thus result in a `Transaction`.\n\nA `Transaction Request` might create a security challenge that needs to be answered before the `Transaction Request` proceeds.\nIn case 1 person needs to answer security challenge we have next flow of state of an `transaction request`:\n  INITIATED => COMPLETED\nIn case n persons needs to answer security challenge we have next flow of state of an `transaction request`:\n  INITIATED => NEXT_CHALLENGE_PENDING => ... => NEXT_CHALLENGE_PENDING => COMPLETED\n\nThe security challenge is bound to a user i.e. in case of right answer and the user is different than expected one the challenge will fail.\n\nRule for calculating number of security challenges:\nIf product Account attribute REQUIRED_CHALLENGE_ANSWERS=N then create N challenges\n(one for every user that has a View where permission \"can_add_transaction_request_to_any_account\"=true)\nIn case REQUIRED_CHALLENGE_ANSWERS is not defined as an account attribute default value is 1.\n\nTransaction Requests contain charge information giving the client the opportunity to proceed or not (as long as the challenge level is appropriate).\n\nTransaction Requests can have one of several Transaction Request Types which expect different bodies. The escaped body is returned in the details key of the GET response.\nThis provides some commonality and one URL for many different payment or transfer types with enough flexibility to validate them differently.\n\nThe payer is set in the URL. Money comes out of the BANK_ID and ACCOUNT_ID specified in the URL.\n\nIn sandbox mode, TRANSACTION_REQUEST_TYPE is commonly set to ACCOUNT. See getTransactionRequestTypesSupportedByBank for all supported types.\n\nIn sandbox mode, if the amount is less than 1000 EUR (any currency, unless it is set differently on this server), the transaction request will create a transaction without a challenge, else the Transaction Request will be set to INITIALISED and a challenge will need to be answered.\n\nIf a challenge is created you must answer it using Answer Transaction Request Challenge before the Transaction is created.\n\nYou can transfer between different currency accounts. (new in 2.0.0). The currency in body must match the sending account.\n\nThe following static FX rates are available in sandbox mode:\n\nhttps://obp-apiexplorer.joinfincubator.com/more?version=OBPv4.0.0&list-all-banks=false&core=&psd2=&obwg=#OBPv2_2_0-getCurrentFxRate\n\n\nTransaction Requests satisfy PSD2 requirements thus:\n\n1) A transaction can be initiated by a third party application.\n\n2) The customer is informed of the charge that will incurred.\n\n3) The call supports delegated authentication (OAuth)\n\nSee [this python code](https://github.com/OpenBankProject/Hello-OBP-DirectLogin-Python/blob/master/hello_payments.py) for a complete example of this flow.\n\nThere is further documentation [here](https://github.com/OpenBankProject/OBP-API/wiki/Transaction-Requests)\n\n\n\n       \n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[SIMPLE](/glossary#): SIMPLE\n\n\n\n[VIEW_ID](/glossary#this_view_id): owner\n\n\n\n\n\n**JSON request body fields:**\n\n\n\n[**amount**](/glossary#): 10.12\n\n\n\n[**charge_policy**](/glossary#): SHARED\n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**other_account_routing_address**](/glossary#other_account_routing_address): \n\n\n\n[**other_account_routing_scheme**](/glossary#other_account_routing_scheme): \n\n\n\n[**other_account_secondary_routing_address**](/glossary#other_account_secondary_routing_address): \n\n\n\n[**other_account_secondary_routing_scheme**](/glossary#other_account_secondary_routing_scheme): \n\n\n\n[**other_bank_routing_address**](/glossary#other_bank_routing_address): \n\n\n\n[**other_bank_routing_scheme**](/glossary#other_bank_routing_scheme): \n\n\n\n[**other_branch_routing_address**](/glossary#other_branch_routing_address): \n\n\n\n[**other_branch_routing_scheme**](/glossary#other_branch_routing_scheme): \n\n\n\n[**to**](/glossary#to): \n\n\n\n[**value**](/glossary#): 5987953\n\n\n\n[future_date](/glossary#future_date): 20200127\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**account**](/glossary#Account): \n\n\n\n[**account_id**](/glossary#): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[**allowed_attempts**](/glossary#allowed_attempts): 5\n\n\n\n[**amount**](/glossary#): 10.12\n\n\n\n[**bank_code**](/glossary#bank_code): CGHZ\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**branch_number**](/glossary#branch_number): \n\n\n\n[**challenge_type**](/glossary#challenge_type): \n\n\n\n[**challenges**](/glossary#): challenges\n\n\n\n[**charge**](/glossary#charge): \n\n\n\n[**counterparty_id**](/glossary#): 9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**creditorAccount**](/glossary#creditoraccount): \n\n\n\n[**creditorName**](/glossary#creditorname): \n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**date_of_birth**](/glossary#): 2018-03-09\n\n\n\n[**debtorAccount**](/glossary#debtoraccount): \n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**details**](/glossary#details): \n\n\n\n[**end_date**](/glossary#end_date): \n\n\n\n[**from**](/glossary#from): \n\n\n\n[**future_date**](/glossary#future_date): 20200127\n\n\n\n[**iban**](/glossary#): DE91 1000 0000 0123 4567 89\n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**instructedAmount**](/glossary#instructedamount): 100\n\n\n\n[**kyc_document**](/glossary#kyc_document): \n\n\n\n[**legal_name**](/glossary#): Eveline Tripman\n\n\n\n[**link**](/glossary#link): \n\n\n\n[**message**](/glossary#message): 123456\n\n\n\n[**mobile_phone_number**](/glossary#mobile_phone_number): +49 30 901820\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**nickname**](/glossary#nickname): \n\n\n\n[**number**](/glossary#number): \n\n\n\n[**start_date**](/glossary#): 2020-01-27\n\n\n\n[**status**](/glossary#status): \n\n\n\n[**summary**](/glossary#summary): \n\n\n\n[**to**](/glossary#to): \n\n\n\n[**transaction_ids**](/glossary#transaction_ids): \n\n\n\n[**transfer_type**](/glossary#transfer_type): \n\n\n\n[**type**](/glossary#type): \n\n\n\n[**user_id**](/glossary#): 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\n\n\n\n[**value**](/glossary#): 5987953\n\n\n\n[to_counterparty](/glossary#to_counterparty): \n\n\n\n[to_sandbox_tan](/glossary#to_sandbox_tan): \n\n\n\n[to_sepa](/glossary#to_sepa): \n\n\n\n[to_sepa_credit_transfers](/glossary#to_sepa_credit_transfers): \n\n\n\n[to_simple](/glossary#): to_simple\n\n\n\n[to_transfer_to_account](/glossary#to_transfer_to_account): \n\n\n\n[to_transfer_to_atm](/glossary#to_transfer_to_atm): \n\n\n\n[to_transfer_to_phone](/glossary#to_transfer_to_phone): \n\n\n",
      "example_request_body": {
        "to": {
          "name": "John Smith Ltd.",
          "description": "The piano lession-Invoice No:68",
          "other_bank_routing_scheme": "OBP",
          "other_bank_routing_address": "gh.29.uk",
          "other_account_routing_scheme": "OBP",
          "other_account_routing_address": "36f8a9e6-c2b1-407a-8bd0-421b7119307e",
          "other_account_secondary_routing_scheme": "IBAN",
          "other_account_secondary_routing_address": "DE89370400440532013000",
          "other_branch_routing_scheme": "OBP",
          "other_branch_routing_address": "12f8a9e6-c2b1-407a-8bd0-421b7119307e"
        },
        "value": {
          "currency": "EUR",
          "amount": "0"
        },
        "description": "This an optional field. Maximum length is 2000. It can be any characters here.",
        "charge_policy": "SHARED",
        "future_date": "20200127"
      },
      "success_response_body": {
        "id": "4050046c-63b3-4868-8a22-14b4181d33a6",
        "type": "SANDBOX_TAN",
        "from": {
          "bank_id": "gh.29.uk",
          "account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
        },
        "details": {
          "to_sandbox_tan": {
            "bank_id": "String",
            "account_id": "String"
          },
          "to_sepa": {
            "iban": "String"
          },
          "to_counterparty": {
            "counterparty_id": "9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh"
          },
          "to_transfer_to_phone": {
            "value": {
              "currency": "EUR",
              "amount": "0"
            },
            "description": "String",
            "message": "String",
            "from": {
              "mobile_phone_number": "+44 07972 444 876",
              "nickname": "String"
            },
            "to": {
              "mobile_phone_number": "+44 07972 444 876"
            }
          },
          "to_transfer_to_atm": {
            "value": {
              "currency": "EUR",
              "amount": "0"
            },
            "description": "String",
            "message": "String",
            "from": {
              "mobile_phone_number": "+44 07972 444 876",
              "nickname": "String"
            },
            "to": {
              "legal_name": "Eveline Tripman",
              "date_of_birth": "20181230",
              "mobile_phone_number": "+44 07972 444 876",
              "kyc_document": {
                "type": "String",
                "number": "String"
              }
            }
          },
          "to_transfer_to_account": {
            "value": {
              "currency": "EUR",
              "amount": "0"
            },
            "description": "String",
            "transfer_type": "String",
            "future_date": "20181230",
            "to": {
              "name": "String",
              "bank_code": "String",
              "branch_number": "String",
              "account": {
                "number": "String",
                "iban": "String"
              }
            }
          },
          "to_sepa_credit_transfers": {
            "debtorAccount": {
              "iban": "12345"
            },
            "instructedAmount": {
              "currency": "EUR",
              "amount": "0"
            },
            "creditorAccount": {
              "iban": "54321"
            },
            "creditorName": "John Miles"
          },
          "value": {
            "currency": "EUR",
            "amount": "100"
          },
          "description": "String"
        },
        "transaction_ids": ["902ba3bb-dedd-45e7-9319-2fd3f2cd98a1"],
        "status": "COMPLETED",
        "start_date": "1100-01-01T00:00:00Z",
        "end_date": "1100-01-01T00:00:00Z",
        "challenges": [
          {
            "id": "2fg8a7e4-6d02-40e3-a129-0b2bf89de8ub",
            "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
            "allowed_attempts": 3,
            "challenge_type": "OBP_TRANSACTION_REQUEST_CHALLENGE",
            "link": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transaction-request-types/TRANSACTION_REQUEST_TYPE/transaction-requests/TRANSACTION_REQUEST_ID/challenge"
          }
        ],
        "charge": {
          "summary": "Rent the flat",
          "value": {
            "currency": "EUR",
            "amount": "0"
          }
        }
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30111: Invalid Bank Id. The BANK_ID should only contain 0-9/a-z/A-Z/'-'/'.'/'_', the length should be smaller than 255.",
        "OBP-30110: Invalid Account Id. The ACCOUNT_ID should only contain 0-9/a-z/A-Z/'-'/'.'/'_', the length should be smaller than 255.",
        "OBP-10001: Incorrect json format.",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30003: Account not found. Please specify a valid value for ACCOUNT_ID.",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-40002: Insufficient authorisation to create TransactionRequest. The Transaction Request could not be created because the login user doesn't have access to the view of the from account or the view don't have the `canAddTransactionRequestToAnyAccount` permission or your consumer doesn't not have the access to the view of the from account or you don't have the role CanCreateAnyTransactionRequest.",
        "OBP-40001: Invalid value for TRANSACTION_REQUEST_TYPE",
        "OBP-10001: Incorrect json format.",
        "OBP-10002: Invalid Number. Could not convert value to a number.",
        "OBP-40008: Can't send a payment with a value of 0 or less.",
        "OBP-40003: Transaction Request Currency must be the same as From Account Currency.",
        "OBP-00003: Transaction Requests is disabled in this API instance.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Transaction-Request", "Payment Initiation Service (PIS)", "PSD2", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "future_date": {
            "type": "string"
          },
          "to": {
            "type": "object",
            "properties": {
              "description": {
                "type": "string"
              },
              "other_bank_routing_scheme": {
                "type": "string"
              },
              "other_account_secondary_routing_address": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "other_bank_routing_address": {
                "type": "string"
              },
              "other_account_routing_address": {
                "type": "string"
              },
              "other_branch_routing_scheme": {
                "type": "string"
              },
              "other_account_secondary_routing_scheme": {
                "type": "string"
              },
              "other_account_routing_scheme": {
                "type": "string"
              },
              "other_branch_routing_address": {
                "type": "string"
              }
            }
          },
          "value": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string"
              },
              "amount": {
                "type": "string"
              }
            }
          },
          "charge_policy": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "challenges": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "challenge_type": {
                  "type": "string"
                },
                "link": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "allowed_attempts": {
                  "type": "integer"
                },
                "user_id": {
                  "type": "string"
                }
              }
            }
          },
          "status": {
            "type": "string"
          },
          "end_date": {
            "type": "string",
            "format": "date-time"
          },
          "charge": {
            "type": "object",
            "properties": {
              "summary": {
                "type": "string"
              },
              "value": {
                "type": "object",
                "properties": {
                  "currency": {
                    "type": "string"
                  },
                  "amount": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "transaction_ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "from": {
            "type": "object",
            "properties": {
              "bank_id": {
                "type": "string"
              },
              "account_id": {
                "type": "string"
              }
            }
          },
          "details": {
            "type": "object",
            "properties": {
              "to_sandbox_tan": {
                "type": "object",
                "properties": {
                  "account_id": {
                    "type": "string"
                  },
                  "bank_id": {
                    "type": "string"
                  }
                }
              },
              "value": {
                "type": "object",
                "properties": {
                  "currency": {
                    "type": "string"
                  },
                  "amount": {
                    "type": "string"
                  }
                }
              },
              "to_transfer_to_phone": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  },
                  "from": {
                    "type": "object",
                    "properties": {
                      "nickname": {
                        "type": "string"
                      },
                      "mobile_phone_number": {
                        "type": "string"
                      }
                    }
                  },
                  "to": {
                    "type": "object",
                    "properties": {
                      "mobile_phone_number": {
                        "type": "string"
                      }
                    }
                  },
                  "value": {
                    "type": "object",
                    "properties": {
                      "currency": {
                        "type": "string"
                      },
                      "amount": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "to_sepa": {
                "type": "object",
                "properties": {
                  "iban": {
                    "type": "string"
                  }
                }
              },
              "description": {
                "type": "string"
              },
              "to_counterparty": {
                "type": "object",
                "properties": {
                  "counterparty_id": {
                    "type": "string"
                  }
                }
              },
              "to_transfer_to_account": {
                "type": "object",
                "properties": {
                  "to": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "account": {
                        "type": "object",
                        "properties": {
                          "number": {
                            "type": "string"
                          },
                          "iban": {
                            "type": "string"
                          }
                        }
                      },
                      "bank_code": {
                        "type": "string"
                      },
                      "branch_number": {
                        "type": "string"
                      }
                    }
                  },
                  "transfer_type": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "future_date": {
                    "type": "string"
                  },
                  "value": {
                    "type": "object",
                    "properties": {
                      "currency": {
                        "type": "string"
                      },
                      "amount": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "to_sepa_credit_transfers": {
                "type": "object",
                "properties": {
                  "instructedAmount": {
                    "type": "object",
                    "properties": {
                      "currency": {
                        "type": "string"
                      },
                      "amount": {
                        "type": "string"
                      }
                    }
                  },
                  "debtorAccount": {
                    "type": "object",
                    "properties": {
                      "iban": {
                        "type": "string"
                      }
                    }
                  },
                  "creditorAccount": {
                    "type": "object",
                    "properties": {
                      "iban": {
                        "type": "string"
                      }
                    }
                  },
                  "creditorName": {
                    "type": "string"
                  }
                }
              },
              "to_transfer_to_atm": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  },
                  "from": {
                    "type": "object",
                    "properties": {
                      "nickname": {
                        "type": "string"
                      },
                      "mobile_phone_number": {
                        "type": "string"
                      }
                    }
                  },
                  "value": {
                    "type": "object",
                    "properties": {
                      "currency": {
                        "type": "string"
                      },
                      "amount": {
                        "type": "string"
                      }
                    }
                  },
                  "to": {
                    "type": "object",
                    "properties": {
                      "date_of_birth": {
                        "type": "string"
                      },
                      "kyc_document": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string"
                          },
                          "number": {
                            "type": "string"
                          }
                        }
                      },
                      "legal_name": {
                        "type": "string"
                      },
                      "mobile_phone_number": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "start_date": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transaction-request-types/SIMPLE/transaction-requests",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv4.0.0-getMyApiCollectionEndpointsById",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getMyApiCollectionEndpointsById"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/my/api-collection-ids/API_COLLECTION_ID/api-collection-endpoints",
      "summary": "Get My Api Collection Endpoints By Id",
      "description": "<p>Get Api Collection Endpoints By API_COLLECTION_ID.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#\">API_COLLECTION_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>api_collection_endpoint_id</strong></a>: 8uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>api_collection_endpoints</strong></a>: api_collection_endpoints</p>\n<p><a href=\"/glossary#\"><strong>api_collection_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>operation_id</strong></a>: OBPv4.0.0-getBanks</p>\n",
      "description_markdown": "Get Api Collection Endpoints By API_COLLECTION_ID.\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[API_COLLECTION_ID](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**api_collection_endpoint_id**](/glossary#): 8uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**api_collection_endpoints**](/glossary#): api_collection_endpoints\n\n\n\n[**api_collection_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**operation_id**](/glossary#): OBPv4.0.0-getBanks\n\n\n",
      "success_response_body": {
        "api_collection_endpoints": [
          {
            "api_collection_endpoint_id": "8uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
            "api_collection_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
            "operation_id": "OBPv4.0.0-getBanks"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20057: User not found by userId.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Api-Collection", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "api_collection_endpoints": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "operation_id": {
                  "type": "string"
                },
                "api_collection_id": {
                  "type": "string"
                },
                "api_collection_endpoint_id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/my/api-collection-ids/API_COLLECTION_ID/api-collection-endpoints",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv1.4.0-getTransactionRequestTypes",
      "implemented_by": {
        "version": "OBPv1.4.0",
        "function": "getTransactionRequestTypes"
      },
      "request_verb": "GET",
      "request_url": "/obp/v1.4.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transaction-request-types",
      "summary": "Get Transaction Request Types for Account",
      "description": "<p>Returns the Transaction Request Types that the account specified by ACCOUNT_ID and view specified by VIEW_ID has access to.</p>\n<p>These are the ways this API Server can create a Transaction via a Transaction Request<br />\n(as opposed to Transaction Types which include external types too e.g. for Transactions created by core banking etc.)</p>\n<p>A Transaction Request Type internally determines:</p>\n<ul>\n<li>the required Transaction Request 'body' i.e. fields that define the 'what' and 'to' of a Transaction Request,</li>\n<li>the type of security challenge that may be be raised before the Transaction Request proceeds, and</li>\n<li>the threshold of that challenge.</li>\n</ul>\n<p>For instance in a 'SANDBOX_TAN' Transaction Request, for amounts over 1000 currency units, the user must supply a positive integer to complete the Transaction Request and create a Transaction.</p>\n<p>This approach aims to provide only one endpoint for initiating transactions, and one that handles challenges, whilst still allowing flexibility with the payload and internal logic.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p>\n<p><a href=\"/glossary#charge\"><strong>charge</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#summary\"><strong>summary</strong></a>:</p>\n<p><a href=\"/glossary#transaction_request_types\"><strong>transaction_request_types</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n",
      "description_markdown": "Returns the Transaction Request Types that the account specified by ACCOUNT_ID and view specified by VIEW_ID has access to.\n\nThese are the ways this API Server can create a Transaction via a Transaction Request\n(as opposed to Transaction Types which include external types too e.g. for Transactions created by core banking etc.)\n\n A Transaction Request Type internally determines:\n\n * the required Transaction Request 'body' i.e. fields that define the 'what' and 'to' of a Transaction Request,\n * the type of security challenge that may be be raised before the Transaction Request proceeds, and\n * the threshold of that challenge.\n\n For instance in a 'SANDBOX_TAN' Transaction Request, for amounts over 1000 currency units, the user must supply a positive integer to complete the Transaction Request and create a Transaction.\n\n This approach aims to provide only one endpoint for initiating transactions, and one that handles challenges, whilst still allowing flexibility with the payload and internal logic.\n \n      \n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[VIEW_ID](/glossary#this_view_id): owner\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**amount**](/glossary#): 10.12\n\n\n\n[**charge**](/glossary#charge): \n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**summary**](/glossary#summary): \n\n\n\n[**transaction_request_types**](/glossary#transaction_request_types): \n\n\n\n[**value**](/glossary#): 5987953\n\n\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "transaction_request_types": [
          {
            "value": "10",
            "charge": {
              "summary": "The bank fixed charge",
              "value": {
                "currency": "EUR",
                "amount": "0"
              }
            }
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30003: Account not found. Please specify a valid value for ACCOUNT_ID.",
        "Please specify a valid value for CURRENCY of your Bank Account. ",
        "Current user does not have access to the view ",
        "account not found at bank",
        "user does not have access to owner view",
        "OBP-40018: Sorry, Transaction Requests are not enabled in this API instance.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Transaction-Request", "Payment Initiation Service (PIS)", "PSD2", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "transaction_request_types": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "charge": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "object",
                      "properties": {
                        "currency": {
                          "type": "string"
                        },
                        "amount": {
                          "type": "string"
                        }
                      }
                    },
                    "summary": {
                      "type": "string"
                    }
                  }
                },
                "value": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transaction-request-types",
      "connector_methods": [
        "obp.getTransactionRequestTypes",
        "obp.getTransactionRequestTypeCharges",
        "obp.checkBankAccountExists",
        "obp.getBank",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv3.0.0-createBranch",
      "implemented_by": {
        "version": "OBPv3.0.0",
        "function": "createBranch"
      },
      "request_verb": "POST",
      "request_url": "/obp/v3.0.0/banks/BANK_ID/branches",
      "summary": "Create Branch",
      "description": "<p>Create Branch for the Bank.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#accessiblefeatures\"><strong>accessibleFeatures</strong></a>:</p>\n<p><a href=\"/glossary#address\"><strong>address</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#branch_routing\"><strong>branch_routing</strong></a>:</p>\n<p><a href=\"/glossary#branch_type\"><strong>branch_type</strong></a>:</p>\n<p><a href=\"/glossary#city\"><strong>city</strong></a>:</p>\n<p><a href=\"/glossary#closing_time\"><strong>closing_time</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#country_code\"><strong>country_code</strong></a>: 1254</p>\n<p><a href=\"/glossary#county\"><strong>county</strong></a>:</p>\n<p><a href=\"/glossary#drive_up\"><strong>drive_up</strong></a>:</p>\n<p><a href=\"/glossary#friday\"><strong>friday</strong></a>:</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#\"><strong>is_accessible</strong></a>: true</p>\n<p><a href=\"/glossary#latitude\"><strong>latitude</strong></a>: 38.8951</p>\n<p><a href=\"/glossary#license\"><strong>license</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>line_1</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>line_2</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>line_3</strong></a>:</p>\n<p><a href=\"/glossary#lobby\"><strong>lobby</strong></a>:</p>\n<p><a href=\"/glossary#location\"><strong>location</strong></a>:</p>\n<p><a href=\"/glossary#longitude\"><strong>longitude</strong></a>: -77.0364</p>\n<p><a href=\"/glossary#meta\"><strong>meta</strong></a>:</p>\n<p><a href=\"/glossary#monday\"><strong>monday</strong></a>:</p>\n<p><a href=\"/glossary#more_info\"><strong>more_info</strong></a>: More information about this fee</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#opening_time\"><strong>opening_time</strong></a>:</p>\n<p><a href=\"/glossary#phone_number\"><strong>phone_number</strong></a>:</p>\n<p><a href=\"/glossary#postcode\"><strong>postcode</strong></a>:</p>\n<p><a href=\"/glossary#saturday\"><strong>saturday</strong></a>:</p>\n<p><a href=\"/glossary#scheme\"><strong>scheme</strong></a>: scheme value</p>\n<p><a href=\"/glossary#state\"><strong>state</strong></a>:</p>\n<p><a href=\"/glossary#sunday\"><strong>sunday</strong></a>:</p>\n<p><a href=\"/glossary#thursday\"><strong>thursday</strong></a>:</p>\n<p><a href=\"/glossary#tuesday\"><strong>tuesday</strong></a>:</p>\n<p><a href=\"/glossary#wednesday\"><strong>wednesday</strong></a>:</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#accessiblefeatures\"><strong>accessibleFeatures</strong></a>:</p>\n<p><a href=\"/glossary#address\"><strong>address</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#branch_routing\"><strong>branch_routing</strong></a>:</p>\n<p><a href=\"/glossary#branch_type\"><strong>branch_type</strong></a>:</p>\n<p><a href=\"/glossary#city\"><strong>city</strong></a>:</p>\n<p><a href=\"/glossary#closing_time\"><strong>closing_time</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#country_code\"><strong>country_code</strong></a>: 1254</p>\n<p><a href=\"/glossary#county\"><strong>county</strong></a>:</p>\n<p><a href=\"/glossary#drive_up\"><strong>drive_up</strong></a>:</p>\n<p><a href=\"/glossary#friday\"><strong>friday</strong></a>:</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#\"><strong>is_accessible</strong></a>: true</p>\n<p><a href=\"/glossary#latitude\"><strong>latitude</strong></a>: 38.8951</p>\n<p><a href=\"/glossary#license\"><strong>license</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>line_1</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>line_2</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>line_3</strong></a>:</p>\n<p><a href=\"/glossary#lobby\"><strong>lobby</strong></a>:</p>\n<p><a href=\"/glossary#location\"><strong>location</strong></a>:</p>\n<p><a href=\"/glossary#longitude\"><strong>longitude</strong></a>: -77.0364</p>\n<p><a href=\"/glossary#meta\"><strong>meta</strong></a>:</p>\n<p><a href=\"/glossary#monday\"><strong>monday</strong></a>:</p>\n<p><a href=\"/glossary#more_info\"><strong>more_info</strong></a>: More information about this fee</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#opening_time\"><strong>opening_time</strong></a>:</p>\n<p><a href=\"/glossary#phone_number\"><strong>phone_number</strong></a>:</p>\n<p><a href=\"/glossary#postcode\"><strong>postcode</strong></a>:</p>\n<p><a href=\"/glossary#saturday\"><strong>saturday</strong></a>:</p>\n<p><a href=\"/glossary#scheme\"><strong>scheme</strong></a>: scheme value</p>\n<p><a href=\"/glossary#state\"><strong>state</strong></a>:</p>\n<p><a href=\"/glossary#sunday\"><strong>sunday</strong></a>:</p>\n<p><a href=\"/glossary#thursday\"><strong>thursday</strong></a>:</p>\n<p><a href=\"/glossary#tuesday\"><strong>tuesday</strong></a>:</p>\n<p><a href=\"/glossary#wednesday\"><strong>wednesday</strong></a>:</p>\n",
      "description_markdown": "Create Branch for the Bank.\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON request body fields:**\n\n\n\n[**accessibleFeatures**](/glossary#accessiblefeatures): \n\n\n\n[**address**](/glossary#address): \n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**branch_routing**](/glossary#branch_routing): \n\n\n\n[**branch_type**](/glossary#branch_type): \n\n\n\n[**city**](/glossary#city): \n\n\n\n[**closing_time**](/glossary#closing_time): 2020-01-27\n\n\n\n[**country_code**](/glossary#country_code): 1254\n\n\n\n[**county**](/glossary#county): \n\n\n\n[**drive_up**](/glossary#drive_up): \n\n\n\n[**friday**](/glossary#friday): \n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**is_accessible**](/glossary#): true\n\n\n\n[**latitude**](/glossary#latitude): 38.8951\n\n\n\n[**license**](/glossary#license): \n\n\n\n[**line_1**](/glossary#): \n\n\n\n[**line_2**](/glossary#): \n\n\n\n[**line_3**](/glossary#): \n\n\n\n[**lobby**](/glossary#lobby): \n\n\n\n[**location**](/glossary#location): \n\n\n\n[**longitude**](/glossary#longitude): -77.0364\n\n\n\n[**meta**](/glossary#meta): \n\n\n\n[**monday**](/glossary#monday): \n\n\n\n[**more_info**](/glossary#more_info): More information about this fee\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**opening_time**](/glossary#opening_time): \n\n\n\n[**phone_number**](/glossary#phone_number): \n\n\n\n[**postcode**](/glossary#postcode): \n\n\n\n[**saturday**](/glossary#saturday): \n\n\n\n[**scheme**](/glossary#scheme): scheme value\n\n\n\n[**state**](/glossary#state): \n\n\n\n[**sunday**](/glossary#sunday): \n\n\n\n[**thursday**](/glossary#thursday): \n\n\n\n[**tuesday**](/glossary#tuesday): \n\n\n\n[**wednesday**](/glossary#wednesday): \n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**accessibleFeatures**](/glossary#accessiblefeatures): \n\n\n\n[**address**](/glossary#address): \n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**branch_routing**](/glossary#branch_routing): \n\n\n\n[**branch_type**](/glossary#branch_type): \n\n\n\n[**city**](/glossary#city): \n\n\n\n[**closing_time**](/glossary#closing_time): 2020-01-27\n\n\n\n[**country_code**](/glossary#country_code): 1254\n\n\n\n[**county**](/glossary#county): \n\n\n\n[**drive_up**](/glossary#drive_up): \n\n\n\n[**friday**](/glossary#friday): \n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**is_accessible**](/glossary#): true\n\n\n\n[**latitude**](/glossary#latitude): 38.8951\n\n\n\n[**license**](/glossary#license): \n\n\n\n[**line_1**](/glossary#): \n\n\n\n[**line_2**](/glossary#): \n\n\n\n[**line_3**](/glossary#): \n\n\n\n[**lobby**](/glossary#lobby): \n\n\n\n[**location**](/glossary#location): \n\n\n\n[**longitude**](/glossary#longitude): -77.0364\n\n\n\n[**meta**](/glossary#meta): \n\n\n\n[**monday**](/glossary#monday): \n\n\n\n[**more_info**](/glossary#more_info): More information about this fee\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**opening_time**](/glossary#opening_time): \n\n\n\n[**phone_number**](/glossary#phone_number): \n\n\n\n[**postcode**](/glossary#postcode): \n\n\n\n[**saturday**](/glossary#saturday): \n\n\n\n[**scheme**](/glossary#scheme): scheme value\n\n\n\n[**state**](/glossary#state): \n\n\n\n[**sunday**](/glossary#sunday): \n\n\n\n[**thursday**](/glossary#thursday): \n\n\n\n[**tuesday**](/glossary#tuesday): \n\n\n\n[**wednesday**](/glossary#wednesday): \n\n\n",
      "example_request_body": {
        "id": "branch-id-123",
        "bank_id": "bank-id-123",
        "name": "Branch by the Lake",
        "address": {
          "line_1": "No 1 the Road",
          "line_2": "The Place",
          "line_3": "The Hill",
          "city": "Berlin",
          "county": "String",
          "state": "Brandenburg",
          "postcode": "13359",
          "country_code": "DE"
        },
        "location": {
          "latitude": 10.0,
          "longitude": 10.0
        },
        "meta": {
          "license": {
            "id": "ODbL-1.0",
            "name": "Open Database License"
          }
        },
        "lobby": {
          "monday": [
            {
              "opening_time": "10:00",
              "closing_time": "18:00"
            }
          ],
          "tuesday": [
            {
              "opening_time": "10:00",
              "closing_time": "18:00"
            }
          ],
          "wednesday": [
            {
              "opening_time": "10:00",
              "closing_time": "18:00"
            }
          ],
          "thursday": [
            {
              "opening_time": "10:00",
              "closing_time": "18:00"
            }
          ],
          "friday": [
            {
              "opening_time": "10:00",
              "closing_time": "18:00"
            }
          ],
          "saturday": [
            {
              "opening_time": "10:00",
              "closing_time": "18:00"
            }
          ],
          "sunday": [
            {
              "opening_time": "10:00",
              "closing_time": "18:00"
            }
          ]
        },
        "drive_up": {
          "monday": {
            "opening_time": "10:00",
            "closing_time": "18:00"
          },
          "tuesday": {
            "opening_time": "10:00",
            "closing_time": "18:00"
          },
          "wednesday": {
            "opening_time": "10:00",
            "closing_time": "18:00"
          },
          "thursday": {
            "opening_time": "10:00",
            "closing_time": "18:00"
          },
          "friday": {
            "opening_time": "10:00",
            "closing_time": "18:00"
          },
          "saturday": {
            "opening_time": "10:00",
            "closing_time": "18:00"
          },
          "sunday": {
            "opening_time": "10:00",
            "closing_time": "18:00"
          }
        },
        "branch_routing": {
          "scheme": "OBP",
          "address": "123abc"
        },
        "is_accessible": "true",
        "accessibleFeatures": "wheelchair, atm usuable by the visually impaired",
        "branch_type": "Full service store",
        "more_info": "short walk to the lake from here",
        "phone_number": "+381631954907"
      },
      "success_response_body": {
        "id": "branch-id-123",
        "bank_id": "bank-id-123",
        "name": "Branch by the Lake",
        "address": {
          "line_1": "No 1 the Road",
          "line_2": "The Place",
          "line_3": "The Hill",
          "city": "Berlin",
          "county": "String",
          "state": "Brandenburg",
          "postcode": "13359",
          "country_code": "DE"
        },
        "location": {
          "latitude": 10.0,
          "longitude": 10.0
        },
        "meta": {
          "license": {
            "id": "ODbL-1.0",
            "name": "Open Database License"
          }
        },
        "lobby": {
          "monday": [
            {
              "opening_time": "10:00",
              "closing_time": "18:00"
            }
          ],
          "tuesday": [
            {
              "opening_time": "10:00",
              "closing_time": "18:00"
            }
          ],
          "wednesday": [
            {
              "opening_time": "10:00",
              "closing_time": "18:00"
            }
          ],
          "thursday": [
            {
              "opening_time": "10:00",
              "closing_time": "18:00"
            }
          ],
          "friday": [
            {
              "opening_time": "10:00",
              "closing_time": "18:00"
            }
          ],
          "saturday": [
            {
              "opening_time": "10:00",
              "closing_time": "18:00"
            }
          ],
          "sunday": [
            {
              "opening_time": "10:00",
              "closing_time": "18:00"
            }
          ]
        },
        "drive_up": {
          "monday": {
            "opening_time": "10:00",
            "closing_time": "18:00"
          },
          "tuesday": {
            "opening_time": "10:00",
            "closing_time": "18:00"
          },
          "wednesday": {
            "opening_time": "10:00",
            "closing_time": "18:00"
          },
          "thursday": {
            "opening_time": "10:00",
            "closing_time": "18:00"
          },
          "friday": {
            "opening_time": "10:00",
            "closing_time": "18:00"
          },
          "saturday": {
            "opening_time": "10:00",
            "closing_time": "18:00"
          },
          "sunday": {
            "opening_time": "10:00",
            "closing_time": "18:00"
          }
        },
        "branch_routing": {
          "scheme": "OBP",
          "address": "123abc"
        },
        "is_accessible": "true",
        "accessibleFeatures": "wheelchair, atm usuable by the visually impaired",
        "branch_type": "Full service store",
        "more_info": "short walk to the lake from here",
        "phone_number": "+381631954907"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30209: Insufficient authorisation to Create Branch. You do not have the role CanCreateBranch.",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["Branch"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "accessibleFeatures": {
            "type": "string"
          },
          "more_info": {
            "type": "string"
          },
          "branch_type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "bank_id": {
            "type": "string"
          },
          "location": {
            "type": "object",
            "properties": {
              "latitude": {
                "type": "number"
              },
              "longitude": {
                "type": "number"
              }
            }
          },
          "id": {
            "type": "string"
          },
          "is_accessible": {
            "type": "string"
          },
          "address": {
            "type": "object",
            "properties": {
              "city": {
                "type": "string"
              },
              "county": {
                "type": "string"
              },
              "postcode": {
                "type": "string"
              },
              "line_1": {
                "type": "string"
              },
              "line_2": {
                "type": "string"
              },
              "line_3": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "country_code": {
                "type": "string"
              }
            }
          },
          "drive_up": {
            "type": "object",
            "properties": {
              "friday": {
                "type": "object",
                "properties": {
                  "closing_time": {
                    "type": "string"
                  },
                  "opening_time": {
                    "type": "string"
                  }
                }
              },
              "monday": {
                "type": "object",
                "properties": {
                  "closing_time": {
                    "type": "string"
                  },
                  "opening_time": {
                    "type": "string"
                  }
                }
              },
              "saturday": {
                "type": "object",
                "properties": {
                  "closing_time": {
                    "type": "string"
                  },
                  "opening_time": {
                    "type": "string"
                  }
                }
              },
              "thursday": {
                "type": "object",
                "properties": {
                  "closing_time": {
                    "type": "string"
                  },
                  "opening_time": {
                    "type": "string"
                  }
                }
              },
              "tuesday": {
                "type": "object",
                "properties": {
                  "closing_time": {
                    "type": "string"
                  },
                  "opening_time": {
                    "type": "string"
                  }
                }
              },
              "wednesday": {
                "type": "object",
                "properties": {
                  "closing_time": {
                    "type": "string"
                  },
                  "opening_time": {
                    "type": "string"
                  }
                }
              },
              "sunday": {
                "type": "object",
                "properties": {
                  "closing_time": {
                    "type": "string"
                  },
                  "opening_time": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "branch_routing": {
            "type": "object",
            "properties": {
              "address": {
                "type": "string"
              },
              "scheme": {
                "type": "string"
              }
            }
          },
          "meta": {
            "type": "object",
            "properties": {
              "license": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "phone_number": {
            "type": "string"
          },
          "lobby": {
            "type": "object",
            "properties": {
              "saturday": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "closing_time": {
                      "type": "string"
                    },
                    "opening_time": {
                      "type": "string"
                    }
                  }
                }
              },
              "tuesday": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "closing_time": {
                      "type": "string"
                    },
                    "opening_time": {
                      "type": "string"
                    }
                  }
                }
              },
              "monday": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "closing_time": {
                      "type": "string"
                    },
                    "opening_time": {
                      "type": "string"
                    }
                  }
                }
              },
              "friday": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "closing_time": {
                      "type": "string"
                    },
                    "opening_time": {
                      "type": "string"
                    }
                  }
                }
              },
              "sunday": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "closing_time": {
                      "type": "string"
                    },
                    "opening_time": {
                      "type": "string"
                    }
                  }
                }
              },
              "wednesday": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "closing_time": {
                      "type": "string"
                    },
                    "opening_time": {
                      "type": "string"
                    }
                  }
                }
              },
              "thursday": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "closing_time": {
                      "type": "string"
                    },
                    "opening_time": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "accessibleFeatures": {
            "type": "string"
          },
          "more_info": {
            "type": "string"
          },
          "branch_type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "bank_id": {
            "type": "string"
          },
          "location": {
            "type": "object",
            "properties": {
              "latitude": {
                "type": "number"
              },
              "longitude": {
                "type": "number"
              }
            }
          },
          "id": {
            "type": "string"
          },
          "is_accessible": {
            "type": "string"
          },
          "address": {
            "type": "object",
            "properties": {
              "city": {
                "type": "string"
              },
              "county": {
                "type": "string"
              },
              "postcode": {
                "type": "string"
              },
              "line_1": {
                "type": "string"
              },
              "line_2": {
                "type": "string"
              },
              "line_3": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "country_code": {
                "type": "string"
              }
            }
          },
          "drive_up": {
            "type": "object",
            "properties": {
              "friday": {
                "type": "object",
                "properties": {
                  "closing_time": {
                    "type": "string"
                  },
                  "opening_time": {
                    "type": "string"
                  }
                }
              },
              "monday": {
                "type": "object",
                "properties": {
                  "closing_time": {
                    "type": "string"
                  },
                  "opening_time": {
                    "type": "string"
                  }
                }
              },
              "saturday": {
                "type": "object",
                "properties": {
                  "closing_time": {
                    "type": "string"
                  },
                  "opening_time": {
                    "type": "string"
                  }
                }
              },
              "thursday": {
                "type": "object",
                "properties": {
                  "closing_time": {
                    "type": "string"
                  },
                  "opening_time": {
                    "type": "string"
                  }
                }
              },
              "tuesday": {
                "type": "object",
                "properties": {
                  "closing_time": {
                    "type": "string"
                  },
                  "opening_time": {
                    "type": "string"
                  }
                }
              },
              "wednesday": {
                "type": "object",
                "properties": {
                  "closing_time": {
                    "type": "string"
                  },
                  "opening_time": {
                    "type": "string"
                  }
                }
              },
              "sunday": {
                "type": "object",
                "properties": {
                  "closing_time": {
                    "type": "string"
                  },
                  "opening_time": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "branch_routing": {
            "type": "object",
            "properties": {
              "address": {
                "type": "string"
              },
              "scheme": {
                "type": "string"
              }
            }
          },
          "meta": {
            "type": "object",
            "properties": {
              "license": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "phone_number": {
            "type": "string"
          },
          "lobby": {
            "type": "object",
            "properties": {
              "saturday": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "closing_time": {
                      "type": "string"
                    },
                    "opening_time": {
                      "type": "string"
                    }
                  }
                }
              },
              "tuesday": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "closing_time": {
                      "type": "string"
                    },
                    "opening_time": {
                      "type": "string"
                    }
                  }
                }
              },
              "monday": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "closing_time": {
                      "type": "string"
                    },
                    "opening_time": {
                      "type": "string"
                    }
                  }
                }
              },
              "friday": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "closing_time": {
                      "type": "string"
                    },
                    "opening_time": {
                      "type": "string"
                    }
                  }
                }
              },
              "sunday": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "closing_time": {
                      "type": "string"
                    },
                    "opening_time": {
                      "type": "string"
                    }
                  }
                }
              },
              "wednesday": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "closing_time": {
                      "type": "string"
                    },
                    "opening_time": {
                      "type": "string"
                    }
                  }
                }
              },
              "thursday": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "closing_time": {
                      "type": "string"
                    },
                    "opening_time": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateBranch",
          "requires_bank_id": true
        },
        {
          "role": "CanCreateBranchAtAnyBank",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/branches",
      "connector_methods": ["obp.createOrUpdateBranch", "obp.getBankLegacy"]
    },
    {
      "operation_id": "OBPv3.1.0-getProductCollection",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "getProductCollection"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/product-collections/COLLECTION_CODE",
      "summary": "Get Product Collection",
      "description": "<p>Returns information about the financial Product Collection specified by BANK_ID and COLLECTION_CODE:</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#collection_code\">COLLECTION_CODE</a>:</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#category\"><strong>category</strong></a>:</p>\n<p><a href=\"/glossary#code\"><strong>code</strong></a>: 125</p>\n<p><a href=\"/glossary#collection_code\"><strong>collection_code</strong></a>:</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#details\"><strong>details</strong></a>:</p>\n<p><a href=\"/glossary#family\"><strong>family</strong></a>:</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#license\"><strong>license</strong></a>:</p>\n<p><a href=\"/glossary#meta\"><strong>meta</strong></a>:</p>\n<p><a href=\"/glossary#more_info_url\"><strong>more_info_url</strong></a>: <a href=\"http://www.example.com/abc\">www.example.com/abc</a></p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#parent_product_code\"><strong>parent_product_code</strong></a>: 787LOW</p>\n<p><a href=\"/glossary#product_attribute_id\"><strong>product_attribute_id</strong></a>:</p>\n<p><a href=\"/glossary#product_code\"><strong>product_code</strong></a>: 1234BW</p>\n<p><a href=\"/glossary#products\"><strong>products</strong></a>:</p>\n<p><a href=\"/glossary#super_family\"><strong>super_family</strong></a>:</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n<p><a href=\"/glossary#product_attributes\">product_attributes</a>:</p>\n",
      "description_markdown": "Returns information about the financial Product Collection specified by BANK_ID and COLLECTION_CODE:\n\n          \n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[COLLECTION_CODE](/glossary#collection_code): \n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**category**](/glossary#category): \n\n\n\n[**code**](/glossary#code): 125\n\n\n\n[**collection_code**](/glossary#collection_code): \n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**details**](/glossary#details): \n\n\n\n[**family**](/glossary#family): \n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**license**](/glossary#license): \n\n\n\n[**meta**](/glossary#meta): \n\n\n\n[**more_info_url**](/glossary#more_info_url): www.example.com/abc\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**parent_product_code**](/glossary#parent_product_code): 787LOW\n\n\n\n[**product_attribute_id**](/glossary#product_attribute_id): \n\n\n\n[**product_code**](/glossary#product_code): 1234BW\n\n\n\n[**products**](/glossary#products): \n\n\n\n[**super_family**](/glossary#super_family): \n\n\n\n[**type**](/glossary#type): \n\n\n\n[**value**](/glossary#): 5987953\n\n\n\n[product_attributes](/glossary#product_attributes): \n\n\n",
      "success_response_body": {
        "collection_code": "A",
        "products": [
          {
            "bank_id": "gh.29.uk",
            "code": "1234BW",
            "parent_product_code": "parent",
            "name": "product name",
            "category": "category",
            "family": "family",
            "super_family": "super family",
            "more_info_url": "www.example.com/prod1/more-info.html",
            "details": "Details",
            "description": "Description",
            "meta": {
              "license": {
                "id": "ODbL-1.0",
                "name": "Open Database License"
              }
            },
            "product_attributes": [
              {
                "product_code": "1234BW",
                "product_attribute_id": "613c83ea-80f9-4560-8404-b9cd4ec42a7f",
                "name": "OVERDRAFT_START_DATE",
                "type": "DATE_WITH_DAY",
                "value": "2012-04-23"
              }
            ]
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Product-Collection", "Product", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "products": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "super_family": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "details": {
                  "type": "string"
                },
                "parent_product_code": {
                  "type": "string"
                },
                "bank_id": {
                  "type": "string"
                },
                "code": {
                  "type": "string"
                },
                "more_info_url": {
                  "type": "string"
                },
                "meta": {
                  "type": "object",
                  "properties": {
                    "license": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "family": {
                  "type": "string"
                },
                "product_attributes": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "value": {
                        "type": "string"
                      },
                      "product_code": {
                        "type": "string"
                      },
                      "product_attribute_id": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    }
                  }
                },
                "name": {
                  "type": "string"
                },
                "category": {
                  "type": "string"
                }
              }
            }
          },
          "collection_code": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/product-collections/COLLECTION_CODE",
      "connector_methods": [
        "obp.getProductCollectionItemsTree",
        "obp.getBank",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv4.0.0-createDirectDebit",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "createDirectDebit"
      },
      "request_verb": "POST",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/direct-debit",
      "summary": "Create Direct Debit",
      "description": "<p>Create direct debit for an account.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>counterparty_id</strong></a>: 9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>date_starts</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p>\n<p><a href=\"/glossary#\">date_expires</a>: 2021-01-27</p>\n<p><a href=\"/glossary#\">date_signed</a>: 2020-01-27</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>account_id</strong></a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#active\"><strong>active</strong></a>: true</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#\"><strong>counterparty_id</strong></a>: 9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>date_cancelled</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#\"><strong>date_expires</strong></a>: 2021-01-27</p>\n<p><a href=\"/glossary#\"><strong>date_signed</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#\"><strong>date_starts</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#direct_debit_id\"><strong>direct_debit_id</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p>\n",
      "description_markdown": "Create direct debit for an account.\n\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[VIEW_ID](/glossary#this_view_id): owner\n\n\n\n\n\n**JSON request body fields:**\n\n\n\n[**counterparty_id**](/glossary#): 9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**customer_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**date_starts**](/glossary#): 2020-01-27\n\n\n\n[**user_id**](/glossary#): 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\n\n\n\n[date_expires](/glossary#): 2021-01-27\n\n\n\n[date_signed](/glossary#): 2020-01-27\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**account_id**](/glossary#): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[**active**](/glossary#active): true\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**counterparty_id**](/glossary#): 9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**customer_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**date_cancelled**](/glossary#): 2020-01-27\n\n\n\n[**date_expires**](/glossary#): 2021-01-27\n\n\n\n[**date_signed**](/glossary#): 2020-01-27\n\n\n\n[**date_starts**](/glossary#): 2020-01-27\n\n\n\n[**direct_debit_id**](/glossary#direct_debit_id): \n\n\n\n[**user_id**](/glossary#): 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\n\n\n",
      "example_request_body": {
        "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
        "counterparty_id": "9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "date_signed": "1100-01-01T00:00:00Z",
        "date_starts": "1100-01-01T00:00:00Z",
        "date_expires": "1100-01-01T00:00:00Z"
      },
      "success_response_body": {
        "direct_debit_id": "aa0533bd-eb22-4bff-af75-d45240361b05",
        "bank_id": "gh.29.uk",
        "account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0",
        "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
        "counterparty_id": "9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "date_signed": "2023-04-13T04:30:08Z",
        "date_starts": "2023-04-13T04:30:08Z",
        "date_expires": "2023-04-13T04:30:08Z",
        "date_cancelled": "2023-04-13T04:30:08Z",
        "active": true
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-30022: The current view does not have the permission:",
        "OBP-20017: Current user does not have access to the view. Please specify a valid value for VIEW_ID.",
        "OBP-10001: Incorrect json format.",
        "OBP-30046: Customer not found. Please specify a valid value for CUSTOMER_ID.",
        "OBP-20057: User not found by userId.",
        "OBP-30017: Counterparty not found. Please specify a valid value for COUNTERPARTY_ID.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Direct-Debit", "Account", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "date_expires": {
            "type": "string",
            "format": "date-time"
          },
          "date_starts": {
            "type": "string",
            "format": "date-time"
          },
          "customer_id": {
            "type": "string"
          },
          "counterparty_id": {
            "type": "string"
          },
          "date_signed": {
            "type": "string",
            "format": "date-time"
          },
          "user_id": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "customer_id": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          },
          "bank_id": {
            "type": "string"
          },
          "counterparty_id": {
            "type": "string"
          },
          "date_cancelled": {
            "type": "string",
            "format": "date-time"
          },
          "date_expires": {
            "type": "string",
            "format": "date-time"
          },
          "date_signed": {
            "type": "string",
            "format": "date-time"
          },
          "date_starts": {
            "type": "string",
            "format": "date-time"
          },
          "direct_debit_id": {
            "type": "string"
          },
          "account_id": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/direct-debit",
      "connector_methods": [
        "obp.createDirectDebit",
        "obp.getCounterpartyByCounterpartyId",
        "obp.getCustomerByCustomerId"
      ]
    },
    {
      "operation_id": "OBPv2.0.0-addKycCheck",
      "implemented_by": {
        "version": "OBPv2.0.0",
        "function": "addKycCheck"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v2.0.0/banks/BANK_ID/customers/CUSTOMER_ID/kyc_check/KYC_CHECK_ID",
      "summary": "Add KYC Check",
      "description": "<p>Add a KYC check for the customer specified by CUSTOMER_ID. KYC Checks store details of checks on a customer made by the KYC team, their comments and a satisfied status</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#Customer.customer_id\">CUSTOMER_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#kyc_check_id\">KYC_CHECK_ID</a>:</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#comments\"><strong>comments</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>customer_number</strong></a>: 5987953</p>\n<p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#how\"><strong>how</strong></a>:</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#satisfied\"><strong>satisfied</strong></a>: true</p>\n<p><a href=\"/glossary#staff_name\"><strong>staff_name</strong></a>:</p>\n<p><a href=\"/glossary#staff_user_id\"><strong>staff_user_id</strong></a>:</p>\n",
      "description_markdown": "Add a KYC check for the customer specified by CUSTOMER_ID. KYC Checks store details of checks on a customer made by the KYC team, their comments and a satisfied status\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[CUSTOMER_ID](/glossary#Customer.customer_id): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[KYC_CHECK_ID](/glossary#kyc_check_id): \n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**comments**](/glossary#comments): \n\n\n\n[**customer_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**customer_number**](/glossary#): 5987953\n\n\n\n[**date**](/glossary#): 2020-01-27\n\n\n\n[**how**](/glossary#how): \n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**satisfied**](/glossary#satisfied): true\n\n\n\n[**staff_name**](/glossary#staff_name): \n\n\n\n[**staff_user_id**](/glossary#staff_user_id): \n\n\n",
      "example_request_body": {
        "customer_number": "5987953",
        "date": "1100-01-01T00:00:00Z",
        "how": "online_meeting",
        "staff_user_id": "67876",
        "staff_name": "Simon",
        "satisfied": true,
        "comments": "String"
      },
      "success_response_body": {
        "bank_id": "gh.29.uk",
        "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "id": "PlaceholderString",
        "customer_number": "5987953",
        "date": "1100-01-01T00:00:00Z",
        "how": "PlaceholderString",
        "staff_user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
        "staff_name": "PlaceholderString",
        "satisfied": true,
        "comments": "PlaceholderString"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-10001: Incorrect json format.",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30046: Customer not found. Please specify a valid value for CUSTOMER_ID.",
        "OBP-00004: Server error: could not add message",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["KYC", "Customer", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "customer_number": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "staff_user_id": {
            "type": "string"
          },
          "staff_name": {
            "type": "string"
          },
          "comments": {
            "type": "string"
          },
          "how": {
            "type": "string"
          },
          "satisfied": {
            "type": "boolean"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "comments": {
            "type": "string"
          },
          "customer_id": {
            "type": "string"
          },
          "staff_user_id": {
            "type": "string"
          },
          "bank_id": {
            "type": "string"
          },
          "customer_number": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string"
          },
          "satisfied": {
            "type": "boolean"
          },
          "how": {
            "type": "string"
          },
          "staff_name": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanAddKycCheck",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/customers/CUSTOMER_ID/kyc_check/KYC_CHECK_ID",
      "connector_methods": [
        "obp.createOrUpdateKycCheck",
        "obp.getCustomerByCustomerId",
        "obp.getBank",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv4.0.0-createBankAccountNotificationWebhook",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "createBankAccountNotificationWebhook"
      },
      "request_verb": "POST",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/web-hooks/account/notifications/on-create-transaction",
      "summary": "Create bank level Account Notification Webhook",
      "description": "<p>Create a notification Webhook that will fire for all accounts on the specified Bank.</p>\n<p>Webhooks are used to call external web services when certain events happen.</p>\n<p>For instance, a webhook can be used to notify an external service if a transaction is created on an account.</p>\n<p>When an account notification webhook fires it will POST to the URL you specify during the creation of the webhook.</p>\n<p>Inside the payload you will find account_id and transaction_id and also user_ids and customer_ids of the Users / Customers linked to the Account.</p>\n<p>The webhook will POST the following structure to your service:</p>\n<p>{<br />\n&quot;event_name&quot;: &quot;OnCreateTransaction&quot;,<br />\n&quot;event_id&quot;: &quot;9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1&quot;,<br />\n&quot;bank_id&quot;: &quot;gh.29.uk&quot;,<br />\n&quot;account_id&quot;: &quot;8ca9a7e4-6d02-40e3-a129-0b2bf89de9b1&quot;,<br />\n&quot;transaction_id&quot;: &quot;7ca9a7e4-6d02-40e3-a129-0b2bf89de9b1&quot;,<br />\n&quot;related_entities&quot;: [<br />\n{<br />\n&quot;user_id&quot;: &quot;8ca9a7e4-6d02-40e3-a129-0b2bf89de9b1&quot;,<br />\n&quot;customer_ids&quot;: [&quot;3ca9a7e4-6d02-40e3-a129-0b2bf89de9b1&quot;]<br />\n}<br />\n]<br />\n}</p>\n<p>Thus, your service should accept the above POST body structure.</p>\n<p>In this way, your web service can be informed about an event on an account and act accordingly.</p>\n<p>Further information about the account, transaction or related entities can then be retrieved using the standard REST APIs.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#http_method\"><strong>http_method</strong></a>: GET</p>\n<p><a href=\"/glossary#http_protocol\"><strong>http_protocol</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>url</strong></a>: <a href=\"http://www.example.com/id-docs/123/image.png\">http://www.example.com/id-docs/123/image.png</a></p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#created_by_user_id\"><strong>created_by_user_id</strong></a>:</p>\n<p><a href=\"/glossary#http_method\"><strong>http_method</strong></a>: GET</p>\n<p><a href=\"/glossary#http_protocol\"><strong>http_protocol</strong></a>:</p>\n<p><a href=\"/glossary#trigger_name\"><strong>trigger_name</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>url</strong></a>: <a href=\"http://www.example.com/id-docs/123/image.png\">http://www.example.com/id-docs/123/image.png</a></p>\n<p><a href=\"/glossary#\"><strong>webhook_id</strong></a>: webhook_id</p>\n",
      "description_markdown": "Create a notification Webhook that will fire for all accounts on the specified Bank.\n\n\nWebhooks are used to call external web services when certain events happen.\n\nFor instance, a webhook can be used to notify an external service if a transaction is created on an account.\n\n\n\n\nWhen an account notification webhook fires it will POST to the URL you specify during the creation of the webhook.\n\nInside the payload you will find account_id and transaction_id and also user_ids and customer_ids of the Users / Customers linked to the Account.\n                     |\nThe webhook will POST the following structure to your service:\n\n{\n  \"event_name\": \"OnCreateTransaction\",\n  \"event_id\": \"9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\",\n  \"bank_id\": \"gh.29.uk\",\n  \"account_id\": \"8ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\",\n  \"transaction_id\": \"7ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\",\n  \"related_entities\": [\n    {\n      \"user_id\": \"8ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\",\n      \"customer_ids\": [\"3ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\"]\n    }\n  ]\n}\n\nThus, your service should accept the above POST body structure.\n\nIn this way, your web service can be informed about an event on an account and act accordingly.\n\nFurther information about the account, transaction or related entities can then be retrieved using the standard REST APIs.\n\n\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON request body fields:**\n\n\n\n[**http_method**](/glossary#http_method): GET\n\n\n\n[**http_protocol**](/glossary#http_protocol): \n\n\n\n[**url**](/glossary#): http://www.example.com/id-docs/123/image.png\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**created_by_user_id**](/glossary#created_by_user_id): \n\n\n\n[**http_method**](/glossary#http_method): GET\n\n\n\n[**http_protocol**](/glossary#http_protocol): \n\n\n\n[**trigger_name**](/glossary#trigger_name): \n\n\n\n[**url**](/glossary#): http://www.example.com/id-docs/123/image.png\n\n\n\n[**webhook_id**](/glossary#): webhook_id\n\n\n",
      "example_request_body": {
        "url": "https://localhost.openbankproject.com",
        "http_method": "POST",
        "http_protocol": "HTTP/1.1"
      },
      "success_response_body": {
        "webhook_id": "fc23a7e2-7dd2-4bdf-a0b4-ae31232a4762",
        "bank_id": "gh.29.uk",
        "trigger_name": "OnCreateTransaction",
        "url": "https://localhost.openbankproject.com",
        "http_method": "POST",
        "http_protocol": "HTTP/1.1",
        "created_by_user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["Webhook", "Bank", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "http_method": {
            "type": "string"
          },
          "http_protocol": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "created_by_user_id": {
            "type": "string"
          },
          "http_method": {
            "type": "string"
          },
          "webhook_id": {
            "type": "string"
          },
          "bank_id": {
            "type": "string"
          },
          "http_protocol": {
            "type": "string"
          },
          "trigger_name": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateAccountNotificationWebhookAtOneBank",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/web-hooks/account/notifications/on-create-transaction",
      "connector_methods": ["obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv1.2.1-addOtherAccountPrivateAlias",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "addOtherAccountPrivateAlias"
      },
      "request_verb": "POST",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/private_alias",
      "summary": "Create Other Account Private Alias",
      "description": "<p>Creates a private alias for the other account OTHER_ACCOUNT_ID.</p>\n<p>Authentication is Optional<br />\nAuthentication is required if the view is not public.</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#other_account_id\">OTHER_ACCOUNT_ID</a>:</p>\n<p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#alias\"><strong>alias</strong></a>:</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#success\"><strong>success</strong></a>:</p>\n",
      "description_markdown": "Creates a private alias for the other account OTHER_ACCOUNT_ID.\n\nAuthentication is Optional\nAuthentication is required if the view is not public.\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[OTHER_ACCOUNT_ID](/glossary#other_account_id): \n\n\n\n[VIEW_ID](/glossary#this_view_id): owner\n\n\n\n\n\n**JSON request body fields:**\n\n\n\n[**alias**](/glossary#alias): \n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**success**](/glossary#success): \n\n\n",
      "example_request_body": {
        "alias": "String"
      },
      "success_response_body": {
        "success": "Success"
      },
      "error_response_bodies": [
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-10001: Incorrect json format.",
        "the view does not allow metadata access",
        "the view does not allow adding a private alias",
        "Alias cannot be added",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Counterparty-Metadata", "Counterparty", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "alias": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "success": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/private_alias",
      "connector_methods": [
        "obp.checkBankAccountExists",
        "obp.getBank",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv3.1.0-getCallsLimit",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "getCallsLimit"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.1.0/management/consumers/CONSUMER_ID/consumer/call-limits",
      "summary": "Get Call Limits for a Consumer",
      "description": "<p>Get Calls limits per Consumer.<br />\nAuthentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#\">CONSUMER_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#per_day_call_limit\"><strong>per_day_call_limit</strong></a>:</p>\n<p><a href=\"/glossary#per_hour_call_limit\"><strong>per_hour_call_limit</strong></a>:</p>\n<p><a href=\"/glossary#per_minute_call_limit\"><strong>per_minute_call_limit</strong></a>:</p>\n<p><a href=\"/glossary#per_month_call_limit\"><strong>per_month_call_limit</strong></a>:</p>\n<p><a href=\"/glossary#per_second_call_limit\"><strong>per_second_call_limit</strong></a>: 10</p>\n<p><a href=\"/glossary#per_week_call_limit\"><strong>per_week_call_limit</strong></a>:</p>\n<p><a href=\"/glossary#calls_made\">calls_made</a>: 50</p>\n<p><a href=\"/glossary#current_state\">current_state</a>:</p>\n<p><a href=\"/glossary#per_day\">per_day</a>: 4000</p>\n<p><a href=\"/glossary#per_hour\">per_hour</a>:</p>\n<p><a href=\"/glossary#per_minute\">per_minute</a>:</p>\n<p><a href=\"/glossary#per_month\">per_month</a>: 500</p>\n<p><a href=\"/glossary#per_second\">per_second</a>: 1000</p>\n<p><a href=\"/glossary#per_week\">per_week</a>: 50000</p>\n<p><a href=\"/glossary#reset_in_seconds\">reset_in_seconds</a>:</p>\n",
      "description_markdown": "Get Calls limits per Consumer.\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[CONSUMER_ID](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**per_day_call_limit**](/glossary#per_day_call_limit): \n\n\n\n[**per_hour_call_limit**](/glossary#per_hour_call_limit): \n\n\n\n[**per_minute_call_limit**](/glossary#per_minute_call_limit): \n\n\n\n[**per_month_call_limit**](/glossary#per_month_call_limit): \n\n\n\n[**per_second_call_limit**](/glossary#per_second_call_limit): 10\n\n\n\n[**per_week_call_limit**](/glossary#per_week_call_limit): \n\n\n\n[calls_made](/glossary#calls_made): 50\n\n\n\n[current_state](/glossary#current_state): \n\n\n\n[per_day](/glossary#per_day): 4000\n\n\n\n[per_hour](/glossary#per_hour): \n\n\n\n[per_minute](/glossary#per_minute): \n\n\n\n[per_month](/glossary#per_month): 500\n\n\n\n[per_second](/glossary#per_second): 1000\n\n\n\n[per_week](/glossary#per_week): 50000\n\n\n\n[reset_in_seconds](/glossary#reset_in_seconds): \n\n\n",
      "success_response_body": {
        "per_second_call_limit": "-1",
        "per_minute_call_limit": "-1",
        "per_hour_call_limit": "-1",
        "per_day_call_limit": "-1",
        "per_week_call_limit": "-1",
        "per_month_call_limit": "-1",
        "current_state": {
          "per_second": {
            "calls_made": -1,
            "reset_in_seconds": -1
          },
          "per_minute": {
            "calls_made": -1,
            "reset_in_seconds": -1
          },
          "per_hour": {
            "calls_made": -1,
            "reset_in_seconds": -1
          },
          "per_day": {
            "calls_made": -1,
            "reset_in_seconds": -1
          },
          "per_week": {
            "calls_made": -1,
            "reset_in_seconds": -1
          },
          "per_month": {
            "calls_made": -1,
            "reset_in_seconds": -1
          }
        }
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-10001: Incorrect json format.",
        "OBP-20014: Invalid Consumer ID. Please specify a valid value for CONSUMER_ID.",
        "OBP-30019: Consumer not found. Please specify a valid value for CONSUMER_ID.",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-30023: Cannot update Consumer ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Consumer", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "current_state": {
            "type": "object",
            "properties": {
              "per_week": {
                "type": "object",
                "properties": {
                  "reset_in_seconds": {
                    "type": "integer"
                  },
                  "calls_made": {
                    "type": "integer"
                  }
                }
              },
              "per_day": {
                "type": "object",
                "properties": {
                  "reset_in_seconds": {
                    "type": "integer"
                  },
                  "calls_made": {
                    "type": "integer"
                  }
                }
              },
              "per_minute": {
                "type": "object",
                "properties": {
                  "reset_in_seconds": {
                    "type": "integer"
                  },
                  "calls_made": {
                    "type": "integer"
                  }
                }
              },
              "per_month": {
                "type": "object",
                "properties": {
                  "reset_in_seconds": {
                    "type": "integer"
                  },
                  "calls_made": {
                    "type": "integer"
                  }
                }
              },
              "per_second": {
                "type": "object",
                "properties": {
                  "reset_in_seconds": {
                    "type": "integer"
                  },
                  "calls_made": {
                    "type": "integer"
                  }
                }
              },
              "per_hour": {
                "type": "object",
                "properties": {
                  "reset_in_seconds": {
                    "type": "integer"
                  },
                  "calls_made": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          "per_week_call_limit": {
            "type": "string"
          },
          "per_day_call_limit": {
            "type": "string"
          },
          "per_second_call_limit": {
            "type": "string"
          },
          "per_month_call_limit": {
            "type": "string"
          },
          "per_hour_call_limit": {
            "type": "string"
          },
          "per_minute_call_limit": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanSetCallLimits",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/consumers/CONSUMER_ID/consumer/call-limits",
      "connector_methods": ["obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv5.1.0-getAllApiCollections",
      "implemented_by": {
        "version": "OBPv5.1.0",
        "function": "getAllApiCollections"
      },
      "request_verb": "GET",
      "request_url": "/obp/v5.1.0/management/api-collections",
      "summary": "Get All API Collections",
      "description": "<p>Get All API Collections.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>api_collection_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>api_collection_name</strong></a>: Favourites</p>\n<p><a href=\"/glossary#\"><strong>api_collections</strong></a>: api_collections</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#\"><strong>is_sharable</strong></a>: is_sharable</p>\n<p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p>\n",
      "description_markdown": "Get All API Collections.\n\nAuthentication is Mandatory\n\n\n**JSON response body fields:**\n\n\n\n[**api_collection_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**api_collection_name**](/glossary#): Favourites\n\n\n\n[**api_collections**](/glossary#): api_collections\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**is_sharable**](/glossary#): is_sharable\n\n\n\n[**user_id**](/glossary#): 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\n\n\n",
      "success_response_body": {
        "api_collections": [
          {
            "api_collection_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
            "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
            "api_collection_name": "Favourites",
            "is_sharable": true,
            "description": "This an optional field. Maximum length is 2000. It can be any characters here."
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error.",
        "OBP-20001: User not logged in. Authentication is required!"
      ],
      "tags": ["Api-Collection", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "api_collections": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "description": {
                  "type": "string"
                },
                "api_collection_id": {
                  "type": "string"
                },
                "api_collection_name": {
                  "type": "string"
                },
                "is_sharable": {
                  "type": "boolean"
                },
                "user_id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetAllApiCollections",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/api-collections",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv4.0.0-getAllConnectorMethods",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getAllConnectorMethods"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/management/connector-methods",
      "summary": "Get all Connector Methods",
      "description": "<p>Get all Connector Methods.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>JSON response body fields:</strong></p>\n",
      "description_markdown": "Get all Connector Methods.\n\n\n\nAuthentication is Mandatory\n\n\n**JSON response body fields:**\n\n\n",
      "success_response_body": {
        "connectors_methods": [
          {
            "connector_method_id": "ace0352a-9a0f-4bfa-b30b-9003aa467f51",
            "method_name": "getBank",
            "method_body": "%20%20%20%20%20%20Future.successful%28%0A%20%20%20%20%20%20%20%20Full%28%28BankCommons%28%0A%20%20%20%20%20%20%20%20%20%20BankId%28%22Hello%20bank%20id%22%29%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%228%22%0A%20%20%20%20%20%20%20%20%29%2C%20None%29%29%0A%20%20%20%20%20%20%29",
            "programming_lang": "Scala"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Connector-Method", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "connectors_methods": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "connector_method_id": {
                  "type": "string"
                },
                "method_name": {
                  "type": "string"
                },
                "programming_lang": {
                  "type": "string"
                },
                "method_body": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetAllConnectorMethods",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/connector-methods",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv3.0.0-getOtherAccountsForBankAccount",
      "implemented_by": {
        "version": "OBPv3.0.0",
        "function": "getOtherAccountsForBankAccount"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts",
      "summary": "Get Other Accounts of one Account",
      "description": "<p>Returns data about all the other accounts that have shared at least one transaction with the ACCOUNT_ID at BANK_ID.<br />\nAuthentication is Optional</p>\n<p>Authentication is required if the view VIEW_ID is not public.</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>URL</strong></a>: <a href=\"http://www.example.com/id-docs/123/image.png\">http://www.example.com/id-docs/123/image.png</a></p>\n<p><a href=\"/glossary#account_routings\"><strong>account_routings</strong></a>:</p>\n<p><a href=\"/glossary#address\"><strong>address</strong></a>:</p>\n<p><a href=\"/glossary#bank_routing\"><strong>bank_routing</strong></a>:</p>\n<p><a href=\"/glossary#corporate_location\"><strong>corporate_location</strong></a>: 10</p>\n<p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#display_name\"><strong>display_name</strong></a>:</p>\n<p><a href=\"/glossary#holder\"><strong>holder</strong></a>:</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#image_url\"><strong>image_URL</strong></a>:</p>\n<p><a href=\"/glossary#is_alias\"><strong>is_alias</strong></a>:</p>\n<p><a href=\"/glossary#latitude\"><strong>latitude</strong></a>: 38.8951</p>\n<p><a href=\"/glossary#longitude\"><strong>longitude</strong></a>: -77.0364</p>\n<p><a href=\"/glossary#metadata\"><strong>metadata</strong></a>:</p>\n<p><a href=\"/glossary#more_info\"><strong>more_info</strong></a>: More information about this fee</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#open_corporates_url\"><strong>open_corporates_URL</strong></a>:</p>\n<p><a href=\"/glossary#other_accounts\"><strong>other_accounts</strong></a>:</p>\n<p><a href=\"/glossary#physical_location\"><strong>physical_location</strong></a>:</p>\n<p><a href=\"/glossary#private_alias\"><strong>private_alias</strong></a>:</p>\n<p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p>\n<p><a href=\"/glossary#public_alias\"><strong>public_alias</strong></a>:</p>\n<p><a href=\"/glossary#scheme\"><strong>scheme</strong></a>: scheme value</p>\n<p><a href=\"/glossary#User\"><strong>user</strong></a>:</p>\n",
      "description_markdown": "Returns data about all the other accounts that have shared at least one transaction with the ACCOUNT_ID at BANK_ID.\nAuthentication is Optional\n\nAuthentication is required if the view VIEW_ID is not public.\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[VIEW_ID](/glossary#this_view_id): owner\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**URL**](/glossary#): http://www.example.com/id-docs/123/image.png\n\n\n\n[**account_routings**](/glossary#account_routings): \n\n\n\n[**address**](/glossary#address): \n\n\n\n[**bank_routing**](/glossary#bank_routing): \n\n\n\n[**corporate_location**](/glossary#corporate_location): 10\n\n\n\n[**date**](/glossary#): 2020-01-27\n\n\n\n[**display_name**](/glossary#display_name): \n\n\n\n[**holder**](/glossary#holder): \n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**image_URL**](/glossary#image_url): \n\n\n\n[**is_alias**](/glossary#is_alias): \n\n\n\n[**latitude**](/glossary#latitude): 38.8951\n\n\n\n[**longitude**](/glossary#longitude): -77.0364\n\n\n\n[**metadata**](/glossary#metadata): \n\n\n\n[**more_info**](/glossary#more_info): More information about this fee\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**open_corporates_URL**](/glossary#open_corporates_url): \n\n\n\n[**other_accounts**](/glossary#other_accounts): \n\n\n\n[**physical_location**](/glossary#physical_location): \n\n\n\n[**private_alias**](/glossary#private_alias): \n\n\n\n[**provider**](/glossary#provider): ETHEREUM\n\n\n\n[**public_alias**](/glossary#public_alias): \n\n\n\n[**scheme**](/glossary#scheme): scheme value\n\n\n\n[**user**](/glossary#User): \n\n\n",
      "success_response_body": {
        "other_accounts": [
          {
            "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
            "holder": {
              "name": "OBP",
              "is_alias": true
            },
            "bank_routing": {
              "scheme": "scheme value",
              "address": ""
            },
            "account_routings": [
              {
                "scheme": "AccountNumber",
                "address": "4930396"
              }
            ],
            "metadata": {
              "public_alias": "NONE",
              "private_alias": "NONE",
              "more_info": "www.openbankproject.com",
              "URL": "www.openbankproject.com",
              "image_URL": "www.openbankproject.com",
              "open_corporates_URL": "www.openbankproject.com",
              "corporate_location": {
                "latitude": 1.231,
                "longitude": 1.231,
                "date": "1100-01-01T00:00:00Z",
                "user": {
                  "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
                  "provider": "http://127.0.0.1:8080",
                  "display_name": "OBP"
                }
              },
              "physical_location": {
                "latitude": 1.231,
                "longitude": 1.231,
                "date": "1100-01-01T00:00:00Z",
                "user": {
                  "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
                  "provider": "http://127.0.0.1:8080",
                  "display_name": "OBP"
                }
              }
            }
          }
        ]
      },
      "error_response_bodies": [
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-30005: View not found for Account. Please specify a valid value for VIEW_ID",
        "OBP-50200: Connector cannot return the data we requested.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Counterparty", "Account", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "other_accounts": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "metadata": {
                  "type": "object",
                  "properties": {
                    "image_URL": {
                      "type": "string"
                    },
                    "corporate_location": {
                      "type": "object",
                      "properties": {
                        "longitude": {
                          "type": "number"
                        },
                        "date": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "latitude": {
                          "type": "number"
                        },
                        "user": {
                          "type": "object",
                          "properties": {
                            "provider": {
                              "type": "string"
                            },
                            "display_name": {
                              "type": "string"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "URL": {
                      "type": "string"
                    },
                    "open_corporates_URL": {
                      "type": "string"
                    },
                    "physical_location": {
                      "type": "object",
                      "properties": {
                        "longitude": {
                          "type": "number"
                        },
                        "date": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "latitude": {
                          "type": "number"
                        },
                        "user": {
                          "type": "object",
                          "properties": {
                            "provider": {
                              "type": "string"
                            },
                            "display_name": {
                              "type": "string"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "public_alias": {
                      "type": "string"
                    },
                    "private_alias": {
                      "type": "string"
                    },
                    "more_info": {
                      "type": "string"
                    }
                  }
                },
                "bank_routing": {
                  "type": "object",
                  "properties": {
                    "scheme": {
                      "type": "string"
                    },
                    "address": {
                      "type": "string"
                    }
                  }
                },
                "holder": {
                  "type": "object",
                  "properties": {
                    "is_alias": {
                      "type": "boolean"
                    },
                    "name": {
                      "type": "string"
                    }
                  }
                },
                "id": {
                  "type": "string"
                },
                "account_routings": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "scheme": {
                        "type": "string"
                      },
                      "address": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts",
      "connector_methods": ["obp.checkBankAccountExists", "obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv5.1.0-updateMyApiCollection",
      "implemented_by": {
        "version": "OBPv5.1.0",
        "function": "updateMyApiCollection"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v5.1.0/my/api-collections/API_COLLECTION_ID",
      "summary": "Update My Api Collection By API_COLLECTION_ID",
      "description": "<p>Update Api Collection for logged in user.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#\">API_COLLECTION_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>api_collection_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>api_collection_name</strong></a>: Favourites</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#\"><strong>is_sharable</strong></a>: is_sharable</p>\n<p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p>\n",
      "description_markdown": "Update Api Collection for logged in user.\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[API_COLLECTION_ID](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**api_collection_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**api_collection_name**](/glossary#): Favourites\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**is_sharable**](/glossary#): is_sharable\n\n\n\n[**user_id**](/glossary#): 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\n\n\n",
      "example_request_body": {
        "api_collection_name": "Favourites",
        "is_sharable": true,
        "description": "This an optional field. Maximum length is 2000. It can be any characters here."
      },
      "success_response_body": {
        "api_collection_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
        "api_collection_name": "Favourites",
        "is_sharable": true,
        "description": "This an optional field. Maximum length is 2000. It can be any characters here."
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-10001: Incorrect json format.",
        "OBP-20057: User not found by userId.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Api-Collection", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "api_collection_name": {
            "type": "string"
          },
          "is_sharable": {
            "type": "boolean"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "api_collection_id": {
            "type": "string"
          },
          "api_collection_name": {
            "type": "string"
          },
          "is_sharable": {
            "type": "boolean"
          },
          "user_id": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/my/api-collections/API_COLLECTION_ID",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv4.0.0-revokeUserAccessToView",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "revokeUserAccessToView"
      },
      "request_verb": "POST",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/account-access/revoke",
      "summary": "Revoke User access to View",
      "description": "<p>Revoke the User identified by USER_ID access to the view identified by VIEW_ID.</p>\n<p>Authentication is Mandatory and the user needs to be account holder.</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>is_system</strong></a>: true</p>\n<p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p>\n<p><a href=\"/glossary#view\"><strong>view</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>view_id</strong></a>: owner</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#revoked\"><strong>revoked</strong></a>:</p>\n",
      "description_markdown": "Revoke the User identified by USER_ID access to the view identified by VIEW_ID.\n\nAuthentication is Mandatory and the user needs to be account holder.\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON request body fields:**\n\n\n\n[**is_system**](/glossary#): true\n\n\n\n[**user_id**](/glossary#): 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\n\n\n\n[**view**](/glossary#view): \n\n\n\n[**view_id**](/glossary#): owner\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**revoked**](/glossary#revoked): \n\n\n",
      "example_request_body": {
        "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
        "view": {
          "view_id": "owner",
          "is_system": true
        }
      },
      "success_response_body": {
        "revoked": true
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20047: User must have access to the owner view or must be an account holder.",
        "OBP-10001: Incorrect json format.",
        "OBP-20005: User not found. Please specify a valid value for USER_ID.",
        "OBP-30252: System view not found. Please specify a valid value for VIEW_ID",
        "OBP-30005: View not found for Account. Please specify a valid value for VIEW_ID",
        "OBP-30064: Cannot revoke account access.",
        "OBP-30065: Cannot find account access.",
        "OBP-50000: Unknown Error."
      ],
      "tags": [
        "Account-Access",
        "View-Custom",
        "Account",
        "User",
        "OwnerViewRequired",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "view": {
            "type": "object",
            "properties": {
              "is_system": {
                "type": "boolean"
              },
              "view_id": {
                "type": "string"
              }
            }
          },
          "user_id": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "revoked": {
            "type": "boolean"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/account-access/revoke",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv3.1.0-getFirehoseCustomers",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "getFirehoseCustomers"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/firehose/customers",
      "summary": "Get Firehose Customers",
      "description": "<p>Get Customers that has a firehose View.</p>\n<p>Allows bulk access to customers.<br />\nUser must have the CanUseFirehoseAtAnyBank Role</p>\n<p>Possible custom url parameters for pagination:</p>\n<ul>\n<li>limit=NUMBER ==&gt; default value: 50</li>\n<li>offset=NUMBER ==&gt; default value: 0</li>\n</ul>\n<p>eg1:?limit=100&amp;offset=0</p>\n<ul>\n<li>sort_direction=ASC/DESC ==&gt; default value: DESC.</li>\n</ul>\n<p>eg2:?limit=100&amp;offset=0&amp;sort_direction=ASC</p>\n<ul>\n<li>from_date=DATE =&gt; example value: 1970-01-01T00:00:00.000Z. NOTE! The default value is one year ago (1970-01-01T00:00:00.000Z).</li>\n<li>to_date=DATE =&gt; example value: 2023-04-13T04:30:11.508Z. NOTE! The default value is now (2023-04-13T04:30:11.508Z).</li>\n</ul>\n<p>Date format parameter: yyyy-MM-dd'T'HH:mm:ss.SSS'Z'(1100-01-01T01:01:01.000Z) ==&gt; time zone is UTC.</p>\n<p>eg3:?sort_direction=ASC&amp;limit=100&amp;offset=0&amp;from_date=1100-01-01T01:01:01.000Z&amp;to_date=1100-01-01T01:01:01.000Z</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>customer_number</strong></a>: 5987953</p>\n<p><a href=\"/glossary#customers\"><strong>customers</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#\"><strong>date_of_birth</strong></a>: 2018-03-09</p>\n<p><a href=\"/glossary#\"><strong>dependants</strong></a>: 1</p>\n<p><a href=\"/glossary#dob_of_dependants\"><strong>dob_of_dependants</strong></a>: [2019-09-08, 2017-07-12]</p>\n<p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"&#109;&#x61;&#x69;&#x6c;&#x74;&#x6f;&#x3a;f&#101;&#108;&#105;&#x78;&#x73;&#109;&#x69;&#116;&#x68;&#x40;&#x65;xa&#109;pl&#101;.&#x63;o&#109;\">&#x66;e&#x6c;&#105;&#120;s&#x6d;&#105;&#116;&#104;&#64;&#101;&#120;&#x61;&#x6d;p&#108;&#x65;&#46;&#99;&#x6f;&#x6d;</a></p>\n<p><a href=\"/glossary#\"><strong>employment_status</strong></a>: worker</p>\n<p><a href=\"/glossary#face_image\"><strong>face_image</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>highest_education_attained</strong></a>: Master</p>\n<p><a href=\"/glossary#\"><strong>kyc_status</strong></a>: true</p>\n<p><a href=\"/glossary#last_ok_date\"><strong>last_ok_date</strong></a>: 2022-04-13T04:30:07.985Z</p>\n<p><a href=\"/glossary#\"><strong>legal_name</strong></a>: Eveline Tripman</p>\n<p><a href=\"/glossary#mobile_phone_number\"><strong>mobile_phone_number</strong></a>: +49 30 901820</p>\n<p><a href=\"/glossary#\"><strong>rating</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>relationship_status</strong></a>: single</p>\n<p><a href=\"/glossary#\"><strong>source</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>url</strong></a>: <a href=\"http://www.example.com/id-docs/123/image.png\">http://www.example.com/id-docs/123/image.png</a></p>\n<p><a href=\"/glossary#credit_limit\">credit_limit</a>:</p>\n<p><a href=\"/glossary#credit_rating\">credit_rating</a>:</p>\n",
      "description_markdown": "Get Customers that has a firehose View.\n\nAllows bulk access to customers.\nUser must have the CanUseFirehoseAtAnyBank Role\n\n\n\nPossible custom url parameters for pagination:\n\n* limit=NUMBER ==> default value: 50\n* offset=NUMBER ==> default value: 0\n\neg1:?limit=100&offset=0\n\n\n* sort_direction=ASC/DESC ==> default value: DESC.\n\neg2:?limit=100&offset=0&sort_direction=ASC\n\n\n\n* from_date=DATE => example value: 1970-01-01T00:00:00.000Z. NOTE! The default value is one year ago (1970-01-01T00:00:00.000Z).\n* to_date=DATE => example value: 2023-04-13T04:30:11.508Z. NOTE! The default value is now (2023-04-13T04:30:11.508Z).\n\nDate format parameter: yyyy-MM-dd'T'HH:mm:ss.SSS'Z'(1100-01-01T01:01:01.000Z) ==> time zone is UTC.\n\neg3:?sort_direction=ASC&limit=100&offset=0&from_date=1100-01-01T01:01:01.000Z&to_date=1100-01-01T01:01:01.000Z\n\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**amount**](/glossary#): 10.12\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**customer_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**customer_number**](/glossary#): 5987953\n\n\n\n[**customers**](/glossary#customers): \n\n\n\n[**date**](/glossary#): 2020-01-27\n\n\n\n[**date_of_birth**](/glossary#): 2018-03-09\n\n\n\n[**dependants**](/glossary#): 1\n\n\n\n[**dob_of_dependants**](/glossary#dob_of_dependants): [2019-09-08, 2017-07-12]\n\n\n\n[**email**](/glossary#): felixsmith@example.com\n\n\n\n[**employment_status**](/glossary#): worker\n\n\n\n[**face_image**](/glossary#face_image): \n\n\n\n[**highest_education_attained**](/glossary#): Master\n\n\n\n[**kyc_status**](/glossary#): true\n\n\n\n[**last_ok_date**](/glossary#last_ok_date): 2022-04-13T04:30:07.985Z\n\n\n\n[**legal_name**](/glossary#): Eveline Tripman\n\n\n\n[**mobile_phone_number**](/glossary#mobile_phone_number): +49 30 901820\n\n\n\n[**rating**](/glossary#): \n\n\n\n[**relationship_status**](/glossary#): single\n\n\n\n[**source**](/glossary#): \n\n\n\n[**url**](/glossary#): http://www.example.com/id-docs/123/image.png\n\n\n\n[credit_limit](/glossary#credit_limit): \n\n\n\n[credit_rating](/glossary#credit_rating): \n\n\n",
      "success_response_body": {
        "customers": [
          {
            "bank_id": "gh.29.uk",
            "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
            "customer_number": "5987953",
            "legal_name": "Eveline Tripman",
            "mobile_phone_number": "+44 07972 444 876",
            "email": "felixsmith@example.com",
            "face_image": {
              "url": "www.openbankproject",
              "date": "1100-01-01T00:00:00Z"
            },
            "date_of_birth": "1100-01-01T00:00:00Z",
            "relationship_status": "single",
            "dependants": 1,
            "dob_of_dependants": ["1100-01-01T00:00:00Z"],
            "credit_rating": {
              "rating": "OBP",
              "source": "OBP"
            },
            "credit_limit": {
              "currency": "EUR",
              "amount": "0"
            },
            "highest_education_attained": "Master",
            "employment_status": "worker",
            "kyc_status": true,
            "last_ok_date": "2022-04-13T04:30:08Z"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-00012: Customer firehose is not allowed on this instance. Please set allow_customer_firehose = true in props files. ",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Customer", "FirehoseData", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "customers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "dependants": {
                  "type": "integer"
                },
                "dob_of_dependants": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "date-time"
                  }
                },
                "face_image": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "type": "string"
                    },
                    "date": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                },
                "credit_limit": {
                  "type": "object",
                  "properties": {
                    "currency": {
                      "type": "string"
                    },
                    "amount": {
                      "type": "string"
                    }
                  }
                },
                "employment_status": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "customer_id": {
                  "type": "string"
                },
                "relationship_status": {
                  "type": "string"
                },
                "bank_id": {
                  "type": "string"
                },
                "highest_education_attained": {
                  "type": "string"
                },
                "customer_number": {
                  "type": "string"
                },
                "credit_rating": {
                  "type": "object",
                  "properties": {
                    "rating": {
                      "type": "string"
                    },
                    "source": {
                      "type": "string"
                    }
                  }
                },
                "legal_name": {
                  "type": "string"
                },
                "last_ok_date": {
                  "type": "string",
                  "format": "date-time"
                },
                "date_of_birth": {
                  "type": "string",
                  "format": "date-time"
                },
                "mobile_phone_number": {
                  "type": "string"
                },
                "kyc_status": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanUseCustomerFirehoseAtAnyBank",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/firehose/customers",
      "connector_methods": [
        "obp.getCustomerIdsByAttributeNameValues",
        "obp.getCustomers",
        "obp.getBank",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv4.0.0-createBankLevelEndpointMapping",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "createBankLevelEndpointMapping"
      },
      "request_verb": "POST",
      "request_url": "/obp/v4.0.0/management/banks/BANK_ID/endpoint-mappings",
      "summary": "Create Bank Level Endpoint Mapping",
      "description": "<p>Create an Bank Level Endpoint Mapping.</p>\n<p>Note: at moment only support the dynamic endpoints</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n",
      "description_markdown": "Create an Bank Level Endpoint Mapping. \n\nNote: at moment only support the dynamic endpoints\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON request body fields:**\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n",
      "example_request_body": {
        "operation_id": "OBPv4.0.0-dynamicEndpoint_POST_account",
        "request_mapping": {},
        "response_mapping": {
          "name": {
            "entity": "FooBar",
            "field": "name",
            "query": "number"
          },
          "balance": {
            "entity": "FashionBrand",
            "field": "number",
            "query": "number"
          }
        }
      },
      "success_response_body": {
        "operation_id": "OBPv4.0.0-dynamicEndpoint_POST_account",
        "request_mapping": {},
        "response_mapping": {
          "name": {
            "entity": "FooBar",
            "field": "name",
            "query": "number"
          },
          "balance": {
            "entity": "FashionBrand",
            "field": "number",
            "query": "number"
          }
        },
        "endpoint_mapping_id": "b4e0352a-9a0f-4bfa-b30b-9003aa467f50"
      },
      "error_response_bodies": [
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Endpoint-Mapping", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "operation_id": {
            "type": "string"
          },
          "request_mapping": {
            "type": "object",
            "properties": {}
          },
          "response_mapping": {
            "type": "object",
            "properties": {
              "name": {
                "type": "object",
                "properties": {
                  "entity": {
                    "type": "string"
                  },
                  "field": {
                    "type": "string"
                  },
                  "query": {
                    "type": "string"
                  }
                }
              },
              "balance": {
                "type": "object",
                "properties": {
                  "entity": {
                    "type": "string"
                  },
                  "field": {
                    "type": "string"
                  },
                  "query": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "operation_id": {
            "type": "string"
          },
          "request_mapping": {
            "type": "object",
            "properties": {}
          },
          "response_mapping": {
            "type": "object",
            "properties": {
              "name": {
                "type": "object",
                "properties": {
                  "entity": {
                    "type": "string"
                  },
                  "field": {
                    "type": "string"
                  },
                  "query": {
                    "type": "string"
                  }
                }
              },
              "balance": {
                "type": "object",
                "properties": {
                  "entity": {
                    "type": "string"
                  },
                  "field": {
                    "type": "string"
                  },
                  "query": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "endpoint_mapping_id": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateBankLevelEndpointMapping",
          "requires_bank_id": true
        },
        {
          "role": "CanCreateEndpointMapping",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/banks/BANK_ID/endpoint-mappings",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv4.0.0-getAllAuthenticationTypeValidationsPublic",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getAllAuthenticationTypeValidationsPublic"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/endpoints/authentication-type-validations",
      "summary": "Get all Authentication Type Validations - public",
      "description": "<p>Get all Authentication Type Validations - public.</p>\n<p>Authentication is Optional</p>\n<p><strong>JSON response body fields:</strong></p>\n",
      "description_markdown": "Get all Authentication Type Validations - public.\n\n\n\nAuthentication is Optional\n\n\n**JSON response body fields:**\n\n\n",
      "success_response_body": {
        "authentication_types_validations": [
          {
            "operation_id": "OBPv4.0.0-updateXxx",
            "allowed_authentication_types": [
              "DirectLogin",
              "OAuth1.0a",
              "GatewayLogin",
              "DAuth",
              "OAuth2_OIDC",
              "OAuth2_OIDC_FAPI"
            ]
          }
        ]
      },
      "error_response_bodies": ["OBP-10001: Incorrect json format.", "OBP-50000: Unknown Error."],
      "tags": ["Authentication-Type-Validation", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "authentication_types_validations": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "authTypes": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {}
                  }
                },
                "operationId": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/endpoints/authentication-type-validations",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv5.0.0-createUserAuthContext",
      "implemented_by": {
        "version": "OBPv5.0.0",
        "function": "createUserAuthContext"
      },
      "request_verb": "POST",
      "request_url": "/obp/v5.0.0/users/USER_ID/auth-context",
      "summary": "Create User Auth Context",
      "description": "<p>Create User Auth Context. These key value pairs will be propagated over connector to adapter. Normally used for mapping OBP user and<br />\nBank User/Customer.<br />\nAuthentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#User.user_id\">USER_ID</a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>key</strong></a>: CustomerNumber</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>consumer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>key</strong></a>: CustomerNumber</p>\n<p><a href=\"/glossary#\"><strong>time_stamp</strong></a>: 1100-01-01T01:01:01.000Z</p>\n<p><a href=\"/glossary#user_auth_context_id\"><strong>user_auth_context_id</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n",
      "description_markdown": "Create User Auth Context. These key value pairs will be propagated over connector to adapter. Normally used for mapping OBP user and \n Bank User/Customer. \nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[USER_ID](/glossary#User.user_id): 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\n\n\n\n\n\n**JSON request body fields:**\n\n\n\n[**key**](/glossary#): CustomerNumber\n\n\n\n[**value**](/glossary#): 5987953\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**consumer_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**key**](/glossary#): CustomerNumber\n\n\n\n[**time_stamp**](/glossary#): 1100-01-01T01:01:01.000Z\n\n\n\n[**user_auth_context_id**](/glossary#user_auth_context_id): \n\n\n\n[**user_id**](/glossary#): 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\n\n\n\n[**value**](/glossary#): 5987953\n\n\n",
      "example_request_body": {
        "key": "CUSTOMER_NUMBER",
        "value": "78987432"
      },
      "success_response_body": {
        "user_auth_context_id": "613c83ea-80f9-4560-8404-b9cd4ec42a7f",
        "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
        "key": "CUSTOMER_NUMBER",
        "value": "78987432",
        "time_stamp": "1100-01-01T00:00:00Z",
        "consumer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-10001: Incorrect json format.",
        "OBP-30053: Could not insert the UserAuthContext",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["User", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "consumer_id": {
            "type": "string"
          },
          "time_stamp": {
            "type": "string",
            "format": "date-time"
          },
          "key": {
            "type": "string"
          },
          "user_auth_context_id": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateUserAuthContext",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/users/USER_ID/auth-context",
      "connector_methods": ["obp.createUserAuthContext", "obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv1.2.1-deleteCounterpartyPrivateAlias",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "deleteCounterpartyPrivateAlias"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/private_alias",
      "summary": "Delete Counterparty Private Alias",
      "description": "<p>Deletes the private alias of the other account OTHER_ACCOUNT_ID.</p>\n<p>Authentication is Optional<br />\nAuthentication is required if the view is not public.</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#other_account_id\">OTHER_ACCOUNT_ID</a>:</p>\n<p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p>\n<p><strong>JSON response body fields:</strong></p>\n",
      "description_markdown": "Deletes the private alias of the other account OTHER_ACCOUNT_ID.\n\nAuthentication is Optional\nAuthentication is required if the view is not public.\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[OTHER_ACCOUNT_ID](/glossary#other_account_id): \n\n\n\n[VIEW_ID](/glossary#this_view_id): owner\n\n\n\n\n\n**JSON response body fields:**\n\n\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "jsonString": "{}"
      },
      "error_response_bodies": [
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "the view does not allow metadata access",
        "the view does not allow deleting the private alias",
        "Alias cannot be deleted",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Counterparty-Metadata", "Counterparty", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/private_alias",
      "connector_methods": [
        "obp.checkBankAccountExists",
        "obp.getBank",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv3.0.0-getFirehoseTransactionsForBankAccount",
      "implemented_by": {
        "version": "OBPv3.0.0",
        "function": "getFirehoseTransactionsForBankAccount"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.0.0/banks/BANK_ID/firehose/accounts/ACCOUNT_ID/views/VIEW_ID/transactions",
      "summary": "Get Firehose Transactions for Account",
      "description": "<p>Get Transactions for an Account that has a firehose View.</p>\n<p>Allows bulk access to an account's transactions.<br />\nUser must have the CanUseFirehoseAtAnyBank Role</p>\n<p>To find ACCOUNT_IDs, use the getFirehoseAccountsAtOneBank call.</p>\n<p>For VIEW_ID try 'owner'</p>\n<p>Possible custom url parameters for pagination:</p>\n<ul>\n<li>limit=NUMBER ==&gt; default value: 50</li>\n<li>offset=NUMBER ==&gt; default value: 0</li>\n</ul>\n<p>eg1:?limit=100&amp;offset=0</p>\n<ul>\n<li>sort_direction=ASC/DESC ==&gt; default value: DESC.</li>\n</ul>\n<p>eg2:?limit=100&amp;offset=0&amp;sort_direction=ASC</p>\n<ul>\n<li>from_date=DATE =&gt; example value: 1970-01-01T00:00:00.000Z. NOTE! The default value is one year ago (1970-01-01T00:00:00.000Z).</li>\n<li>to_date=DATE =&gt; example value: 2023-04-13T04:30:11.485Z. NOTE! The default value is now (2023-04-13T04:30:11.485Z).</li>\n</ul>\n<p>Date format parameter: yyyy-MM-dd'T'HH:mm:ss.SSS'Z'(1100-01-01T01:01:01.000Z) ==&gt; time zone is UTC.</p>\n<p>eg3:?sort_direction=ASC&amp;limit=100&amp;offset=0&amp;from_date=1100-01-01T01:01:01.000Z&amp;to_date=1100-01-01T01:01:01.000Z</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>URL</strong></a>: <a href=\"http://www.example.com/id-docs/123/image.png\">http://www.example.com/id-docs/123/image.png</a></p>\n<p><a href=\"/glossary#account_routings\"><strong>account_routings</strong></a>:</p>\n<p><a href=\"/glossary#address\"><strong>address</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p>\n<p><a href=\"/glossary#bank_routing\"><strong>bank_routing</strong></a>:</p>\n<p><a href=\"/glossary#comments\"><strong>comments</strong></a>:</p>\n<p><a href=\"/glossary#completed\"><strong>completed</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#corporate_location\"><strong>corporate_location</strong></a>: 10</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#details\"><strong>details</strong></a>:</p>\n<p><a href=\"/glossary#display_name\"><strong>display_name</strong></a>:</p>\n<p><a href=\"/glossary#holder\"><strong>holder</strong></a>:</p>\n<p><a href=\"/glossary#holders\"><strong>holders</strong></a>:</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#image_url\"><strong>image_URL</strong></a>:</p>\n<p><a href=\"/glossary#images\"><strong>images</strong></a>:</p>\n<p><a href=\"/glossary#is_alias\"><strong>is_alias</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>label</strong></a>: My Account</p>\n<p><a href=\"/glossary#latitude\"><strong>latitude</strong></a>: 38.8951</p>\n<p><a href=\"/glossary#longitude\"><strong>longitude</strong></a>: -77.0364</p>\n<p><a href=\"/glossary#metadata\"><strong>metadata</strong></a>:</p>\n<p><a href=\"/glossary#more_info\"><strong>more_info</strong></a>: More information about this fee</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#narrative\"><strong>narrative</strong></a>:</p>\n<p><a href=\"/glossary#new_balance\"><strong>new_balance</strong></a>: 20</p>\n<p><a href=\"/glossary#open_corporates_url\"><strong>open_corporates_URL</strong></a>:</p>\n<p><a href=\"/glossary#other_account\"><strong>other_account</strong></a>:</p>\n<p><a href=\"/glossary#physical_location\"><strong>physical_location</strong></a>:</p>\n<p><a href=\"/glossary#posted\"><strong>posted</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#private_alias\"><strong>private_alias</strong></a>:</p>\n<p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p>\n<p><a href=\"/glossary#public_alias\"><strong>public_alias</strong></a>:</p>\n<p><a href=\"/glossary#scheme\"><strong>scheme</strong></a>: scheme value</p>\n<p><a href=\"/glossary#tags\"><strong>tags</strong></a>: Create-My-User</p>\n<p><a href=\"/glossary#this_account\"><strong>this_account</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>transaction_attribute_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#transaction_attributes\"><strong>transaction_attributes</strong></a>:</p>\n<p><a href=\"/glossary#transactions\"><strong>transactions</strong></a>:</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n<p><a href=\"/glossary#User\"><strong>user</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n<p><a href=\"/glossary#where\"><strong>where</strong></a>:</p>\n",
      "description_markdown": "Get Transactions for an Account that has a firehose View.\n\nAllows bulk access to an account's transactions.\nUser must have the CanUseFirehoseAtAnyBank Role\n\nTo find ACCOUNT_IDs, use the getFirehoseAccountsAtOneBank call.\n\nFor VIEW_ID try 'owner'\n\n\n\nPossible custom url parameters for pagination:\n\n* limit=NUMBER ==> default value: 50\n* offset=NUMBER ==> default value: 0\n\neg1:?limit=100&offset=0\n\n\n* sort_direction=ASC/DESC ==> default value: DESC.\n\neg2:?limit=100&offset=0&sort_direction=ASC\n\n\n\n* from_date=DATE => example value: 1970-01-01T00:00:00.000Z. NOTE! The default value is one year ago (1970-01-01T00:00:00.000Z).\n* to_date=DATE => example value: 2023-04-13T04:30:11.485Z. NOTE! The default value is now (2023-04-13T04:30:11.485Z).\n\nDate format parameter: yyyy-MM-dd'T'HH:mm:ss.SSS'Z'(1100-01-01T01:01:01.000Z) ==> time zone is UTC.\n\neg3:?sort_direction=ASC&limit=100&offset=0&from_date=1100-01-01T01:01:01.000Z&to_date=1100-01-01T01:01:01.000Z\n\n       \n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[VIEW_ID](/glossary#this_view_id): owner\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**URL**](/glossary#): http://www.example.com/id-docs/123/image.png\n\n\n\n[**account_routings**](/glossary#account_routings): \n\n\n\n[**address**](/glossary#address): \n\n\n\n[**amount**](/glossary#): 10.12\n\n\n\n[**bank_routing**](/glossary#bank_routing): \n\n\n\n[**comments**](/glossary#comments): \n\n\n\n[**completed**](/glossary#completed): 2020-01-27\n\n\n\n[**corporate_location**](/glossary#corporate_location): 10\n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**date**](/glossary#): 2020-01-27\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**details**](/glossary#details): \n\n\n\n[**display_name**](/glossary#display_name): \n\n\n\n[**holder**](/glossary#holder): \n\n\n\n[**holders**](/glossary#holders): \n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**image_URL**](/glossary#image_url): \n\n\n\n[**images**](/glossary#images): \n\n\n\n[**is_alias**](/glossary#is_alias): \n\n\n\n[**label**](/glossary#): My Account\n\n\n\n[**latitude**](/glossary#latitude): 38.8951\n\n\n\n[**longitude**](/glossary#longitude): -77.0364\n\n\n\n[**metadata**](/glossary#metadata): \n\n\n\n[**more_info**](/glossary#more_info): More information about this fee\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**narrative**](/glossary#narrative): \n\n\n\n[**new_balance**](/glossary#new_balance): 20\n\n\n\n[**open_corporates_URL**](/glossary#open_corporates_url): \n\n\n\n[**other_account**](/glossary#other_account): \n\n\n\n[**physical_location**](/glossary#physical_location): \n\n\n\n[**posted**](/glossary#posted): 2020-01-27\n\n\n\n[**private_alias**](/glossary#private_alias): \n\n\n\n[**provider**](/glossary#provider): ETHEREUM\n\n\n\n[**public_alias**](/glossary#public_alias): \n\n\n\n[**scheme**](/glossary#scheme): scheme value\n\n\n\n[**tags**](/glossary#tags): Create-My-User\n\n\n\n[**this_account**](/glossary#this_account): \n\n\n\n[**transaction_attribute_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**transaction_attributes**](/glossary#transaction_attributes): \n\n\n\n[**transactions**](/glossary#transactions): \n\n\n\n[**type**](/glossary#type): \n\n\n\n[**user**](/glossary#User): \n\n\n\n[**value**](/glossary#): 5987953\n\n\n\n[**where**](/glossary#where): \n\n\n",
      "success_response_body": {
        "transactions": [
          {
            "id": "String",
            "this_account": {
              "id": "String",
              "bank_routing": {
                "scheme": "scheme value",
                "address": ""
              },
              "account_routings": [
                {
                  "scheme": "AccountNumber",
                  "address": "4930396"
                }
              ],
              "holders": [
                {
                  "name": "OBP",
                  "is_alias": true
                }
              ]
            },
            "other_account": {
              "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
              "holder": {
                "name": "OBP",
                "is_alias": true
              },
              "bank_routing": {
                "scheme": "scheme value",
                "address": ""
              },
              "account_routings": [
                {
                  "scheme": "AccountNumber",
                  "address": "4930396"
                }
              ],
              "metadata": {
                "public_alias": "NONE",
                "private_alias": "NONE",
                "more_info": "www.openbankproject.com",
                "URL": "www.openbankproject.com",
                "image_URL": "www.openbankproject.com",
                "open_corporates_URL": "www.openbankproject.com",
                "corporate_location": {
                  "latitude": 1.231,
                  "longitude": 1.231,
                  "date": "1100-01-01T00:00:00Z",
                  "user": {
                    "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
                    "provider": "http://127.0.0.1:8080",
                    "display_name": "OBP"
                  }
                },
                "physical_location": {
                  "latitude": 1.231,
                  "longitude": 1.231,
                  "date": "1100-01-01T00:00:00Z",
                  "user": {
                    "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
                    "provider": "http://127.0.0.1:8080",
                    "display_name": "OBP"
                  }
                }
              }
            },
            "details": {
              "type": "AC",
              "description": "this is for family",
              "posted": "1100-01-01T00:00:00Z",
              "completed": "1100-01-01T00:00:00Z",
              "new_balance": {
                "currency": "EUR",
                "amount": "0"
              },
              "value": {
                "currency": "EUR",
                "amount": "0"
              }
            },
            "metadata": {
              "narrative": "NONE",
              "comments": [
                {
                  "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
                  "value": "OBP",
                  "date": "1100-01-01T00:00:00Z",
                  "user": {
                    "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
                    "provider": "http://127.0.0.1:8080",
                    "display_name": "OBP"
                  }
                }
              ],
              "tags": [
                {
                  "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
                  "value": "OBP",
                  "date": "1100-01-01T00:00:00Z",
                  "user": {
                    "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
                    "provider": "http://127.0.0.1:8080",
                    "display_name": "OBP"
                  }
                }
              ],
              "images": [
                {
                  "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
                  "label": "NONE",
                  "URL": "www.openbankproject.com",
                  "date": "1100-01-01T00:00:00Z",
                  "user": {
                    "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
                    "provider": "http://127.0.0.1:8080",
                    "display_name": "OBP"
                  }
                }
              ],
              "where": {
                "latitude": 1.231,
                "longitude": 1.231,
                "date": "1100-01-01T00:00:00Z",
                "user": {
                  "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
                  "provider": "http://127.0.0.1:8080",
                  "display_name": "OBP"
                }
              }
            },
            "transaction_attributes": [
              {
                "transaction_attribute_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
                "name": "HOUSE_RENT",
                "type": "DATE_WITH_DAY",
                "value": "123456789"
              }
            ]
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-00009: Account firehose is not allowed on this instance. Please set allow_account_firehose = true in props files. ",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "tags": [
        "Transaction",
        "Account-Firehose",
        "Transaction-Firehose",
        "FirehoseData",
        "New-Style"
      ],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "transactions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "metadata": {
                  "type": "object",
                  "properties": {
                    "narrative": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          },
                          "date": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "user": {
                            "type": "object",
                            "properties": {
                              "provider": {
                                "type": "string"
                              },
                              "display_name": {
                                "type": "string"
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "comments": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          },
                          "date": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "user": {
                            "type": "object",
                            "properties": {
                              "provider": {
                                "type": "string"
                              },
                              "display_name": {
                                "type": "string"
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "images": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "URL": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "date": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "user": {
                            "type": "object",
                            "properties": {
                              "provider": {
                                "type": "string"
                              },
                              "display_name": {
                                "type": "string"
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          },
                          "label": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "where": {
                      "type": "object",
                      "properties": {
                        "longitude": {
                          "type": "number"
                        },
                        "date": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "latitude": {
                          "type": "number"
                        },
                        "user": {
                          "type": "object",
                          "properties": {
                            "provider": {
                              "type": "string"
                            },
                            "display_name": {
                              "type": "string"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "details": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "posted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "new_balance": {
                      "type": "object",
                      "properties": {
                        "currency": {
                          "type": "string"
                        },
                        "amount": {
                          "type": "string"
                        }
                      }
                    },
                    "completed": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "value": {
                      "type": "object",
                      "properties": {
                        "currency": {
                          "type": "string"
                        },
                        "amount": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "transaction_attributes": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "transaction_attribute_id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      },
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                "other_account": {
                  "type": "object",
                  "properties": {
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "image_URL": {
                          "type": "string"
                        },
                        "corporate_location": {
                          "type": "object",
                          "properties": {
                            "longitude": {
                              "type": "number"
                            },
                            "date": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "latitude": {
                              "type": "number"
                            },
                            "user": {
                              "type": "object",
                              "properties": {
                                "provider": {
                                  "type": "string"
                                },
                                "display_name": {
                                  "type": "string"
                                },
                                "id": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        "URL": {
                          "type": "string"
                        },
                        "open_corporates_URL": {
                          "type": "string"
                        },
                        "physical_location": {
                          "type": "object",
                          "properties": {
                            "longitude": {
                              "type": "number"
                            },
                            "date": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "latitude": {
                              "type": "number"
                            },
                            "user": {
                              "type": "object",
                              "properties": {
                                "provider": {
                                  "type": "string"
                                },
                                "display_name": {
                                  "type": "string"
                                },
                                "id": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        "public_alias": {
                          "type": "string"
                        },
                        "private_alias": {
                          "type": "string"
                        },
                        "more_info": {
                          "type": "string"
                        }
                      }
                    },
                    "bank_routing": {
                      "type": "object",
                      "properties": {
                        "scheme": {
                          "type": "string"
                        },
                        "address": {
                          "type": "string"
                        }
                      }
                    },
                    "holder": {
                      "type": "object",
                      "properties": {
                        "is_alias": {
                          "type": "boolean"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "id": {
                      "type": "string"
                    },
                    "account_routings": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "scheme": {
                            "type": "string"
                          },
                          "address": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "this_account": {
                  "type": "object",
                  "properties": {
                    "bank_routing": {
                      "type": "object",
                      "properties": {
                        "scheme": {
                          "type": "string"
                        },
                        "address": {
                          "type": "string"
                        }
                      }
                    },
                    "holders": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "is_alias": {
                            "type": "boolean"
                          },
                          "name": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "id": {
                      "type": "string"
                    },
                    "account_routings": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "scheme": {
                            "type": "string"
                          },
                          "address": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanUseAccountFirehoseAtAnyBank",
          "requires_bank_id": false
        },
        {
          "role": "CanUseAccountFirehose",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/firehose/accounts/ACCOUNT_ID/views/VIEW_ID/transactions",
      "connector_methods": [
        "obp.getTransactionsLegacy",
        "obp.getTransactionAttributes",
        "obp.getTransactionIdsByAttributeNameValues",
        "obp.checkBankAccountExists",
        "obp.getBank",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv4.0.0-deleteMyApiCollectionEndpointByOperationId",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "deleteMyApiCollectionEndpointByOperationId"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v4.0.0/my/api-collection-ids/API_COLLECTION_ID/api-collection-endpoints/OPERATION_ID",
      "summary": "Delete My Api Collection Endpoint By Id",
      "description": "<p>Delete Api Collection Endpoint By OPERATION_ID</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#\">API_COLLECTION_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\">OPERATION_ID</a>: OBPv4.0.0-getBanks</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n",
      "description_markdown": "Delete Api Collection Endpoint By OPERATION_ID\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[API_COLLECTION_ID](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[OPERATION_ID](/glossary#): OBPv4.0.0-getBanks\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**value**](/glossary#): 5987953\n\n\n",
      "success_response_body": {
        "value": true
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20057: User not found by userId.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Api-Collection", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "value": {
            "type": "boolean"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/my/api-collection-ids/API_COLLECTION_ID/api-collection-endpoints/OPERATION_ID",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv4.0.0-createMyApiCollection",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "createMyApiCollection"
      },
      "request_verb": "POST",
      "request_url": "/obp/v4.0.0/my/api-collections",
      "summary": "Create My Api Collection",
      "description": "<p>Create Api Collection for logged in user.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>api_collection_name</strong></a>: Favourites</p>\n<p><a href=\"/glossary#\"><strong>is_sharable</strong></a>: is_sharable</p>\n<p><a href=\"/glossary#description\">description</a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>api_collection_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>api_collection_name</strong></a>: Favourites</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#\"><strong>is_sharable</strong></a>: is_sharable</p>\n<p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p>\n",
      "description_markdown": "Create Api Collection for logged in user.\n\nAuthentication is Mandatory\n\n\n**JSON request body fields:**\n\n\n\n[**api_collection_name**](/glossary#): Favourites\n\n\n\n[**is_sharable**](/glossary#): is_sharable\n\n\n\n[description](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**api_collection_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**api_collection_name**](/glossary#): Favourites\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**is_sharable**](/glossary#): is_sharable\n\n\n\n[**user_id**](/glossary#): 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\n\n\n",
      "example_request_body": {
        "api_collection_name": "Favourites",
        "is_sharable": true,
        "description": "This an optional field. Maximum length is 2000. It can be any characters here."
      },
      "success_response_body": {
        "api_collection_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
        "api_collection_name": "Favourites",
        "is_sharable": true,
        "description": "This an optional field. Maximum length is 2000. It can be any characters here."
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-10001: Incorrect json format.",
        "OBP-20057: User not found by userId.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Api-Collection", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "api_collection_name": {
            "type": "string"
          },
          "is_sharable": {
            "type": "boolean"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "api_collection_id": {
            "type": "string"
          },
          "api_collection_name": {
            "type": "string"
          },
          "is_sharable": {
            "type": "boolean"
          },
          "user_id": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/my/api-collections",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv4.0.0-getUserCustomerLinksByCustomerId",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getUserCustomerLinksByCustomerId"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/user_customer_links/customers/CUSTOMER_ID",
      "summary": "Get User Customer Links by Customer",
      "description": "<p>Get User Customer Links by CUSTOMER_ID</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#Customer.customer_id\">CUSTOMER_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#date_inserted\"><strong>date_inserted</strong></a>:</p>\n<p><a href=\"/glossary#is_active\"><strong>is_active</strong></a>: true</p>\n<p><a href=\"/glossary#user_customer_link_id\"><strong>user_customer_link_id</strong></a>:</p>\n<p><a href=\"/glossary#user_customer_links\"><strong>user_customer_links</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p>\n",
      "description_markdown": "Get User Customer Links by CUSTOMER_ID\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[CUSTOMER_ID](/glossary#Customer.customer_id): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**customer_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**date_inserted**](/glossary#date_inserted): \n\n\n\n[**is_active**](/glossary#is_active): true\n\n\n\n[**user_customer_link_id**](/glossary#user_customer_link_id): \n\n\n\n[**user_customer_links**](/glossary#user_customer_links): \n\n\n\n[**user_id**](/glossary#): 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\n\n\n",
      "success_response_body": {
        "user_customer_links": [
          {
            "user_customer_link_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
            "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
            "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
            "date_inserted": "1100-01-01T00:00:00Z",
            "is_active": true
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["Customer", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "user_customer_links": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "user_customer_link_id": {
                  "type": "string"
                },
                "customer_id": {
                  "type": "string"
                },
                "is_active": {
                  "type": "boolean"
                },
                "date_inserted": {
                  "type": "string",
                  "format": "date-time"
                },
                "user_id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetUserCustomerLink",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/user_customer_links/customers/CUSTOMER_ID",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv3.1.0-deleteProductAttribute",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "deleteProductAttribute"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/products/PRODUCT_CODE/attributes/PRODUCT_ATTRIBUTE_ID",
      "summary": "Delete Product Attribute",
      "description": "<p>Delete Product Attribute</p>\n<p>Product Attributes are used to describe a financial Product with a list of typed key value pairs.</p>\n<p>Each Product Attribute is linked to its Product by PRODUCT_CODE</p>\n<p>Delete a Product Attribute by its id.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#product_attribute_id\">PRODUCT_ATTRIBUTE_ID</a>:</p>\n<p><a href=\"/glossary#product_code\">PRODUCT_CODE</a>: 1234BW</p>\n<p><strong>JSON response body fields:</strong></p>\n",
      "description_markdown": "Delete Product Attribute\n\n\nProduct Attributes are used to describe a financial Product with a list of typed key value pairs.\n\nEach Product Attribute is linked to its Product by PRODUCT_CODE\n\n\n       \n\nDelete a Product Attribute by its id.\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[PRODUCT_ATTRIBUTE_ID](/glossary#product_attribute_id): \n\n\n\n[PRODUCT_CODE](/glossary#product_code): 1234BW\n\n\n\n\n\n**JSON response body fields:**\n\n\n",
      "error_response_bodies": [
        "OBP-20006: User is missing one or more roles: ",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-50000: Unknown Error.",
        "OBP-20001: User not logged in. Authentication is required!"
      ],
      "tags": ["Product", "New-Style"],
      "roles": [
        {
          "role": "CanUpdateProductAttribute",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/products/PRODUCT_CODE/attributes/PRODUCT_ATTRIBUTE_ID",
      "connector_methods": [
        "obp.deleteProductAttribute",
        "obp.getBank",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv4.0.0-deleteTransactionAttributeDefinition",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "deleteTransactionAttributeDefinition"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/attribute-definitions/ATTRIBUTE_DEFINITION_ID/transaction",
      "summary": "Delete Transaction Attribute Definition",
      "description": "<p>Delete Transaction Attribute Definition by ATTRIBUTE_DEFINITION_ID</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#attribute_definition_id\">ATTRIBUTE_DEFINITION_ID</a>:</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON response body fields:</strong></p>\n",
      "description_markdown": "Delete Transaction Attribute Definition by ATTRIBUTE_DEFINITION_ID\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ATTRIBUTE_DEFINITION_ID](/glossary#attribute_definition_id): \n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON response body fields:**\n\n\n",
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["Transaction", "New-Style"],
      "roles": [
        {
          "role": "CanDeleteTransactionAttributeDefinitionAtOneBank",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/attribute-definitions/ATTRIBUTE_DEFINITION_ID/transaction",
      "connector_methods": ["obp.deleteAttributeDefinition"]
    },
    {
      "operation_id": "OBPv3.1.0-getRateLimitingInfo",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "getRateLimitingInfo"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.1.0/rate-limiting",
      "summary": "Get Rate Limiting Info",
      "description": "<p>Get information about the Rate Limiting setup on this OBP Instance such as:</p>\n<p>Is rate limiting enabled and active?<br />\nWhat backend is used to keep track of the API calls (e.g. REDIS).</p>\n<p>Authentication is Mandatory</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#enabled\"><strong>enabled</strong></a>: true</p>\n<p><a href=\"/glossary#is_active\"><strong>is_active</strong></a>: true</p>\n<p><a href=\"/glossary#service_available\"><strong>service_available</strong></a>:</p>\n<p><a href=\"/glossary#technology\"><strong>technology</strong></a>: technology1</p>\n",
      "description_markdown": "Get information about the Rate Limiting setup on this OBP Instance such as:\n\nIs rate limiting enabled and active?\nWhat backend is used to keep track of the API calls (e.g. REDIS).\n\n\nAuthentication is Mandatory\n\n\n**JSON response body fields:**\n\n\n\n[**enabled**](/glossary#enabled): true\n\n\n\n[**is_active**](/glossary#is_active): true\n\n\n\n[**service_available**](/glossary#service_available): \n\n\n\n[**technology**](/glossary#technology): technology1\n\n\n",
      "success_response_body": {
        "enabled": true,
        "technology": "REDIS",
        "service_available": true,
        "is_active": true
      },
      "error_response_bodies": [
        "OBP-50000: Unknown Error.",
        "OBP-20001: User not logged in. Authentication is required!"
      ],
      "tags": ["API", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "is_active": {
            "type": "boolean"
          },
          "technology": {
            "type": "string"
          },
          "service_available": {
            "type": "boolean"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/rate-limiting",
      "connector_methods": ["obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv1.2.1-addImageForViewOnTransaction",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "addImageForViewOnTransaction"
      },
      "request_verb": "POST",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transactions/TRANSACTION_ID/metadata/images",
      "summary": "Add a Transaction Image",
      "description": "<p>Posts an image about a transaction TRANSACTION_ID on a <a href=\"#1_2_1-getViewsForBankAccount\">view</a> VIEW_ID.</p>\n<p>Authentication is Mandatory</p>\n<p>The image is linked with the user.</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#transaction_ids\">TRANSACTION_ID</a>: 2fg8a7e4-6d02-40e3-a129-0b2bf89de8ub</p>\n<p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>URL</strong></a>: <a href=\"http://www.example.com/id-docs/123/image.png\">http://www.example.com/id-docs/123/image.png</a></p>\n<p><a href=\"/glossary#\"><strong>label</strong></a>: My Account</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>URL</strong></a>: <a href=\"http://www.example.com/id-docs/123/image.png\">http://www.example.com/id-docs/123/image.png</a></p>\n<p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#display_name\"><strong>display_name</strong></a>:</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#\"><strong>label</strong></a>: My Account</p>\n<p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p>\n<p><a href=\"/glossary#User\"><strong>user</strong></a>:</p>\n",
      "description_markdown": "Posts an image about a transaction TRANSACTION_ID on a [view](#1_2_1-getViewsForBankAccount) VIEW_ID.\n\nAuthentication is Mandatory\n\nThe image is linked with the user.\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[TRANSACTION_ID](/glossary#transaction_ids): 2fg8a7e4-6d02-40e3-a129-0b2bf89de8ub\n\n\n\n[VIEW_ID](/glossary#this_view_id): owner\n\n\n\n\n\n**JSON request body fields:**\n\n\n\n[**URL**](/glossary#): http://www.example.com/id-docs/123/image.png\n\n\n\n[**label**](/glossary#): My Account\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**URL**](/glossary#): http://www.example.com/id-docs/123/image.png\n\n\n\n[**date**](/glossary#): 2020-01-27\n\n\n\n[**display_name**](/glossary#display_name): \n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**label**](/glossary#): My Account\n\n\n\n[**provider**](/glossary#provider): ETHEREUM\n\n\n\n[**user**](/glossary#User): \n\n\n",
      "example_request_body": {
        "label": "String",
        "URL": "String"
      },
      "success_response_body": {
        "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
        "label": "NONE",
        "URL": "www.openbankproject.com",
        "date": "1100-01-01T00:00:00Z",
        "user": {
          "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
          "provider": "http://127.0.0.1:8080",
          "display_name": "OBP"
        }
      },
      "error_response_bodies": [
        "OBP-10001: Incorrect json format.",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-30022: The current view does not have the permission:",
        "OBP-30005: View not found for Account. Please specify a valid value for VIEW_ID",
        "OBP-10017: Incorrect URL Format. ",
        "OBP-50000: Unknown Error.",
        "OBP-20001: User not logged in. Authentication is required!"
      ],
      "tags": ["Transaction-Metadata", "Transaction", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "URL": {
            "type": "string"
          },
          "label": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "URL": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "user": {
            "type": "object",
            "properties": {
              "provider": {
                "type": "string"
              },
              "display_name": {
                "type": "string"
              },
              "id": {
                "type": "string"
              }
            }
          },
          "label": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transactions/TRANSACTION_ID/metadata/images",
      "connector_methods": ["obp.checkBankAccountExists", "obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv4.0.0-createStandingOrderManagement",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "createStandingOrderManagement"
      },
      "request_verb": "POST",
      "request_url": "/obp/v4.0.0/management/banks/BANK_ID/accounts/ACCOUNT_ID/standing-order",
      "summary": "Create Standing Order (management)",
      "description": "<p>Create standing order for an account.</p>\n<p>when -&gt; frequency = {‘YEARLY’,’MONTHLY, ‘WEEKLY’, ‘BI-WEEKLY’, DAILY’}<br />\nwhen -&gt; detail = { ‘FIRST_MONDAY’, ‘FIRST_DAY’, ‘LAST_DAY’}}</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p>\n<p><a href=\"/glossary#\"><strong>counterparty_id</strong></a>: 9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>date_starts</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#detail\"><strong>detail</strong></a>:</p>\n<p><a href=\"/glossary#frequency\"><strong>frequency</strong></a>: DAILY</p>\n<p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p>\n<p><a href=\"/glossary#when\"><strong>when</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#\">date_expires</a>: 2021-01-27</p>\n<p><a href=\"/glossary#\">date_signed</a>: 2020-01-27</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>account_id</strong></a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#active\"><strong>active</strong></a>: true</p>\n<p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#\"><strong>counterparty_id</strong></a>: 9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>date_cancelled</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#\"><strong>date_expires</strong></a>: 2021-01-27</p>\n<p><a href=\"/glossary#\"><strong>date_signed</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#\"><strong>date_starts</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#detail\"><strong>detail</strong></a>:</p>\n<p><a href=\"/glossary#frequency\"><strong>frequency</strong></a>: DAILY</p>\n<p><a href=\"/glossary#standing_order_id\"><strong>standing_order_id</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p>\n<p><a href=\"/glossary#when\"><strong>when</strong></a>: 2020-01-27</p>\n",
      "description_markdown": "Create standing order for an account.\n\nwhen -> frequency = {‘YEARLY’,’MONTHLY, ‘WEEKLY’, ‘BI-WEEKLY’, DAILY’}\nwhen -> detail = { ‘FIRST_MONDAY’, ‘FIRST_DAY’, ‘LAST_DAY’}}\n\n\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON request body fields:**\n\n\n\n[**amount**](/glossary#): 10.12\n\n\n\n[**counterparty_id**](/glossary#): 9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**customer_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**date_starts**](/glossary#): 2020-01-27\n\n\n\n[**detail**](/glossary#detail): \n\n\n\n[**frequency**](/glossary#frequency): DAILY\n\n\n\n[**user_id**](/glossary#): 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\n\n\n\n[**when**](/glossary#when): 2020-01-27\n\n\n\n[date_expires](/glossary#): 2021-01-27\n\n\n\n[date_signed](/glossary#): 2020-01-27\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**account_id**](/glossary#): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[**active**](/glossary#active): true\n\n\n\n[**amount**](/glossary#): 10.12\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**counterparty_id**](/glossary#): 9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**customer_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**date_cancelled**](/glossary#): 2020-01-27\n\n\n\n[**date_expires**](/glossary#): 2021-01-27\n\n\n\n[**date_signed**](/glossary#): 2020-01-27\n\n\n\n[**date_starts**](/glossary#): 2020-01-27\n\n\n\n[**detail**](/glossary#detail): \n\n\n\n[**frequency**](/glossary#frequency): DAILY\n\n\n\n[**standing_order_id**](/glossary#standing_order_id): \n\n\n\n[**user_id**](/glossary#): 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\n\n\n\n[**when**](/glossary#when): 2020-01-27\n\n\n",
      "example_request_body": {
        "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
        "counterparty_id": "9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "amount": {
          "currency": "EUR",
          "amount": "0"
        },
        "when": {
          "frequency": "YEARLY",
          "detail": "LAST_DAY"
        },
        "date_signed": "1100-01-01T00:00:00Z",
        "date_starts": "1100-01-01T00:00:00Z",
        "date_expires": "1100-01-01T00:00:00Z"
      },
      "success_response_body": {
        "standing_order_id": "aa0533bd-eb22-4bff-af75-d45240361b05",
        "bank_id": "gh.29.uk",
        "account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0",
        "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
        "counterparty_id": "9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "amount": {
          "currency": "EUR",
          "amount": "0"
        },
        "when": {
          "frequency": "WEEKLY",
          "detail": "FIRST_DAY"
        },
        "date_signed": "2023-04-13T04:30:08Z",
        "date_starts": "2023-04-13T04:30:08Z",
        "date_expires": "2023-04-13T04:30:08Z",
        "date_cancelled": "2023-04-13T04:30:08Z",
        "active": true
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-30022: The current view does not have the permission:",
        "OBP-10001: Incorrect json format.",
        "OBP-10002: Invalid Number. Could not convert value to a number.",
        "OBP-10003: Invalid Currency Value. It should be three letters ISO Currency Code. ",
        "OBP-30046: Customer not found. Please specify a valid value for CUSTOMER_ID.",
        "OBP-20057: User not found by userId.",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["Standing-Order", "Account", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "date_expires": {
            "type": "string",
            "format": "date-time"
          },
          "date_starts": {
            "type": "string",
            "format": "date-time"
          },
          "customer_id": {
            "type": "string"
          },
          "counterparty_id": {
            "type": "string"
          },
          "when": {
            "type": "object",
            "properties": {
              "frequency": {
                "type": "string"
              },
              "detail": {
                "type": "string"
              }
            }
          },
          "date_signed": {
            "type": "string",
            "format": "date-time"
          },
          "amount": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string"
              },
              "amount": {
                "type": "string"
              }
            }
          },
          "user_id": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "date_cancelled": {
            "type": "string",
            "format": "date-time"
          },
          "customer_id": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          },
          "bank_id": {
            "type": "string"
          },
          "standing_order_id": {
            "type": "string"
          },
          "counterparty_id": {
            "type": "string"
          },
          "date_signed": {
            "type": "string",
            "format": "date-time"
          },
          "date_starts": {
            "type": "string",
            "format": "date-time"
          },
          "when": {
            "type": "object",
            "properties": {
              "frequency": {
                "type": "string"
              },
              "detail": {
                "type": "string"
              }
            }
          },
          "date_expires": {
            "type": "string",
            "format": "date-time"
          },
          "amount": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string"
              },
              "amount": {
                "type": "string"
              }
            }
          },
          "account_id": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateStandingOrderAtOneBank",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/banks/BANK_ID/accounts/ACCOUNT_ID/standing-order",
      "connector_methods": [
        "obp.createStandingOrder",
        "obp.getCounterpartyByCounterpartyId",
        "obp.getCustomerByCustomerId"
      ]
    },
    {
      "operation_id": "OBPv3.1.0-updateCustomerCreditRatingAndSource",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "updateCustomerCreditRatingAndSource"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/customers/CUSTOMER_ID/credit-rating-and-source",
      "summary": "Update the credit rating and source of a Customer",
      "description": "<p>Update the credit rating and source of the Customer specified by CUSTOMER_ID.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#Customer.customer_id\">CUSTOMER_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#\"><strong>branch_id</strong></a>: DERBY6</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>customer_number</strong></a>: 5987953</p>\n<p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#\"><strong>date_of_birth</strong></a>: 2018-03-09</p>\n<p><a href=\"/glossary#\"><strong>dependants</strong></a>: 1</p>\n<p><a href=\"/glossary#dob_of_dependants\"><strong>dob_of_dependants</strong></a>: [2019-09-08, 2017-07-12]</p>\n<p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"ma&#x69;&#x6c;&#116;&#111;&#58;&#x66;&#x65;&#108;&#x69;&#120;&#x73;&#109;&#105;&#x74;h&#64;&#x65;&#120;am&#x70;&#x6c;&#101;&#x2e;c&#x6f;&#109;\">fel&#x69;&#x78;&#115;&#x6d;&#105;&#116;&#104;&#x40;&#x65;&#x78;&#x61;&#x6d;&#x70;&#108;&#x65;&#46;&#99;&#x6f;&#x6d;</a></p>\n<p><a href=\"/glossary#\"><strong>employment_status</strong></a>: worker</p>\n<p><a href=\"/glossary#face_image\"><strong>face_image</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>highest_education_attained</strong></a>: Master</p>\n<p><a href=\"/glossary#\"><strong>kyc_status</strong></a>: true</p>\n<p><a href=\"/glossary#last_ok_date\"><strong>last_ok_date</strong></a>: 2022-04-13T04:30:07.985Z</p>\n<p><a href=\"/glossary#\"><strong>legal_name</strong></a>: Eveline Tripman</p>\n<p><a href=\"/glossary#mobile_phone_number\"><strong>mobile_phone_number</strong></a>: +49 30 901820</p>\n<p><a href=\"/glossary#\"><strong>name_suffix</strong></a>: Sr</p>\n<p><a href=\"/glossary#\"><strong>rating</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>relationship_status</strong></a>: single</p>\n<p><a href=\"/glossary#\"><strong>source</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>title</strong></a>: Dr.</p>\n<p><a href=\"/glossary#\"><strong>url</strong></a>: <a href=\"http://www.example.com/id-docs/123/image.png\">http://www.example.com/id-docs/123/image.png</a></p>\n<p><a href=\"/glossary#credit_limit\">credit_limit</a>:</p>\n<p><a href=\"/glossary#credit_rating\">credit_rating</a>:</p>\n",
      "description_markdown": "Update the credit rating and source of the Customer specified by CUSTOMER_ID.\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[CUSTOMER_ID](/glossary#Customer.customer_id): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**amount**](/glossary#): 10.12\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**branch_id**](/glossary#): DERBY6\n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**customer_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**customer_number**](/glossary#): 5987953\n\n\n\n[**date**](/glossary#): 2020-01-27\n\n\n\n[**date_of_birth**](/glossary#): 2018-03-09\n\n\n\n[**dependants**](/glossary#): 1\n\n\n\n[**dob_of_dependants**](/glossary#dob_of_dependants): [2019-09-08, 2017-07-12]\n\n\n\n[**email**](/glossary#): felixsmith@example.com\n\n\n\n[**employment_status**](/glossary#): worker\n\n\n\n[**face_image**](/glossary#face_image): \n\n\n\n[**highest_education_attained**](/glossary#): Master\n\n\n\n[**kyc_status**](/glossary#): true\n\n\n\n[**last_ok_date**](/glossary#last_ok_date): 2022-04-13T04:30:07.985Z\n\n\n\n[**legal_name**](/glossary#): Eveline Tripman\n\n\n\n[**mobile_phone_number**](/glossary#mobile_phone_number): +49 30 901820\n\n\n\n[**name_suffix**](/glossary#): Sr\n\n\n\n[**rating**](/glossary#): \n\n\n\n[**relationship_status**](/glossary#): single\n\n\n\n[**source**](/glossary#): \n\n\n\n[**title**](/glossary#): Dr.\n\n\n\n[**url**](/glossary#): http://www.example.com/id-docs/123/image.png\n\n\n\n[credit_limit](/glossary#credit_limit): \n\n\n\n[credit_rating](/glossary#credit_rating): \n\n\n",
      "example_request_body": {
        "credit_rating": "Good",
        "credit_source": "Bank"
      },
      "success_response_body": {
        "bank_id": "gh.29.uk",
        "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "customer_number": "5987953",
        "legal_name": "Eveline Tripman",
        "mobile_phone_number": "+44 07972 444 876",
        "email": "felixsmith@example.com",
        "face_image": {
          "url": "www.openbankproject",
          "date": "1100-01-01T00:00:00Z"
        },
        "date_of_birth": "1100-01-01T00:00:00Z",
        "relationship_status": "single",
        "dependants": 1,
        "dob_of_dependants": ["1100-01-01T00:00:00Z"],
        "credit_rating": {
          "rating": "OBP",
          "source": "OBP"
        },
        "credit_limit": {
          "currency": "EUR",
          "amount": "0"
        },
        "highest_education_attained": "Master",
        "employment_status": "worker",
        "kyc_status": true,
        "last_ok_date": "2022-04-13T04:30:08Z",
        "title": "Dr.",
        "branch_id": "DERBY6",
        "name_suffix": "Sr"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Customer", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "credit_source": {
            "type": "string"
          },
          "credit_rating": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "dependants": {
            "type": "integer"
          },
          "dob_of_dependants": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            }
          },
          "face_image": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string"
              },
              "date": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          "credit_limit": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string"
              },
              "amount": {
                "type": "string"
              }
            }
          },
          "employment_status": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "customer_id": {
            "type": "string"
          },
          "relationship_status": {
            "type": "string"
          },
          "bank_id": {
            "type": "string"
          },
          "highest_education_attained": {
            "type": "string"
          },
          "customer_number": {
            "type": "string"
          },
          "credit_rating": {
            "type": "object",
            "properties": {
              "rating": {
                "type": "string"
              },
              "source": {
                "type": "string"
              }
            }
          },
          "name_suffix": {
            "type": "string"
          },
          "last_ok_date": {
            "type": "string",
            "format": "date-time"
          },
          "legal_name": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "branch_id": {
            "type": "string"
          },
          "date_of_birth": {
            "type": "string",
            "format": "date-time"
          },
          "mobile_phone_number": {
            "type": "string"
          },
          "kyc_status": {
            "type": "boolean"
          }
        }
      },
      "roles": [
        {
          "role": "CanUpdateCustomerCreditRatingAndSource",
          "requires_bank_id": true
        },
        {
          "role": "CanUpdateCustomerCreditRatingAndSourceAtAnyBank",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/customers/CUSTOMER_ID/credit-rating-and-source",
      "connector_methods": [
        "obp.updateCustomerCreditData",
        "obp.getCustomerByCustomerId",
        "obp.getBank",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv4.0.0-createSystemLevelEndpointTag",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "createSystemLevelEndpointTag"
      },
      "request_verb": "POST",
      "request_url": "/obp/v4.0.0/management/endpoints/OPERATION_ID/tags",
      "summary": "Create System Level Endpoint Tag",
      "description": "<p>Create System Level Endpoint Tag</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#\">OPERATION_ID</a>: OBPv4.0.0-getBanks</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>tag_name</strong></a>: BankAccountTag1</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#\"><strong>endpoint_tag_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>operation_id</strong></a>: OBPv4.0.0-getBanks</p>\n<p><a href=\"/glossary#\"><strong>tag_name</strong></a>: BankAccountTag1</p>\n",
      "description_markdown": "Create System Level Endpoint Tag\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[OPERATION_ID](/glossary#): OBPv4.0.0-getBanks\n\n\n\n\n\n**JSON request body fields:**\n\n\n\n[**tag_name**](/glossary#): BankAccountTag1\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**endpoint_tag_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**operation_id**](/glossary#): OBPv4.0.0-getBanks\n\n\n\n[**tag_name**](/glossary#): BankAccountTag1\n\n\n",
      "example_request_body": {
        "tag_name": "BankAccountTag1"
      },
      "success_response_body": {
        "bank_id": "gh.29.uk",
        "endpoint_tag_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "operation_id": "OBPv4.0.0-getBanks",
        "tag_name": "BankAccountTag1"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["API", "API", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "tag_name": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "operation_id": {
            "type": "string"
          },
          "tag_name": {
            "type": "string"
          },
          "bank_id": {
            "type": "string"
          },
          "endpoint_tag_id": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateSystemLevelEndpointTag",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/endpoints/OPERATION_ID/tags",
      "connector_methods": ["obp.createSystemLevelEndpointTag", "obp.getSystemLevelEndpointTag"]
    },
    {
      "operation_id": "OBPv5.0.0-getMetricsAtBank",
      "implemented_by": {
        "version": "OBPv5.0.0",
        "function": "getMetricsAtBank"
      },
      "request_verb": "GET",
      "request_url": "/obp/v5.0.0/management/metrics/banks/BANK_ID",
      "summary": "Get Metrics at Bank",
      "description": "<p>Get the all metrics at the Bank specified by BANK_ID</p>\n<p>require CanReadMetrics role</p>\n<p>Filters Part 1.<em>filtering</em> (no wilde cards etc.) parameters to GET /management/metrics</p>\n<p>Should be able to filter on the following metrics fields</p>\n<p>eg: /management/metrics?from_date=1100-01-01T01:01:01.000Z&amp;to_date=1100-01-01T01:01:01.000Z&amp;limit=50&amp;offset=2</p>\n<p>1 from_date (defaults to one week before current date): eg:from_date=1100-01-01T01:01:01.000Z</p>\n<p>2 to_date (defaults to current date) eg:to_date=1100-01-01T01:01:01.000Z</p>\n<p>3 limit (for pagination: defaults to 50)  eg:limit=200</p>\n<p>4 offset (for pagination: zero index, defaults to 0) eg: offset=10</p>\n<p>5 sort_by (defaults to date field) eg: sort_by=date<br />\npossible values:<br />\n&quot;url&quot;,<br />\n&quot;date&quot;,<br />\n&quot;user_name&quot;,<br />\n&quot;app_name&quot;,<br />\n&quot;developer_email&quot;,<br />\n&quot;implemented_by_partial_function&quot;,<br />\n&quot;implemented_in_version&quot;,<br />\n&quot;consumer_id&quot;,<br />\n&quot;verb&quot;</p>\n<p>6 direction (defaults to date desc) eg: direction=desc</p>\n<p>eg: /management/metrics?from_date=1100-01-01T01:01:01.000Z&amp;to_date=1100-01-01T01:01:<a href=\"&#109;&#x61;&#105;lto&#x3a;0&#49;&#x2e;&#48;0&#48;&#90;&#38;&#108;&#105;&#x6d;&#x69;&#116;&#61;&#49;&#x30;&#48;0&#x30;&#x26;o&#102;f&#115;&#x65;&#x74;&#61;&#x30;&#x26;&#x61;&#110;&#x6f;&#110;=f&#x61;&#108;&#115;&#x65;&#x26;&#97;&#112;&#x70;&#x5f;&#110;&#97;&#x6d;&#101;&#61;&#x54;&#101;a&#x74;&#x41;&#112;&#x70;&amp;&#x69;&#x6d;&#112;l&#101;m&#x65;&#110;&#116;e&#100;&#95;&#105;&#x6e;_&#118;&#x65;&#x72;&#x73;&#105;&#111;&#x6e;&#x3d;&#118;2&#46;&#49;.&#x30;&#38;ve&#114;&#98;&#61;&#80;O&#83;T&#38;&#117;s&#x65;&#114;&#x5f;i&#100;&#x3d;&#99;&#x37;&#x62;&#x36;&#x63;&#98;&#x34;&#55;&#x2d;&#99;&#98;&#57;&#x36;&#x2d;&#52;&#52;&#x34;1&#45;&#x38;&#56;&#48;&#49;&#45;&#51;&#x35;b5&#55;&#x34;5&#x36;7&#53;&#x33;&#97;&amp;&#117;&#x73;&#x65;&#x72;&#x5f;n&#x61;&#109;&#101;&#x3d;s&#117;&#x73;&#97;&#x6e;&#x2e;u&#107;&#46;&#50;&#57;&#64;&#x65;&#120;&#x61;&#109;&#112;l&#101;.&#x63;om\">&#x30;1&#46;&#x30;&#x30;&#48;Z&#38;&#108;&#105;&#x6d;&#105;t&#x3d;1&#48;&#x30;&#48;&#x30;&#38;&#111;&#102;&#102;&#x73;&#101;&#116;=&#48;&#38;&#97;&#110;&#111;&#110;&#x3d;&#102;&#x61;&#x6c;&#x73;&#101;&#x26;&#x61;&#x70;&#x70;&#x5f;&#x6e;&#x61;&#x6d;&#101;&#x3d;&#84;&#101;&#x61;&#x74;&#65;&#112;&#x70;&#38;&#105;&#109;p&#x6c;e&#109;&#x65;&#x6e;&#116;&#101;&#100;&#95;&#x69;&#110;&#x5f;&#x76;&#x65;&#114;&#x73;&#x69;&#111;&#x6e;&#61;v2&#x2e;&#49;&#46;&#48;&#x26;v&#x65;&#x72;&#x62;&#x3d;&#x50;&#x4f;S&#x54;&amp;&#x75;&#x73;e&#x72;&#x5f;&#105;&#x64;=c&#x37;&#98;&#54;c&#x62;&#52;&#x37;&#45;&#x63;b&#x39;&#x36;-&#x34;&#52;&#x34;&#49;&#45;&#56;&#56;0&#x31;-&#51;&#53;&#x62;5&#x37;&#x34;&#x35;&#x36;&#x37;&#53;3a&#38;&#x75;&#115;&#101;&#114;&#95;n&#x61;m&#x65;&#61;&#115;&#x75;&#115;&#x61;&#x6e;&#46;u&#x6b;&#46;&#x32;&#57;&#x40;&#x65;&#x78;&#x61;&#109;&#x70;&#x6c;e&#x2e;&#x63;&#111;&#x6d;</a>&amp;consumer_id=78</p>\n<p>Other filters:</p>\n<p>7 consumer_id  (if null ignore)</p>\n<p>8 user_id (if null ignore)</p>\n<p>9 anon (if null ignore) only support two value : true (return where user_id is null.) or false (return where user_id is not null.)</p>\n<p>10 url (if null ignore), note: can not contain '&amp;'.</p>\n<p>11 app_name (if null ignore)</p>\n<p>12 implemented_by_partial_function (if null ignore),</p>\n<p>13 implemented_in_version (if null ignore)</p>\n<p>14 verb (if null ignore)</p>\n<p>15 correlation_id (if null ignore)</p>\n<p>16 duration (if null ignore) non digit chars will be silently omitted</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#app_name\"><strong>app_name</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>consumer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>correlation_id</strong></a>: 1flssoftxq0cr1nssr68u0mioj</p>\n<p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#developer_email\"><strong>developer_email</strong></a>:</p>\n<p><a href=\"/glossary#duration\"><strong>duration</strong></a>: 5.123</p>\n<p><a href=\"/glossary#implemented_by_partial_function\"><strong>implemented_by_partial_function</strong></a>:</p>\n<p><a href=\"/glossary#implemented_in_version\"><strong>implemented_in_version</strong></a>:</p>\n<p><a href=\"/glossary#metrics\"><strong>metrics</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>url</strong></a>: <a href=\"http://www.example.com/id-docs/123/image.png\">http://www.example.com/id-docs/123/image.png</a></p>\n<p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p>\n<p><a href=\"/glossary#\"><strong>user_name</strong></a>: felixsmith</p>\n<p><a href=\"/glossary#verb\"><strong>verb</strong></a>:</p>\n",
      "description_markdown": "Get the all metrics at the Bank specified by BANK_ID\n\nrequire CanReadMetrics role\n\nFilters Part 1.*filtering* (no wilde cards etc.) parameters to GET /management/metrics\n\nShould be able to filter on the following metrics fields\n\neg: /management/metrics?from_date=1100-01-01T01:01:01.000Z&to_date=1100-01-01T01:01:01.000Z&limit=50&offset=2\n\n1 from_date (defaults to one week before current date): eg:from_date=1100-01-01T01:01:01.000Z\n\n2 to_date (defaults to current date) eg:to_date=1100-01-01T01:01:01.000Z\n\n3 limit (for pagination: defaults to 50)  eg:limit=200\n\n4 offset (for pagination: zero index, defaults to 0) eg: offset=10\n\n5 sort_by (defaults to date field) eg: sort_by=date\n  possible values:\n    \"url\",\n    \"date\",\n    \"user_name\",\n    \"app_name\",\n    \"developer_email\",\n    \"implemented_by_partial_function\",\n    \"implemented_in_version\",\n    \"consumer_id\",\n    \"verb\"\n\n6 direction (defaults to date desc) eg: direction=desc\n\neg: /management/metrics?from_date=1100-01-01T01:01:01.000Z&to_date=1100-01-01T01:01:01.000Z&limit=10000&offset=0&anon=false&app_name=TeatApp&implemented_in_version=v2.1.0&verb=POST&user_id=c7b6cb47-cb96-4441-8801-35b57456753a&user_name=susan.uk.29@example.com&consumer_id=78\n\nOther filters:\n\n7 consumer_id  (if null ignore)\n\n8 user_id (if null ignore)\n\n9 anon (if null ignore) only support two value : true (return where user_id is null.) or false (return where user_id is not null.)\n\n10 url (if null ignore), note: can not contain '&'.\n\n11 app_name (if null ignore)\n\n12 implemented_by_partial_function (if null ignore),\n\n13 implemented_in_version (if null ignore)\n\n14 verb (if null ignore)\n\n15 correlation_id (if null ignore)\n\n16 duration (if null ignore) non digit chars will be silently omitted\n\n      \n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**app_name**](/glossary#app_name): \n\n\n\n[**consumer_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**correlation_id**](/glossary#): 1flssoftxq0cr1nssr68u0mioj\n\n\n\n[**date**](/glossary#): 2020-01-27\n\n\n\n[**developer_email**](/glossary#developer_email): \n\n\n\n[**duration**](/glossary#duration): 5.123\n\n\n\n[**implemented_by_partial_function**](/glossary#implemented_by_partial_function): \n\n\n\n[**implemented_in_version**](/glossary#implemented_in_version): \n\n\n\n[**metrics**](/glossary#metrics): \n\n\n\n[**url**](/glossary#): http://www.example.com/id-docs/123/image.png\n\n\n\n[**user_id**](/glossary#): 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\n\n\n\n[**user_name**](/glossary#): felixsmith\n\n\n\n[**verb**](/glossary#verb): \n\n\n",
      "success_response_body": {
        "metrics": [
          {
            "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
            "url": "www.openbankproject.com",
            "date": "1100-01-01T00:00:00Z",
            "user_name": "OBP",
            "app_name": "SOFI",
            "developer_email": "felixsmith@example.com",
            "implemented_by_partial_function": "getBanks",
            "implemented_in_version": "v210",
            "consumer_id": "123",
            "verb": "get",
            "correlation_id": "v8ho6h5ivel3uq7a5zcnv0w1",
            "duration": 39
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Metric", "API", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "metrics": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "app_name": {
                  "type": "string"
                },
                "implemented_in_version": {
                  "type": "string"
                },
                "developer_email": {
                  "type": "string"
                },
                "consumer_id": {
                  "type": "string"
                },
                "verb": {
                  "type": "string"
                },
                "implemented_by_partial_function": {
                  "type": "string"
                },
                "date": {
                  "type": "string",
                  "format": "date-time"
                },
                "user_name": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                },
                "duration": {
                  "type": "integer"
                },
                "correlation_id": {
                  "type": "string"
                },
                "user_id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetMetricsAtOneBank",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/metrics/banks/BANK_ID",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv4.0.0-getTransactionAttributes",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getTransactionAttributes"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/transactions/TRANSACTION_ID/attributes",
      "summary": "Get Transaction Attributes",
      "description": "<p>Get Transaction Attributes</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#transaction_ids\">TRANSACTION_ID</a>: 2fg8a7e4-6d02-40e3-a129-0b2bf89de8ub</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#\"><strong>transaction_attribute_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#transaction_attributes\"><strong>transaction_attributes</strong></a>:</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n",
      "description_markdown": "Get Transaction Attributes\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[TRANSACTION_ID](/glossary#transaction_ids): 2fg8a7e4-6d02-40e3-a129-0b2bf89de8ub\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**transaction_attribute_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**transaction_attributes**](/glossary#transaction_attributes): \n\n\n\n[**type**](/glossary#type): \n\n\n\n[**value**](/glossary#): 5987953\n\n\n",
      "success_response_body": {
        "transaction_attributes": [
          {
            "transaction_attribute_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
            "name": "HOUSE_RENT",
            "type": "DATE_WITH_DAY",
            "value": "123456789"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["Transaction", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "transaction_attributes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "transaction_attribute_id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetTransactionAttributesAtOneBank",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/transactions/TRANSACTION_ID/attributes",
      "connector_methods": ["obp.getTransactionAttributes", "obp.getTransaction"]
    },
    {
      "operation_id": "OBPv4.0.0-addScope",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "addScope"
      },
      "request_verb": "POST",
      "request_url": "/obp/v4.0.0/consumers/CONSUMER_ID/scopes",
      "summary": "Create Scope for a Consumer",
      "description": "<p>Create Scope. Grant Role to Consumer.</p>\n<p>Scopes are used to grant System or Bank level roles to the Consumer (App). (For Account level privileges, see Views)</p>\n<p>For a System level Role (.e.g CanGetAnyUser), set bank_id to an empty string i.e. &quot;bank_id&quot;:&quot;&quot;</p>\n<p>For a Bank level Role (e.g. CanCreateAccount), set bank_id to a valid value e.g. &quot;bank_id&quot;:&quot;my-bank-id&quot;</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#\">CONSUMER_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#role_name\"><strong>role_name</strong></a>:</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#role_name\"><strong>role_name</strong></a>:</p>\n<p><a href=\"/glossary#scope_id\"><strong>scope_id</strong></a>:</p>\n",
      "description_markdown": "Create Scope. Grant Role to Consumer.\n\nScopes are used to grant System or Bank level roles to the Consumer (App). (For Account level privileges, see Views)\n\nFor a System level Role (.e.g CanGetAnyUser), set bank_id to an empty string i.e. \"bank_id\":\"\"\n\nFor a Bank level Role (e.g. CanCreateAccount), set bank_id to a valid value e.g. \"bank_id\":\"my-bank-id\"\n\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[CONSUMER_ID](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n\n\n**JSON request body fields:**\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**role_name**](/glossary#role_name): \n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**role_name**](/glossary#role_name): \n\n\n\n[**scope_id**](/glossary#scope_id): \n\n\n",
      "example_request_body": {
        "bank_id": "gh.29.uk",
        "role_name": "CanGetEntitlementsForAnyUserAtOneBank"
      },
      "success_response_body": {
        "scope_id": "88625da4-a671-435e-9d24-e5b6e5cc404f",
        "role_name": "CanGetEntitlementsForAnyUserAtOneBank",
        "bank_id": "gh.29.uk"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20024: Consumer not found. Please specify a valid value for CONSUMER_ID.",
        "OBP-10001: Incorrect json format.",
        "OBP-10007: Incorrect Role name:",
        "OBP-30205: This entitlement is a Bank Role. Please set bank_id to a valid bank id.",
        "OBP-30206: This entitlement is a System Role. Please set bank_id to empty string.",
        "OBP-30216: Entitlement already exists for the user.",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["Scope", "Consumer", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "bank_id": {
            "type": "string"
          },
          "role_name": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "scope_id": {
            "type": "string"
          },
          "bank_id": {
            "type": "string"
          },
          "role_name": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateScopeAtAnyBank",
          "requires_bank_id": false
        },
        {
          "role": "CanCreateScopeAtOneBank",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/consumers/CONSUMER_ID/scopes",
      "connector_methods": ["obp.getBankLegacy", "obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv4.0.0-deleteMyApiCollectionEndpoint",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "deleteMyApiCollectionEndpoint"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v4.0.0/my/api-collections/API_COLLECTION_NAME/api-collection-endpoints/OPERATION_ID",
      "summary": "Delete My Api Collection Endpoint",
      "description": "<p>Delete Api Collection Endpoint By OPERATION_ID</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#\">API_COLLECTION_NAME</a>: Favourites</p>\n<p><a href=\"/glossary#\">OPERATION_ID</a>: OBPv4.0.0-getBanks</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n",
      "description_markdown": "Delete Api Collection Endpoint By OPERATION_ID\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[API_COLLECTION_NAME](/glossary#): Favourites\n\n\n\n[OPERATION_ID](/glossary#): OBPv4.0.0-getBanks\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**value**](/glossary#): 5987953\n\n\n",
      "success_response_body": {
        "value": true
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20057: User not found by userId.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Api-Collection", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "value": {
            "type": "boolean"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/my/api-collections/API_COLLECTION_NAME/api-collection-endpoints/OPERATION_ID",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv4.0.0-getFastFirehoseAccountsAtOneBank",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getFastFirehoseAccountsAtOneBank"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/management/banks/BANK_ID/fast-firehose/accounts",
      "summary": "Get Fast Firehose Accounts at Bank",
      "description": "<p>This endpoint allows bulk access to accounts.</p>\n<p>optional pagination parameters for filter with accounts</p>\n<p>Possible custom url parameters for pagination:</p>\n<ul>\n<li>limit=NUMBER ==&gt; default value: 50</li>\n<li>offset=NUMBER ==&gt; default value: 0</li>\n</ul>\n<p>eg1:?limit=100&amp;offset=0</p>\n<ul>\n<li>sort_direction=ASC/DESC ==&gt; default value: DESC.</li>\n</ul>\n<p>eg2:?limit=100&amp;offset=0&amp;sort_direction=ASC</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#account_attributes\"><strong>account_attributes</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>account_id</strong></a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#account_routings\"><strong>account_routings</strong></a>:</p>\n<p><a href=\"/glossary#accounts\"><strong>accounts</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p>\n<p><a href=\"/glossary#balance\"><strong>balance</strong></a>: 10</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#code\"><strong>code</strong></a>: 125</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#\"><strong>label</strong></a>: My Account</p>\n<p><a href=\"/glossary#number\"><strong>number</strong></a>:</p>\n<p><a href=\"/glossary#owners\"><strong>owners</strong></a>:</p>\n<p><a href=\"/glossary#product_code\"><strong>product_code</strong></a>: 1234BW</p>\n<p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p>\n<p><a href=\"/glossary#\"><strong>user_name</strong></a>: felixsmith</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n",
      "description_markdown": "This endpoint allows bulk access to accounts.\n\noptional pagination parameters for filter with accounts\n\n\nPossible custom url parameters for pagination:\n\n* limit=NUMBER ==> default value: 50\n* offset=NUMBER ==> default value: 0\n\neg1:?limit=100&offset=0\n\n\n* sort_direction=ASC/DESC ==> default value: DESC.\n\neg2:?limit=100&offset=0&sort_direction=ASC\n\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**account_attributes**](/glossary#account_attributes): \n\n\n\n[**account_id**](/glossary#): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[**account_routings**](/glossary#account_routings): \n\n\n\n[**accounts**](/glossary#accounts): \n\n\n\n[**amount**](/glossary#): 10.12\n\n\n\n[**balance**](/glossary#balance): 10\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**code**](/glossary#code): 125\n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**label**](/glossary#): My Account\n\n\n\n[**number**](/glossary#number): \n\n\n\n[**owners**](/glossary#owners): \n\n\n\n[**product_code**](/glossary#product_code): 1234BW\n\n\n\n[**provider**](/glossary#provider): ETHEREUM\n\n\n\n[**type**](/glossary#type): \n\n\n\n[**user_id**](/glossary#): 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\n\n\n\n[**user_name**](/glossary#): felixsmith\n\n\n\n[**value**](/glossary#): 5987953\n\n\n",
      "success_response_body": {
        "accounts": [
          {
            "id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0",
            "bank_id": "gh.29.uk",
            "label": "My Account",
            "number": "",
            "owners": [
              {
                "user_id": "b27327a2-a822-41e5-a909-0150da688939",
                "provider": "https://finx22openplatform.fintech-galaxy.com,user_name:synth_user_1_54891",
                "user_name": ""
              }
            ],
            "product_code": "1234BW",
            "balance": {
              "currency": "EUR",
              "amount": "0"
            },
            "account_routings": [
              {
                "bank_id": "bisb.com",
                "account_id": "c590e38e-847c-466f-9a62-f2ad67daf106"
              }
            ],
            "account_attributes": [
              {
                "type": "INTEGER",
                "code": "Loan1",
                "value": "0"
              },
              {
                "type": "STRING",
                "code": "Loan1",
                "value": "4421.783"
              }
            ]
          }
        ]
      },
      "error_response_bodies": [
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["Account", "Account-Firehose", "FirehoseData", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "accounts": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "product_code": {
                  "type": "string"
                },
                "bank_id": {
                  "type": "string"
                },
                "owners": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "user_id": {
                        "type": "string"
                      },
                      "user_name": {
                        "type": "string"
                      },
                      "provider": {
                        "type": "string"
                      }
                    }
                  }
                },
                "label": {
                  "type": "string"
                },
                "balance": {
                  "type": "object",
                  "properties": {
                    "currency": {
                      "type": "string"
                    },
                    "amount": {
                      "type": "string"
                    }
                  }
                },
                "number": {
                  "type": "string"
                },
                "account_attributes": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      },
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                "id": {
                  "type": "string"
                },
                "account_routings": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "bank_id": {
                        "type": "string"
                      },
                      "account_id": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanUseAccountFirehoseAtAnyBank",
          "requires_bank_id": false
        },
        {
          "role": "CanUseAccountFirehose",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/banks/BANK_ID/fast-firehose/accounts",
      "connector_methods": ["obp.getBankAccountsWithAttributes"]
    },
    {
      "operation_id": "OBPv4.0.0-updateBankLevelDynamicEntity",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "updateBankLevelDynamicEntity"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v4.0.0/management/banks/BANK_ID/dynamic-entities/DYNAMIC_ENTITY_ID",
      "summary": "Update Bank Level Dynamic Entity",
      "description": "<p>Update a Bank Level DynamicEntity.</p>\n<p>Authentication is Mandatory</p>\n<p>Update one DynamicEntity, after update finished, the corresponding CRUD endpoints will be changed.</p>\n<p>The following field types are as supported:<br />\n[number, integer, boolean, string, DATE_WITH_DAY, reference]</p>\n<p>DATE_WITH_DAY format: yyyy-MM-dd</p>\n<p>Reference types are like foreign keys and composite foreign keys are supported. The value you need to supply as the (composite) foreign key is a UUID (or several UUIDs in the case of a composite key) that match value in another Entity..<br />\nThe following list shows all the possible reference types in the system with corresponding examples values so you can see how to construct each reference type value.</p>\n<pre><code>&quot;someField0&quot;: {\n    &quot;type&quot;: &quot;reference:FooBar&quot;,\n    &quot;example&quot;: &quot;cbb6c1be-c769-4656-a512-7590da1cf632&quot;\n}\n\n&quot;someField1&quot;: {\n    &quot;type&quot;: &quot;reference:risk_checks&quot;,\n    &quot;example&quot;: &quot;cbb6c1be-c769-4656-a512-7590da1cf632&quot;\n}\n\n&quot;someField2&quot;: {\n    &quot;type&quot;: &quot;reference:BookMarkBankAndAccount&quot;,\n    &quot;example&quot;: &quot;cbb6c1be-c769-4656-a512-7590da1cf632&quot;\n}\n\n&quot;someField3&quot;: {\n    &quot;type&quot;: &quot;reference:risk_check&quot;,\n    &quot;example&quot;: &quot;cbb6c1be-c769-4656-a512-7590da1cf632&quot;\n}\n\n&quot;someField4&quot;: {\n    &quot;type&quot;: &quot;reference:BookMarkBankAndAccount_system&quot;,\n    &quot;example&quot;: &quot;cbb6c1be-c769-4656-a512-7590da1cf632&quot;\n}\n\n&quot;someField5&quot;: {\n    &quot;type&quot;: &quot;reference:Hospital&quot;,\n    &quot;example&quot;: &quot;cbb6c1be-c769-4656-a512-7590da1cf632&quot;\n}\n\n&quot;someField6&quot;: {\n    &quot;type&quot;: &quot;reference:Bank&quot;,\n    &quot;example&quot;: &quot;cbb6c1be-c769-4656-a512-7590da1cf632&quot;\n}\n\n&quot;someField7&quot;: {\n    &quot;type&quot;: &quot;reference:Consumer&quot;,\n    &quot;example&quot;: &quot;cbb6c1be-c769-4656-a512-7590da1cf632&quot;\n}\n\n&quot;someField8&quot;: {\n    &quot;type&quot;: &quot;reference:Customer&quot;,\n    &quot;example&quot;: &quot;cbb6c1be-c769-4656-a512-7590da1cf632&quot;\n}\n\n&quot;someField9&quot;: {\n    &quot;type&quot;: &quot;reference:MethodRouting&quot;,\n    &quot;example&quot;: &quot;cbb6c1be-c769-4656-a512-7590da1cf632&quot;\n}\n\n&quot;someField10&quot;: {\n    &quot;type&quot;: &quot;reference:DynamicEntity&quot;,\n    &quot;example&quot;: &quot;cbb6c1be-c769-4656-a512-7590da1cf632&quot;\n}\n\n&quot;someField11&quot;: {\n    &quot;type&quot;: &quot;reference:TransactionRequest&quot;,\n    &quot;example&quot;: &quot;cbb6c1be-c769-4656-a512-7590da1cf632&quot;\n}\n\n&quot;someField12&quot;: {\n    &quot;type&quot;: &quot;reference:ProductAttribute&quot;,\n    &quot;example&quot;: &quot;cbb6c1be-c769-4656-a512-7590da1cf632&quot;\n}\n\n&quot;someField13&quot;: {\n    &quot;type&quot;: &quot;reference:AccountAttribute&quot;,\n    &quot;example&quot;: &quot;cbb6c1be-c769-4656-a512-7590da1cf632&quot;\n}\n\n&quot;someField14&quot;: {\n    &quot;type&quot;: &quot;reference:TransactionAttribute&quot;,\n    &quot;example&quot;: &quot;cbb6c1be-c769-4656-a512-7590da1cf632&quot;\n}\n\n&quot;someField15&quot;: {\n    &quot;type&quot;: &quot;reference:CustomerAttribute&quot;,\n    &quot;example&quot;: &quot;cbb6c1be-c769-4656-a512-7590da1cf632&quot;\n}\n\n&quot;someField16&quot;: {\n    &quot;type&quot;: &quot;reference:AccountApplication&quot;,\n    &quot;example&quot;: &quot;cbb6c1be-c769-4656-a512-7590da1cf632&quot;\n}\n\n&quot;someField17&quot;: {\n    &quot;type&quot;: &quot;reference:CardAttribute&quot;,\n    &quot;example&quot;: &quot;cbb6c1be-c769-4656-a512-7590da1cf632&quot;\n}\n\n&quot;someField18&quot;: {\n    &quot;type&quot;: &quot;reference:Counterparty&quot;,\n    &quot;example&quot;: &quot;cbb6c1be-c769-4656-a512-7590da1cf632&quot;\n}\n\n&quot;someField19&quot;: {\n    &quot;type&quot;: &quot;reference:Branch:bankId&amp;branchId&quot;,\n    &quot;example&quot;: &quot;bankId=cbb6c1be-c769-4656-a512-7590da1cf632&amp;branchId=7359da6d-7f28-41d0-91aa-122c40f87c09&quot;\n}\n\n&quot;someField20&quot;: {\n    &quot;type&quot;: &quot;reference:Atm:bankId&amp;atmId&quot;,\n    &quot;example&quot;: &quot;bankId=cbb6c1be-c769-4656-a512-7590da1cf632&amp;atmId=7359da6d-7f28-41d0-91aa-122c40f87c09&quot;\n}\n\n&quot;someField21&quot;: {\n    &quot;type&quot;: &quot;reference:BankAccount:bankId&amp;accountId&quot;,\n    &quot;example&quot;: &quot;bankId=cbb6c1be-c769-4656-a512-7590da1cf632&amp;accountId=7359da6d-7f28-41d0-91aa-122c40f87c09&quot;\n}\n\n&quot;someField22&quot;: {\n    &quot;type&quot;: &quot;reference:Product:bankId&amp;productCode&quot;,\n    &quot;example&quot;: &quot;bankId=cbb6c1be-c769-4656-a512-7590da1cf632&amp;productCode=7359da6d-7f28-41d0-91aa-122c40f87c09&quot;\n}\n\n&quot;someField23&quot;: {\n    &quot;type&quot;: &quot;reference:PhysicalCard:bankId&amp;cardId&quot;,\n    &quot;example&quot;: &quot;bankId=cbb6c1be-c769-4656-a512-7590da1cf632&amp;cardId=7359da6d-7f28-41d0-91aa-122c40f87c09&quot;\n}\n\n&quot;someField24&quot;: {\n    &quot;type&quot;: &quot;reference:Transaction:bankId&amp;accountId&amp;transactionId&quot;,\n    &quot;example&quot;: &quot;bankId=cbb6c1be-c769-4656-a512-7590da1cf632&amp;accountId=7359da6d-7f28-41d0-91aa-122c40f87c09&amp;transactionId=79cf3426-6ed3-4f3c-972b-f9abf423fec3&quot;\n}\n\n&quot;someField25&quot;: {\n    &quot;type&quot;: &quot;reference:Counterparty:bankId&amp;accountId&amp;counterpartyId&quot;,\n    &quot;example&quot;: &quot;bankId=cbb6c1be-c769-4656-a512-7590da1cf632&amp;accountId=7359da6d-7f28-41d0-91aa-122c40f87c09&amp;counterpartyId=79cf3426-6ed3-4f3c-972b-f9abf423fec3&quot;\n}\n\n</code></pre>\n",
      "description_markdown": "Update a Bank Level DynamicEntity.\n\n\nAuthentication is Mandatory\n\nUpdate one DynamicEntity, after update finished, the corresponding CRUD endpoints will be changed.\n\nThe following field types are as supported:\n[number, integer, boolean, string, DATE_WITH_DAY, reference]\n\nDATE_WITH_DAY format: yyyy-MM-dd\n\nReference types are like foreign keys and composite foreign keys are supported. The value you need to supply as the (composite) foreign key is a UUID (or several UUIDs in the case of a composite key) that match value in another Entity..\nThe following list shows all the possible reference types in the system with corresponding examples values so you can see how to construct each reference type value.\n```\n\"someField0\": {\n    \"type\": \"reference:FooBar\",\n    \"example\": \"cbb6c1be-c769-4656-a512-7590da1cf632\"\n}\n\n\"someField1\": {\n    \"type\": \"reference:risk_checks\",\n    \"example\": \"cbb6c1be-c769-4656-a512-7590da1cf632\"\n}\n\n\"someField2\": {\n    \"type\": \"reference:BookMarkBankAndAccount\",\n    \"example\": \"cbb6c1be-c769-4656-a512-7590da1cf632\"\n}\n\n\"someField3\": {\n    \"type\": \"reference:risk_check\",\n    \"example\": \"cbb6c1be-c769-4656-a512-7590da1cf632\"\n}\n\n\"someField4\": {\n    \"type\": \"reference:BookMarkBankAndAccount_system\",\n    \"example\": \"cbb6c1be-c769-4656-a512-7590da1cf632\"\n}\n\n\"someField5\": {\n    \"type\": \"reference:Hospital\",\n    \"example\": \"cbb6c1be-c769-4656-a512-7590da1cf632\"\n}\n\n\"someField6\": {\n    \"type\": \"reference:Bank\",\n    \"example\": \"cbb6c1be-c769-4656-a512-7590da1cf632\"\n}\n\n\"someField7\": {\n    \"type\": \"reference:Consumer\",\n    \"example\": \"cbb6c1be-c769-4656-a512-7590da1cf632\"\n}\n\n\"someField8\": {\n    \"type\": \"reference:Customer\",\n    \"example\": \"cbb6c1be-c769-4656-a512-7590da1cf632\"\n}\n\n\"someField9\": {\n    \"type\": \"reference:MethodRouting\",\n    \"example\": \"cbb6c1be-c769-4656-a512-7590da1cf632\"\n}\n\n\"someField10\": {\n    \"type\": \"reference:DynamicEntity\",\n    \"example\": \"cbb6c1be-c769-4656-a512-7590da1cf632\"\n}\n\n\"someField11\": {\n    \"type\": \"reference:TransactionRequest\",\n    \"example\": \"cbb6c1be-c769-4656-a512-7590da1cf632\"\n}\n\n\"someField12\": {\n    \"type\": \"reference:ProductAttribute\",\n    \"example\": \"cbb6c1be-c769-4656-a512-7590da1cf632\"\n}\n\n\"someField13\": {\n    \"type\": \"reference:AccountAttribute\",\n    \"example\": \"cbb6c1be-c769-4656-a512-7590da1cf632\"\n}\n\n\"someField14\": {\n    \"type\": \"reference:TransactionAttribute\",\n    \"example\": \"cbb6c1be-c769-4656-a512-7590da1cf632\"\n}\n\n\"someField15\": {\n    \"type\": \"reference:CustomerAttribute\",\n    \"example\": \"cbb6c1be-c769-4656-a512-7590da1cf632\"\n}\n\n\"someField16\": {\n    \"type\": \"reference:AccountApplication\",\n    \"example\": \"cbb6c1be-c769-4656-a512-7590da1cf632\"\n}\n\n\"someField17\": {\n    \"type\": \"reference:CardAttribute\",\n    \"example\": \"cbb6c1be-c769-4656-a512-7590da1cf632\"\n}\n\n\"someField18\": {\n    \"type\": \"reference:Counterparty\",\n    \"example\": \"cbb6c1be-c769-4656-a512-7590da1cf632\"\n}\n\n\"someField19\": {\n    \"type\": \"reference:Branch:bankId&branchId\",\n    \"example\": \"bankId=cbb6c1be-c769-4656-a512-7590da1cf632&branchId=7359da6d-7f28-41d0-91aa-122c40f87c09\"\n}\n\n\"someField20\": {\n    \"type\": \"reference:Atm:bankId&atmId\",\n    \"example\": \"bankId=cbb6c1be-c769-4656-a512-7590da1cf632&atmId=7359da6d-7f28-41d0-91aa-122c40f87c09\"\n}\n\n\"someField21\": {\n    \"type\": \"reference:BankAccount:bankId&accountId\",\n    \"example\": \"bankId=cbb6c1be-c769-4656-a512-7590da1cf632&accountId=7359da6d-7f28-41d0-91aa-122c40f87c09\"\n}\n\n\"someField22\": {\n    \"type\": \"reference:Product:bankId&productCode\",\n    \"example\": \"bankId=cbb6c1be-c769-4656-a512-7590da1cf632&productCode=7359da6d-7f28-41d0-91aa-122c40f87c09\"\n}\n\n\"someField23\": {\n    \"type\": \"reference:PhysicalCard:bankId&cardId\",\n    \"example\": \"bankId=cbb6c1be-c769-4656-a512-7590da1cf632&cardId=7359da6d-7f28-41d0-91aa-122c40f87c09\"\n}\n\n\"someField24\": {\n    \"type\": \"reference:Transaction:bankId&accountId&transactionId\",\n    \"example\": \"bankId=cbb6c1be-c769-4656-a512-7590da1cf632&accountId=7359da6d-7f28-41d0-91aa-122c40f87c09&transactionId=79cf3426-6ed3-4f3c-972b-f9abf423fec3\"\n}\n\n\"someField25\": {\n    \"type\": \"reference:Counterparty:bankId&accountId&counterpartyId\",\n    \"example\": \"bankId=cbb6c1be-c769-4656-a512-7590da1cf632&accountId=7359da6d-7f28-41d0-91aa-122c40f87c09&counterpartyId=79cf3426-6ed3-4f3c-972b-f9abf423fec3\"\n}\n\n```",
      "example_request_body": {
        "FooBar": {
          "description": "description of this entity, can be markdown text.",
          "required": ["name"],
          "properties": {
            "name": {
              "type": "string",
              "minLength": 3,
              "maxLength": 20,
              "example": "James Brown",
              "description": "description of **name** field, can be markdown text."
            },
            "number": {
              "type": "integer",
              "example": 698761728,
              "description": "description of **number** field, can be markdown text."
            }
          }
        },
        "hasPersonalEntity": true
      },
      "success_response_body": {
        "bankId": "gh.29.uk",
        "FooBar": {
          "description": "description of this entity, can be markdown text.",
          "required": ["name"],
          "properties": {
            "name": {
              "type": "string",
              "minLength": 3,
              "maxLength": 20,
              "example": "James Brown",
              "description": "description of **name** field, can be markdown text."
            },
            "number": {
              "type": "integer",
              "example": 698761728,
              "description": "description of **number** field, can be markdown text."
            }
          }
        },
        "dynamicEntityId": "dynamic-entity-id",
        "userId": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
        "hasPersonalEntity": true
      },
      "error_response_bodies": [
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Dynamic-Entity-Manage", "API", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "hasPersonalEntity": {
            "type": "boolean"
          },
          "FooBar": {
            "type": "object",
            "properties": {
              "required": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "description": {
                "type": "string"
              },
              "properties": {
                "type": "object",
                "properties": {
                  "number": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": ["number", "integer", "boolean", "string", "DATE_WITH_DAY"]
                      },
                      "example": {
                        "type": "integer"
                      },
                      "description": {
                        "type": "string"
                      }
                    }
                  },
                  "name": {
                    "type": "object",
                    "properties": {
                      "minLength": {
                        "type": "integer"
                      },
                      "type": {
                        "type": "string",
                        "enum": ["number", "integer", "boolean", "string", "DATE_WITH_DAY"]
                      },
                      "maxLength": {
                        "type": "integer"
                      },
                      "example": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "dynamicEntityId": {
            "type": "string"
          },
          "bankId": {
            "type": "string"
          },
          "hasPersonalEntity": {
            "type": "boolean"
          },
          "userId": {
            "type": "string"
          },
          "FooBar": {
            "type": "object",
            "properties": {
              "required": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "description": {
                "type": "string"
              },
              "properties": {
                "type": "object",
                "properties": {
                  "number": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": ["number", "integer", "boolean", "string", "DATE_WITH_DAY"]
                      },
                      "example": {
                        "type": "integer"
                      },
                      "description": {
                        "type": "string"
                      }
                    }
                  },
                  "name": {
                    "type": "object",
                    "properties": {
                      "minLength": {
                        "type": "integer"
                      },
                      "type": {
                        "type": "string",
                        "enum": ["number", "integer", "boolean", "string", "DATE_WITH_DAY"]
                      },
                      "maxLength": {
                        "type": "integer"
                      },
                      "example": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanUpdateBankLevelDynamicEntity",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/banks/BANK_ID/dynamic-entities/DYNAMIC_ENTITY_ID",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv5.1.0-root",
      "implemented_by": {
        "version": "OBPv5.1.0",
        "function": "root"
      },
      "request_verb": "GET",
      "request_url": "/obp/v5.1.0/root",
      "summary": "Get API Info (root)",
      "description": "<p>Returns information about:</p>\n<ul>\n<li>API version</li>\n<li>Hosted by information</li>\n<li>Hosted at information</li>\n<li>Energy source information</li>\n<li>Git Commit</li>\n</ul>\n<p>Authentication is Optional</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#Connector\"><strong>connector</strong></a>: connector</p>\n<p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"m&#97;&#105;lt&#111;&#x3a;&#102;&#x65;&#108;&#105;&#120;&#x73;&#x6d;&#x69;&#116;&#104;&#x40;&#101;&#x78;&#97;&#109;p&#x6c;&#101;&#46;&#x63;&#x6f;&#x6d;\">f&#101;&#x6c;&#105;&#120;&#x73;&#x6d;&#x69;t&#x68;@&#101;&#x78;&#97;&#x6d;&#112;&#x6c;&#101;&#46;&#99;&#111;&#109;</a></p>\n<p><a href=\"/glossary#energy_source\"><strong>energy_source</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>git_commit</strong></a>: 59623811dd8a41f6ffe67be46954eee11913dc28</p>\n<p><a href=\"/glossary#hosted_at\"><strong>hosted_at</strong></a>:</p>\n<p><a href=\"/glossary#hosted_by\"><strong>hosted_by</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>hostname</strong></a>: hostname</p>\n<p><a href=\"/glossary#\"><strong>local_identity_provider</strong></a>: local_identity_provider</p>\n<p><a href=\"/glossary#organisation\"><strong>organisation</strong></a>:</p>\n<p><a href=\"/glossary#organisation_website\"><strong>organisation_website</strong></a>:</p>\n<p><a href=\"/glossary#phone\"><strong>phone</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>resource_docs_requires_role</strong></a>: resource_docs_requires_role</p>\n<p><a href=\"/glossary#version\"><strong>version</strong></a>:</p>\n<p><a href=\"/glossary#version_status\"><strong>version_status</strong></a>:</p>\n",
      "description_markdown": "Returns information about:\n\n* API version\n* Hosted by information\n* Hosted at information\n* Energy source information\n* Git Commit\n\nAuthentication is Optional\n\n\n**JSON response body fields:**\n\n\n\n[**connector**](/glossary#Connector): connector\n\n\n\n[**email**](/glossary#): felixsmith@example.com\n\n\n\n[**energy_source**](/glossary#energy_source): \n\n\n\n[**git_commit**](/glossary#): 59623811dd8a41f6ffe67be46954eee11913dc28\n\n\n\n[**hosted_at**](/glossary#hosted_at): \n\n\n\n[**hosted_by**](/glossary#hosted_by): \n\n\n\n[**hostname**](/glossary#): hostname\n\n\n\n[**local_identity_provider**](/glossary#): local_identity_provider\n\n\n\n[**organisation**](/glossary#organisation): \n\n\n\n[**organisation_website**](/glossary#organisation_website): \n\n\n\n[**phone**](/glossary#phone): \n\n\n\n[**resource_docs_requires_role**](/glossary#): resource_docs_requires_role\n\n\n\n[**version**](/glossary#version): \n\n\n\n[**version_status**](/glossary#version_status): \n\n\n",
      "success_response_body": {
        "version": "String",
        "version_status": "String",
        "git_commit": "String",
        "connector": "String",
        "hostname": "String",
        "local_identity_provider": "String",
        "hosted_by": {
          "organisation": "String",
          "email": "String",
          "phone": "String",
          "organisation_website": "String"
        },
        "hosted_at": {
          "organisation": "Amazon",
          "organisation_website": "https://aws.amazon.com/"
        },
        "energy_source": {
          "organisation": "Stromio",
          "organisation_website": "https://www.stromio.de/"
        },
        "resource_docs_requires_role": false
      },
      "error_response_bodies": ["OBP-50000: Unknown Error.", "no connector set"],
      "tags": ["API", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "hosted_at": {
            "type": "object",
            "properties": {
              "organisation_website": {
                "type": "string"
              },
              "organisation": {
                "type": "string"
              }
            }
          },
          "local_identity_provider": {
            "type": "string"
          },
          "git_commit": {
            "type": "string"
          },
          "hosted_by": {
            "type": "object",
            "properties": {
              "organisation": {
                "type": "string"
              },
              "phone": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "organisation_website": {
                "type": "string"
              }
            }
          },
          "connector": {
            "type": "string"
          },
          "hostname": {
            "type": "string"
          },
          "resource_docs_requires_role": {
            "type": "boolean"
          },
          "version": {
            "type": "string"
          },
          "energy_source": {
            "type": "object",
            "properties": {
              "organisation": {
                "type": "string"
              },
              "organisation_website": {
                "type": "string"
              }
            }
          },
          "version_status": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/root",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv1.2.1-deleteTransactionNarrative",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "deleteTransactionNarrative"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transactions/TRANSACTION_ID/metadata/narrative",
      "summary": "Delete a Transaction Narrative",
      "description": "<p>Deletes the description of the transaction TRANSACTION_ID.</p>\n<p>Authentication via OAuth is required if the view is not public.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#transaction_ids\">TRANSACTION_ID</a>: 2fg8a7e4-6d02-40e3-a129-0b2bf89de8ub</p>\n<p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p>\n<p><strong>JSON response body fields:</strong></p>\n",
      "description_markdown": "Deletes the description of the transaction TRANSACTION_ID.\n\nAuthentication via OAuth is required if the view is not public.\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[TRANSACTION_ID](/glossary#transaction_ids): 2fg8a7e4-6d02-40e3-a129-0b2bf89de8ub\n\n\n\n[VIEW_ID](/glossary#this_view_id): owner\n\n\n\n\n\n**JSON response body fields:**\n\n\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "jsonString": "{}"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-30022: The current view does not have the permission:",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Transaction-Metadata", "Transaction", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transactions/TRANSACTION_ID/metadata/narrative",
      "connector_methods": ["obp.checkBankAccountExists", "obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv4.0.0-createConnectorMethod",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "createConnectorMethod"
      },
      "request_verb": "POST",
      "request_url": "/obp/v4.0.0/management/connector-methods",
      "summary": "Create Connector Method",
      "description": "<p>Create an internal connector.</p>\n<p>The method_body is URL-encoded format String</p>\n<p>Authentication is Mandatory</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><strong>JSON response body fields:</strong></p>\n",
      "description_markdown": "Create an internal connector.\n\nThe method_body is URL-encoded format String\n\n\nAuthentication is Mandatory\n\n\n**JSON request body fields:**\n\n\n\n\n\n**JSON response body fields:**\n\n\n",
      "example_request_body": {
        "method_name": "getBank",
        "method_body": "%20%20%20%20%20%20Future.successful%28%0A%20%20%20%20%20%20%20%20Full%28%28BankCommons%28%0A%20%20%20%20%20%20%20%20%20%20BankId%28%22Hello%20bank%20id%22%29%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%228%22%0A%20%20%20%20%20%20%20%20%29%2C%20None%29%29%0A%20%20%20%20%20%20%29",
        "programming_lang": "Scala"
      },
      "success_response_body": {
        "connector_method_id": "ace0352a-9a0f-4bfa-b30b-9003aa467f51",
        "method_name": "getBank",
        "method_body": "%20%20%20%20%20%20Future.successful%28%0A%20%20%20%20%20%20%20%20Full%28%28BankCommons%28%0A%20%20%20%20%20%20%20%20%20%20BankId%28%22Hello%20bank%20id%22%29%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%228%22%0A%20%20%20%20%20%20%20%20%29%2C%20None%29%29%0A%20%20%20%20%20%20%29",
        "programming_lang": "Scala"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Connector-Method", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "method_name": {
            "type": "string"
          },
          "programming_lang": {
            "type": "string"
          },
          "method_body": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "connector_method_id": {
            "type": "string"
          },
          "method_name": {
            "type": "string"
          },
          "programming_lang": {
            "type": "string"
          },
          "method_body": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateConnectorMethod",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/connector-methods",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv5.1.0-getUserByProviderAndUsername",
      "implemented_by": {
        "version": "OBPv5.1.0",
        "function": "getUserByProviderAndUsername"
      },
      "request_verb": "GET",
      "request_url": "/obp/v5.1.0/users/provider/PROVIDER/username/USERNAME",
      "summary": "Get User by USERNAME",
      "description": "<p>Get user by PROVIDER and USERNAME</p>\n<p>Authentication is Mandatory</p>\n<p>CanGetAnyUser entitlement is required,</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#provider\">PROVIDER</a>: ETHEREUM</p>\n<p><a href=\"/glossary#\">USERNAME</a>: felixsmith</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"&#109;a&#x69;&#108;t&#x6f;&#x3a;fe&#x6c;&#x69;&#120;&#115;&#109;&#105;&#116;&#x68;&#64;&#101;&#x78;&#97;&#109;&#x70;&#x6c;&#x65;&#x2e;&#x63;&#111;m\">&#102;&#x65;&#108;&#x69;&#120;s&#x6d;&#x69;&#116;&#104;&#x40;&#x65;&#x78;&#x61;&#x6d;&#112;&#108;&#101;&#x2e;&#x63;&#111;&#109;</a></p>\n<p><a href=\"/glossary#entitlement_id\"><strong>entitlement_id</strong></a>:</p>\n<p><a href=\"/glossary#entitlements\"><strong>entitlements</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>is_deleted</strong></a>: is_deleted</p>\n<p><a href=\"/glossary#\"><strong>is_locked</strong></a>: is_locked</p>\n<p><a href=\"/glossary#list\"><strong>list</strong></a>:</p>\n<p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p>\n<p><a href=\"/glossary#provider_id\"><strong>provider_id</strong></a>:</p>\n<p><a href=\"/glossary#role_name\"><strong>role_name</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p>\n<p><a href=\"/glossary#\"><strong>username</strong></a>: felixsmith</p>\n<p><a href=\"/glossary#\">agreements</a>: agreements</p>\n<p><a href=\"/glossary#\">last_marketing_agreement_signed_date</a>: last_marketing_agreement_signed_date</p>\n<p><a href=\"/glossary#views\">views</a>:</p>\n",
      "description_markdown": "Get user by PROVIDER and USERNAME\n\nAuthentication is Mandatory\n\nCanGetAnyUser entitlement is required,\n\n\n**URL Parameters:**\n\n[PROVIDER](/glossary#provider): ETHEREUM\n\n\n\n[USERNAME](/glossary#): felixsmith\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**email**](/glossary#): felixsmith@example.com\n\n\n\n[**entitlement_id**](/glossary#entitlement_id): \n\n\n\n[**entitlements**](/glossary#entitlements): \n\n\n\n[**is_deleted**](/glossary#): is_deleted\n\n\n\n[**is_locked**](/glossary#): is_locked\n\n\n\n[**list**](/glossary#list): \n\n\n\n[**provider**](/glossary#provider): ETHEREUM\n\n\n\n[**provider_id**](/glossary#provider_id): \n\n\n\n[**role_name**](/glossary#role_name): \n\n\n\n[**user_id**](/glossary#): 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\n\n\n\n[**username**](/glossary#): felixsmith\n\n\n\n[agreements](/glossary#): agreements\n\n\n\n[last_marketing_agreement_signed_date](/glossary#): last_marketing_agreement_signed_date\n\n\n\n[views](/glossary#views): \n\n\n",
      "success_response_body": {
        "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
        "email": "felixsmith@example.com",
        "provider_id": "Chris",
        "provider": "http://127.0.0.1:8080",
        "username": "felixsmith",
        "entitlements": {
          "list": [
            {
              "entitlement_id": "6fb17583-1e49-4435-bb74-a14fe0996723",
              "role_name": "CanQueryOtherUser",
              "bank_id": "gh.29.uk"
            }
          ]
        },
        "is_deleted": false,
        "last_marketing_agreement_signed_date": "1100-01-01T00:00:00Z",
        "is_locked": false
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-20027: User not found by provider and username.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["User", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "last_marketing_agreement_signed_date": {
            "type": "string",
            "format": "date-time"
          },
          "provider_id": {
            "type": "string"
          },
          "entitlements": {
            "type": "object",
            "properties": {
              "list": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "role_name": {
                      "type": "string"
                    },
                    "bank_id": {
                      "type": "string"
                    },
                    "entitlement_id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "is_deleted": {
            "type": "boolean"
          },
          "is_locked": {
            "type": "boolean"
          },
          "username": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanGetAnyUser",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/users/provider/PROVIDER/username/USERNAME",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv2.0.0-getPermissionsForBankAccount",
      "implemented_by": {
        "version": "OBPv2.0.0",
        "function": "getPermissionsForBankAccount"
      },
      "request_verb": "GET",
      "request_url": "/obp/v2.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/permissions",
      "summary": "Get access",
      "description": "<p>Returns the list of the permissions at BANK_ID for account ACCOUNT_ID, with each time a pair composed of the user and the views that he has access to.</p>\n<p>Authentication is Mandatory<br />\nand the user needs to have access to the owner view.</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#alias\"><strong>alias</strong></a>:</p>\n<p><a href=\"/glossary#can_add_comment\"><strong>can_add_comment</strong></a>:</p>\n<p><a href=\"/glossary#can_add_corporate_location\"><strong>can_add_corporate_location</strong></a>:</p>\n<p><a href=\"/glossary#can_add_image\"><strong>can_add_image</strong></a>:</p>\n<p><a href=\"/glossary#can_add_image_url\"><strong>can_add_image_url</strong></a>: true</p>\n<p><a href=\"/glossary#can_add_more_info\"><strong>can_add_more_info</strong></a>: true</p>\n<p><a href=\"/glossary#can_add_open_corporates_url\"><strong>can_add_open_corporates_url</strong></a>:</p>\n<p><a href=\"/glossary#can_add_physical_location\"><strong>can_add_physical_location</strong></a>:</p>\n<p><a href=\"/glossary#can_add_private_alias\"><strong>can_add_private_alias</strong></a>:</p>\n<p><a href=\"/glossary#can_add_public_alias\"><strong>can_add_public_alias</strong></a>:</p>\n<p><a href=\"/glossary#can_add_tag\"><strong>can_add_tag</strong></a>: true</p>\n<p><a href=\"/glossary#can_add_url\"><strong>can_add_url</strong></a>:</p>\n<p><a href=\"/glossary#can_add_where_tag\"><strong>can_add_where_tag</strong></a>:</p>\n<p><a href=\"/glossary#can_delete_comment\"><strong>can_delete_comment</strong></a>:</p>\n<p><a href=\"/glossary#can_delete_corporate_location\"><strong>can_delete_corporate_location</strong></a>: true</p>\n<p><a href=\"/glossary#can_delete_image\"><strong>can_delete_image</strong></a>: true</p>\n<p><a href=\"/glossary#can_delete_physical_location\"><strong>can_delete_physical_location</strong></a>:</p>\n<p><a href=\"/glossary#can_delete_tag\"><strong>can_delete_tag</strong></a>:</p>\n<p><a href=\"/glossary#can_delete_where_tag\"><strong>can_delete_where_tag</strong></a>: true</p>\n<p><a href=\"/glossary#can_edit_owner_comment\"><strong>can_edit_owner_comment</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_balance\"><strong>can_see_bank_account_balance</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_bank_name\"><strong>can_see_bank_account_bank_name</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_currency\"><strong>can_see_bank_account_currency</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_iban\"><strong>can_see_bank_account_iban</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_label\"><strong>can_see_bank_account_label</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_national_identifier\"><strong>can_see_bank_account_national_identifier</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_number\"><strong>can_see_bank_account_number</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_owners\"><strong>can_see_bank_account_owners</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_swift_bic\"><strong>can_see_bank_account_swift_bic</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_type\"><strong>can_see_bank_account_type</strong></a>:</p>\n<p><a href=\"/glossary#can_see_comments\"><strong>can_see_comments</strong></a>:</p>\n<p><a href=\"/glossary#can_see_corporate_location\"><strong>can_see_corporate_location</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_image_url\"><strong>can_see_image_url</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_images\"><strong>can_see_images</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_more_info\"><strong>can_see_more_info</strong></a>:</p>\n<p><a href=\"/glossary#can_see_open_corporates_url\"><strong>can_see_open_corporates_url</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_bank_name\"><strong>can_see_other_account_bank_name</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_iban\"><strong>can_see_other_account_iban</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_kind\"><strong>can_see_other_account_kind</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_metadata\"><strong>can_see_other_account_metadata</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_national_identifier\"><strong>can_see_other_account_national_identifier</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_other_account_number\"><strong>can_see_other_account_number</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_other_account_swift_bic\"><strong>can_see_other_account_swift_bic</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_owner_comment\"><strong>can_see_owner_comment</strong></a>:</p>\n<p><a href=\"/glossary#can_see_physical_location\"><strong>can_see_physical_location</strong></a>:</p>\n<p><a href=\"/glossary#can_see_private_alias\"><strong>can_see_private_alias</strong></a>:</p>\n<p><a href=\"/glossary#can_see_public_alias\"><strong>can_see_public_alias</strong></a>:</p>\n<p><a href=\"/glossary#can_see_tags\"><strong>can_see_tags</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_amount\"><strong>can_see_transaction_amount</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_transaction_balance\"><strong>can_see_transaction_balance</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_currency\"><strong>can_see_transaction_currency</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_description\"><strong>can_see_transaction_description</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_transaction_finish_date\"><strong>can_see_transaction_finish_date</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_metadata\"><strong>can_see_transaction_metadata</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_other_bank_account\"><strong>can_see_transaction_other_bank_account</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_start_date\"><strong>can_see_transaction_start_date</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_this_bank_account\"><strong>can_see_transaction_this_bank_account</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_type\"><strong>can_see_transaction_type</strong></a>:</p>\n<p><a href=\"/glossary#can_see_url\"><strong>can_see_url</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_where_tag\"><strong>can_see_where_tag</strong></a>: true</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#display_name\"><strong>display_name</strong></a>:</p>\n<p><a href=\"/glossary#hide_metadata_if_alias_used\"><strong>hide_metadata_if_alias_used</strong></a>:</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#is_public\"><strong>is_public</strong></a>: true</p>\n<p><a href=\"/glossary#permissions\"><strong>permissions</strong></a>:</p>\n<p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p>\n<p><a href=\"/glossary#short_name\"><strong>short_name</strong></a>:</p>\n<p><a href=\"/glossary#User\"><strong>user</strong></a>:</p>\n<p><a href=\"/glossary#views\"><strong>views</strong></a>:</p>\n",
      "description_markdown": "Returns the list of the permissions at BANK_ID for account ACCOUNT_ID, with each time a pair composed of the user and the views that he has access to.\n\nAuthentication is Mandatory\nand the user needs to have access to the owner view.\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**alias**](/glossary#alias): \n\n\n\n[**can_add_comment**](/glossary#can_add_comment): \n\n\n\n[**can_add_corporate_location**](/glossary#can_add_corporate_location): \n\n\n\n[**can_add_image**](/glossary#can_add_image): \n\n\n\n[**can_add_image_url**](/glossary#can_add_image_url): true\n\n\n\n[**can_add_more_info**](/glossary#can_add_more_info): true\n\n\n\n[**can_add_open_corporates_url**](/glossary#can_add_open_corporates_url): \n\n\n\n[**can_add_physical_location**](/glossary#can_add_physical_location): \n\n\n\n[**can_add_private_alias**](/glossary#can_add_private_alias): \n\n\n\n[**can_add_public_alias**](/glossary#can_add_public_alias): \n\n\n\n[**can_add_tag**](/glossary#can_add_tag): true\n\n\n\n[**can_add_url**](/glossary#can_add_url): \n\n\n\n[**can_add_where_tag**](/glossary#can_add_where_tag): \n\n\n\n[**can_delete_comment**](/glossary#can_delete_comment): \n\n\n\n[**can_delete_corporate_location**](/glossary#can_delete_corporate_location): true\n\n\n\n[**can_delete_image**](/glossary#can_delete_image): true\n\n\n\n[**can_delete_physical_location**](/glossary#can_delete_physical_location): \n\n\n\n[**can_delete_tag**](/glossary#can_delete_tag): \n\n\n\n[**can_delete_where_tag**](/glossary#can_delete_where_tag): true\n\n\n\n[**can_edit_owner_comment**](/glossary#can_edit_owner_comment): true\n\n\n\n[**can_see_bank_account_balance**](/glossary#can_see_bank_account_balance): \n\n\n\n[**can_see_bank_account_bank_name**](/glossary#can_see_bank_account_bank_name): true\n\n\n\n[**can_see_bank_account_currency**](/glossary#can_see_bank_account_currency): \n\n\n\n[**can_see_bank_account_iban**](/glossary#can_see_bank_account_iban): \n\n\n\n[**can_see_bank_account_label**](/glossary#can_see_bank_account_label): true\n\n\n\n[**can_see_bank_account_national_identifier**](/glossary#can_see_bank_account_national_identifier): \n\n\n\n[**can_see_bank_account_number**](/glossary#can_see_bank_account_number): true\n\n\n\n[**can_see_bank_account_owners**](/glossary#can_see_bank_account_owners): true\n\n\n\n[**can_see_bank_account_swift_bic**](/glossary#can_see_bank_account_swift_bic): \n\n\n\n[**can_see_bank_account_type**](/glossary#can_see_bank_account_type): \n\n\n\n[**can_see_comments**](/glossary#can_see_comments): \n\n\n\n[**can_see_corporate_location**](/glossary#can_see_corporate_location): true\n\n\n\n[**can_see_image_url**](/glossary#can_see_image_url): true\n\n\n\n[**can_see_images**](/glossary#can_see_images): true\n\n\n\n[**can_see_more_info**](/glossary#can_see_more_info): \n\n\n\n[**can_see_open_corporates_url**](/glossary#can_see_open_corporates_url): \n\n\n\n[**can_see_other_account_bank_name**](/glossary#can_see_other_account_bank_name): \n\n\n\n[**can_see_other_account_iban**](/glossary#can_see_other_account_iban): \n\n\n\n[**can_see_other_account_kind**](/glossary#can_see_other_account_kind): \n\n\n\n[**can_see_other_account_metadata**](/glossary#can_see_other_account_metadata): \n\n\n\n[**can_see_other_account_national_identifier**](/glossary#can_see_other_account_national_identifier): true\n\n\n\n[**can_see_other_account_number**](/glossary#can_see_other_account_number): true\n\n\n\n[**can_see_other_account_swift_bic**](/glossary#can_see_other_account_swift_bic): true\n\n\n\n[**can_see_owner_comment**](/glossary#can_see_owner_comment): \n\n\n\n[**can_see_physical_location**](/glossary#can_see_physical_location): \n\n\n\n[**can_see_private_alias**](/glossary#can_see_private_alias): \n\n\n\n[**can_see_public_alias**](/glossary#can_see_public_alias): \n\n\n\n[**can_see_tags**](/glossary#can_see_tags): \n\n\n\n[**can_see_transaction_amount**](/glossary#can_see_transaction_amount): true\n\n\n\n[**can_see_transaction_balance**](/glossary#can_see_transaction_balance): \n\n\n\n[**can_see_transaction_currency**](/glossary#can_see_transaction_currency): \n\n\n\n[**can_see_transaction_description**](/glossary#can_see_transaction_description): true\n\n\n\n[**can_see_transaction_finish_date**](/glossary#can_see_transaction_finish_date): \n\n\n\n[**can_see_transaction_metadata**](/glossary#can_see_transaction_metadata): \n\n\n\n[**can_see_transaction_other_bank_account**](/glossary#can_see_transaction_other_bank_account): \n\n\n\n[**can_see_transaction_start_date**](/glossary#can_see_transaction_start_date): \n\n\n\n[**can_see_transaction_this_bank_account**](/glossary#can_see_transaction_this_bank_account): \n\n\n\n[**can_see_transaction_type**](/glossary#can_see_transaction_type): \n\n\n\n[**can_see_url**](/glossary#can_see_url): true\n\n\n\n[**can_see_where_tag**](/glossary#can_see_where_tag): true\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**display_name**](/glossary#display_name): \n\n\n\n[**hide_metadata_if_alias_used**](/glossary#hide_metadata_if_alias_used): \n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**is_public**](/glossary#is_public): true\n\n\n\n[**permissions**](/glossary#permissions): \n\n\n\n[**provider**](/glossary#provider): ETHEREUM\n\n\n\n[**short_name**](/glossary#short_name): \n\n\n\n[**user**](/glossary#User): \n\n\n\n[**views**](/glossary#views): \n\n\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "permissions": [
          {
            "user": {
              "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
              "provider": "http://127.0.0.1:8080",
              "display_name": "OBP"
            },
            "views": [
              {
                "id": "123",
                "short_name": "short_name",
                "description": "description",
                "is_public": true,
                "alias": "None",
                "hide_metadata_if_alias_used": true,
                "can_add_comment": true,
                "can_add_corporate_location": true,
                "can_add_image": true,
                "can_add_image_url": true,
                "can_add_more_info": true,
                "can_add_open_corporates_url": true,
                "can_add_physical_location": true,
                "can_add_private_alias": true,
                "can_add_public_alias": true,
                "can_add_tag": true,
                "can_add_url": true,
                "can_add_where_tag": true,
                "can_delete_comment": true,
                "can_delete_corporate_location": true,
                "can_delete_image": true,
                "can_delete_physical_location": true,
                "can_delete_tag": true,
                "can_delete_where_tag": true,
                "can_edit_owner_comment": true,
                "can_see_bank_account_balance": true,
                "can_see_bank_account_bank_name": true,
                "can_see_bank_account_currency": true,
                "can_see_bank_account_iban": true,
                "can_see_bank_account_label": true,
                "can_see_bank_account_national_identifier": true,
                "can_see_bank_account_number": true,
                "can_see_bank_account_owners": true,
                "can_see_bank_account_swift_bic": true,
                "can_see_bank_account_type": true,
                "can_see_comments": true,
                "can_see_corporate_location": true,
                "can_see_image_url": true,
                "can_see_images": true,
                "can_see_more_info": true,
                "can_see_open_corporates_url": true,
                "can_see_other_account_bank_name": true,
                "can_see_other_account_iban": true,
                "can_see_other_account_kind": true,
                "can_see_other_account_metadata": true,
                "can_see_other_account_national_identifier": true,
                "can_see_other_account_number": true,
                "can_see_other_account_swift_bic": true,
                "can_see_owner_comment": true,
                "can_see_physical_location": true,
                "can_see_private_alias": true,
                "can_see_public_alias": true,
                "can_see_tags": true,
                "can_see_transaction_amount": true,
                "can_see_transaction_balance": true,
                "can_see_transaction_currency": true,
                "can_see_transaction_description": true,
                "can_see_transaction_finish_date": true,
                "can_see_transaction_metadata": true,
                "can_see_transaction_other_bank_account": true,
                "can_see_transaction_start_date": true,
                "can_see_transaction_this_bank_account": true,
                "can_see_transaction_type": true,
                "can_see_url": true,
                "can_see_where_tag": true
              }
            ]
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30003: Account not found. Please specify a valid value for ACCOUNT_ID.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["View-Custom", "Account", "User", "Entitlement", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "permissions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "views": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "can_see_other_account_swift_bic": {
                        "type": "boolean"
                      },
                      "can_see_where_tag": {
                        "type": "boolean"
                      },
                      "can_see_url": {
                        "type": "boolean"
                      },
                      "can_see_bank_account_swift_bic": {
                        "type": "boolean"
                      },
                      "can_see_tags": {
                        "type": "boolean"
                      },
                      "can_see_transaction_balance": {
                        "type": "boolean"
                      },
                      "can_delete_corporate_location": {
                        "type": "boolean"
                      },
                      "can_add_image_url": {
                        "type": "boolean"
                      },
                      "can_see_public_alias": {
                        "type": "boolean"
                      },
                      "can_add_comment": {
                        "type": "boolean"
                      },
                      "description": {
                        "type": "string"
                      },
                      "can_see_corporate_location": {
                        "type": "boolean"
                      },
                      "can_see_other_account_bank_name": {
                        "type": "boolean"
                      },
                      "can_see_more_info": {
                        "type": "boolean"
                      },
                      "can_see_physical_location": {
                        "type": "boolean"
                      },
                      "can_edit_owner_comment": {
                        "type": "boolean"
                      },
                      "can_see_private_alias": {
                        "type": "boolean"
                      },
                      "can_see_bank_account_balance": {
                        "type": "boolean"
                      },
                      "can_add_public_alias": {
                        "type": "boolean"
                      },
                      "can_see_bank_account_owners": {
                        "type": "boolean"
                      },
                      "can_see_other_account_metadata": {
                        "type": "boolean"
                      },
                      "can_delete_physical_location": {
                        "type": "boolean"
                      },
                      "hide_metadata_if_alias_used": {
                        "type": "boolean"
                      },
                      "can_see_transaction_this_bank_account": {
                        "type": "boolean"
                      },
                      "can_see_image_url": {
                        "type": "boolean"
                      },
                      "can_see_transaction_type": {
                        "type": "boolean"
                      },
                      "can_see_images": {
                        "type": "boolean"
                      },
                      "can_see_transaction_amount": {
                        "type": "boolean"
                      },
                      "can_see_transaction_metadata": {
                        "type": "boolean"
                      },
                      "id": {
                        "type": "string"
                      },
                      "can_see_comments": {
                        "type": "boolean"
                      },
                      "can_see_other_account_iban": {
                        "type": "boolean"
                      },
                      "can_add_image": {
                        "type": "boolean"
                      },
                      "can_see_bank_account_type": {
                        "type": "boolean"
                      },
                      "can_see_other_account_kind": {
                        "type": "boolean"
                      },
                      "can_see_bank_account_currency": {
                        "type": "boolean"
                      },
                      "can_add_where_tag": {
                        "type": "boolean"
                      },
                      "can_see_transaction_start_date": {
                        "type": "boolean"
                      },
                      "can_see_bank_account_label": {
                        "type": "boolean"
                      },
                      "can_add_private_alias": {
                        "type": "boolean"
                      },
                      "can_see_transaction_currency": {
                        "type": "boolean"
                      },
                      "can_add_more_info": {
                        "type": "boolean"
                      },
                      "can_delete_comment": {
                        "type": "boolean"
                      },
                      "can_see_transaction_other_bank_account": {
                        "type": "boolean"
                      },
                      "can_see_bank_account_number": {
                        "type": "boolean"
                      },
                      "can_add_corporate_location": {
                        "type": "boolean"
                      },
                      "can_add_url": {
                        "type": "boolean"
                      },
                      "short_name": {
                        "type": "string"
                      },
                      "can_delete_where_tag": {
                        "type": "boolean"
                      },
                      "is_public": {
                        "type": "boolean"
                      },
                      "can_see_owner_comment": {
                        "type": "boolean"
                      },
                      "can_see_transaction_finish_date": {
                        "type": "boolean"
                      },
                      "can_see_open_corporates_url": {
                        "type": "boolean"
                      },
                      "can_add_physical_location": {
                        "type": "boolean"
                      },
                      "can_see_bank_account_iban": {
                        "type": "boolean"
                      },
                      "can_see_other_account_national_identifier": {
                        "type": "boolean"
                      },
                      "can_delete_image": {
                        "type": "boolean"
                      },
                      "can_add_tag": {
                        "type": "boolean"
                      },
                      "can_add_open_corporates_url": {
                        "type": "boolean"
                      },
                      "can_delete_tag": {
                        "type": "boolean"
                      },
                      "can_see_transaction_description": {
                        "type": "boolean"
                      },
                      "can_see_bank_account_national_identifier": {
                        "type": "boolean"
                      },
                      "can_see_other_account_number": {
                        "type": "boolean"
                      },
                      "can_see_bank_account_bank_name": {
                        "type": "boolean"
                      },
                      "alias": {
                        "type": "string"
                      }
                    }
                  }
                },
                "user": {
                  "type": "object",
                  "properties": {
                    "provider": {
                      "type": "string"
                    },
                    "display_name": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/permissions",
      "connector_methods": [
        "obp.checkBankAccountExists",
        "obp.getBank",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv1.2.1-updateWhereTagForViewOnTransaction",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "updateWhereTagForViewOnTransaction"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transactions/TRANSACTION_ID/metadata/where",
      "summary": "Update a Transaction where Tag",
      "description": "<p>Updates the &quot;where&quot; Geo tag on a transaction TRANSACTION_ID in a <a href=\"#1_2_1-getViewsForBankAccount\">view</a>.</p>\n<p>Authentication is Mandatory</p>\n<p>The geo tag is linked with the user.</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#transaction_ids\">TRANSACTION_ID</a>: 2fg8a7e4-6d02-40e3-a129-0b2bf89de8ub</p>\n<p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#success\"><strong>success</strong></a>:</p>\n",
      "description_markdown": "Updates the \"where\" Geo tag on a transaction TRANSACTION_ID in a [view](#1_2_1-getViewsForBankAccount).\n\nAuthentication is Mandatory\n\nThe geo tag is linked with the user.\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[TRANSACTION_ID](/glossary#transaction_ids): 2fg8a7e4-6d02-40e3-a129-0b2bf89de8ub\n\n\n\n[VIEW_ID](/glossary#this_view_id): owner\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**success**](/glossary#success): \n\n\n",
      "example_request_body": {
        "where": {
          "latitude": 1.532,
          "longitude": 1.535
        }
      },
      "success_response_body": {
        "success": "Success"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-10001: Incorrect json format.",
        "OBP-30005: View not found for Account. Please specify a valid value for VIEW_ID",
        "OBP-30022: The current view does not have the permission:",
        "Coordinates not possible",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Transaction-Metadata", "Transaction", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "where": {
            "type": "object",
            "properties": {
              "longitude": {
                "type": "number"
              },
              "latitude": {
                "type": "number"
              }
            }
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "success": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transactions/TRANSACTION_ID/metadata/where",
      "connector_methods": ["obp.checkBankAccountExists", "obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv4.0.0-getMyApiCollectionByName",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getMyApiCollectionByName"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/my/api-collections/name/API_COLLECTION_NAME",
      "summary": "Get My Api Collection By Name",
      "description": "<p>Get Api Collection By API_COLLECTION_NAME.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#\">API_COLLECTION_NAME</a>: Favourites</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>api_collection_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>api_collection_name</strong></a>: Favourites</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#\"><strong>is_sharable</strong></a>: is_sharable</p>\n<p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p>\n",
      "description_markdown": "Get Api Collection By API_COLLECTION_NAME.\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[API_COLLECTION_NAME](/glossary#): Favourites\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**api_collection_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**api_collection_name**](/glossary#): Favourites\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**is_sharable**](/glossary#): is_sharable\n\n\n\n[**user_id**](/glossary#): 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\n\n\n",
      "success_response_body": {
        "api_collection_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
        "api_collection_name": "Favourites",
        "is_sharable": true,
        "description": "This an optional field. Maximum length is 2000. It can be any characters here."
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20057: User not found by userId.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Api-Collection", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "api_collection_id": {
            "type": "string"
          },
          "api_collection_name": {
            "type": "string"
          },
          "is_sharable": {
            "type": "boolean"
          },
          "user_id": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/my/api-collections/name/API_COLLECTION_NAME",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv4.0.0-deleteUser",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "deleteUser"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v4.0.0/users/USER_ID",
      "summary": "Delete a User",
      "description": "<p>Delete a User.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#User.user_id\">USER_ID</a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p>\n<p><strong>JSON response body fields:</strong></p>\n",
      "description_markdown": "Delete a User.\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[USER_ID](/glossary#User.user_id): 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\n\n\n\n\n\n**JSON response body fields:**\n\n\n",
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["User", "New-Style"],
      "roles": [
        {
          "role": "CanDeleteUser",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/users/USER_ID",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv4.0.0-createOrUpdateCustomerAttributeAttributeDefinition",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "createOrUpdateCustomerAttributeAttributeDefinition"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/attribute-definitions/customer",
      "summary": "Create or Update Customer Attribute Definition",
      "description": "<p>Create or Update Customer Attribute Definition</p>\n<p>The category field must be one of: Customer</p>\n<p>The type field must be one of; DOUBLE, STRING, INTEGER and DATE_WITH_DAY</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#alias\"><strong>alias</strong></a>:</p>\n<p><a href=\"/glossary#attribute_definition_id\"><strong>attribute_definition_id</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#can_be_seen_on_views\"><strong>can_be_seen_on_views</strong></a>: true</p>\n<p><a href=\"/glossary#category\"><strong>category</strong></a>:</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#is_active\"><strong>is_active</strong></a>: true</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n",
      "description_markdown": "Create or Update Customer Attribute Definition\n\nThe category field must be one of: Customer\n\nThe type field must be one of; DOUBLE, STRING, INTEGER and DATE_WITH_DAY\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**alias**](/glossary#alias): \n\n\n\n[**attribute_definition_id**](/glossary#attribute_definition_id): \n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**can_be_seen_on_views**](/glossary#can_be_seen_on_views): true\n\n\n\n[**category**](/glossary#category): \n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**is_active**](/glossary#is_active): true\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**type**](/glossary#type): \n\n\n",
      "example_request_body": {
        "name": "SPECIAL_TAX_NUMBER",
        "category": "Customer",
        "type": "STRING",
        "description": "description",
        "alias": "STRING",
        "can_be_seen_on_views": ["bank"],
        "is_active": true
      },
      "success_response_body": {
        "attribute_definition_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
        "bank_id": "gh.29.uk",
        "name": "SPECIAL_TAX_NUMBER",
        "category": "Customer",
        "type": "STRING",
        "description": "description",
        "alias": "STRING",
        "can_be_seen_on_views": ["bank"],
        "is_active": true
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["Customer", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "can_be_seen_on_views": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "description": {
            "type": "string"
          },
          "is_active": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "alias": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "can_be_seen_on_views": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "attribute_definition_id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "is_active": {
            "type": "boolean"
          },
          "bank_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "alias": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateCustomerAttributeDefinitionAtOneBank",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/attribute-definitions/customer",
      "connector_methods": ["obp.createOrUpdateAttributeDefinition"]
    },
    {
      "operation_id": "OBPv4.0.0-createDirectDebitManagement",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "createDirectDebitManagement"
      },
      "request_verb": "POST",
      "request_url": "/obp/v4.0.0/management/banks/BANK_ID/accounts/ACCOUNT_ID/direct-debit",
      "summary": "Create Direct Debit (management)",
      "description": "<p>Create direct debit for an account.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>counterparty_id</strong></a>: 9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>date_starts</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p>\n<p><a href=\"/glossary#\">date_expires</a>: 2021-01-27</p>\n<p><a href=\"/glossary#\">date_signed</a>: 2020-01-27</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>account_id</strong></a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#active\"><strong>active</strong></a>: true</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#\"><strong>counterparty_id</strong></a>: 9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>date_cancelled</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#\"><strong>date_expires</strong></a>: 2021-01-27</p>\n<p><a href=\"/glossary#\"><strong>date_signed</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#\"><strong>date_starts</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#direct_debit_id\"><strong>direct_debit_id</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p>\n",
      "description_markdown": "Create direct debit for an account.\n\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON request body fields:**\n\n\n\n[**counterparty_id**](/glossary#): 9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**customer_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**date_starts**](/glossary#): 2020-01-27\n\n\n\n[**user_id**](/glossary#): 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\n\n\n\n[date_expires](/glossary#): 2021-01-27\n\n\n\n[date_signed](/glossary#): 2020-01-27\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**account_id**](/glossary#): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[**active**](/glossary#active): true\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**counterparty_id**](/glossary#): 9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**customer_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**date_cancelled**](/glossary#): 2020-01-27\n\n\n\n[**date_expires**](/glossary#): 2021-01-27\n\n\n\n[**date_signed**](/glossary#): 2020-01-27\n\n\n\n[**date_starts**](/glossary#): 2020-01-27\n\n\n\n[**direct_debit_id**](/glossary#direct_debit_id): \n\n\n\n[**user_id**](/glossary#): 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\n\n\n",
      "example_request_body": {
        "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
        "counterparty_id": "9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "date_signed": "1100-01-01T00:00:00Z",
        "date_starts": "1100-01-01T00:00:00Z",
        "date_expires": "1100-01-01T00:00:00Z"
      },
      "success_response_body": {
        "direct_debit_id": "aa0533bd-eb22-4bff-af75-d45240361b05",
        "bank_id": "gh.29.uk",
        "account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0",
        "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
        "counterparty_id": "9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "date_signed": "2023-04-13T04:30:08Z",
        "date_starts": "2023-04-13T04:30:08Z",
        "date_expires": "2023-04-13T04:30:08Z",
        "date_cancelled": "2023-04-13T04:30:08Z",
        "active": true
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-30022: The current view does not have the permission:",
        "OBP-10001: Incorrect json format.",
        "OBP-30046: Customer not found. Please specify a valid value for CUSTOMER_ID.",
        "OBP-20057: User not found by userId.",
        "OBP-30017: Counterparty not found. Please specify a valid value for COUNTERPARTY_ID.",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["Direct-Debit", "Account", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "date_expires": {
            "type": "string",
            "format": "date-time"
          },
          "date_starts": {
            "type": "string",
            "format": "date-time"
          },
          "customer_id": {
            "type": "string"
          },
          "counterparty_id": {
            "type": "string"
          },
          "date_signed": {
            "type": "string",
            "format": "date-time"
          },
          "user_id": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "customer_id": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          },
          "bank_id": {
            "type": "string"
          },
          "counterparty_id": {
            "type": "string"
          },
          "date_cancelled": {
            "type": "string",
            "format": "date-time"
          },
          "date_expires": {
            "type": "string",
            "format": "date-time"
          },
          "date_signed": {
            "type": "string",
            "format": "date-time"
          },
          "date_starts": {
            "type": "string",
            "format": "date-time"
          },
          "direct_debit_id": {
            "type": "string"
          },
          "account_id": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateDirectDebitAtOneBank",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/banks/BANK_ID/accounts/ACCOUNT_ID/direct-debit",
      "connector_methods": [
        "obp.createDirectDebit",
        "obp.getCounterpartyByCounterpartyId",
        "obp.getCustomerByCustomerId"
      ]
    },
    {
      "operation_id": "OBPv3.1.0-getAllEntitlements",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "getAllEntitlements"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.1.0/entitlements",
      "summary": "Get all Entitlements",
      "description": "<p>Login is required.</p>\n<p>Possible filter on the role field:</p>\n<p>eg: /entitlements?role=CanGetCustomer</p>\n<p>Authentication is Mandatory</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#entitlement_id\"><strong>entitlement_id</strong></a>:</p>\n<p><a href=\"/glossary#list\"><strong>list</strong></a>:</p>\n<p><a href=\"/glossary#role_name\"><strong>role_name</strong></a>:</p>\n",
      "description_markdown": "Login is required.\n\nPossible filter on the role field:\n\neg: /entitlements?role=CanGetCustomer\n\n\n\n      \n\nAuthentication is Mandatory\n\n\n**JSON response body fields:**\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**entitlement_id**](/glossary#entitlement_id): \n\n\n\n[**list**](/glossary#list): \n\n\n\n[**role_name**](/glossary#role_name): \n\n\n",
      "success_response_body": {
        "list": [
          {
            "entitlement_id": "6fb17583-1e49-4435-bb74-a14fe0996723",
            "role_name": "CanQueryOtherUser",
            "bank_id": "gh.29.uk"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Role", "Entitlement", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "role_name": {
                  "type": "string"
                },
                "bank_id": {
                  "type": "string"
                },
                "entitlement_id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/entitlements",
      "connector_methods": ["obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv4.0.0-deleteBankCascade",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "deleteBankCascade"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v4.0.0/management/cascading/banks/BANK_ID",
      "summary": "Delete Bank Cascade",
      "description": "<p>Delete a Bank Cascade specified by BANK_ID.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON response body fields:</strong></p>\n",
      "description_markdown": "Delete a Bank Cascade specified by BANK_ID.\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON response body fields:**\n\n\n",
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Bank", "New-Style"],
      "roles": [
        {
          "role": "CanDeleteBankCascade",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/cascading/banks/BANK_ID",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv4.0.0-addConsentUser",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "addConsentUser"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/consents/CONSENT_ID/user-update-request",
      "summary": "Add User to a Consent",
      "description": "<p>This endpoint is used to add the User of Consent.</p>\n<p>Each Consent has one of the following states: INITIATED, ACCEPTED, REJECTED, REVOKED, RECEIVED, VALID, REVOKEDBYPSU, EXPIRED, TERMINATEDBYTPP, AUTHORISED, AWAITINGAUTHORISATION.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#consent_id\">CONSENT_ID</a>:</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#consent_id\"><strong>consent_id</strong></a>:</p>\n<p><a href=\"/glossary#jwt\"><strong>jwt</strong></a>:</p>\n<p><a href=\"/glossary#status\"><strong>status</strong></a>:</p>\n",
      "description_markdown": "This endpoint is used to add the User of Consent.\n\nEach Consent has one of the following states: INITIATED, ACCEPTED, REJECTED, REVOKED, RECEIVED, VALID, REVOKEDBYPSU, EXPIRED, TERMINATEDBYTPP, AUTHORISED, AWAITINGAUTHORISATION.\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[CONSENT_ID](/glossary#consent_id): \n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**consent_id**](/glossary#consent_id): \n\n\n\n[**jwt**](/glossary#jwt): \n\n\n\n[**status**](/glossary#status): \n\n\n",
      "example_request_body": {
        "user_id": "ed7a7c01-db37-45cc-ba12-0ae8891c195c"
      },
      "success_response_body": {
        "consent_id": "9d429899-24f5-42c8-8565-943ffa6a7945",
        "jwt": "eyJhbGciOiJIUzI1NiJ9.eyJlbnRpdGxlbWVudHMiOltdLCJjcmVhdGVkQnlVc2VySWQiOiJhYjY1MzlhOS1iMTA1LTQ0ODktYTg4My0wYWQ4ZDZjNjE2NTciLCJzdWIiOiIyMWUxYzhjYy1mOTE4LTRlYWMtYjhlMy01ZTVlZWM2YjNiNGIiLCJhdWQiOiJlanpuazUwNWQxMzJyeW9tbmhieDFxbXRvaHVyYnNiYjBraWphanNrIiwibmJmIjoxNTUzNTU0ODk5LCJpc3MiOiJodHRwczpcL1wvd3d3Lm9wZW5iYW5rcHJvamVjdC5jb20iLCJleHAiOjE1NTM1NTg0OTksImlhdCI6MTU1MzU1NDg5OSwianRpIjoiMDlmODhkNWYtZWNlNi00Mzk4LThlOTktNjYxMWZhMWNkYmQ1Iiwidmlld3MiOlt7ImFjY291bnRfaWQiOiJtYXJrb19wcml2aXRlXzAxIiwiYmFua19pZCI6ImdoLjI5LnVrLngiLCJ2aWV3X2lkIjoib3duZXIifSx7ImFjY291bnRfaWQiOiJtYXJrb19wcml2aXRlXzAyIiwiYmFua19pZCI6ImdoLjI5LnVrLngiLCJ2aWV3X2lkIjoib3duZXIifV19.8cc7cBEf2NyQvJoukBCmDLT7LXYcuzTcSYLqSpbxLp4",
        "status": "AUTHORISED"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20057: User not found by userId.",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-35024: The Consent's User is already added.",
        "OBP-10001: Incorrect json format.",
        "OBP-35001: Consent not found by CONSENT_ID. ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Consent", "Account Information Service (AIS)", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "consent_id": {
            "type": "string"
          },
          "jwt": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/consents/CONSENT_ID/user-update-request",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv3.0.0-deleteEntitlementRequest",
      "implemented_by": {
        "version": "OBPv3.0.0",
        "function": "deleteEntitlementRequest"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v3.0.0/entitlement-requests/ENTITLEMENT_REQUEST_ID",
      "summary": "Delete Entitlement Request",
      "description": "<p>Delete the Entitlement Request specified by ENTITLEMENT_REQUEST_ID for a user specified by USER_ID</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#entitlement_request_id\">ENTITLEMENT_REQUEST_ID</a>:</p>\n<p><strong>JSON response body fields:</strong></p>\n",
      "description_markdown": "Delete the Entitlement Request specified by ENTITLEMENT_REQUEST_ID for a user specified by USER_ID\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ENTITLEMENT_REQUEST_ID](/glossary#entitlement_request_id): \n\n\n\n\n\n**JSON response body fields:**\n\n\n",
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-50200: Connector cannot return the data we requested.",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["Role", "Entitlement", "User", "New-Style"],
      "roles": [
        {
          "role": "CanDeleteEntitlementRequestsAtAnyBank",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/entitlement-requests/ENTITLEMENT_REQUEST_ID",
      "connector_methods": ["obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv4.0.0-getEntitlements",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getEntitlements"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/users/USER_ID/entitlements",
      "summary": "Get Entitlements for User",
      "description": "<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#User.user_id\">USER_ID</a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#entitlement_id\"><strong>entitlement_id</strong></a>:</p>\n<p><a href=\"/glossary#list\"><strong>list</strong></a>:</p>\n<p><a href=\"/glossary#role_name\"><strong>role_name</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p>\n",
      "description_markdown": "Authentication is Mandatory\n\n\n**URL Parameters:**\n\n[USER_ID](/glossary#User.user_id): 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**entitlement_id**](/glossary#entitlement_id): \n\n\n\n[**list**](/glossary#list): \n\n\n\n[**role_name**](/glossary#role_name): \n\n\n\n[**user_id**](/glossary#): 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\n\n\n",
      "success_response_body": {
        "list": [
          {
            "entitlement_id": "",
            "role_name": "",
            "bank_id": "gh.29.uk",
            "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Role", "Entitlement", "User", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "entitlement_id": {
                  "type": "string"
                },
                "bank_id": {
                  "type": "string"
                },
                "role_name": {
                  "type": "string"
                },
                "user_id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetEntitlementsForAnyUserAtAnyBank",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/users/USER_ID/entitlements",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv3.1.0-getTransactionByIdForBankAccount",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "getTransactionByIdForBankAccount"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transactions/TRANSACTION_ID/transaction",
      "summary": "Get Transaction by Id",
      "description": "<p>Returns one transaction specified by TRANSACTION_ID of the account ACCOUNT_ID and <a href=\"#1_2_1-getViewsForBankAccount\">moderated</a> by the view (VIEW_ID).</p>\n<p>Authentication is Optional<br />\nAuthentication is required if the view is not public.</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#transaction_ids\">TRANSACTION_ID</a>: 2fg8a7e4-6d02-40e3-a129-0b2bf89de8ub</p>\n<p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>URL</strong></a>: <a href=\"http://www.example.com/id-docs/123/image.png\">http://www.example.com/id-docs/123/image.png</a></p>\n<p><a href=\"/glossary#account_routings\"><strong>account_routings</strong></a>:</p>\n<p><a href=\"/glossary#address\"><strong>address</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p>\n<p><a href=\"/glossary#bank_routing\"><strong>bank_routing</strong></a>:</p>\n<p><a href=\"/glossary#comments\"><strong>comments</strong></a>:</p>\n<p><a href=\"/glossary#completed\"><strong>completed</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#corporate_location\"><strong>corporate_location</strong></a>: 10</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#details\"><strong>details</strong></a>:</p>\n<p><a href=\"/glossary#display_name\"><strong>display_name</strong></a>:</p>\n<p><a href=\"/glossary#holder\"><strong>holder</strong></a>:</p>\n<p><a href=\"/glossary#holders\"><strong>holders</strong></a>:</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#image_url\"><strong>image_URL</strong></a>:</p>\n<p><a href=\"/glossary#images\"><strong>images</strong></a>:</p>\n<p><a href=\"/glossary#is_alias\"><strong>is_alias</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>label</strong></a>: My Account</p>\n<p><a href=\"/glossary#latitude\"><strong>latitude</strong></a>: 38.8951</p>\n<p><a href=\"/glossary#longitude\"><strong>longitude</strong></a>: -77.0364</p>\n<p><a href=\"/glossary#metadata\"><strong>metadata</strong></a>:</p>\n<p><a href=\"/glossary#more_info\"><strong>more_info</strong></a>: More information about this fee</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#narrative\"><strong>narrative</strong></a>:</p>\n<p><a href=\"/glossary#new_balance\"><strong>new_balance</strong></a>: 20</p>\n<p><a href=\"/glossary#open_corporates_url\"><strong>open_corporates_URL</strong></a>:</p>\n<p><a href=\"/glossary#other_account\"><strong>other_account</strong></a>:</p>\n<p><a href=\"/glossary#physical_location\"><strong>physical_location</strong></a>:</p>\n<p><a href=\"/glossary#posted\"><strong>posted</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#private_alias\"><strong>private_alias</strong></a>:</p>\n<p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p>\n<p><a href=\"/glossary#public_alias\"><strong>public_alias</strong></a>:</p>\n<p><a href=\"/glossary#scheme\"><strong>scheme</strong></a>: scheme value</p>\n<p><a href=\"/glossary#tags\"><strong>tags</strong></a>: Create-My-User</p>\n<p><a href=\"/glossary#this_account\"><strong>this_account</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>transaction_attribute_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#transaction_attributes\"><strong>transaction_attributes</strong></a>:</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n<p><a href=\"/glossary#User\"><strong>user</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n<p><a href=\"/glossary#where\"><strong>where</strong></a>:</p>\n",
      "description_markdown": "Returns one transaction specified by TRANSACTION_ID of the account ACCOUNT_ID and [moderated](#1_2_1-getViewsForBankAccount) by the view (VIEW_ID).\n\nAuthentication is Optional\nAuthentication is required if the view is not public.\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[TRANSACTION_ID](/glossary#transaction_ids): 2fg8a7e4-6d02-40e3-a129-0b2bf89de8ub\n\n\n\n[VIEW_ID](/glossary#this_view_id): owner\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**URL**](/glossary#): http://www.example.com/id-docs/123/image.png\n\n\n\n[**account_routings**](/glossary#account_routings): \n\n\n\n[**address**](/glossary#address): \n\n\n\n[**amount**](/glossary#): 10.12\n\n\n\n[**bank_routing**](/glossary#bank_routing): \n\n\n\n[**comments**](/glossary#comments): \n\n\n\n[**completed**](/glossary#completed): 2020-01-27\n\n\n\n[**corporate_location**](/glossary#corporate_location): 10\n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**date**](/glossary#): 2020-01-27\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**details**](/glossary#details): \n\n\n\n[**display_name**](/glossary#display_name): \n\n\n\n[**holder**](/glossary#holder): \n\n\n\n[**holders**](/glossary#holders): \n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**image_URL**](/glossary#image_url): \n\n\n\n[**images**](/glossary#images): \n\n\n\n[**is_alias**](/glossary#is_alias): \n\n\n\n[**label**](/glossary#): My Account\n\n\n\n[**latitude**](/glossary#latitude): 38.8951\n\n\n\n[**longitude**](/glossary#longitude): -77.0364\n\n\n\n[**metadata**](/glossary#metadata): \n\n\n\n[**more_info**](/glossary#more_info): More information about this fee\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**narrative**](/glossary#narrative): \n\n\n\n[**new_balance**](/glossary#new_balance): 20\n\n\n\n[**open_corporates_URL**](/glossary#open_corporates_url): \n\n\n\n[**other_account**](/glossary#other_account): \n\n\n\n[**physical_location**](/glossary#physical_location): \n\n\n\n[**posted**](/glossary#posted): 2020-01-27\n\n\n\n[**private_alias**](/glossary#private_alias): \n\n\n\n[**provider**](/glossary#provider): ETHEREUM\n\n\n\n[**public_alias**](/glossary#public_alias): \n\n\n\n[**scheme**](/glossary#scheme): scheme value\n\n\n\n[**tags**](/glossary#tags): Create-My-User\n\n\n\n[**this_account**](/glossary#this_account): \n\n\n\n[**transaction_attribute_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**transaction_attributes**](/glossary#transaction_attributes): \n\n\n\n[**type**](/glossary#type): \n\n\n\n[**user**](/glossary#User): \n\n\n\n[**value**](/glossary#): 5987953\n\n\n\n[**where**](/glossary#where): \n\n\n",
      "success_response_body": {
        "id": "String",
        "this_account": {
          "id": "String",
          "bank_routing": {
            "scheme": "scheme value",
            "address": ""
          },
          "account_routings": [
            {
              "scheme": "AccountNumber",
              "address": "4930396"
            }
          ],
          "holders": [
            {
              "name": "OBP",
              "is_alias": true
            }
          ]
        },
        "other_account": {
          "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
          "holder": {
            "name": "OBP",
            "is_alias": true
          },
          "bank_routing": {
            "scheme": "scheme value",
            "address": ""
          },
          "account_routings": [
            {
              "scheme": "AccountNumber",
              "address": "4930396"
            }
          ],
          "metadata": {
            "public_alias": "NONE",
            "private_alias": "NONE",
            "more_info": "www.openbankproject.com",
            "URL": "www.openbankproject.com",
            "image_URL": "www.openbankproject.com",
            "open_corporates_URL": "www.openbankproject.com",
            "corporate_location": {
              "latitude": 1.231,
              "longitude": 1.231,
              "date": "1100-01-01T00:00:00Z",
              "user": {
                "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
                "provider": "http://127.0.0.1:8080",
                "display_name": "OBP"
              }
            },
            "physical_location": {
              "latitude": 1.231,
              "longitude": 1.231,
              "date": "1100-01-01T00:00:00Z",
              "user": {
                "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
                "provider": "http://127.0.0.1:8080",
                "display_name": "OBP"
              }
            }
          }
        },
        "details": {
          "type": "AC",
          "description": "this is for family",
          "posted": "1100-01-01T00:00:00Z",
          "completed": "1100-01-01T00:00:00Z",
          "new_balance": {
            "currency": "EUR",
            "amount": "0"
          },
          "value": {
            "currency": "EUR",
            "amount": "0"
          }
        },
        "metadata": {
          "narrative": "NONE",
          "comments": [
            {
              "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
              "value": "OBP",
              "date": "1100-01-01T00:00:00Z",
              "user": {
                "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
                "provider": "http://127.0.0.1:8080",
                "display_name": "OBP"
              }
            }
          ],
          "tags": [
            {
              "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
              "value": "OBP",
              "date": "1100-01-01T00:00:00Z",
              "user": {
                "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
                "provider": "http://127.0.0.1:8080",
                "display_name": "OBP"
              }
            }
          ],
          "images": [
            {
              "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
              "label": "NONE",
              "URL": "www.openbankproject.com",
              "date": "1100-01-01T00:00:00Z",
              "user": {
                "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
                "provider": "http://127.0.0.1:8080",
                "display_name": "OBP"
              }
            }
          ],
          "where": {
            "latitude": 1.231,
            "longitude": 1.231,
            "date": "1100-01-01T00:00:00Z",
            "user": {
              "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
              "provider": "http://127.0.0.1:8080",
              "display_name": "OBP"
            }
          }
        },
        "transaction_attributes": [
          {
            "transaction_attribute_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
            "name": "HOUSE_RENT",
            "type": "DATE_WITH_DAY",
            "value": "123456789"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-30005: View not found for Account. Please specify a valid value for VIEW_ID",
        "OBP-20017: Current user does not have access to the view. Please specify a valid value for VIEW_ID.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Transaction", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "metadata": {
            "type": "object",
            "properties": {
              "narrative": {
                "type": "string"
              },
              "tags": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    },
                    "date": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "provider": {
                          "type": "string"
                        },
                        "display_name": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "comments": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    },
                    "date": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "provider": {
                          "type": "string"
                        },
                        "display_name": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "images": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "URL": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "date": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "provider": {
                          "type": "string"
                        },
                        "display_name": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        }
                      }
                    },
                    "label": {
                      "type": "string"
                    }
                  }
                }
              },
              "where": {
                "type": "object",
                "properties": {
                  "longitude": {
                    "type": "number"
                  },
                  "date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "latitude": {
                    "type": "number"
                  },
                  "user": {
                    "type": "object",
                    "properties": {
                      "provider": {
                        "type": "string"
                      },
                      "display_name": {
                        "type": "string"
                      },
                      "id": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "details": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "posted": {
                "type": "string",
                "format": "date-time"
              },
              "new_balance": {
                "type": "object",
                "properties": {
                  "currency": {
                    "type": "string"
                  },
                  "amount": {
                    "type": "string"
                  }
                }
              },
              "completed": {
                "type": "string",
                "format": "date-time"
              },
              "value": {
                "type": "object",
                "properties": {
                  "currency": {
                    "type": "string"
                  },
                  "amount": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "transaction_attributes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "transaction_attribute_id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "other_account": {
            "type": "object",
            "properties": {
              "metadata": {
                "type": "object",
                "properties": {
                  "image_URL": {
                    "type": "string"
                  },
                  "corporate_location": {
                    "type": "object",
                    "properties": {
                      "longitude": {
                        "type": "number"
                      },
                      "date": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "latitude": {
                        "type": "number"
                      },
                      "user": {
                        "type": "object",
                        "properties": {
                          "provider": {
                            "type": "string"
                          },
                          "display_name": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "URL": {
                    "type": "string"
                  },
                  "open_corporates_URL": {
                    "type": "string"
                  },
                  "physical_location": {
                    "type": "object",
                    "properties": {
                      "longitude": {
                        "type": "number"
                      },
                      "date": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "latitude": {
                        "type": "number"
                      },
                      "user": {
                        "type": "object",
                        "properties": {
                          "provider": {
                            "type": "string"
                          },
                          "display_name": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "public_alias": {
                    "type": "string"
                  },
                  "private_alias": {
                    "type": "string"
                  },
                  "more_info": {
                    "type": "string"
                  }
                }
              },
              "bank_routing": {
                "type": "object",
                "properties": {
                  "scheme": {
                    "type": "string"
                  },
                  "address": {
                    "type": "string"
                  }
                }
              },
              "holder": {
                "type": "object",
                "properties": {
                  "is_alias": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "string"
                  }
                }
              },
              "id": {
                "type": "string"
              },
              "account_routings": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "scheme": {
                      "type": "string"
                    },
                    "address": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "this_account": {
            "type": "object",
            "properties": {
              "bank_routing": {
                "type": "object",
                "properties": {
                  "scheme": {
                    "type": "string"
                  },
                  "address": {
                    "type": "string"
                  }
                }
              },
              "holders": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "is_alias": {
                      "type": "boolean"
                    },
                    "name": {
                      "type": "string"
                    }
                  }
                }
              },
              "id": {
                "type": "string"
              },
              "account_routings": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "scheme": {
                      "type": "string"
                    },
                    "address": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "id": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transactions/TRANSACTION_ID/transaction",
      "connector_methods": [
        "obp.getTransactionAttributes",
        "obp.getTransaction",
        "obp.checkBankAccountExists",
        "obp.getBank",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv3.0.0-getEntitlementRequestsForCurrentUser",
      "implemented_by": {
        "version": "OBPv3.0.0",
        "function": "getEntitlementRequestsForCurrentUser"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.0.0/my/entitlement-requests",
      "summary": "Get Entitlement Requests for the current User",
      "description": "<p>Get Entitlement Requests for the current User.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#created\"><strong>created</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"&#109;&#x61;&#x69;l&#116;o:&#102;&#101;&#x6c;&#x69;&#x78;&#x73;&#109;&#x69;&#x74;&#x68;&#64;&#101;x&#x61;&#109;&#112;&#x6c;e.c&#111;&#x6d;\">f&#x65;&#x6c;&#105;&#120;&#115;&#109;&#x69;&#x74;&#104;&#64;&#101;&#120;a&#109;p&#108;&#101;&#x2e;&#99;&#x6f;&#x6d;</a></p>\n<p><a href=\"/glossary#entitlement_id\"><strong>entitlement_id</strong></a>:</p>\n<p><a href=\"/glossary#entitlement_request_id\"><strong>entitlement_request_id</strong></a>:</p>\n<p><a href=\"/glossary#entitlement_requests\"><strong>entitlement_requests</strong></a>:</p>\n<p><a href=\"/glossary#entitlements\"><strong>entitlements</strong></a>:</p>\n<p><a href=\"/glossary#list\"><strong>list</strong></a>:</p>\n<p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p>\n<p><a href=\"/glossary#provider_id\"><strong>provider_id</strong></a>:</p>\n<p><a href=\"/glossary#role_name\"><strong>role_name</strong></a>:</p>\n<p><a href=\"/glossary#User\"><strong>user</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p>\n<p><a href=\"/glossary#\"><strong>username</strong></a>: felixsmith</p>\n",
      "description_markdown": "Get Entitlement Requests for the current User.\n\n\nAuthentication is Mandatory\n\n\n**JSON response body fields:**\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**created**](/glossary#created): \n\n\n\n[**email**](/glossary#): felixsmith@example.com\n\n\n\n[**entitlement_id**](/glossary#entitlement_id): \n\n\n\n[**entitlement_request_id**](/glossary#entitlement_request_id): \n\n\n\n[**entitlement_requests**](/glossary#entitlement_requests): \n\n\n\n[**entitlements**](/glossary#entitlements): \n\n\n\n[**list**](/glossary#list): \n\n\n\n[**provider**](/glossary#provider): ETHEREUM\n\n\n\n[**provider_id**](/glossary#provider_id): \n\n\n\n[**role_name**](/glossary#role_name): \n\n\n\n[**user**](/glossary#User): \n\n\n\n[**user_id**](/glossary#): 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\n\n\n\n[**username**](/glossary#): felixsmith\n\n\n",
      "success_response_body": {
        "entitlement_requests": [
          {
            "entitlement_request_id": "6fb17583-1e49-4435-bb74-a14fe0996723",
            "user": {
              "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
              "email": "felixsmith@example.com",
              "provider_id": "Chris",
              "provider": "http://127.0.0.1:8080",
              "username": "felixsmith",
              "entitlements": {
                "list": [
                  {
                    "entitlement_id": "6fb17583-1e49-4435-bb74-a14fe0996723",
                    "role_name": "CanQueryOtherUser",
                    "bank_id": "gh.29.uk"
                  }
                ]
              }
            },
            "role_name": "CanQueryOtherUser",
            "bank_id": "gh.29.uk",
            "created": "1100-01-01T00:00:00Z"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-50200: Connector cannot return the data we requested.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Role", "Entitlement", "User", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "entitlement_requests": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "entitlement_request_id": {
                  "type": "string"
                },
                "role_name": {
                  "type": "string"
                },
                "bank_id": {
                  "type": "string"
                },
                "user": {
                  "type": "object",
                  "properties": {
                    "provider": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "provider_id": {
                      "type": "string"
                    },
                    "entitlements": {
                      "type": "object",
                      "properties": {
                        "list": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "role_name": {
                                "type": "string"
                              },
                              "bank_id": {
                                "type": "string"
                              },
                              "entitlement_id": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "username": {
                      "type": "string"
                    },
                    "user_id": {
                      "type": "string"
                    }
                  }
                },
                "created": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/my/entitlement-requests",
      "connector_methods": ["obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv1.2.1-deleteViewForBankAccount",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "deleteViewForBankAccount"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/views/VIEW_ID",
      "summary": "Delete View",
      "description": "<p>Deletes the view specified by VIEW_ID on the bank account specified by ACCOUNT_ID at bank BANK_ID</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p>\n<p><strong>JSON response body fields:</strong></p>\n",
      "description_markdown": "Deletes the view specified by VIEW_ID on the bank account specified by ACCOUNT_ID at bank BANK_ID\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[VIEW_ID](/glossary#this_view_id): owner\n\n\n\n\n\n**JSON response body fields:**\n\n\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "jsonString": "{}"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-50000: Unknown Error.",
        "user does not have owner access"
      ],
      "tags": ["View-Custom", "Account", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/views/VIEW_ID",
      "connector_methods": [
        "obp.checkBankAccountExists",
        "obp.getBank",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv4.0.0-getCurrentUserAttributes",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getCurrentUserAttributes"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/my/user/attributes",
      "summary": "Get User Attributes for current user",
      "description": "<p>Get User Attributes for current user.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>insert_date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>user_attribute_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>user_attributes</strong></a>: user_attributes</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n",
      "description_markdown": "Get User Attributes for current user.\n\nAuthentication is Mandatory\n\n\n**JSON response body fields:**\n\n\n\n[**insert_date**](/glossary#): 2020-01-27\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**type**](/glossary#type): \n\n\n\n[**user_attribute_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**user_attributes**](/glossary#): user_attributes\n\n\n\n[**value**](/glossary#): 5987953\n\n\n",
      "success_response_body": {
        "user_attributes": [
          {
            "user_attribute_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
            "name": "BATTERY_LEVEL",
            "type": "STRING",
            "value": "90",
            "insert_date": "2023-04-13T04:30:08Z"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["User", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "user_attributes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string"
                },
                "user_attribute_id": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "insert_date": {
                  "type": "string",
                  "format": "date-time"
                },
                "name": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/my/user/attributes",
      "connector_methods": ["obp.getUserAttributes"]
    },
    {
      "operation_id": "OBPv4.0.0-deleteBankLevelDynamicEndpoint",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "deleteBankLevelDynamicEndpoint"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v4.0.0/management/banks/BANK_ID/dynamic-endpoints/DYNAMIC_ENDPOINT_ID",
      "summary": " Delete Bank Level Dynamic Endpoint",
      "description": "<p>Delete a Bank Level DynamicEndpoint specified by DYNAMIC_ENDPOINT_ID.</p>\n<p>Authentication is Mandatory</p>\n",
      "description_markdown": "Delete a Bank Level DynamicEndpoint specified by DYNAMIC_ENDPOINT_ID.\n\nAuthentication is Mandatory",
      "error_response_bodies": [
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-09009: DynamicEndpoint not found. Please specify a valid value for DYNAMIC_ENDPOINT_ID.",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["Dynamic-Endpoint-Manage", "API", "New-Style"],
      "roles": [
        {
          "role": "CanDeleteBankLevelDynamicEndpoint",
          "requires_bank_id": true
        },
        {
          "role": "CanDeleteDynamicEndpoint",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/banks/BANK_ID/dynamic-endpoints/DYNAMIC_ENDPOINT_ID",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv3.1.0-getMetricsTopConsumers",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "getMetricsTopConsumers"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.1.0/management/metrics/top-consumers",
      "summary": "Get Top Consumers",
      "description": "<p>Get metrics about the top consumers of the API usage e.g. total count, consumer_id and app_name.</p>\n<p>Should be able to filter on the following fields</p>\n<p>e.g.: /management/metrics/top-consumers?from_date=1970-01-01T00:00:00.000Z&amp;to_date=2023-04-13T04:30:11.506Z&amp;consumer_id=5<br />\n&amp;user_id=66214b8e-259e-44ad-8868-3eb47be70646&amp;implemented_by_partial_function=getTransactionsForBankAccount<br />\n&amp;implemented_in_version=v3.0.0&amp;url=/obp/v3.0.0/banks/gh.29.uk/accounts/8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0/owner/transactions<br />\n&amp;verb=GET&amp;anon=false&amp;app_name=MapperPostman<br />\n&amp;exclude_app_names=API-EXPLORER,API-Manager,SOFI,null<br />\n&amp;limit=100</p>\n<p>1 from_date (defaults to the one year ago): eg:from_date=1970-01-01T00:00:00.000Z</p>\n<p>2 to_date (defaults to the current date) eg:to_date=2023-04-13T04:30:11.506Z</p>\n<p>3 consumer_id  (if null ignore)</p>\n<p>4 user_id (if null ignore)</p>\n<p>5 anon (if null ignore) only support two value : true (return where user_id is null.) or false (return where user_id is not null.)</p>\n<p>6 url (if null ignore), note: can not contain '&amp;'.</p>\n<p>7 app_name (if null ignore)</p>\n<p>8 implemented_by_partial_function (if null ignore),</p>\n<p>9 implemented_in_version (if null ignore)</p>\n<p>10 verb (if null ignore)</p>\n<p>11 correlation_id (if null ignore)</p>\n<p>12 duration (if null ignore) non digit chars will be silently omitted</p>\n<p>13 exclude_app_names (if null ignore).eg: &amp;exclude_app_names=API-EXPLORER,API-Manager,SOFI,null</p>\n<p>14 exclude_url_patterns (if null ignore).you can design you own SQL NOT LIKE pattern. eg: &amp;exclude_url_patterns=%management/metrics%,%management/aggregate-metrics%</p>\n<p>15 exclude_implemented_by_partial_functions (if null ignore).eg: &amp;exclude_implemented_by_partial_functions=getMetrics,getConnectorMetrics,getAggregateMetrics</p>\n<p>16 limit (for pagination: defaults to 50)  eg:limit=200</p>\n<p>Authentication is Mandatory</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#app_name\"><strong>app_name</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>consumer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#count\"><strong>count</strong></a>:</p>\n<p><a href=\"/glossary#developer_email\"><strong>developer_email</strong></a>:</p>\n<p><a href=\"/glossary#top_consumers\"><strong>top_consumers</strong></a>:</p>\n",
      "description_markdown": "Get metrics about the top consumers of the API usage e.g. total count, consumer_id and app_name.\n\nShould be able to filter on the following fields\n\ne.g.: /management/metrics/top-consumers?from_date=1970-01-01T00:00:00.000Z&to_date=2023-04-13T04:30:11.506Z&consumer_id=5\n&user_id=66214b8e-259e-44ad-8868-3eb47be70646&implemented_by_partial_function=getTransactionsForBankAccount\n&implemented_in_version=v3.0.0&url=/obp/v3.0.0/banks/gh.29.uk/accounts/8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0/owner/transactions\n&verb=GET&anon=false&app_name=MapperPostman\n&exclude_app_names=API-EXPLORER,API-Manager,SOFI,null\n&limit=100\n\n1 from_date (defaults to the one year ago): eg:from_date=1970-01-01T00:00:00.000Z\n\n2 to_date (defaults to the current date) eg:to_date=2023-04-13T04:30:11.506Z\n\n3 consumer_id  (if null ignore)\n\n4 user_id (if null ignore)\n\n5 anon (if null ignore) only support two value : true (return where user_id is null.) or false (return where user_id is not null.)\n\n6 url (if null ignore), note: can not contain '&'.\n\n7 app_name (if null ignore)\n\n8 implemented_by_partial_function (if null ignore),\n\n9 implemented_in_version (if null ignore)\n\n10 verb (if null ignore)\n\n11 correlation_id (if null ignore)\n\n12 duration (if null ignore) non digit chars will be silently omitted\n\n13 exclude_app_names (if null ignore).eg: &exclude_app_names=API-EXPLORER,API-Manager,SOFI,null\n\n14 exclude_url_patterns (if null ignore).you can design you own SQL NOT LIKE pattern. eg: &exclude_url_patterns=%management/metrics%,%management/aggregate-metrics%\n\n15 exclude_implemented_by_partial_functions (if null ignore).eg: &exclude_implemented_by_partial_functions=getMetrics,getConnectorMetrics,getAggregateMetrics\n\n16 limit (for pagination: defaults to 50)  eg:limit=200\n\nAuthentication is Mandatory\n\n\n**JSON response body fields:**\n\n\n\n[**app_name**](/glossary#app_name): \n\n\n\n[**consumer_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**count**](/glossary#count): \n\n\n\n[**developer_email**](/glossary#developer_email): \n\n\n\n[**top_consumers**](/glossary#top_consumers): \n\n\n",
      "success_response_body": {
        "top_consumers": [
          {
            "count": 7076,
            "consumer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
            "app_name": "Api Explorer",
            "developer_email": "felixsmith@example.com"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-10016: Incorrect filter Parameters in URL. ",
        "OBP-30045: Could not get the top consumers from database.  ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Metric", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "top_consumers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "developer_email": {
                  "type": "string"
                },
                "consumer_id": {
                  "type": "string"
                },
                "app_name": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanReadMetrics",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/metrics/top-consumers",
      "connector_methods": ["obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv3.1.0-getTransactionRequests",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "getTransactionRequests"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transaction-requests",
      "summary": "Get Transaction Requests",
      "description": "<p>Returns transaction requests for account specified by ACCOUNT_ID at bank specified by BANK_ID.</p>\n<p>The VIEW_ID specified must be 'owner' and the user must have access to this view.</p>\n<p>Version 2.0.0 now returns charge information.</p>\n<p>Transaction Requests serve to initiate transactions that may or may not proceed. They contain information including:</p>\n<ul>\n<li>Transaction Request Id</li>\n<li>Type</li>\n<li>Status (INITIATED, COMPLETED)</li>\n<li>Challenge (in order to confirm the request)</li>\n<li>From Bank / Account</li>\n<li>Details including Currency, Value, Description and other initiation information specific to each type. (Could potentialy include a list of future transactions.)</li>\n<li>Related Transactions</li>\n</ul>\n<p>PSD2 Context: PSD2 requires transparency of charges to the customer.<br />\nThis endpoint provides the charge that would be applied if the Transaction Request proceeds - and a record of that charge there after.<br />\nThe customer can proceed with the Transaction by answering the security challenge.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#Account\"><strong>account</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>account_id</strong></a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#allowed_attempts\"><strong>allowed_attempts</strong></a>: 5</p>\n<p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p>\n<p><a href=\"/glossary#bank_code\"><strong>bank_code</strong></a>: CGHZ</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#branch_number\"><strong>branch_number</strong></a>:</p>\n<p><a href=\"/glossary#challenge\"><strong>challenge</strong></a>:</p>\n<p><a href=\"/glossary#challenge_type\"><strong>challenge_type</strong></a>:</p>\n<p><a href=\"/glossary#charge\"><strong>charge</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>counterparty_id</strong></a>: 9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#creditoraccount\"><strong>creditorAccount</strong></a>:</p>\n<p><a href=\"/glossary#creditorname\"><strong>creditorName</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#\"><strong>date_of_birth</strong></a>: 2018-03-09</p>\n<p><a href=\"/glossary#debtoraccount\"><strong>debtorAccount</strong></a>:</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#details\"><strong>details</strong></a>:</p>\n<p><a href=\"/glossary#end_date\"><strong>end_date</strong></a>:</p>\n<p><a href=\"/glossary#from\"><strong>from</strong></a>:</p>\n<p><a href=\"/glossary#future_date\"><strong>future_date</strong></a>: 20200127</p>\n<p><a href=\"/glossary#\"><strong>iban</strong></a>: DE91 1000 0000 0123 4567 89</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#instructedamount\"><strong>instructedAmount</strong></a>: 100</p>\n<p><a href=\"/glossary#kyc_document\"><strong>kyc_document</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>legal_name</strong></a>: Eveline Tripman</p>\n<p><a href=\"/glossary#message\"><strong>message</strong></a>: 123456</p>\n<p><a href=\"/glossary#mobile_phone_number\"><strong>mobile_phone_number</strong></a>: +49 30 901820</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#nickname\"><strong>nickname</strong></a>:</p>\n<p><a href=\"/glossary#number\"><strong>number</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>start_date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#status\"><strong>status</strong></a>:</p>\n<p><a href=\"/glossary#summary\"><strong>summary</strong></a>:</p>\n<p><a href=\"/glossary#to\"><strong>to</strong></a>:</p>\n<p><a href=\"/glossary#transaction_ids\"><strong>transaction_ids</strong></a>:</p>\n<p><a href=\"/glossary#transaction_requests_with_charges\"><strong>transaction_requests_with_charges</strong></a>:</p>\n<p><a href=\"/glossary#transfer_type\"><strong>transfer_type</strong></a>:</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n<p><a href=\"/glossary#to_counterparty\">to_counterparty</a>:</p>\n<p><a href=\"/glossary#to_sandbox_tan\">to_sandbox_tan</a>:</p>\n<p><a href=\"/glossary#to_sepa\">to_sepa</a>:</p>\n<p><a href=\"/glossary#to_sepa_credit_transfers\">to_sepa_credit_transfers</a>:</p>\n<p><a href=\"/glossary#\">to_simple</a>: to_simple</p>\n<p><a href=\"/glossary#to_transfer_to_account\">to_transfer_to_account</a>:</p>\n<p><a href=\"/glossary#to_transfer_to_atm\">to_transfer_to_atm</a>:</p>\n<p><a href=\"/glossary#to_transfer_to_phone\">to_transfer_to_phone</a>:</p>\n",
      "description_markdown": "Returns transaction requests for account specified by ACCOUNT_ID at bank specified by BANK_ID.\n\nThe VIEW_ID specified must be 'owner' and the user must have access to this view.\n\nVersion 2.0.0 now returns charge information.\n\nTransaction Requests serve to initiate transactions that may or may not proceed. They contain information including:\n\n* Transaction Request Id\n* Type\n* Status (INITIATED, COMPLETED)\n* Challenge (in order to confirm the request)\n* From Bank / Account\n* Details including Currency, Value, Description and other initiation information specific to each type. (Could potentialy include a list of future transactions.)\n* Related Transactions\n\nPSD2 Context: PSD2 requires transparency of charges to the customer.\nThis endpoint provides the charge that would be applied if the Transaction Request proceeds - and a record of that charge there after.\nThe customer can proceed with the Transaction by answering the security challenge.\n\n      \n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[VIEW_ID](/glossary#this_view_id): owner\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**account**](/glossary#Account): \n\n\n\n[**account_id**](/glossary#): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[**allowed_attempts**](/glossary#allowed_attempts): 5\n\n\n\n[**amount**](/glossary#): 10.12\n\n\n\n[**bank_code**](/glossary#bank_code): CGHZ\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**branch_number**](/glossary#branch_number): \n\n\n\n[**challenge**](/glossary#challenge): \n\n\n\n[**challenge_type**](/glossary#challenge_type): \n\n\n\n[**charge**](/glossary#charge): \n\n\n\n[**counterparty_id**](/glossary#): 9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**creditorAccount**](/glossary#creditoraccount): \n\n\n\n[**creditorName**](/glossary#creditorname): \n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**date_of_birth**](/glossary#): 2018-03-09\n\n\n\n[**debtorAccount**](/glossary#debtoraccount): \n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**details**](/glossary#details): \n\n\n\n[**end_date**](/glossary#end_date): \n\n\n\n[**from**](/glossary#from): \n\n\n\n[**future_date**](/glossary#future_date): 20200127\n\n\n\n[**iban**](/glossary#): DE91 1000 0000 0123 4567 89\n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**instructedAmount**](/glossary#instructedamount): 100\n\n\n\n[**kyc_document**](/glossary#kyc_document): \n\n\n\n[**legal_name**](/glossary#): Eveline Tripman\n\n\n\n[**message**](/glossary#message): 123456\n\n\n\n[**mobile_phone_number**](/glossary#mobile_phone_number): +49 30 901820\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**nickname**](/glossary#nickname): \n\n\n\n[**number**](/glossary#number): \n\n\n\n[**start_date**](/glossary#): 2020-01-27\n\n\n\n[**status**](/glossary#status): \n\n\n\n[**summary**](/glossary#summary): \n\n\n\n[**to**](/glossary#to): \n\n\n\n[**transaction_ids**](/glossary#transaction_ids): \n\n\n\n[**transaction_requests_with_charges**](/glossary#transaction_requests_with_charges): \n\n\n\n[**transfer_type**](/glossary#transfer_type): \n\n\n\n[**type**](/glossary#type): \n\n\n\n[**value**](/glossary#): 5987953\n\n\n\n[to_counterparty](/glossary#to_counterparty): \n\n\n\n[to_sandbox_tan](/glossary#to_sandbox_tan): \n\n\n\n[to_sepa](/glossary#to_sepa): \n\n\n\n[to_sepa_credit_transfers](/glossary#to_sepa_credit_transfers): \n\n\n\n[to_simple](/glossary#): to_simple\n\n\n\n[to_transfer_to_account](/glossary#to_transfer_to_account): \n\n\n\n[to_transfer_to_atm](/glossary#to_transfer_to_atm): \n\n\n\n[to_transfer_to_phone](/glossary#to_transfer_to_phone): \n\n\n",
      "success_response_body": {
        "transaction_requests_with_charges": [
          {
            "id": "4050046c-63b3-4868-8a22-14b4181d33a6",
            "type": "SANDBOX_TAN",
            "from": {
              "bank_id": "gh.29.uk",
              "account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
            },
            "details": {
              "to_sandbox_tan": {
                "bank_id": "String",
                "account_id": "String"
              },
              "to_sepa": {
                "iban": "String"
              },
              "to_counterparty": {
                "counterparty_id": "9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh"
              },
              "to_transfer_to_phone": {
                "value": {
                  "currency": "EUR",
                  "amount": "0"
                },
                "description": "String",
                "message": "String",
                "from": {
                  "mobile_phone_number": "+44 07972 444 876",
                  "nickname": "String"
                },
                "to": {
                  "mobile_phone_number": "+44 07972 444 876"
                }
              },
              "to_transfer_to_atm": {
                "value": {
                  "currency": "EUR",
                  "amount": "0"
                },
                "description": "String",
                "message": "String",
                "from": {
                  "mobile_phone_number": "+44 07972 444 876",
                  "nickname": "String"
                },
                "to": {
                  "legal_name": "Eveline Tripman",
                  "date_of_birth": "20181230",
                  "mobile_phone_number": "+44 07972 444 876",
                  "kyc_document": {
                    "type": "String",
                    "number": "String"
                  }
                }
              },
              "to_transfer_to_account": {
                "value": {
                  "currency": "EUR",
                  "amount": "0"
                },
                "description": "String",
                "transfer_type": "String",
                "future_date": "20181230",
                "to": {
                  "name": "String",
                  "bank_code": "String",
                  "branch_number": "String",
                  "account": {
                    "number": "String",
                    "iban": "String"
                  }
                }
              },
              "to_sepa_credit_transfers": {
                "debtorAccount": {
                  "iban": "12345"
                },
                "instructedAmount": {
                  "currency": "EUR",
                  "amount": "0"
                },
                "creditorAccount": {
                  "iban": "54321"
                },
                "creditorName": "John Miles"
              },
              "value": {
                "currency": "EUR",
                "amount": "100"
              },
              "description": "String"
            },
            "transaction_ids": ["902ba3bb-dedd-45e7-9319-2fd3f2cd98a1"],
            "status": "COMPLETED",
            "start_date": "1100-01-01T00:00:00Z",
            "end_date": "1100-01-01T00:00:00Z",
            "challenge": {
              "id": "be1a183d-b301-4b83-b855-5eeffdd3526f",
              "allowed_attempts": 3,
              "challenge_type": "SANDBOX_TAN"
            },
            "charge": {
              "summary": "Rent the flat",
              "value": {
                "currency": "EUR",
                "amount": "0"
              }
            }
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-20017: Current user does not have access to the view. Please specify a valid value for VIEW_ID.",
        "OBP-20019: User does not have access to owner view. ",
        "OBP-60010: Get Transaction Requests Exception. ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Transaction-Request", "Payment Initiation Service (PIS)", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "transaction_requests_with_charges": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string"
                },
                "challenge": {
                  "type": "object",
                  "properties": {
                    "challenge_type": {
                      "type": "string"
                    },
                    "allowed_attempts": {
                      "type": "integer"
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                },
                "status": {
                  "type": "string"
                },
                "end_date": {
                  "type": "string",
                  "format": "date-time"
                },
                "charge": {
                  "type": "object",
                  "properties": {
                    "summary": {
                      "type": "string"
                    },
                    "value": {
                      "type": "object",
                      "properties": {
                        "currency": {
                          "type": "string"
                        },
                        "amount": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "transaction_ids": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "from": {
                  "type": "object",
                  "properties": {
                    "bank_id": {
                      "type": "string"
                    },
                    "account_id": {
                      "type": "string"
                    }
                  }
                },
                "details": {
                  "type": "object",
                  "properties": {
                    "to_sandbox_tan": {
                      "type": "object",
                      "properties": {
                        "account_id": {
                          "type": "string"
                        },
                        "bank_id": {
                          "type": "string"
                        }
                      }
                    },
                    "value": {
                      "type": "object",
                      "properties": {
                        "currency": {
                          "type": "string"
                        },
                        "amount": {
                          "type": "string"
                        }
                      }
                    },
                    "to_transfer_to_phone": {
                      "type": "object",
                      "properties": {
                        "description": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        },
                        "from": {
                          "type": "object",
                          "properties": {
                            "nickname": {
                              "type": "string"
                            },
                            "mobile_phone_number": {
                              "type": "string"
                            }
                          }
                        },
                        "to": {
                          "type": "object",
                          "properties": {
                            "mobile_phone_number": {
                              "type": "string"
                            }
                          }
                        },
                        "value": {
                          "type": "object",
                          "properties": {
                            "currency": {
                              "type": "string"
                            },
                            "amount": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "to_sepa": {
                      "type": "object",
                      "properties": {
                        "iban": {
                          "type": "string"
                        }
                      }
                    },
                    "description": {
                      "type": "string"
                    },
                    "to_counterparty": {
                      "type": "object",
                      "properties": {
                        "counterparty_id": {
                          "type": "string"
                        }
                      }
                    },
                    "to_transfer_to_account": {
                      "type": "object",
                      "properties": {
                        "to": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "account": {
                              "type": "object",
                              "properties": {
                                "number": {
                                  "type": "string"
                                },
                                "iban": {
                                  "type": "string"
                                }
                              }
                            },
                            "bank_code": {
                              "type": "string"
                            },
                            "branch_number": {
                              "type": "string"
                            }
                          }
                        },
                        "transfer_type": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "future_date": {
                          "type": "string"
                        },
                        "value": {
                          "type": "object",
                          "properties": {
                            "currency": {
                              "type": "string"
                            },
                            "amount": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "to_sepa_credit_transfers": {
                      "type": "object",
                      "properties": {
                        "instructedAmount": {
                          "type": "object",
                          "properties": {
                            "currency": {
                              "type": "string"
                            },
                            "amount": {
                              "type": "string"
                            }
                          }
                        },
                        "debtorAccount": {
                          "type": "object",
                          "properties": {
                            "iban": {
                              "type": "string"
                            }
                          }
                        },
                        "creditorAccount": {
                          "type": "object",
                          "properties": {
                            "iban": {
                              "type": "string"
                            }
                          }
                        },
                        "creditorName": {
                          "type": "string"
                        }
                      }
                    },
                    "to_transfer_to_atm": {
                      "type": "object",
                      "properties": {
                        "description": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        },
                        "from": {
                          "type": "object",
                          "properties": {
                            "nickname": {
                              "type": "string"
                            },
                            "mobile_phone_number": {
                              "type": "string"
                            }
                          }
                        },
                        "value": {
                          "type": "object",
                          "properties": {
                            "currency": {
                              "type": "string"
                            },
                            "amount": {
                              "type": "string"
                            }
                          }
                        },
                        "to": {
                          "type": "object",
                          "properties": {
                            "date_of_birth": {
                              "type": "string"
                            },
                            "kyc_document": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string"
                                },
                                "number": {
                                  "type": "string"
                                }
                              }
                            },
                            "legal_name": {
                              "type": "string"
                            },
                            "mobile_phone_number": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "start_date": {
                  "type": "string",
                  "format": "date-time"
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transaction-requests",
      "connector_methods": [
        "obp.getTransactionRequests210",
        "obp.checkBankAccountExists",
        "obp.getBank",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv4.0.0-getAuthenticationTypeValidation",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getAuthenticationTypeValidation"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/management/authentication-type-validations/OPERATION_ID",
      "summary": "Get an Authentication Type Validation",
      "description": "<p>Get an Authentication Type Validation by operation_id.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#\">OPERATION_ID</a>: OBPv4.0.0-getBanks</p>\n<p><strong>JSON response body fields:</strong></p>\n",
      "description_markdown": "Get an Authentication Type Validation by operation_id.\n\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[OPERATION_ID](/glossary#): OBPv4.0.0-getBanks\n\n\n\n\n\n**JSON response body fields:**\n\n\n",
      "success_response_body": {
        "operation_id": "OBPv4.0.0-updateXxx",
        "allowed_authentication_types": [
          "DirectLogin",
          "OAuth1.0a",
          "GatewayLogin",
          "DAuth",
          "OAuth2_OIDC",
          "OAuth2_OIDC_FAPI"
        ]
      },
      "error_response_bodies": [
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error.",
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["Authentication-Type-Validation", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "authTypes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {}
            }
          },
          "operationId": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanGetAuthenticationTypeValidation",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/authentication-type-validations/OPERATION_ID",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv4.0.0-createOrUpdateBankAttributeDefinition",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "createOrUpdateBankAttributeDefinition"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/attribute-definitions/bank",
      "summary": "Create or Update Bank Attribute Definition",
      "description": "<p>Create or Update Bank Attribute Definition</p>\n<p>The category field must be Bank</p>\n<p>The type field must be one of; DOUBLE, STRING, INTEGER and DATE_WITH_DAY</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#alias\"><strong>alias</strong></a>:</p>\n<p><a href=\"/glossary#attribute_definition_id\"><strong>attribute_definition_id</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#can_be_seen_on_views\"><strong>can_be_seen_on_views</strong></a>: true</p>\n<p><a href=\"/glossary#category\"><strong>category</strong></a>:</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#is_active\"><strong>is_active</strong></a>: true</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n",
      "description_markdown": "Create or Update Bank Attribute Definition\n\nThe category field must be Bank\n\nThe type field must be one of; DOUBLE, STRING, INTEGER and DATE_WITH_DAY\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**alias**](/glossary#alias): \n\n\n\n[**attribute_definition_id**](/glossary#attribute_definition_id): \n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**can_be_seen_on_views**](/glossary#can_be_seen_on_views): true\n\n\n\n[**category**](/glossary#category): \n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**is_active**](/glossary#is_active): true\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**type**](/glossary#type): \n\n\n",
      "example_request_body": {
        "name": "SPECIAL_TAX_NUMBER",
        "category": "Bank",
        "type": "STRING",
        "description": "description",
        "alias": "STRING",
        "can_be_seen_on_views": ["bank"],
        "is_active": true
      },
      "success_response_body": {
        "attribute_definition_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
        "bank_id": "gh.29.uk",
        "name": "SPECIAL_TAX_NUMBER",
        "category": "Bank",
        "type": "STRING",
        "description": "description",
        "alias": "STRING",
        "can_be_seen_on_views": ["bank"],
        "is_active": true
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["Bank", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "can_be_seen_on_views": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "description": {
            "type": "string"
          },
          "is_active": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "alias": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "can_be_seen_on_views": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "attribute_definition_id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "is_active": {
            "type": "boolean"
          },
          "bank_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "alias": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateBankAttributeDefinitionAtOneBank",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/attribute-definitions/bank",
      "connector_methods": ["obp.createOrUpdateAttributeDefinition"]
    },
    {
      "operation_id": "OBPv4.0.0-createCounterpartyForAnyAccount",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "createCounterpartyForAnyAccount"
      },
      "request_verb": "POST",
      "request_url": "/obp/v4.0.0/management/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/counterparties",
      "summary": "Create Counterparty for any account (Explicit)",
      "description": "<p>Create Counterparty for any Account. (Explicit)</p>\n<p>In OBP, there are two types of Counterparty.</p>\n<ul>\n<li>\n<p>Explicit Counterparties (those here) which we create explicitly and are used in COUNTERPARTY Transaction Requests</p>\n</li>\n<li>\n<p>Implicit Counterparties (AKA Other Accounts) which are generated automatically from the other sides of Transactions.</p>\n</li>\n</ul>\n<p>Explicit Counterparties are created for the account / view<br />\nThey are how the user of the view (e.g. account owner) refers to the other side of the transaction</p>\n<p>name : the human readable name (e.g. Piano teacher, Miss Nipa)</p>\n<p>description : the human readable name (e.g. Piano teacher, Miss Nipa)</p>\n<p>currency : counterparty account currency (e.g. EUR, GBP, USD, ...)</p>\n<p>bank_routing_scheme : eg: bankId or bankCode or any other strings</p>\n<p>bank_routing_address : eg: <code>gh.29.uk</code>, must be valid sandbox bankIds</p>\n<p>account_routing_scheme : eg: AccountId or AccountNumber or any other strings</p>\n<p>account_routing_address : eg: <code>1d65db7c-a7b2-4839-af41-95</code>, must be valid accountIds</p>\n<p>other_account_secondary_routing_scheme : eg: IBan or any other strings</p>\n<p>other_account_secondary_routing_address : if it is an IBAN, it should be unique for each counterparty.</p>\n<p>other_branch_routing_scheme : eg: branchId or any other strings or you can leave it empty, not useful in sandbox mode.</p>\n<p>other_branch_routing_address : eg: <code>branch-id-123</code> or you can leave it empty, not useful in sandbox mode.</p>\n<p>is_beneficiary : must be set to <code>true</code> in order to send payments to this counterparty</p>\n<p>bespoke: It supports a list of key-value, you can add it to the counterparty.</p>\n<p>bespoke.key : any info-key you want to add to this counterparty</p>\n<p>bespoke.value : any info-value you want to add to this counterparty</p>\n<p>The view specified by VIEW_ID must have the canAddCounterparty permission</p>\n<p>A minimal example for TransactionRequestType == COUNTERPARTY<br />\n{<br />\n&quot;name&quot;: &quot;Tesobe1&quot;,<br />\n&quot;description&quot;: &quot;Good Company&quot;,<br />\n&quot;currency&quot;: &quot;EUR&quot;,<br />\n&quot;other_bank_routing_scheme&quot;: &quot;OBP&quot;,<br />\n&quot;other_bank_routing_address&quot;: &quot;gh.29.uk&quot;,<br />\n&quot;other_account_routing_scheme&quot;: &quot;OBP&quot;,<br />\n&quot;other_account_routing_address&quot;: &quot;8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0&quot;,<br />\n&quot;is_beneficiary&quot;: true,<br />\n&quot;other_account_secondary_routing_scheme&quot;: &quot;&quot;,<br />\n&quot;other_account_secondary_routing_address&quot;: &quot;&quot;,<br />\n&quot;other_branch_routing_scheme&quot;: &quot;&quot;,<br />\n&quot;other_branch_routing_address&quot;: &quot;&quot;,<br />\n&quot;bespoke&quot;: []<br />\n}</p>\n<p>A minimal example for TransactionRequestType == SEPA</p>\n<p>{<br />\n&quot;name&quot;: &quot;Tesobe2&quot;,<br />\n&quot;description&quot;: &quot;Good Company&quot;,<br />\n&quot;currency&quot;: &quot;EUR&quot;,<br />\n&quot;other_bank_routing_scheme&quot;: &quot;OBP&quot;,<br />\n&quot;other_bank_routing_address&quot;: &quot;gh.29.uk&quot;,<br />\n&quot;other_account_routing_scheme&quot;: &quot;OBP&quot;,<br />\n&quot;other_account_routing_address&quot;: &quot;8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0&quot;,<br />\n&quot;other_account_secondary_routing_scheme&quot;: &quot;IBAN&quot;,<br />\n&quot;other_account_secondary_routing_address&quot;: &quot;DE89 3704 0044 0532 0130 00&quot;,<br />\n&quot;is_beneficiary&quot;: true,<br />\n&quot;other_branch_routing_scheme&quot;: &quot;&quot;,<br />\n&quot;other_branch_routing_address&quot;: &quot;&quot;,<br />\n&quot;bespoke&quot;: []<br />\n}</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#bespoke\"><strong>bespoke</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#\"><strong>is_beneficiary</strong></a>: true</p>\n<p><a href=\"/glossary#\"><strong>key</strong></a>: CustomerNumber</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#other_account_routing_address\"><strong>other_account_routing_address</strong></a>:</p>\n<p><a href=\"/glossary#other_account_routing_scheme\"><strong>other_account_routing_scheme</strong></a>:</p>\n<p><a href=\"/glossary#other_account_secondary_routing_address\"><strong>other_account_secondary_routing_address</strong></a>:</p>\n<p><a href=\"/glossary#other_account_secondary_routing_scheme\"><strong>other_account_secondary_routing_scheme</strong></a>:</p>\n<p><a href=\"/glossary#other_bank_routing_address\"><strong>other_bank_routing_address</strong></a>:</p>\n<p><a href=\"/glossary#other_bank_routing_scheme\"><strong>other_bank_routing_scheme</strong></a>:</p>\n<p><a href=\"/glossary#other_branch_routing_address\"><strong>other_branch_routing_address</strong></a>:</p>\n<p><a href=\"/glossary#other_branch_routing_scheme\"><strong>other_branch_routing_scheme</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#bespoke\"><strong>bespoke</strong></a>:</p>\n<p><a href=\"/glossary#corporate_location\"><strong>corporate_location</strong></a>: 10</p>\n<p><a href=\"/glossary#\"><strong>counterparty_id</strong></a>: 9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#created_by_user_id\"><strong>created_by_user_id</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#image_url\"><strong>image_url</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>is_beneficiary</strong></a>: true</p>\n<p><a href=\"/glossary#\"><strong>key</strong></a>: CustomerNumber</p>\n<p><a href=\"/glossary#latitude\"><strong>latitude</strong></a>: 38.8951</p>\n<p><a href=\"/glossary#longitude\"><strong>longitude</strong></a>: -77.0364</p>\n<p><a href=\"/glossary#metadata\"><strong>metadata</strong></a>:</p>\n<p><a href=\"/glossary#more_info\"><strong>more_info</strong></a>: More information about this fee</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#open_corporates_url\"><strong>open_corporates_url</strong></a>:</p>\n<p><a href=\"/glossary#other_account_routing_address\"><strong>other_account_routing_address</strong></a>:</p>\n<p><a href=\"/glossary#other_account_routing_scheme\"><strong>other_account_routing_scheme</strong></a>:</p>\n<p><a href=\"/glossary#other_account_secondary_routing_address\"><strong>other_account_secondary_routing_address</strong></a>:</p>\n<p><a href=\"/glossary#other_account_secondary_routing_scheme\"><strong>other_account_secondary_routing_scheme</strong></a>:</p>\n<p><a href=\"/glossary#other_bank_routing_address\"><strong>other_bank_routing_address</strong></a>:</p>\n<p><a href=\"/glossary#other_bank_routing_scheme\"><strong>other_bank_routing_scheme</strong></a>:</p>\n<p><a href=\"/glossary#other_branch_routing_address\"><strong>other_branch_routing_address</strong></a>:</p>\n<p><a href=\"/glossary#other_branch_routing_scheme\"><strong>other_branch_routing_scheme</strong></a>:</p>\n<p><a href=\"/glossary#physical_location\"><strong>physical_location</strong></a>:</p>\n<p><a href=\"/glossary#private_alias\"><strong>private_alias</strong></a>:</p>\n<p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p>\n<p><a href=\"/glossary#public_alias\"><strong>public_alias</strong></a>:</p>\n<p><a href=\"/glossary#this_account_id\"><strong>this_account_id</strong></a>:</p>\n<p><a href=\"/glossary#this_bank_id\"><strong>this_bank_id</strong></a>:</p>\n<p><a href=\"/glossary#this_view_id\"><strong>this_view_id</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>url</strong></a>: <a href=\"http://www.example.com/id-docs/123/image.png\">http://www.example.com/id-docs/123/image.png</a></p>\n<p><a href=\"/glossary#User\"><strong>user</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>username</strong></a>: felixsmith</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n",
      "description_markdown": "Create Counterparty for any Account. (Explicit)\n\nIn OBP, there are two types of Counterparty.\n\n* Explicit Counterparties (those here) which we create explicitly and are used in COUNTERPARTY Transaction Requests\n\n* Implicit Counterparties (AKA Other Accounts) which are generated automatically from the other sides of Transactions.\n\nExplicit Counterparties are created for the account / view\nThey are how the user of the view (e.g. account owner) refers to the other side of the transaction\n\nname : the human readable name (e.g. Piano teacher, Miss Nipa)\n\ndescription : the human readable name (e.g. Piano teacher, Miss Nipa)\n\ncurrency : counterparty account currency (e.g. EUR, GBP, USD, ...)\n\nbank_routing_scheme : eg: bankId or bankCode or any other strings\n\nbank_routing_address : eg: `gh.29.uk`, must be valid sandbox bankIds\n\naccount_routing_scheme : eg: AccountId or AccountNumber or any other strings\n\naccount_routing_address : eg: `1d65db7c-a7b2-4839-af41-95`, must be valid accountIds\n\nother_account_secondary_routing_scheme : eg: IBan or any other strings\n\nother_account_secondary_routing_address : if it is an IBAN, it should be unique for each counterparty.\n\nother_branch_routing_scheme : eg: branchId or any other strings or you can leave it empty, not useful in sandbox mode.\n\nother_branch_routing_address : eg: `branch-id-123` or you can leave it empty, not useful in sandbox mode.\n\nis_beneficiary : must be set to `true` in order to send payments to this counterparty\n\nbespoke: It supports a list of key-value, you can add it to the counterparty.\n\nbespoke.key : any info-key you want to add to this counterparty\n\nbespoke.value : any info-value you want to add to this counterparty\n\nThe view specified by VIEW_ID must have the canAddCounterparty permission\n\nA minimal example for TransactionRequestType == COUNTERPARTY\n {\n  \"name\": \"Tesobe1\",\n  \"description\": \"Good Company\",\n  \"currency\": \"EUR\",\n  \"other_bank_routing_scheme\": \"OBP\",\n  \"other_bank_routing_address\": \"gh.29.uk\",\n  \"other_account_routing_scheme\": \"OBP\",\n  \"other_account_routing_address\": \"8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0\",\n  \"is_beneficiary\": true,\n  \"other_account_secondary_routing_scheme\": \"\",\n  \"other_account_secondary_routing_address\": \"\",\n  \"other_branch_routing_scheme\": \"\",\n  \"other_branch_routing_address\": \"\",\n  \"bespoke\": []\n}\n\n\nA minimal example for TransactionRequestType == SEPA\n\n {\n  \"name\": \"Tesobe2\",\n  \"description\": \"Good Company\",\n  \"currency\": \"EUR\",\n  \"other_bank_routing_scheme\": \"OBP\",\n  \"other_bank_routing_address\": \"gh.29.uk\",\n  \"other_account_routing_scheme\": \"OBP\",\n  \"other_account_routing_address\": \"8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0\",\n  \"other_account_secondary_routing_scheme\": \"IBAN\",\n  \"other_account_secondary_routing_address\": \"DE89 3704 0044 0532 0130 00\",\n  \"is_beneficiary\": true,\n  \"other_branch_routing_scheme\": \"\",\n  \"other_branch_routing_address\": \"\",\n  \"bespoke\": []\n}\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[VIEW_ID](/glossary#this_view_id): owner\n\n\n\n\n\n**JSON request body fields:**\n\n\n\n[**bespoke**](/glossary#bespoke): \n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**is_beneficiary**](/glossary#): true\n\n\n\n[**key**](/glossary#): CustomerNumber\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**other_account_routing_address**](/glossary#other_account_routing_address): \n\n\n\n[**other_account_routing_scheme**](/glossary#other_account_routing_scheme): \n\n\n\n[**other_account_secondary_routing_address**](/glossary#other_account_secondary_routing_address): \n\n\n\n[**other_account_secondary_routing_scheme**](/glossary#other_account_secondary_routing_scheme): \n\n\n\n[**other_bank_routing_address**](/glossary#other_bank_routing_address): \n\n\n\n[**other_bank_routing_scheme**](/glossary#other_bank_routing_scheme): \n\n\n\n[**other_branch_routing_address**](/glossary#other_branch_routing_address): \n\n\n\n[**other_branch_routing_scheme**](/glossary#other_branch_routing_scheme): \n\n\n\n[**value**](/glossary#): 5987953\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**bespoke**](/glossary#bespoke): \n\n\n\n[**corporate_location**](/glossary#corporate_location): 10\n\n\n\n[**counterparty_id**](/glossary#): 9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**created_by_user_id**](/glossary#created_by_user_id): \n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**date**](/glossary#): 2020-01-27\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**image_url**](/glossary#image_url): \n\n\n\n[**is_beneficiary**](/glossary#): true\n\n\n\n[**key**](/glossary#): CustomerNumber\n\n\n\n[**latitude**](/glossary#latitude): 38.8951\n\n\n\n[**longitude**](/glossary#longitude): -77.0364\n\n\n\n[**metadata**](/glossary#metadata): \n\n\n\n[**more_info**](/glossary#more_info): More information about this fee\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**open_corporates_url**](/glossary#open_corporates_url): \n\n\n\n[**other_account_routing_address**](/glossary#other_account_routing_address): \n\n\n\n[**other_account_routing_scheme**](/glossary#other_account_routing_scheme): \n\n\n\n[**other_account_secondary_routing_address**](/glossary#other_account_secondary_routing_address): \n\n\n\n[**other_account_secondary_routing_scheme**](/glossary#other_account_secondary_routing_scheme): \n\n\n\n[**other_bank_routing_address**](/glossary#other_bank_routing_address): \n\n\n\n[**other_bank_routing_scheme**](/glossary#other_bank_routing_scheme): \n\n\n\n[**other_branch_routing_address**](/glossary#other_branch_routing_address): \n\n\n\n[**other_branch_routing_scheme**](/glossary#other_branch_routing_scheme): \n\n\n\n[**physical_location**](/glossary#physical_location): \n\n\n\n[**private_alias**](/glossary#private_alias): \n\n\n\n[**provider**](/glossary#provider): ETHEREUM\n\n\n\n[**public_alias**](/glossary#public_alias): \n\n\n\n[**this_account_id**](/glossary#this_account_id): \n\n\n\n[**this_bank_id**](/glossary#this_bank_id): \n\n\n\n[**this_view_id**](/glossary#this_view_id): \n\n\n\n[**url**](/glossary#): http://www.example.com/id-docs/123/image.png\n\n\n\n[**user**](/glossary#User): \n\n\n\n[**username**](/glossary#): felixsmith\n\n\n\n[**value**](/glossary#): 5987953\n\n\n",
      "example_request_body": {
        "name": "CounterpartyName",
        "description": "My landlord",
        "currency": "EUR",
        "other_account_routing_scheme": "OBP",
        "other_account_routing_address": "36f8a9e6-c2b1-407a-8bd0-421b7119307e",
        "other_account_secondary_routing_scheme": "IBAN",
        "other_account_secondary_routing_address": "DE89370400440532013000",
        "other_bank_routing_scheme": "OBP",
        "other_bank_routing_address": "gh.29.uk",
        "other_branch_routing_scheme": "OBP",
        "other_branch_routing_address": "12f8a9e6-c2b1-407a-8bd0-421b7119307e",
        "is_beneficiary": true,
        "bespoke": [
          {
            "key": "englishName",
            "value": "english Name"
          }
        ]
      },
      "success_response_body": {
        "name": "CounterpartyName",
        "description": "My landlord",
        "currency": "EUR",
        "created_by_user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
        "this_bank_id": "gh.29.uk",
        "this_account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0",
        "this_view_id": "owner",
        "counterparty_id": "9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "other_bank_routing_scheme": "OBP",
        "other_bank_routing_address": "gh.29.uk",
        "other_branch_routing_scheme": "OBP",
        "other_branch_routing_address": "12f8a9e6-c2b1-407a-8bd0-421b7119307e",
        "other_account_routing_scheme": "OBP",
        "other_account_routing_address": "36f8a9e6-c2b1-407a-8bd0-421b7119307e",
        "other_account_secondary_routing_scheme": "IBAN",
        "other_account_secondary_routing_address": "DE89370400440532013000",
        "is_beneficiary": true,
        "bespoke": [
          {
            "key": "englishName",
            "value": "english Name"
          }
        ],
        "metadata": {
          "public_alias": "String",
          "more_info": "String",
          "url": "String",
          "image_url": "String",
          "open_corporates_url": "String",
          "corporate_location": {
            "latitude": 11.45,
            "longitude": 11.45,
            "date": "1100-01-01T00:00:00Z",
            "user": {
              "id": "123",
              "provider": "http://127.0.0.1:8080",
              "username": "felixsmith"
            }
          },
          "physical_location": {
            "latitude": 11.45,
            "longitude": 11.45,
            "date": "1100-01-01T00:00:00Z",
            "user": {
              "id": "123",
              "provider": "http://127.0.0.1:8080",
              "username": "felixsmith"
            }
          },
          "private_alias": "String"
        }
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30110: Invalid Account Id. The ACCOUNT_ID should only contain 0-9/a-z/A-Z/'-'/'.'/'_', the length should be smaller than 255.",
        "OBP-30111: Invalid Bank Id. The BANK_ID should only contain 0-9/a-z/A-Z/'-'/'.'/'_', the length should be smaller than 255.",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-30003: Account not found. Please specify a valid value for ACCOUNT_ID.",
        "OBP-10001: Incorrect json format.",
        "OBP-10003: Invalid Currency Value. It should be three letters ISO Currency Code. ",
        "OBP-30005: View not found for Account. Please specify a valid value for VIEW_ID",
        "OBP-30014: Counterparty already exists. Please specify a different value for BANK_ID or ACCOUNT_ID or VIEW_ID or NAME.",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["Counterparty", "Account", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "bespoke": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string"
                },
                "key": {
                  "type": "string"
                }
              }
            }
          },
          "name": {
            "type": "string"
          },
          "other_bank_routing_scheme": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "other_account_secondary_routing_address": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "other_bank_routing_address": {
            "type": "string"
          },
          "other_account_routing_address": {
            "type": "string"
          },
          "other_branch_routing_scheme": {
            "type": "string"
          },
          "other_account_secondary_routing_scheme": {
            "type": "string"
          },
          "is_beneficiary": {
            "type": "boolean"
          },
          "other_account_routing_scheme": {
            "type": "string"
          },
          "other_branch_routing_address": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "bespoke": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string"
                },
                "key": {
                  "type": "string"
                }
              }
            }
          },
          "created_by_user_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "metadata": {
            "type": "object",
            "properties": {
              "private_alias": {
                "type": "string"
              },
              "physical_location": {
                "type": "object",
                "properties": {
                  "user": {
                    "type": "object",
                    "properties": {
                      "provider": {
                        "type": "string"
                      },
                      "id": {
                        "type": "string"
                      },
                      "username": {
                        "type": "string"
                      }
                    }
                  },
                  "date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "longitude": {
                    "type": "number"
                  },
                  "latitude": {
                    "type": "number"
                  }
                }
              },
              "url": {
                "type": "string"
              },
              "public_alias": {
                "type": "string"
              },
              "open_corporates_url": {
                "type": "string"
              },
              "more_info": {
                "type": "string"
              },
              "corporate_location": {
                "type": "object",
                "properties": {
                  "user": {
                    "type": "object",
                    "properties": {
                      "provider": {
                        "type": "string"
                      },
                      "id": {
                        "type": "string"
                      },
                      "username": {
                        "type": "string"
                      }
                    }
                  },
                  "date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "longitude": {
                    "type": "number"
                  },
                  "latitude": {
                    "type": "number"
                  }
                }
              },
              "image_url": {
                "type": "string"
              }
            }
          },
          "this_bank_id": {
            "type": "string"
          },
          "other_bank_routing_scheme": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "other_account_secondary_routing_address": {
            "type": "string"
          },
          "counterparty_id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "other_bank_routing_address": {
            "type": "string"
          },
          "other_account_routing_address": {
            "type": "string"
          },
          "other_branch_routing_scheme": {
            "type": "string"
          },
          "this_account_id": {
            "type": "string"
          },
          "other_account_secondary_routing_scheme": {
            "type": "string"
          },
          "is_beneficiary": {
            "type": "boolean"
          },
          "other_account_routing_scheme": {
            "type": "string"
          },
          "other_branch_routing_address": {
            "type": "string"
          },
          "this_view_id": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateCounterparty",
          "requires_bank_id": true
        },
        {
          "role": "CanCreateCounterpartyAtAnyBank",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/counterparties",
      "connector_methods": [
        "obp.checkBankAccountExists",
        "obp.getBank",
        "obp.checkCounterpartyExists"
      ]
    },
    {
      "operation_id": "OBPv3.1.0-getServerJWK",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "getServerJWK"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.1.0/certs",
      "summary": "Get JSON Web Key (JWK)",
      "description": "<p>Get the server's public JSON Web Key (JWK) set and certificate chain.<br />\nIt is required by client applications to validate ID tokens, self-contained access tokens and other issued objects.</p>\n<p>Authentication is Optional</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#e\"><strong>e</strong></a>:</p>\n<p><a href=\"/glossary#kid\"><strong>kid</strong></a>:</p>\n<p><a href=\"/glossary#kty\"><strong>kty</strong></a>:</p>\n<p><a href=\"/glossary#n\"><strong>n</strong></a>:</p>\n<p><a href=\"/glossary#use\"><strong>use</strong></a>:</p>\n",
      "description_markdown": "Get the server's public JSON Web Key (JWK) set and certificate chain.\n It is required by client applications to validate ID tokens, self-contained access tokens and other issued objects.\n\n      \n\nAuthentication is Optional\n\n\n**JSON response body fields:**\n\n\n\n[**e**](/glossary#e): \n\n\n\n[**kid**](/glossary#kid): \n\n\n\n[**kty**](/glossary#kty): \n\n\n\n[**n**](/glossary#n): \n\n\n\n[**use**](/glossary#use): \n\n\n",
      "success_response_body": {
        "kty": "RSA",
        "e": "AQAB",
        "use": "sig",
        "kid": "fr6-BxXH5gikFeZ2O6rGk0LUmJpukeswASN_TMW8U_s",
        "n": "hrB0OWqg6AeNU3WCnhheG18R5EbQtdNYGOaSeylTjkj2lZr0_vkhNVYvase-CroxO4HOT06InxTYwLnmJiyv2cZxReuoVjTlk--olGu-9MZooiFiqWez0JzndyKxQ27OiAjFsMh0P04kaUXeHKhXRfiU7K2FqBshR1UlnWe7iHLkq2p9rrGjxQc7ff0w-Uc0f-8PWg36Y2Od7s65493iVQwnI13egqMaSvgB1s8_dgm08noEjhr8C5m1aKmr5oipWEPNi-SBV2VNuiCLR1IEPuXq0tOwwZfv31t34KPO-2H2bbaWmzGJy9mMOGqoNrbXyGiUZoyeHRELaNtm1GilyQ"
      },
      "error_response_bodies": ["OBP-50000: Unknown Error."],
      "tags": ["API", "Account Information Service (AIS)", "PSD2", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "kid": {
            "type": "string"
          },
          "use": {
            "type": "string"
          },
          "n": {
            "type": "string"
          },
          "e": {
            "type": "string"
          },
          "kty": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/certs",
      "connector_methods": ["obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv3.0.0-getBranch",
      "implemented_by": {
        "version": "OBPv3.0.0",
        "function": "getBranch"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.0.0/banks/BANK_ID/branches/BRANCH_ID",
      "summary": "Get Branch",
      "description": "<p>Returns information about a single Branch specified by BANK_ID and BRANCH_ID including:</p>\n<ul>\n<li>Name</li>\n<li>Address</li>\n<li>Geo Location</li>\n<li>License the data under this endpoint is released under.</li>\n</ul>\n<p>Authentication is Optional</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#\">BRANCH_ID</a>: DERBY6</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#accessiblefeatures\"><strong>accessibleFeatures</strong></a>:</p>\n<p><a href=\"/glossary#address\"><strong>address</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#branch_routing\"><strong>branch_routing</strong></a>:</p>\n<p><a href=\"/glossary#branch_type\"><strong>branch_type</strong></a>:</p>\n<p><a href=\"/glossary#city\"><strong>city</strong></a>:</p>\n<p><a href=\"/glossary#closing_time\"><strong>closing_time</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#country_code\"><strong>country_code</strong></a>: 1254</p>\n<p><a href=\"/glossary#county\"><strong>county</strong></a>:</p>\n<p><a href=\"/glossary#drive_up\"><strong>drive_up</strong></a>:</p>\n<p><a href=\"/glossary#friday\"><strong>friday</strong></a>:</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#\"><strong>is_accessible</strong></a>: true</p>\n<p><a href=\"/glossary#latitude\"><strong>latitude</strong></a>: 38.8951</p>\n<p><a href=\"/glossary#license\"><strong>license</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>line_1</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>line_2</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>line_3</strong></a>:</p>\n<p><a href=\"/glossary#lobby\"><strong>lobby</strong></a>:</p>\n<p><a href=\"/glossary#location\"><strong>location</strong></a>:</p>\n<p><a href=\"/glossary#longitude\"><strong>longitude</strong></a>: -77.0364</p>\n<p><a href=\"/glossary#meta\"><strong>meta</strong></a>:</p>\n<p><a href=\"/glossary#monday\"><strong>monday</strong></a>:</p>\n<p><a href=\"/glossary#more_info\"><strong>more_info</strong></a>: More information about this fee</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#opening_time\"><strong>opening_time</strong></a>:</p>\n<p><a href=\"/glossary#phone_number\"><strong>phone_number</strong></a>:</p>\n<p><a href=\"/glossary#postcode\"><strong>postcode</strong></a>:</p>\n<p><a href=\"/glossary#saturday\"><strong>saturday</strong></a>:</p>\n<p><a href=\"/glossary#scheme\"><strong>scheme</strong></a>: scheme value</p>\n<p><a href=\"/glossary#state\"><strong>state</strong></a>:</p>\n<p><a href=\"/glossary#sunday\"><strong>sunday</strong></a>:</p>\n<p><a href=\"/glossary#thursday\"><strong>thursday</strong></a>:</p>\n<p><a href=\"/glossary#tuesday\"><strong>tuesday</strong></a>:</p>\n<p><a href=\"/glossary#wednesday\"><strong>wednesday</strong></a>:</p>\n",
      "description_markdown": "Returns information about a single Branch specified by BANK_ID and BRANCH_ID including:\n\n* Name\n* Address\n* Geo Location\n* License the data under this endpoint is released under.\n\nAuthentication is Optional\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[BRANCH_ID](/glossary#): DERBY6\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**accessibleFeatures**](/glossary#accessiblefeatures): \n\n\n\n[**address**](/glossary#address): \n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**branch_routing**](/glossary#branch_routing): \n\n\n\n[**branch_type**](/glossary#branch_type): \n\n\n\n[**city**](/glossary#city): \n\n\n\n[**closing_time**](/glossary#closing_time): 2020-01-27\n\n\n\n[**country_code**](/glossary#country_code): 1254\n\n\n\n[**county**](/glossary#county): \n\n\n\n[**drive_up**](/glossary#drive_up): \n\n\n\n[**friday**](/glossary#friday): \n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**is_accessible**](/glossary#): true\n\n\n\n[**latitude**](/glossary#latitude): 38.8951\n\n\n\n[**license**](/glossary#license): \n\n\n\n[**line_1**](/glossary#): \n\n\n\n[**line_2**](/glossary#): \n\n\n\n[**line_3**](/glossary#): \n\n\n\n[**lobby**](/glossary#lobby): \n\n\n\n[**location**](/glossary#location): \n\n\n\n[**longitude**](/glossary#longitude): -77.0364\n\n\n\n[**meta**](/glossary#meta): \n\n\n\n[**monday**](/glossary#monday): \n\n\n\n[**more_info**](/glossary#more_info): More information about this fee\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**opening_time**](/glossary#opening_time): \n\n\n\n[**phone_number**](/glossary#phone_number): \n\n\n\n[**postcode**](/glossary#postcode): \n\n\n\n[**saturday**](/glossary#saturday): \n\n\n\n[**scheme**](/glossary#scheme): scheme value\n\n\n\n[**state**](/glossary#state): \n\n\n\n[**sunday**](/glossary#sunday): \n\n\n\n[**thursday**](/glossary#thursday): \n\n\n\n[**tuesday**](/glossary#tuesday): \n\n\n\n[**wednesday**](/glossary#wednesday): \n\n\n",
      "success_response_body": {
        "id": "branch-id-123",
        "bank_id": "bank-id-123",
        "name": "Branch by the Lake",
        "address": {
          "line_1": "No 1 the Road",
          "line_2": "The Place",
          "line_3": "The Hill",
          "city": "Berlin",
          "county": "String",
          "state": "Brandenburg",
          "postcode": "13359",
          "country_code": "DE"
        },
        "location": {
          "latitude": 10.0,
          "longitude": 10.0
        },
        "meta": {
          "license": {
            "id": "ODbL-1.0",
            "name": "Open Database License"
          }
        },
        "lobby": {
          "monday": [
            {
              "opening_time": "10:00",
              "closing_time": "18:00"
            }
          ],
          "tuesday": [
            {
              "opening_time": "10:00",
              "closing_time": "18:00"
            }
          ],
          "wednesday": [
            {
              "opening_time": "10:00",
              "closing_time": "18:00"
            }
          ],
          "thursday": [
            {
              "opening_time": "10:00",
              "closing_time": "18:00"
            }
          ],
          "friday": [
            {
              "opening_time": "10:00",
              "closing_time": "18:00"
            }
          ],
          "saturday": [
            {
              "opening_time": "10:00",
              "closing_time": "18:00"
            }
          ],
          "sunday": [
            {
              "opening_time": "10:00",
              "closing_time": "18:00"
            }
          ]
        },
        "drive_up": {
          "monday": {
            "opening_time": "10:00",
            "closing_time": "18:00"
          },
          "tuesday": {
            "opening_time": "10:00",
            "closing_time": "18:00"
          },
          "wednesday": {
            "opening_time": "10:00",
            "closing_time": "18:00"
          },
          "thursday": {
            "opening_time": "10:00",
            "closing_time": "18:00"
          },
          "friday": {
            "opening_time": "10:00",
            "closing_time": "18:00"
          },
          "saturday": {
            "opening_time": "10:00",
            "closing_time": "18:00"
          },
          "sunday": {
            "opening_time": "10:00",
            "closing_time": "18:00"
          }
        },
        "branch_routing": {
          "scheme": "OBP",
          "address": "123abc"
        },
        "is_accessible": "true",
        "accessibleFeatures": "wheelchair, atm usuable by the visually impaired",
        "branch_type": "Full service store",
        "more_info": "short walk to the lake from here",
        "phone_number": "+381631954907"
      },
      "error_response_bodies": [
        "OBP-300010: Branch not found. Please specify a valid value for BRANCH_ID. Or License may not be set. meta.license.id and meta.license.name can not be empty",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Branch", "Bank", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "accessibleFeatures": {
            "type": "string"
          },
          "more_info": {
            "type": "string"
          },
          "branch_type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "bank_id": {
            "type": "string"
          },
          "location": {
            "type": "object",
            "properties": {
              "latitude": {
                "type": "number"
              },
              "longitude": {
                "type": "number"
              }
            }
          },
          "id": {
            "type": "string"
          },
          "is_accessible": {
            "type": "string"
          },
          "address": {
            "type": "object",
            "properties": {
              "city": {
                "type": "string"
              },
              "county": {
                "type": "string"
              },
              "postcode": {
                "type": "string"
              },
              "line_1": {
                "type": "string"
              },
              "line_2": {
                "type": "string"
              },
              "line_3": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "country_code": {
                "type": "string"
              }
            }
          },
          "drive_up": {
            "type": "object",
            "properties": {
              "friday": {
                "type": "object",
                "properties": {
                  "closing_time": {
                    "type": "string"
                  },
                  "opening_time": {
                    "type": "string"
                  }
                }
              },
              "monday": {
                "type": "object",
                "properties": {
                  "closing_time": {
                    "type": "string"
                  },
                  "opening_time": {
                    "type": "string"
                  }
                }
              },
              "saturday": {
                "type": "object",
                "properties": {
                  "closing_time": {
                    "type": "string"
                  },
                  "opening_time": {
                    "type": "string"
                  }
                }
              },
              "thursday": {
                "type": "object",
                "properties": {
                  "closing_time": {
                    "type": "string"
                  },
                  "opening_time": {
                    "type": "string"
                  }
                }
              },
              "tuesday": {
                "type": "object",
                "properties": {
                  "closing_time": {
                    "type": "string"
                  },
                  "opening_time": {
                    "type": "string"
                  }
                }
              },
              "wednesday": {
                "type": "object",
                "properties": {
                  "closing_time": {
                    "type": "string"
                  },
                  "opening_time": {
                    "type": "string"
                  }
                }
              },
              "sunday": {
                "type": "object",
                "properties": {
                  "closing_time": {
                    "type": "string"
                  },
                  "opening_time": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "branch_routing": {
            "type": "object",
            "properties": {
              "address": {
                "type": "string"
              },
              "scheme": {
                "type": "string"
              }
            }
          },
          "meta": {
            "type": "object",
            "properties": {
              "license": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "phone_number": {
            "type": "string"
          },
          "lobby": {
            "type": "object",
            "properties": {
              "saturday": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "closing_time": {
                      "type": "string"
                    },
                    "opening_time": {
                      "type": "string"
                    }
                  }
                }
              },
              "tuesday": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "closing_time": {
                      "type": "string"
                    },
                    "opening_time": {
                      "type": "string"
                    }
                  }
                }
              },
              "monday": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "closing_time": {
                      "type": "string"
                    },
                    "opening_time": {
                      "type": "string"
                    }
                  }
                }
              },
              "friday": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "closing_time": {
                      "type": "string"
                    },
                    "opening_time": {
                      "type": "string"
                    }
                  }
                }
              },
              "sunday": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "closing_time": {
                      "type": "string"
                    },
                    "opening_time": {
                      "type": "string"
                    }
                  }
                }
              },
              "wednesday": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "closing_time": {
                      "type": "string"
                    },
                    "opening_time": {
                      "type": "string"
                    }
                  }
                }
              },
              "thursday": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "closing_time": {
                      "type": "string"
                    },
                    "opening_time": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/branches/BRANCH_ID",
      "connector_methods": ["obp.getBranch", "obp.getBank", "obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv4.0.0-getBankLevelDynamicMessageDoc",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getBankLevelDynamicMessageDoc"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/management/banks/BANK_ID/dynamic-message-docs/DYNAMIC_MESSAGE_DOC_ID",
      "summary": "Get Bank Level Dynamic Message Doc",
      "description": "<p>Get a Bank Level Dynamic Message Doc by DYNAMIC_MESSAGE_DOC_ID.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#\">DYNAMIC_MESSAGE_DOC_ID</a>:</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#process\"><strong>process</strong></a>: obp.getBank</p>\n",
      "description_markdown": "Get a Bank Level Dynamic Message Doc by DYNAMIC_MESSAGE_DOC_ID.\n\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[DYNAMIC_MESSAGE_DOC_ID](/glossary#): \n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**process**](/glossary#process): obp.getBank\n\n\n",
      "success_response_body": {
        "outbound_avro_schema": "",
        "inbound_avro_schema": "",
        "adapter_implementation": "",
        "dynamic_message_doc_id": "",
        "description": "This an optional field. Maximum length is 2000. It can be any characters here.",
        "process": "obp.getBank",
        "outbound_topic": "",
        "method_body": "%20%20%20%20%20%20Future.successful%28%0A%20%20%20%20%20%20%20%20Full%28%28BankCommons%28%0A%20%20%20%20%20%20%20%20%20%20BankId%28%22Hello%20bank%20id%22%29%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%221%22%2C%0A%20%20%20%20%20%20%20%20%20%20%228%22%0A%20%20%20%20%20%20%20%20%29%2C%20None%29%29%0A%20%20%20%20%20%20%29",
        "message_format": "",
        "example_outbound_message": {},
        "inbound_topic": "",
        "example_inbound_message": {},
        "bank_id": "gh.29.uk",
        "programming_lang": "Scala"
      },
      "error_response_bodies": [
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Dynamic-Message-Doc", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "example_outbound_message": {
            "type": "object",
            "properties": {}
          },
          "outbound_topic": {
            "type": "string"
          },
          "example_inbound_message": {
            "type": "object",
            "properties": {}
          },
          "bank_id": {
            "type": "string"
          },
          "inbound_topic": {
            "type": "string"
          },
          "programming_lang": {
            "type": "string"
          },
          "dynamic_message_doc_id": {
            "type": "string"
          },
          "process": {
            "type": "string"
          },
          "outbound_avro_schema": {
            "type": "string"
          },
          "method_body": {
            "type": "string"
          },
          "message_format": {
            "type": "string"
          },
          "adapter_implementation": {
            "type": "string"
          },
          "inbound_avro_schema": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanGetBankLevelDynamicMessageDoc",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/banks/BANK_ID/dynamic-message-docs/DYNAMIC_MESSAGE_DOC_ID",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv2.0.0-addSocialMediaHandle",
      "implemented_by": {
        "version": "OBPv2.0.0",
        "function": "addSocialMediaHandle"
      },
      "request_verb": "POST",
      "request_url": "/obp/v2.0.0/banks/BANK_ID/customers/CUSTOMER_ID/social_media_handles",
      "summary": "Add Social Media Handle",
      "description": "<p>Add a social media handle for the customer specified by CUSTOMER_ID</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#Customer.customer_id\">CUSTOMER_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>customer_number</strong></a>: 5987953</p>\n<p><a href=\"/glossary#date_activated\"><strong>date_activated</strong></a>:</p>\n<p><a href=\"/glossary#date_added\"><strong>date_added</strong></a>:</p>\n<p><a href=\"/glossary#handle\"><strong>handle</strong></a>:</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#success\"><strong>success</strong></a>:</p>\n",
      "description_markdown": "Add a social media handle for the customer specified by CUSTOMER_ID\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[CUSTOMER_ID](/glossary#Customer.customer_id): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n\n\n**JSON request body fields:**\n\n\n\n[**customer_number**](/glossary#): 5987953\n\n\n\n[**date_activated**](/glossary#date_activated): \n\n\n\n[**date_added**](/glossary#date_added): \n\n\n\n[**handle**](/glossary#handle): \n\n\n\n[**type**](/glossary#type): \n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**success**](/glossary#success): \n\n\n",
      "example_request_body": {
        "customer_number": "5987953",
        "type": "PlaceholderString",
        "handle": "PlaceholderString",
        "date_added": "1100-01-01T00:00:00Z",
        "date_activated": "1100-01-01T00:00:00Z"
      },
      "success_response_body": {
        "success": "Success"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-10001: Incorrect json format.",
        "OBP-30111: Invalid Bank Id. The BANK_ID should only contain 0-9/a-z/A-Z/'-'/'.'/'_', the length should be smaller than 255.",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-30046: Customer not found. Please specify a valid value for CUSTOMER_ID.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Customer"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "date_added": {
            "type": "string",
            "format": "date-time"
          },
          "date_activated": {
            "type": "string",
            "format": "date-time"
          },
          "type": {
            "type": "string"
          },
          "customer_number": {
            "type": "string"
          },
          "handle": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "success": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanAddSocialMediaHandle",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/customers/CUSTOMER_ID/social_media_handles",
      "connector_methods": ["obp.getBankLegacy"]
    },
    {
      "operation_id": "OBPv3.1.0-createCreditLimitRequest",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "createCreditLimitRequest"
      },
      "request_verb": "POST",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/customers/CUSTOMER_ID/credit_limit/requests",
      "summary": "Create Credit Limit Order Request",
      "description": "<p><strong>NOTE: This endpoint currently only returns example data.</strong></p>\n<p>Create credit limit order request</p>\n<p>Authentication is Optional</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#Customer.customer_id\">CUSTOMER_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#current_credit_documentation\"><strong>current_credit_documentation</strong></a>:</p>\n<p><a href=\"/glossary#requested_current_rate_amount1\"><strong>requested_current_rate_amount1</strong></a>:</p>\n<p><a href=\"/glossary#requested_current_rate_amount2\"><strong>requested_current_rate_amount2</strong></a>: 20</p>\n<p><a href=\"/glossary#requested_current_valid_end_date\"><strong>requested_current_valid_end_date</strong></a>:</p>\n<p><a href=\"/glossary#requested_temporary_valid_end_date\"><strong>requested_temporary_valid_end_date</strong></a>:</p>\n<p><a href=\"/glossary#temporary_credit_documentation\"><strong>temporary_credit_documentation</strong></a>:</p>\n<p><a href=\"/glossary#temporary_requested_current_amount\"><strong>temporary_requested_current_amount</strong></a>:</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#execution_date\"><strong>execution_date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#execution_time\"><strong>execution_time</strong></a>:</p>\n<p><a href=\"/glossary#short_reference\"><strong>short_reference</strong></a>:</p>\n<p><a href=\"/glossary#token\"><strong>token</strong></a>:</p>\n",
      "description_markdown": "**NOTE: This endpoint currently only returns example data.**\n\n      \nCreate credit limit order request\n\n\nAuthentication is Optional\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[CUSTOMER_ID](/glossary#Customer.customer_id): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n\n\n**JSON request body fields:**\n\n\n\n[**current_credit_documentation**](/glossary#current_credit_documentation): \n\n\n\n[**requested_current_rate_amount1**](/glossary#requested_current_rate_amount1): \n\n\n\n[**requested_current_rate_amount2**](/glossary#requested_current_rate_amount2): 20\n\n\n\n[**requested_current_valid_end_date**](/glossary#requested_current_valid_end_date): \n\n\n\n[**requested_temporary_valid_end_date**](/glossary#requested_temporary_valid_end_date): \n\n\n\n[**temporary_credit_documentation**](/glossary#temporary_credit_documentation): \n\n\n\n[**temporary_requested_current_amount**](/glossary#temporary_requested_current_amount): \n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**execution_date**](/glossary#execution_date): 2020-01-27\n\n\n\n[**execution_time**](/glossary#execution_time): \n\n\n\n[**short_reference**](/glossary#short_reference): \n\n\n\n[**token**](/glossary#token): \n\n\n",
      "example_request_body": {
        "requested_current_rate_amount1": "String",
        "requested_current_rate_amount2": "String",
        "requested_current_valid_end_date": "String",
        "current_credit_documentation": "String",
        "temporary_requested_current_amount": "String",
        "requested_temporary_valid_end_date": "String",
        "temporary_credit_documentation": "String"
      },
      "success_response_body": {
        "execution_time": "String",
        "execution_date": "String",
        "token": "String",
        "short_reference": "String"
      },
      "error_response_bodies": ["OBP-50000: Unknown Error."],
      "tags": ["Customer", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "requested_temporary_valid_end_date": {
            "type": "string",
            "format": "date-time"
          },
          "current_credit_documentation": {
            "type": "string"
          },
          "temporary_requested_current_amount": {
            "type": "string"
          },
          "requested_current_valid_end_date": {
            "type": "string",
            "format": "date-time"
          },
          "requested_current_rate_amount1": {
            "type": "string"
          },
          "requested_current_rate_amount2": {
            "type": "string"
          },
          "temporary_credit_documentation": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          },
          "short_reference": {
            "type": "string"
          },
          "execution_time": {
            "type": "string"
          },
          "execution_date": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/customers/CUSTOMER_ID/credit_limit/requests",
      "connector_methods": ["obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv3.1.0-getTaxResidence",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "getTaxResidence"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/customers/CUSTOMER_ID/tax-residences",
      "summary": "Get Tax Residences of Customer",
      "description": "<p>Get the Tax Residences of the Customer specified by CUSTOMER_ID.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#Customer.customer_id\">CUSTOMER_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#domain\"><strong>domain</strong></a>:</p>\n<p><a href=\"/glossary#tax_number\"><strong>tax_number</strong></a>: 456</p>\n<p><a href=\"/glossary#tax_residence\"><strong>tax_residence</strong></a>:</p>\n<p><a href=\"/glossary#tax_residence_id\"><strong>tax_residence_id</strong></a>:</p>\n",
      "description_markdown": "Get the Tax Residences of the Customer specified by CUSTOMER_ID.\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[CUSTOMER_ID](/glossary#Customer.customer_id): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**domain**](/glossary#domain): \n\n\n\n[**tax_number**](/glossary#tax_number): 456\n\n\n\n[**tax_residence**](/glossary#tax_residence): \n\n\n\n[**tax_residence_id**](/glossary#tax_residence_id): \n\n\n",
      "success_response_body": {
        "tax_residence": [
          {
            "domain": "Enter some domain",
            "tax_number": "Enter some number",
            "tax_residence_id": "902ba3bb-dedd-45e7-9319-2fd3f2cd98a1"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Customer", "KYC", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "tax_residence": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "tax_number": {
                  "type": "string"
                },
                "domain": {
                  "type": "string"
                },
                "tax_residence_id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/customers/CUSTOMER_ID/tax-residences",
      "connector_methods": [
        "obp.getTaxResidence",
        "obp.getCustomerByCustomerId",
        "obp.getBank",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv4.0.0-getUserInvitations",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getUserInvitations"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/user-invitations",
      "summary": "Get User Invitations",
      "description": "<p>Get User Invitations</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>company</strong></a>: company</p>\n<p><a href=\"/glossary#\"><strong>country</strong></a>: country</p>\n<p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"&#109;&#97;&#105;&#108;&#x74;&#111;&#x3a;f&#x65;&#x6c;&#105;&#120;&#115;&#x6d;&#x69;&#x74;&#x68;&#64;&#101;&#x78;&#97;m&#112;l&#x65;&#46;&#x63;&#x6f;m\">&#102;&#x65;&#x6c;&#105;&#120;s&#x6d;&#x69;t&#x68;@&#x65;&#120;&#x61;m&#112;l&#101;&#46;&#x63;&#x6f;&#109;</a></p>\n<p><a href=\"/glossary#first_name\"><strong>first_name</strong></a>:</p>\n<p><a href=\"/glossary#last_name\"><strong>last_name</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>purpose</strong></a>: purpose</p>\n<p><a href=\"/glossary#status\"><strong>status</strong></a>:</p>\n",
      "description_markdown": "Get User Invitations\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**company**](/glossary#): company\n\n\n\n[**country**](/glossary#): country\n\n\n\n[**email**](/glossary#): felixsmith@example.com\n\n\n\n[**first_name**](/glossary#first_name): \n\n\n\n[**last_name**](/glossary#last_name): \n\n\n\n[**purpose**](/glossary#): purpose\n\n\n\n[**status**](/glossary#status): \n\n\n",
      "success_response_body": {
        "first_name": "ACCOUNT_MANAGEMENT_FEE",
        "last_name": "ACCOUNT_MANAGEMENT_FEE",
        "email": "felixsmith@example.com",
        "company": "TESOBE",
        "country": "Germany",
        "purpose": "Developer",
        "status": "CREATED"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["User-Invitation", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "company": {
            "type": "string"
          },
          "purpose": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanGetUserInvitation",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/user-invitations",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv1.2.1-updateCounterpartyMoreInfo",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "updateCounterpartyMoreInfo"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/metadata/more_info",
      "summary": "Update Counterparty More Info",
      "description": "<p>Update the more info description of the counter party from the perpestive of the account e.g. My dentist</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#other_account_id\">OTHER_ACCOUNT_ID</a>:</p>\n<p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#success\"><strong>success</strong></a>:</p>\n",
      "description_markdown": "Update the more info description of the counter party from the perpestive of the account e.g. My dentist\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[OTHER_ACCOUNT_ID](/glossary#other_account_id): \n\n\n\n[VIEW_ID](/glossary#this_view_id): owner\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**success**](/glossary#success): \n\n\n",
      "example_request_body": {
        "more_info": "String"
      },
      "success_response_body": {
        "success": "Success"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-10001: Incorrect json format.",
        "the view does not allow metadata access",
        "the view does not allow updating more info",
        "More Info cannot be updated",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Counterparty-Metadata", "Counterparty", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "more_info": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "success": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/metadata/more_info",
      "connector_methods": [
        "obp.checkBankAccountExists",
        "obp.getBank",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv4.0.0-updateMyDynamicEntity",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "updateMyDynamicEntity"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v4.0.0/my/dynamic-entities/DYNAMIC_ENTITY_ID",
      "summary": "Update My Dynamic Entity",
      "description": "<p>Update my DynamicEntity.</p>\n<p>Authentication is Mandatory</p>\n<p>Update one of my DynamicEntity, after update finished, the corresponding CRUD endpoints will be changed.</p>\n<p>Current support filed types as follow:<br />\n[number, integer, boolean, string, DATE_WITH_DAY, reference]</p>\n<p>DATE_WITH_DAY format: yyyy-MM-dd</p>\n<p>Reference types are like foreign keys and composite foreign keys are supported. The value you need to supply as the (composite) foreign key is a UUID (or several UUIDs in the case of a composite key) that match value in another Entity..<br />\nThe following list shows all the possible reference types in the system with corresponding examples values so you can see how to construct each reference type value.</p>\n<pre><code>&quot;someField0&quot;: {\n    &quot;type&quot;: &quot;reference:FooBar&quot;,\n    &quot;example&quot;: &quot;47e82cd0-cd55-4a87-a97b-b6b0a6c91125&quot;\n}\n\n&quot;someField1&quot;: {\n    &quot;type&quot;: &quot;reference:risk_checks&quot;,\n    &quot;example&quot;: &quot;47e82cd0-cd55-4a87-a97b-b6b0a6c91125&quot;\n}\n\n&quot;someField2&quot;: {\n    &quot;type&quot;: &quot;reference:BookMarkBankAndAccount&quot;,\n    &quot;example&quot;: &quot;47e82cd0-cd55-4a87-a97b-b6b0a6c91125&quot;\n}\n\n&quot;someField3&quot;: {\n    &quot;type&quot;: &quot;reference:risk_check&quot;,\n    &quot;example&quot;: &quot;47e82cd0-cd55-4a87-a97b-b6b0a6c91125&quot;\n}\n\n&quot;someField4&quot;: {\n    &quot;type&quot;: &quot;reference:BookMarkBankAndAccount_system&quot;,\n    &quot;example&quot;: &quot;47e82cd0-cd55-4a87-a97b-b6b0a6c91125&quot;\n}\n\n&quot;someField5&quot;: {\n    &quot;type&quot;: &quot;reference:Hospital&quot;,\n    &quot;example&quot;: &quot;47e82cd0-cd55-4a87-a97b-b6b0a6c91125&quot;\n}\n\n&quot;someField6&quot;: {\n    &quot;type&quot;: &quot;reference:Bank&quot;,\n    &quot;example&quot;: &quot;47e82cd0-cd55-4a87-a97b-b6b0a6c91125&quot;\n}\n\n&quot;someField7&quot;: {\n    &quot;type&quot;: &quot;reference:Consumer&quot;,\n    &quot;example&quot;: &quot;47e82cd0-cd55-4a87-a97b-b6b0a6c91125&quot;\n}\n\n&quot;someField8&quot;: {\n    &quot;type&quot;: &quot;reference:Customer&quot;,\n    &quot;example&quot;: &quot;47e82cd0-cd55-4a87-a97b-b6b0a6c91125&quot;\n}\n\n&quot;someField9&quot;: {\n    &quot;type&quot;: &quot;reference:MethodRouting&quot;,\n    &quot;example&quot;: &quot;47e82cd0-cd55-4a87-a97b-b6b0a6c91125&quot;\n}\n\n&quot;someField10&quot;: {\n    &quot;type&quot;: &quot;reference:DynamicEntity&quot;,\n    &quot;example&quot;: &quot;47e82cd0-cd55-4a87-a97b-b6b0a6c91125&quot;\n}\n\n&quot;someField11&quot;: {\n    &quot;type&quot;: &quot;reference:TransactionRequest&quot;,\n    &quot;example&quot;: &quot;47e82cd0-cd55-4a87-a97b-b6b0a6c91125&quot;\n}\n\n&quot;someField12&quot;: {\n    &quot;type&quot;: &quot;reference:ProductAttribute&quot;,\n    &quot;example&quot;: &quot;47e82cd0-cd55-4a87-a97b-b6b0a6c91125&quot;\n}\n\n&quot;someField13&quot;: {\n    &quot;type&quot;: &quot;reference:AccountAttribute&quot;,\n    &quot;example&quot;: &quot;47e82cd0-cd55-4a87-a97b-b6b0a6c91125&quot;\n}\n\n&quot;someField14&quot;: {\n    &quot;type&quot;: &quot;reference:TransactionAttribute&quot;,\n    &quot;example&quot;: &quot;47e82cd0-cd55-4a87-a97b-b6b0a6c91125&quot;\n}\n\n&quot;someField15&quot;: {\n    &quot;type&quot;: &quot;reference:CustomerAttribute&quot;,\n    &quot;example&quot;: &quot;47e82cd0-cd55-4a87-a97b-b6b0a6c91125&quot;\n}\n\n&quot;someField16&quot;: {\n    &quot;type&quot;: &quot;reference:AccountApplication&quot;,\n    &quot;example&quot;: &quot;47e82cd0-cd55-4a87-a97b-b6b0a6c91125&quot;\n}\n\n&quot;someField17&quot;: {\n    &quot;type&quot;: &quot;reference:CardAttribute&quot;,\n    &quot;example&quot;: &quot;47e82cd0-cd55-4a87-a97b-b6b0a6c91125&quot;\n}\n\n&quot;someField18&quot;: {\n    &quot;type&quot;: &quot;reference:Counterparty&quot;,\n    &quot;example&quot;: &quot;47e82cd0-cd55-4a87-a97b-b6b0a6c91125&quot;\n}\n\n&quot;someField19&quot;: {\n    &quot;type&quot;: &quot;reference:Branch:bankId&amp;branchId&quot;,\n    &quot;example&quot;: &quot;bankId=47e82cd0-cd55-4a87-a97b-b6b0a6c91125&amp;branchId=d63cc182-ca19-4a6f-b9b2-6e4980f7d4bc&quot;\n}\n\n&quot;someField20&quot;: {\n    &quot;type&quot;: &quot;reference:Atm:bankId&amp;atmId&quot;,\n    &quot;example&quot;: &quot;bankId=47e82cd0-cd55-4a87-a97b-b6b0a6c91125&amp;atmId=d63cc182-ca19-4a6f-b9b2-6e4980f7d4bc&quot;\n}\n\n&quot;someField21&quot;: {\n    &quot;type&quot;: &quot;reference:BankAccount:bankId&amp;accountId&quot;,\n    &quot;example&quot;: &quot;bankId=47e82cd0-cd55-4a87-a97b-b6b0a6c91125&amp;accountId=d63cc182-ca19-4a6f-b9b2-6e4980f7d4bc&quot;\n}\n\n&quot;someField22&quot;: {\n    &quot;type&quot;: &quot;reference:Product:bankId&amp;productCode&quot;,\n    &quot;example&quot;: &quot;bankId=47e82cd0-cd55-4a87-a97b-b6b0a6c91125&amp;productCode=d63cc182-ca19-4a6f-b9b2-6e4980f7d4bc&quot;\n}\n\n&quot;someField23&quot;: {\n    &quot;type&quot;: &quot;reference:PhysicalCard:bankId&amp;cardId&quot;,\n    &quot;example&quot;: &quot;bankId=47e82cd0-cd55-4a87-a97b-b6b0a6c91125&amp;cardId=d63cc182-ca19-4a6f-b9b2-6e4980f7d4bc&quot;\n}\n\n&quot;someField24&quot;: {\n    &quot;type&quot;: &quot;reference:Transaction:bankId&amp;accountId&amp;transactionId&quot;,\n    &quot;example&quot;: &quot;bankId=47e82cd0-cd55-4a87-a97b-b6b0a6c91125&amp;accountId=d63cc182-ca19-4a6f-b9b2-6e4980f7d4bc&amp;transactionId=500a5a9b-eeb5-48e4-a258-09164bfc98f5&quot;\n}\n\n&quot;someField25&quot;: {\n    &quot;type&quot;: &quot;reference:Counterparty:bankId&amp;accountId&amp;counterpartyId&quot;,\n    &quot;example&quot;: &quot;bankId=47e82cd0-cd55-4a87-a97b-b6b0a6c91125&amp;accountId=d63cc182-ca19-4a6f-b9b2-6e4980f7d4bc&amp;counterpartyId=500a5a9b-eeb5-48e4-a258-09164bfc98f5&quot;\n}\n\n</code></pre>\n",
      "description_markdown": "Update my DynamicEntity.\n\n\nAuthentication is Mandatory\n\nUpdate one of my DynamicEntity, after update finished, the corresponding CRUD endpoints will be changed.\n\nCurrent support filed types as follow:\n[number, integer, boolean, string, DATE_WITH_DAY, reference]\n\nDATE_WITH_DAY format: yyyy-MM-dd\n\nReference types are like foreign keys and composite foreign keys are supported. The value you need to supply as the (composite) foreign key is a UUID (or several UUIDs in the case of a composite key) that match value in another Entity..\nThe following list shows all the possible reference types in the system with corresponding examples values so you can see how to construct each reference type value.\n```\n\"someField0\": {\n    \"type\": \"reference:FooBar\",\n    \"example\": \"47e82cd0-cd55-4a87-a97b-b6b0a6c91125\"\n}\n\n\"someField1\": {\n    \"type\": \"reference:risk_checks\",\n    \"example\": \"47e82cd0-cd55-4a87-a97b-b6b0a6c91125\"\n}\n\n\"someField2\": {\n    \"type\": \"reference:BookMarkBankAndAccount\",\n    \"example\": \"47e82cd0-cd55-4a87-a97b-b6b0a6c91125\"\n}\n\n\"someField3\": {\n    \"type\": \"reference:risk_check\",\n    \"example\": \"47e82cd0-cd55-4a87-a97b-b6b0a6c91125\"\n}\n\n\"someField4\": {\n    \"type\": \"reference:BookMarkBankAndAccount_system\",\n    \"example\": \"47e82cd0-cd55-4a87-a97b-b6b0a6c91125\"\n}\n\n\"someField5\": {\n    \"type\": \"reference:Hospital\",\n    \"example\": \"47e82cd0-cd55-4a87-a97b-b6b0a6c91125\"\n}\n\n\"someField6\": {\n    \"type\": \"reference:Bank\",\n    \"example\": \"47e82cd0-cd55-4a87-a97b-b6b0a6c91125\"\n}\n\n\"someField7\": {\n    \"type\": \"reference:Consumer\",\n    \"example\": \"47e82cd0-cd55-4a87-a97b-b6b0a6c91125\"\n}\n\n\"someField8\": {\n    \"type\": \"reference:Customer\",\n    \"example\": \"47e82cd0-cd55-4a87-a97b-b6b0a6c91125\"\n}\n\n\"someField9\": {\n    \"type\": \"reference:MethodRouting\",\n    \"example\": \"47e82cd0-cd55-4a87-a97b-b6b0a6c91125\"\n}\n\n\"someField10\": {\n    \"type\": \"reference:DynamicEntity\",\n    \"example\": \"47e82cd0-cd55-4a87-a97b-b6b0a6c91125\"\n}\n\n\"someField11\": {\n    \"type\": \"reference:TransactionRequest\",\n    \"example\": \"47e82cd0-cd55-4a87-a97b-b6b0a6c91125\"\n}\n\n\"someField12\": {\n    \"type\": \"reference:ProductAttribute\",\n    \"example\": \"47e82cd0-cd55-4a87-a97b-b6b0a6c91125\"\n}\n\n\"someField13\": {\n    \"type\": \"reference:AccountAttribute\",\n    \"example\": \"47e82cd0-cd55-4a87-a97b-b6b0a6c91125\"\n}\n\n\"someField14\": {\n    \"type\": \"reference:TransactionAttribute\",\n    \"example\": \"47e82cd0-cd55-4a87-a97b-b6b0a6c91125\"\n}\n\n\"someField15\": {\n    \"type\": \"reference:CustomerAttribute\",\n    \"example\": \"47e82cd0-cd55-4a87-a97b-b6b0a6c91125\"\n}\n\n\"someField16\": {\n    \"type\": \"reference:AccountApplication\",\n    \"example\": \"47e82cd0-cd55-4a87-a97b-b6b0a6c91125\"\n}\n\n\"someField17\": {\n    \"type\": \"reference:CardAttribute\",\n    \"example\": \"47e82cd0-cd55-4a87-a97b-b6b0a6c91125\"\n}\n\n\"someField18\": {\n    \"type\": \"reference:Counterparty\",\n    \"example\": \"47e82cd0-cd55-4a87-a97b-b6b0a6c91125\"\n}\n\n\"someField19\": {\n    \"type\": \"reference:Branch:bankId&branchId\",\n    \"example\": \"bankId=47e82cd0-cd55-4a87-a97b-b6b0a6c91125&branchId=d63cc182-ca19-4a6f-b9b2-6e4980f7d4bc\"\n}\n\n\"someField20\": {\n    \"type\": \"reference:Atm:bankId&atmId\",\n    \"example\": \"bankId=47e82cd0-cd55-4a87-a97b-b6b0a6c91125&atmId=d63cc182-ca19-4a6f-b9b2-6e4980f7d4bc\"\n}\n\n\"someField21\": {\n    \"type\": \"reference:BankAccount:bankId&accountId\",\n    \"example\": \"bankId=47e82cd0-cd55-4a87-a97b-b6b0a6c91125&accountId=d63cc182-ca19-4a6f-b9b2-6e4980f7d4bc\"\n}\n\n\"someField22\": {\n    \"type\": \"reference:Product:bankId&productCode\",\n    \"example\": \"bankId=47e82cd0-cd55-4a87-a97b-b6b0a6c91125&productCode=d63cc182-ca19-4a6f-b9b2-6e4980f7d4bc\"\n}\n\n\"someField23\": {\n    \"type\": \"reference:PhysicalCard:bankId&cardId\",\n    \"example\": \"bankId=47e82cd0-cd55-4a87-a97b-b6b0a6c91125&cardId=d63cc182-ca19-4a6f-b9b2-6e4980f7d4bc\"\n}\n\n\"someField24\": {\n    \"type\": \"reference:Transaction:bankId&accountId&transactionId\",\n    \"example\": \"bankId=47e82cd0-cd55-4a87-a97b-b6b0a6c91125&accountId=d63cc182-ca19-4a6f-b9b2-6e4980f7d4bc&transactionId=500a5a9b-eeb5-48e4-a258-09164bfc98f5\"\n}\n\n\"someField25\": {\n    \"type\": \"reference:Counterparty:bankId&accountId&counterpartyId\",\n    \"example\": \"bankId=47e82cd0-cd55-4a87-a97b-b6b0a6c91125&accountId=d63cc182-ca19-4a6f-b9b2-6e4980f7d4bc&counterpartyId=500a5a9b-eeb5-48e4-a258-09164bfc98f5\"\n}\n\n```",
      "example_request_body": {
        "FooBar": {
          "description": "description of this entity, can be markdown text.",
          "required": ["name"],
          "properties": {
            "name": {
              "type": "string",
              "minLength": 3,
              "maxLength": 20,
              "example": "James Brown",
              "description": "description of **name** field, can be markdown text."
            },
            "number": {
              "type": "integer",
              "example": 698761728,
              "description": "description of **number** field, can be markdown text."
            }
          }
        },
        "hasPersonalEntity": true
      },
      "success_response_body": {
        "bankId": "gh.29.uk",
        "FooBar": {
          "description": "description of this entity, can be markdown text.",
          "required": ["name"],
          "properties": {
            "name": {
              "type": "string",
              "minLength": 3,
              "maxLength": 20,
              "example": "James Brown",
              "description": "description of **name** field, can be markdown text."
            },
            "number": {
              "type": "integer",
              "example": 698761728,
              "description": "description of **number** field, can be markdown text."
            }
          }
        },
        "dynamicEntityId": "dynamic-entity-id",
        "userId": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
        "hasPersonalEntity": true
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-10001: Incorrect json format.",
        "OBP-09001: DynamicEntity not found. Please specify a valid value for DYNAMIC_ENTITY_ID.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Dynamic-Entity-Manage", "API", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "hasPersonalEntity": {
            "type": "boolean"
          },
          "FooBar": {
            "type": "object",
            "properties": {
              "required": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "description": {
                "type": "string"
              },
              "properties": {
                "type": "object",
                "properties": {
                  "number": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": ["number", "integer", "boolean", "string", "DATE_WITH_DAY"]
                      },
                      "example": {
                        "type": "integer"
                      },
                      "description": {
                        "type": "string"
                      }
                    }
                  },
                  "name": {
                    "type": "object",
                    "properties": {
                      "minLength": {
                        "type": "integer"
                      },
                      "type": {
                        "type": "string",
                        "enum": ["number", "integer", "boolean", "string", "DATE_WITH_DAY"]
                      },
                      "maxLength": {
                        "type": "integer"
                      },
                      "example": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "dynamicEntityId": {
            "type": "string"
          },
          "bankId": {
            "type": "string"
          },
          "hasPersonalEntity": {
            "type": "boolean"
          },
          "userId": {
            "type": "string"
          },
          "FooBar": {
            "type": "object",
            "properties": {
              "required": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "description": {
                "type": "string"
              },
              "properties": {
                "type": "object",
                "properties": {
                  "number": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": ["number", "integer", "boolean", "string", "DATE_WITH_DAY"]
                      },
                      "example": {
                        "type": "integer"
                      },
                      "description": {
                        "type": "string"
                      }
                    }
                  },
                  "name": {
                    "type": "object",
                    "properties": {
                      "minLength": {
                        "type": "integer"
                      },
                      "type": {
                        "type": "string",
                        "enum": ["number", "integer", "boolean", "string", "DATE_WITH_DAY"]
                      },
                      "maxLength": {
                        "type": "integer"
                      },
                      "example": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/my/dynamic-entities/DYNAMIC_ENTITY_ID",
      "connector_methods": ["obp.dynamicEntityProcess"]
    },
    {
      "operation_id": "OBPv4.0.0-getMyDynamicEntities",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getMyDynamicEntities"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/my/dynamic-entities",
      "summary": "Get My Dynamic Entities",
      "description": "<p>Get all my Dynamic Entities.</p>\n<p>Authentication is Mandatory</p>\n",
      "description_markdown": "Get all my Dynamic Entities.\n\nAuthentication is Mandatory",
      "success_response_body": {
        "dynamic_entities": [
          {
            "bankId": "gh.29.uk",
            "FooBar": {
              "description": "description of this entity, can be markdown text.",
              "required": ["name"],
              "properties": {
                "name": {
                  "type": "string",
                  "minLength": 3,
                  "maxLength": 20,
                  "example": "James Brown",
                  "description": "description of **name** field, can be markdown text."
                },
                "number": {
                  "type": "integer",
                  "example": 698761728,
                  "description": "description of **number** field, can be markdown text."
                }
              }
            },
            "dynamicEntityId": "dynamic-entity-id",
            "userId": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
            "hasPersonalEntity": true
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Dynamic-Entity-Manage", "API", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "dynamic_entities": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "dynamicEntityId": {
                  "type": "string"
                },
                "bankId": {
                  "type": "string"
                },
                "hasPersonalEntity": {
                  "type": "boolean"
                },
                "userId": {
                  "type": "string"
                },
                "FooBar": {
                  "type": "object",
                  "properties": {
                    "required": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "description": {
                      "type": "string"
                    },
                    "properties": {
                      "type": "object",
                      "properties": {
                        "number": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": ["number", "integer", "boolean", "string", "DATE_WITH_DAY"]
                            },
                            "example": {
                              "type": "integer"
                            },
                            "description": {
                              "type": "string"
                            }
                          }
                        },
                        "name": {
                          "type": "object",
                          "properties": {
                            "minLength": {
                              "type": "integer"
                            },
                            "type": {
                              "type": "string",
                              "enum": ["number", "integer", "boolean", "string", "DATE_WITH_DAY"]
                            },
                            "maxLength": {
                              "type": "integer"
                            },
                            "example": {
                              "type": "string"
                            },
                            "description": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/my/dynamic-entities",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv2.2.0-getConnectorMetrics",
      "implemented_by": {
        "version": "OBPv2.2.0",
        "function": "getConnectorMetrics"
      },
      "request_verb": "GET",
      "request_url": "/obp/v2.2.0/management/connector/metrics",
      "summary": "Get Connector Metrics",
      "description": "<p>Get the all metrics</p>\n<p>require CanGetConnectorMetrics role</p>\n<p>Filters Part 1.<em>filtering</em> (no wilde cards etc.) parameters to GET /management/connector/metrics</p>\n<p>Should be able to filter on the following metrics fields</p>\n<p>eg: /management/connector/metrics?from_date=1100-01-01T01:01:01.000Z&amp;to_date=1100-01-01T01:01:01.000Z&amp;limit=50&amp;offset=2</p>\n<p>1 from_date (defaults to one week before current date): eg:from_date=1100-01-01T01:01:01.000Z</p>\n<p>2 to_date (defaults to current date) eg:to_date=1100-01-01T01:01:01.000Z</p>\n<p>3 limit (for pagination: defaults to 1000)  eg:limit=2000</p>\n<p>4 offset (for pagination: zero index, defaults to 0) eg: offset=10</p>\n<p>eg: /management/connector/metrics?from_date=1100-01-01T01:01:01.000Z&amp;to_date=1100-01-01T01:01:01.000Z&amp;limit=100&amp;offset=300</p>\n<p>Other filters:</p>\n<p>5 connector_name  (if null ignore)</p>\n<p>6 function_name (if null ignore)</p>\n<p>7 correlation_id (if null ignore)</p>\n<p>Authentication is Mandatory</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#connector_name\"><strong>connector_name</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>correlation_id</strong></a>: 1flssoftxq0cr1nssr68u0mioj</p>\n<p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#duration\"><strong>duration</strong></a>: 5.123</p>\n<p><a href=\"/glossary#function_name\"><strong>function_name</strong></a>:</p>\n<p><a href=\"/glossary#metrics\"><strong>metrics</strong></a>:</p>\n",
      "description_markdown": "Get the all metrics\n\nrequire CanGetConnectorMetrics role\n\nFilters Part 1.*filtering* (no wilde cards etc.) parameters to GET /management/connector/metrics\n\nShould be able to filter on the following metrics fields\n\neg: /management/connector/metrics?from_date=1100-01-01T01:01:01.000Z&to_date=1100-01-01T01:01:01.000Z&limit=50&offset=2\n\n1 from_date (defaults to one week before current date): eg:from_date=1100-01-01T01:01:01.000Z\n\n2 to_date (defaults to current date) eg:to_date=1100-01-01T01:01:01.000Z\n\n3 limit (for pagination: defaults to 1000)  eg:limit=2000\n\n4 offset (for pagination: zero index, defaults to 0) eg: offset=10\n\neg: /management/connector/metrics?from_date=1100-01-01T01:01:01.000Z&to_date=1100-01-01T01:01:01.000Z&limit=100&offset=300\n\nOther filters:\n\n5 connector_name  (if null ignore)\n\n6 function_name (if null ignore)\n\n7 correlation_id (if null ignore)\n\n      \n\nAuthentication is Mandatory\n\n\n**JSON response body fields:**\n\n\n\n[**connector_name**](/glossary#connector_name): \n\n\n\n[**correlation_id**](/glossary#): 1flssoftxq0cr1nssr68u0mioj\n\n\n\n[**date**](/glossary#): 2020-01-27\n\n\n\n[**duration**](/glossary#duration): 5.123\n\n\n\n[**function_name**](/glossary#function_name): \n\n\n\n[**metrics**](/glossary#metrics): \n\n\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "metrics": [
          {
            "connector_name": "mapper",
            "function_name": "getBanks",
            "correlation_id": "12345",
            "date": "1100-01-01T00:00:00Z",
            "duration": 1000
          }
        ]
      },
      "error_response_bodies": [
        "OBP-10005: Invalid Date Format. Could not convert value to a Date.",
        "OBP-50000: Unknown Error.",
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["Metric", "API", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "metrics": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "connector_name": {
                  "type": "string"
                },
                "duration": {
                  "type": "integer"
                },
                "date": {
                  "type": "string",
                  "format": "date-time"
                },
                "correlation_id": {
                  "type": "string"
                },
                "function_name": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetConnectorMetrics",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/connector/metrics",
      "connector_methods": ["obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv4.0.0-createUserWithAccountAccess",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "createUserWithAccountAccess"
      },
      "request_verb": "POST",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/user-account-access",
      "summary": "Create (DAuth) User with Account Access",
      "description": "<p>This endpoint is used as part of the DAuth solution to grant access to account and transaction data to a smart contract on the blockchain.</p>\n<p>Put the smart contract address in username</p>\n<p>For provider use &quot;dauth&quot;</p>\n<p>This endpoint will create the (DAuth) User with username and provider if the User does not already exist.</p>\n<p>Authentication is Mandatory and the logged in user needs to be account holder.</p>\n<p>For information about DAuth see below:</p>\n<details>\n  <summary style=\"display:list-item;cursor:s-resize;\">DAuth</summary>\n  <h3><a href=\"#dauth-introduction-setup-and-usage\" id=\"dauth-introduction-setup-and-usage\">DAuth Introduction, Setup and Usage</a></h3>\n<p>DAuth is an experimental authentication mechanism that aims to pin an ethereum or other blockchain Smart Contract to an OBP &quot;User&quot;.</p>\n<p>In the future, it might be possible to be more specific and pin specific actors (wallets) that are acting within the smart contract, but so far, one smart contract acts on behalf of one User.</p>\n<p>Thus, if a smart contract &quot;X&quot; calls the OBP API using the DAuth header, OBP will get or create a user called X and the call will proceed in the context of that User &quot;X&quot;.</p>\n<p>DAuth is invoked by the REST client (caller) including a specific header (see step 3 below) in any OBP REST call.</p>\n<p>When OBP receives the DAuth token, it creates or gets a User with a username based on the smart_contract_address and the provider based on the network_name. The combination of username and provider is unique in OBP.</p>\n<p>If you are calling OBP-API via an API3 Airnode, the Airnode will take care of constructing the required header.</p>\n<p>When OBP detects a DAuth header / token it first checks if the Consumer is allowed to make such a call. OBP will validate the Consumer ip address and signature etc.</p>\n<p>Note: The DAuth flow does <em>not</em> require an explicit POST like Direct Login to create the token.</p>\n<p>Permissions may be assigned to an OBP User at any time, via the UserAuthContext, Views, Entitlements to Roles or Consents.</p>\n<p>Note: <em>DAuth is NOT enabled on this instance!</em></p>\n<p>Note: <em>The DAuth client is responsible for creating a token which will be trusted by OBP absolutely</em>!</p>\n<p>To use DAuth:</p>\n<h3><a href=\"#1-configure-obp-api-to-accept-dauth\" id=\"1-configure-obp-api-to-accept-dauth\">1) Configure OBP API to accept DAuth.</a></h3>\n<p>Set up properties in your props file</p>\n<pre><code># -- DAuth --------------------------------------\n# Define secret used to validate JWT token\n# jwt.public_key_rsa=path-to-the-pem-file\n# Enable/Disable DAuth communication at all\n# In case isn't defined default value is false\n# allow_dauth=false\n# Define comma separated list of allowed IP addresses\n# dauth.host=127.0.0.1\n# -------------------------------------- DAuth--\n</code></pre>\n<p>Please keep in mind that property jwt.public_key_rsa is used to validate JWT token to check it is not changed or corrupted during transport.</p>\n<h3><a href=\"#2-create-have-access-to-a-jwt\" id=\"2-create-have-access-to-a-jwt\">2) Create / have access to a JWT</a></h3>\n<p>The following videos are available:<br />\n* <a href=\"https://vimeo.com/644315074\">DAuth in local environment</a></p>\n<p>HEADER:ALGORITHM &amp; TOKEN TYPE</p>\n<pre><code>{\n  &quot;alg&quot;: &quot;RS256&quot;,\n  &quot;typ&quot;: &quot;JWT&quot;\n}\n</code></pre>\n<p>PAYLOAD:DATA</p>\n<pre><code>{\n  &quot;smart_contract_address&quot;: &quot;0xe123425E7734CE288F8367e1Bb143E90bb3F051224&quot;,\n  &quot;network_name&quot;: &quot;AIRNODE.TESTNET.ETHEREUM&quot;,\n  &quot;msg_sender&quot;: &quot;0xe12340927f1725E7734CE288F8367e1Bb143E90fhku767&quot;,\n  &quot;consumer_key&quot;: &quot;0x1234a4ec31e89cea54d1f125db7536e874ab4a96b4d4f6438668b6bb10a6adb&quot;,\n  &quot;timestamp&quot;: &quot;2021-11-04T14:13:40Z&quot;,\n  &quot;request_id&quot;: &quot;0Xe876987694328763492876348928736497869273649&quot;\n}\n</code></pre>\n<p>VERIFY SIGNATURE</p>\n<pre><code>RSASHA256(\n  base64UrlEncode(header) + &quot;.&quot; +\n  base64UrlEncode(payload),\n<p>) your-RSA-key-pair</p>\n</code></pre>\n<p>Here is an example token:</p>\n<pre><code>eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzbWFydF9jb250cmFjdF9hZGRyZXNzIjoiMHhlMTIzNDI1RTc3MzRDRTI4OEY4MzY3ZTFCYjE0M0U5MGJiM0YwNTEyMjQiLCJuZXR3b3JrX25hbWUiOiJFVEhFUkVVTSIsIm1zZ19zZW5kZXIiOiIweGUxMjM0MDkyN2YxNzI1RTc3MzRDRTI4OEY4MzY3ZTFCYjE0M0U5MGZoa3U3NjciLCJjb25zdW1lcl9rZXkiOiIweDEyMzRhNGVjMzFlODljZWE1NGQxZjEyNWRiNzUzNmU4NzRhYjRhOTZiNGQ0ZjY0Mzg2NjhiNmJiMTBhNmFkYiIsInRpbWVzdGFtcCI6IjIwMjEtMTEtMDRUMTQ6MTM6NDBaIiwicmVxdWVzdF9pZCI6IjBYZTg3Njk4NzY5NDMyODc2MzQ5Mjg3NjM0ODkyODczNjQ5Nzg2OTI3MzY0OSJ9.XSiQxjEVyCouf7zT8MubEKsbOBZuReGVhnt9uck6z6k\n</code></pre>\n<h3><a href=\"#3-try-a-rest-call-using-the-header\" id=\"3-try-a-rest-call-using-the-header\">3) Try a REST call using the header</a></h3>\n<p>Using your favorite http client:</p>\n<p>GET <a href=\"https://obp-apisandbox.joinfincubator.com/obp/v3.0.0/users/current\">https://obp-apisandbox.joinfincubator.com/obp/v3.0.0/users/current</a></p>\n<p>Body</p>\n<p>Leave Empty!</p>\n<p>Headers:</p>\n<pre><code>   DAuth: your-jwt-from-step-above\n</code></pre>\n<p>Here is it all together:</p>\n<p>GET <a href=\"https://obp-apisandbox.joinfincubator.com/obp/v3.0.0/users/current\">https://obp-apisandbox.joinfincubator.com/obp/v3.0.0/users/current</a> HTTP/1.1<br />\nHost: localhost:8080<br />\nUser-Agent: curl/7.47.0<br />\nAccept: <em>/</em><br />\nDAuth: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzbWFydF9jb250cmFjdF9hZGRyZXNzIjoiMHhlMTIzNDI1RTc3MzRDRTI4OEY4MzY3ZTFCYjE0M0U5MGJiM0YwNTEyMjQiLCJuZXR3b3JrX25hbWUiOiJFVEhFUkVVTSIsIm1zZ19zZW5kZXIiOiIweGUxMjM0MDkyN2YxNzI1RTc3MzRDRTI4OEY4MzY3ZTFCYjE0M0U5MGZoa3U3NjciLCJjb25zdW1lcl9rZXkiOiIweDEyMzRhNGVjMzFlODljZWE1NGQxZjEyNWRiNzUzNmU4NzRhYjRhOTZiNGQ0ZjY0Mzg2NjhiNmJiMTBhNmFkYiIsInRpbWVzdGFtcCI6IjIwMjEtMTEtMDRUMTQ6MTM6NDBaIiwicmVxdWVzdF9pZCI6IjBYZTg3Njk4NzY5NDMyODc2MzQ5Mjg3NjM0ODkyODczNjQ5Nzg2OTI3MzY0OSJ9.XSiQxjEVyCouf7zT8MubEKsbOBZuReGVhnt9uck6z6k</p>\n<p>CURL example</p>\n<pre><code>curl -v -H 'DAuth: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzbWFydF9jb250cmFjdF9hZGRyZXNzIjoiMHhlMTIzNDI1RTc3MzRDRTI4OEY4MzY3ZTFCYjE0M0U5MGJiM0YwNTEyMjQiLCJuZXR3b3JrX25hbWUiOiJFVEhFUkVVTSIsIm1zZ19zZW5kZXIiOiIweGUxMjM0MDkyN2YxNzI1RTc3MzRDRTI4OEY4MzY3ZTFCYjE0M0U5MGZoa3U3NjciLCJjb25zdW1lcl9rZXkiOiIweDEyMzRhNGVjMzFlODljZWE1NGQxZjEyNWRiNzUzNmU4NzRhYjRhOTZiNGQ0ZjY0Mzg2NjhiNmJiMTBhNmFkYiIsInRpbWVzdGFtcCI6IjIwMjEtMTEtMDRUMTQ6MTM6NDBaIiwicmVxdWVzdF9pZCI6IjBYZTg3Njk4NzY5NDMyODc2MzQ5Mjg3NjM0ODkyODczNjQ5Nzg2OTI3MzY0OSJ9.XSiQxjEVyCouf7zT8MubEKsbOBZuReGVhnt9uck6z6k' https://obp-apisandbox.joinfincubator.com/obp/v3.0.0/users/current\n</code></pre>\n<p>You should receive a response like:</p>\n<pre><code>{\n    &quot;user_id&quot;: &quot;4c4d3175-1e5c-4cfd-9b08-dcdc209d8221&quot;,\n    &quot;email&quot;: &quot;&quot;,\n    &quot;provider_id&quot;: &quot;0xe123425E7734CE288F8367e1Bb143E90bb3F051224&quot;,\n    &quot;provider&quot;: &quot;ETHEREUM&quot;,\n    &quot;username&quot;: &quot;0xe123425E7734CE288F8367e1Bb143E90bb3F051224&quot;,\n    &quot;entitlements&quot;: {\n        &quot;list&quot;: []\n    }\n}\n</code></pre>\n<h3><a href=\"#under-the-hood\" id=\"under-the-hood\">Under the hood</a></h3>\n<p>The file, dauth.scala handles the DAuth,</p>\n<p>We:</p>\n<pre><code>-&gt; Check if Props allow_dauth is true\n  -&gt; Check if DAuth header exists\n    -&gt; Check if getRemoteIpAddress is OK\n      -&gt; Look for &quot;token&quot;\n        -&gt; parse the JWT token and getOrCreate the user\n          -&gt; get the data of the user\n</code></pre>\n<h3><a href=\"#more-information\" id=\"more-information\">More information</a></h3>\n<p>Parameter names and values are case sensitive.<br />\nEach parameter MUST NOT appear more than once per request.</p>\n</details>\n<br></br>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>is_system</strong></a>: true</p>\n<p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p>\n<p><a href=\"/glossary#\"><strong>username</strong></a>: felixsmith</p>\n<p><a href=\"/glossary#\"><strong>view_id</strong></a>: owner</p>\n<p><a href=\"/glossary#views\"><strong>views</strong></a>:</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#alias\"><strong>alias</strong></a>:</p>\n<p><a href=\"/glossary#can_add_comment\"><strong>can_add_comment</strong></a>:</p>\n<p><a href=\"/glossary#can_add_corporate_location\"><strong>can_add_corporate_location</strong></a>:</p>\n<p><a href=\"/glossary#can_add_counterparty\"><strong>can_add_counterparty</strong></a>: true</p>\n<p><a href=\"/glossary#can_add_image\"><strong>can_add_image</strong></a>:</p>\n<p><a href=\"/glossary#can_add_image_url\"><strong>can_add_image_url</strong></a>: true</p>\n<p><a href=\"/glossary#can_add_more_info\"><strong>can_add_more_info</strong></a>: true</p>\n<p><a href=\"/glossary#can_add_open_corporates_url\"><strong>can_add_open_corporates_url</strong></a>:</p>\n<p><a href=\"/glossary#can_add_physical_location\"><strong>can_add_physical_location</strong></a>:</p>\n<p><a href=\"/glossary#can_add_private_alias\"><strong>can_add_private_alias</strong></a>:</p>\n<p><a href=\"/glossary#can_add_public_alias\"><strong>can_add_public_alias</strong></a>:</p>\n<p><a href=\"/glossary#can_add_tag\"><strong>can_add_tag</strong></a>: true</p>\n<p><a href=\"/glossary#can_add_transaction_request_to_any_account\"><strong>can_add_transaction_request_to_any_account</strong></a>:</p>\n<p><a href=\"/glossary#can_add_transaction_request_to_own_account\"><strong>can_add_transaction_request_to_own_account</strong></a>:</p>\n<p><a href=\"/glossary#can_add_url\"><strong>can_add_url</strong></a>:</p>\n<p><a href=\"/glossary#can_add_where_tag\"><strong>can_add_where_tag</strong></a>:</p>\n<p><a href=\"/glossary#can_create_direct_debit\"><strong>can_create_direct_debit</strong></a>: true</p>\n<p><a href=\"/glossary#can_create_standing_order\"><strong>can_create_standing_order</strong></a>:</p>\n<p><a href=\"/glossary#can_delete_comment\"><strong>can_delete_comment</strong></a>:</p>\n<p><a href=\"/glossary#can_delete_corporate_location\"><strong>can_delete_corporate_location</strong></a>: true</p>\n<p><a href=\"/glossary#can_delete_image\"><strong>can_delete_image</strong></a>: true</p>\n<p><a href=\"/glossary#can_delete_physical_location\"><strong>can_delete_physical_location</strong></a>:</p>\n<p><a href=\"/glossary#can_delete_tag\"><strong>can_delete_tag</strong></a>:</p>\n<p><a href=\"/glossary#can_delete_where_tag\"><strong>can_delete_where_tag</strong></a>: true</p>\n<p><a href=\"/glossary#can_edit_owner_comment\"><strong>can_edit_owner_comment</strong></a>: true</p>\n<p><a href=\"/glossary#can_query_available_funds\"><strong>can_query_available_funds</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_balance\"><strong>can_see_bank_account_balance</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_bank_name\"><strong>can_see_bank_account_bank_name</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_credit_limit\"><strong>can_see_bank_account_credit_limit</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_currency\"><strong>can_see_bank_account_currency</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_iban\"><strong>can_see_bank_account_iban</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_label\"><strong>can_see_bank_account_label</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_national_identifier\"><strong>can_see_bank_account_national_identifier</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_number\"><strong>can_see_bank_account_number</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_owners\"><strong>can_see_bank_account_owners</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_routing_address\"><strong>can_see_bank_account_routing_address</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_routing_scheme\"><strong>can_see_bank_account_routing_scheme</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_swift_bic\"><strong>can_see_bank_account_swift_bic</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_type\"><strong>can_see_bank_account_type</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_routing_address\"><strong>can_see_bank_routing_address</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_routing_scheme\"><strong>can_see_bank_routing_scheme</strong></a>:</p>\n<p><a href=\"/glossary#can_see_comments\"><strong>can_see_comments</strong></a>:</p>\n<p><a href=\"/glossary#can_see_corporate_location\"><strong>can_see_corporate_location</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_image_url\"><strong>can_see_image_url</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_images\"><strong>can_see_images</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_more_info\"><strong>can_see_more_info</strong></a>:</p>\n<p><a href=\"/glossary#can_see_open_corporates_url\"><strong>can_see_open_corporates_url</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_bank_name\"><strong>can_see_other_account_bank_name</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_iban\"><strong>can_see_other_account_iban</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_kind\"><strong>can_see_other_account_kind</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_metadata\"><strong>can_see_other_account_metadata</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_national_identifier\"><strong>can_see_other_account_national_identifier</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_other_account_number\"><strong>can_see_other_account_number</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_other_account_routing_address\"><strong>can_see_other_account_routing_address</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_other_account_routing_scheme\"><strong>can_see_other_account_routing_scheme</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_swift_bic\"><strong>can_see_other_account_swift_bic</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_other_bank_routing_address\"><strong>can_see_other_bank_routing_address</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_bank_routing_scheme\"><strong>can_see_other_bank_routing_scheme</strong></a>:</p>\n<p><a href=\"/glossary#can_see_owner_comment\"><strong>can_see_owner_comment</strong></a>:</p>\n<p><a href=\"/glossary#can_see_physical_location\"><strong>can_see_physical_location</strong></a>:</p>\n<p><a href=\"/glossary#can_see_private_alias\"><strong>can_see_private_alias</strong></a>:</p>\n<p><a href=\"/glossary#can_see_public_alias\"><strong>can_see_public_alias</strong></a>:</p>\n<p><a href=\"/glossary#can_see_tags\"><strong>can_see_tags</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_amount\"><strong>can_see_transaction_amount</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_transaction_balance\"><strong>can_see_transaction_balance</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_currency\"><strong>can_see_transaction_currency</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_description\"><strong>can_see_transaction_description</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_transaction_finish_date\"><strong>can_see_transaction_finish_date</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_metadata\"><strong>can_see_transaction_metadata</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_other_bank_account\"><strong>can_see_transaction_other_bank_account</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_start_date\"><strong>can_see_transaction_start_date</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_this_bank_account\"><strong>can_see_transaction_this_bank_account</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_type\"><strong>can_see_transaction_type</strong></a>:</p>\n<p><a href=\"/glossary#can_see_url\"><strong>can_see_url</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_where_tag\"><strong>can_see_where_tag</strong></a>: true</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#hide_metadata_if_alias_used\"><strong>hide_metadata_if_alias_used</strong></a>:</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#is_public\"><strong>is_public</strong></a>: true</p>\n<p><a href=\"/glossary#\"><strong>is_system</strong></a>: true</p>\n<p><a href=\"/glossary#metadata_view\"><strong>metadata_view</strong></a>:</p>\n<p><a href=\"/glossary#short_name\"><strong>short_name</strong></a>:</p>\n<p><a href=\"/glossary#is_firehose\">is_firehose</a>:</p>\n",
      "description_markdown": "This endpoint is used as part of the DAuth solution to grant access to account and transaction data to a smart contract on the blockchain.\n\nPut the smart contract address in username\n\nFor provider use \"dauth\"\n\nThis endpoint will create the (DAuth) User with username and provider if the User does not already exist.\n\nAuthentication is Mandatory and the logged in user needs to be account holder.\n\nFor information about DAuth see below:\n\n\n<details>\n  <summary style=\"display:list-item;cursor:s-resize;\">DAuth</summary>\n  \n  <h3><a href=\"#dauth-introduction-setup-and-usage\" id=\"dauth-introduction-setup-and-usage\">DAuth Introduction, Setup and Usage</a></h3>\n<p>DAuth is an experimental authentication mechanism that aims to pin an ethereum or other blockchain Smart Contract to an OBP &quot;User&quot;.</p>\n<p>In the future, it might be possible to be more specific and pin specific actors (wallets) that are acting within the smart contract, but so far, one smart contract acts on behalf of one User.</p>\n<p>Thus, if a smart contract &quot;X&quot; calls the OBP API using the DAuth header, OBP will get or create a user called X and the call will proceed in the context of that User &quot;X&quot;.</p>\n<p>DAuth is invoked by the REST client (caller) including a specific header (see step 3 below) in any OBP REST call.</p>\n<p>When OBP receives the DAuth token, it creates or gets a User with a username based on the smart_contract_address and the provider based on the network_name. The combination of username and provider is unique in OBP.</p>\n<p>If you are calling OBP-API via an API3 Airnode, the Airnode will take care of constructing the required header.</p>\n<p>When OBP detects a DAuth header / token it first checks if the Consumer is allowed to make such a call. OBP will validate the Consumer ip address and signature etc.</p>\n<p>Note: The DAuth flow does <em>not</em> require an explicit POST like Direct Login to create the token.</p>\n<p>Permissions may be assigned to an OBP User at any time, via the UserAuthContext, Views, Entitlements to Roles or Consents.</p>\n<p>Note: <em>DAuth is NOT enabled on this instance!</em></p>\n<p>Note: <em>The DAuth client is responsible for creating a token which will be trusted by OBP absolutely</em>!</p>\n<p>To use DAuth:</p>\n<h3><a href=\"#1-configure-obp-api-to-accept-dauth\" id=\"1-configure-obp-api-to-accept-dauth\">1) Configure OBP API to accept DAuth.</a></h3>\n<p>Set up properties in your props file</p>\n<pre><code># -- DAuth --------------------------------------\n# Define secret used to validate JWT token\n# jwt.public_key_rsa=path-to-the-pem-file\n# Enable/Disable DAuth communication at all\n# In case isn't defined default value is false\n# allow_dauth=false\n# Define comma separated list of allowed IP addresses\n# dauth.host=127.0.0.1\n# -------------------------------------- DAuth--\n</code></pre>\n<p>Please keep in mind that property jwt.public_key_rsa is used to validate JWT token to check it is not changed or corrupted during transport.</p>\n<h3><a href=\"#2-create-have-access-to-a-jwt\" id=\"2-create-have-access-to-a-jwt\">2) Create / have access to a JWT</a></h3>\n<p>The following videos are available:<br />\n* <a href=\"https://vimeo.com/644315074\">DAuth in local environment</a></p>\n<p>HEADER:ALGORITHM &amp; TOKEN TYPE</p>\n<pre><code>{\n  &quot;alg&quot;: &quot;RS256&quot;,\n  &quot;typ&quot;: &quot;JWT&quot;\n}\n</code></pre>\n<p>PAYLOAD:DATA</p>\n<pre><code>{\n  &quot;smart_contract_address&quot;: &quot;0xe123425E7734CE288F8367e1Bb143E90bb3F051224&quot;,\n  &quot;network_name&quot;: &quot;AIRNODE.TESTNET.ETHEREUM&quot;,\n  &quot;msg_sender&quot;: &quot;0xe12340927f1725E7734CE288F8367e1Bb143E90fhku767&quot;,\n  &quot;consumer_key&quot;: &quot;0x1234a4ec31e89cea54d1f125db7536e874ab4a96b4d4f6438668b6bb10a6adb&quot;,\n  &quot;timestamp&quot;: &quot;2021-11-04T14:13:40Z&quot;,\n  &quot;request_id&quot;: &quot;0Xe876987694328763492876348928736497869273649&quot;\n}\n</code></pre>\n<p>VERIFY SIGNATURE</p>\n<pre><code>RSASHA256(\n  base64UrlEncode(header) + &quot;.&quot; +\n  base64UrlEncode(payload),\n\n) your-RSA-key-pair\n</code></pre>\n<p>Here is an example token:</p>\n<pre><code>eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzbWFydF9jb250cmFjdF9hZGRyZXNzIjoiMHhlMTIzNDI1RTc3MzRDRTI4OEY4MzY3ZTFCYjE0M0U5MGJiM0YwNTEyMjQiLCJuZXR3b3JrX25hbWUiOiJFVEhFUkVVTSIsIm1zZ19zZW5kZXIiOiIweGUxMjM0MDkyN2YxNzI1RTc3MzRDRTI4OEY4MzY3ZTFCYjE0M0U5MGZoa3U3NjciLCJjb25zdW1lcl9rZXkiOiIweDEyMzRhNGVjMzFlODljZWE1NGQxZjEyNWRiNzUzNmU4NzRhYjRhOTZiNGQ0ZjY0Mzg2NjhiNmJiMTBhNmFkYiIsInRpbWVzdGFtcCI6IjIwMjEtMTEtMDRUMTQ6MTM6NDBaIiwicmVxdWVzdF9pZCI6IjBYZTg3Njk4NzY5NDMyODc2MzQ5Mjg3NjM0ODkyODczNjQ5Nzg2OTI3MzY0OSJ9.XSiQxjEVyCouf7zT8MubEKsbOBZuReGVhnt9uck6z6k\n</code></pre>\n<h3><a href=\"#3-try-a-rest-call-using-the-header\" id=\"3-try-a-rest-call-using-the-header\">3) Try a REST call using the header</a></h3>\n<p>Using your favorite http client:</p>\n<p>GET <a href=\"https://obp-apisandbox.joinfincubator.com/obp/v3.0.0/users/current\">https://obp-apisandbox.joinfincubator.com/obp/v3.0.0/users/current</a></p>\n<p>Body</p>\n<p>Leave Empty!</p>\n<p>Headers:</p>\n<pre><code>   DAuth: your-jwt-from-step-above\n</code></pre>\n<p>Here is it all together:</p>\n<p>GET <a href=\"https://obp-apisandbox.joinfincubator.com/obp/v3.0.0/users/current\">https://obp-apisandbox.joinfincubator.com/obp/v3.0.0/users/current</a> HTTP/1.1<br />\nHost: localhost:8080<br />\nUser-Agent: curl/7.47.0<br />\nAccept: <em>/</em><br />\nDAuth: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzbWFydF9jb250cmFjdF9hZGRyZXNzIjoiMHhlMTIzNDI1RTc3MzRDRTI4OEY4MzY3ZTFCYjE0M0U5MGJiM0YwNTEyMjQiLCJuZXR3b3JrX25hbWUiOiJFVEhFUkVVTSIsIm1zZ19zZW5kZXIiOiIweGUxMjM0MDkyN2YxNzI1RTc3MzRDRTI4OEY4MzY3ZTFCYjE0M0U5MGZoa3U3NjciLCJjb25zdW1lcl9rZXkiOiIweDEyMzRhNGVjMzFlODljZWE1NGQxZjEyNWRiNzUzNmU4NzRhYjRhOTZiNGQ0ZjY0Mzg2NjhiNmJiMTBhNmFkYiIsInRpbWVzdGFtcCI6IjIwMjEtMTEtMDRUMTQ6MTM6NDBaIiwicmVxdWVzdF9pZCI6IjBYZTg3Njk4NzY5NDMyODc2MzQ5Mjg3NjM0ODkyODczNjQ5Nzg2OTI3MzY0OSJ9.XSiQxjEVyCouf7zT8MubEKsbOBZuReGVhnt9uck6z6k</p>\n<p>CURL example</p>\n<pre><code>curl -v -H 'DAuth: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzbWFydF9jb250cmFjdF9hZGRyZXNzIjoiMHhlMTIzNDI1RTc3MzRDRTI4OEY4MzY3ZTFCYjE0M0U5MGJiM0YwNTEyMjQiLCJuZXR3b3JrX25hbWUiOiJFVEhFUkVVTSIsIm1zZ19zZW5kZXIiOiIweGUxMjM0MDkyN2YxNzI1RTc3MzRDRTI4OEY4MzY3ZTFCYjE0M0U5MGZoa3U3NjciLCJjb25zdW1lcl9rZXkiOiIweDEyMzRhNGVjMzFlODljZWE1NGQxZjEyNWRiNzUzNmU4NzRhYjRhOTZiNGQ0ZjY0Mzg2NjhiNmJiMTBhNmFkYiIsInRpbWVzdGFtcCI6IjIwMjEtMTEtMDRUMTQ6MTM6NDBaIiwicmVxdWVzdF9pZCI6IjBYZTg3Njk4NzY5NDMyODc2MzQ5Mjg3NjM0ODkyODczNjQ5Nzg2OTI3MzY0OSJ9.XSiQxjEVyCouf7zT8MubEKsbOBZuReGVhnt9uck6z6k' https://obp-apisandbox.joinfincubator.com/obp/v3.0.0/users/current\n</code></pre>\n<p>You should receive a response like:</p>\n<pre><code>{\n    &quot;user_id&quot;: &quot;4c4d3175-1e5c-4cfd-9b08-dcdc209d8221&quot;,\n    &quot;email&quot;: &quot;&quot;,\n    &quot;provider_id&quot;: &quot;0xe123425E7734CE288F8367e1Bb143E90bb3F051224&quot;,\n    &quot;provider&quot;: &quot;ETHEREUM&quot;,\n    &quot;username&quot;: &quot;0xe123425E7734CE288F8367e1Bb143E90bb3F051224&quot;,\n    &quot;entitlements&quot;: {\n        &quot;list&quot;: []\n    }\n}\n</code></pre>\n<h3><a href=\"#under-the-hood\" id=\"under-the-hood\">Under the hood</a></h3>\n<p>The file, dauth.scala handles the DAuth,</p>\n<p>We:</p>\n<pre><code>-&gt; Check if Props allow_dauth is true\n  -&gt; Check if DAuth header exists\n    -&gt; Check if getRemoteIpAddress is OK\n      -&gt; Look for &quot;token&quot;\n        -&gt; parse the JWT token and getOrCreate the user\n          -&gt; get the data of the user\n</code></pre>\n<h3><a href=\"#more-information\" id=\"more-information\">More information</a></h3>\n<p>Parameter names and values are case sensitive.<br />\nEach parameter MUST NOT appear more than once per request.</p>\n\n</details>\n<br></br>\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON request body fields:**\n\n\n\n[**is_system**](/glossary#): true\n\n\n\n[**provider**](/glossary#provider): ETHEREUM\n\n\n\n[**username**](/glossary#): felixsmith\n\n\n\n[**view_id**](/glossary#): owner\n\n\n\n[**views**](/glossary#views): \n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**alias**](/glossary#alias): \n\n\n\n[**can_add_comment**](/glossary#can_add_comment): \n\n\n\n[**can_add_corporate_location**](/glossary#can_add_corporate_location): \n\n\n\n[**can_add_counterparty**](/glossary#can_add_counterparty): true\n\n\n\n[**can_add_image**](/glossary#can_add_image): \n\n\n\n[**can_add_image_url**](/glossary#can_add_image_url): true\n\n\n\n[**can_add_more_info**](/glossary#can_add_more_info): true\n\n\n\n[**can_add_open_corporates_url**](/glossary#can_add_open_corporates_url): \n\n\n\n[**can_add_physical_location**](/glossary#can_add_physical_location): \n\n\n\n[**can_add_private_alias**](/glossary#can_add_private_alias): \n\n\n\n[**can_add_public_alias**](/glossary#can_add_public_alias): \n\n\n\n[**can_add_tag**](/glossary#can_add_tag): true\n\n\n\n[**can_add_transaction_request_to_any_account**](/glossary#can_add_transaction_request_to_any_account): \n\n\n\n[**can_add_transaction_request_to_own_account**](/glossary#can_add_transaction_request_to_own_account): \n\n\n\n[**can_add_url**](/glossary#can_add_url): \n\n\n\n[**can_add_where_tag**](/glossary#can_add_where_tag): \n\n\n\n[**can_create_direct_debit**](/glossary#can_create_direct_debit): true\n\n\n\n[**can_create_standing_order**](/glossary#can_create_standing_order): \n\n\n\n[**can_delete_comment**](/glossary#can_delete_comment): \n\n\n\n[**can_delete_corporate_location**](/glossary#can_delete_corporate_location): true\n\n\n\n[**can_delete_image**](/glossary#can_delete_image): true\n\n\n\n[**can_delete_physical_location**](/glossary#can_delete_physical_location): \n\n\n\n[**can_delete_tag**](/glossary#can_delete_tag): \n\n\n\n[**can_delete_where_tag**](/glossary#can_delete_where_tag): true\n\n\n\n[**can_edit_owner_comment**](/glossary#can_edit_owner_comment): true\n\n\n\n[**can_query_available_funds**](/glossary#can_query_available_funds): true\n\n\n\n[**can_see_bank_account_balance**](/glossary#can_see_bank_account_balance): \n\n\n\n[**can_see_bank_account_bank_name**](/glossary#can_see_bank_account_bank_name): true\n\n\n\n[**can_see_bank_account_credit_limit**](/glossary#can_see_bank_account_credit_limit): true\n\n\n\n[**can_see_bank_account_currency**](/glossary#can_see_bank_account_currency): \n\n\n\n[**can_see_bank_account_iban**](/glossary#can_see_bank_account_iban): \n\n\n\n[**can_see_bank_account_label**](/glossary#can_see_bank_account_label): true\n\n\n\n[**can_see_bank_account_national_identifier**](/glossary#can_see_bank_account_national_identifier): \n\n\n\n[**can_see_bank_account_number**](/glossary#can_see_bank_account_number): true\n\n\n\n[**can_see_bank_account_owners**](/glossary#can_see_bank_account_owners): true\n\n\n\n[**can_see_bank_account_routing_address**](/glossary#can_see_bank_account_routing_address): \n\n\n\n[**can_see_bank_account_routing_scheme**](/glossary#can_see_bank_account_routing_scheme): \n\n\n\n[**can_see_bank_account_swift_bic**](/glossary#can_see_bank_account_swift_bic): \n\n\n\n[**can_see_bank_account_type**](/glossary#can_see_bank_account_type): \n\n\n\n[**can_see_bank_routing_address**](/glossary#can_see_bank_routing_address): true\n\n\n\n[**can_see_bank_routing_scheme**](/glossary#can_see_bank_routing_scheme): \n\n\n\n[**can_see_comments**](/glossary#can_see_comments): \n\n\n\n[**can_see_corporate_location**](/glossary#can_see_corporate_location): true\n\n\n\n[**can_see_image_url**](/glossary#can_see_image_url): true\n\n\n\n[**can_see_images**](/glossary#can_see_images): true\n\n\n\n[**can_see_more_info**](/glossary#can_see_more_info): \n\n\n\n[**can_see_open_corporates_url**](/glossary#can_see_open_corporates_url): \n\n\n\n[**can_see_other_account_bank_name**](/glossary#can_see_other_account_bank_name): \n\n\n\n[**can_see_other_account_iban**](/glossary#can_see_other_account_iban): \n\n\n\n[**can_see_other_account_kind**](/glossary#can_see_other_account_kind): \n\n\n\n[**can_see_other_account_metadata**](/glossary#can_see_other_account_metadata): \n\n\n\n[**can_see_other_account_national_identifier**](/glossary#can_see_other_account_national_identifier): true\n\n\n\n[**can_see_other_account_number**](/glossary#can_see_other_account_number): true\n\n\n\n[**can_see_other_account_routing_address**](/glossary#can_see_other_account_routing_address): true\n\n\n\n[**can_see_other_account_routing_scheme**](/glossary#can_see_other_account_routing_scheme): \n\n\n\n[**can_see_other_account_swift_bic**](/glossary#can_see_other_account_swift_bic): true\n\n\n\n[**can_see_other_bank_routing_address**](/glossary#can_see_other_bank_routing_address): \n\n\n\n[**can_see_other_bank_routing_scheme**](/glossary#can_see_other_bank_routing_scheme): \n\n\n\n[**can_see_owner_comment**](/glossary#can_see_owner_comment): \n\n\n\n[**can_see_physical_location**](/glossary#can_see_physical_location): \n\n\n\n[**can_see_private_alias**](/glossary#can_see_private_alias): \n\n\n\n[**can_see_public_alias**](/glossary#can_see_public_alias): \n\n\n\n[**can_see_tags**](/glossary#can_see_tags): \n\n\n\n[**can_see_transaction_amount**](/glossary#can_see_transaction_amount): true\n\n\n\n[**can_see_transaction_balance**](/glossary#can_see_transaction_balance): \n\n\n\n[**can_see_transaction_currency**](/glossary#can_see_transaction_currency): \n\n\n\n[**can_see_transaction_description**](/glossary#can_see_transaction_description): true\n\n\n\n[**can_see_transaction_finish_date**](/glossary#can_see_transaction_finish_date): \n\n\n\n[**can_see_transaction_metadata**](/glossary#can_see_transaction_metadata): \n\n\n\n[**can_see_transaction_other_bank_account**](/glossary#can_see_transaction_other_bank_account): \n\n\n\n[**can_see_transaction_start_date**](/glossary#can_see_transaction_start_date): \n\n\n\n[**can_see_transaction_this_bank_account**](/glossary#can_see_transaction_this_bank_account): \n\n\n\n[**can_see_transaction_type**](/glossary#can_see_transaction_type): \n\n\n\n[**can_see_url**](/glossary#can_see_url): true\n\n\n\n[**can_see_where_tag**](/glossary#can_see_where_tag): true\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**hide_metadata_if_alias_used**](/glossary#hide_metadata_if_alias_used): \n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**is_public**](/glossary#is_public): true\n\n\n\n[**is_system**](/glossary#): true\n\n\n\n[**metadata_view**](/glossary#metadata_view): \n\n\n\n[**short_name**](/glossary#short_name): \n\n\n\n[is_firehose](/glossary#is_firehose): \n\n\n",
      "example_request_body": {
        "username": "felixsmith",
        "provider": "dauth.ETHEREUM",
        "views": [
          {
            "view_id": "owner",
            "is_system": true
          }
        ]
      },
      "success_response_body": [
        {
          "id": "1234",
          "short_name": "short_name",
          "description": "description",
          "metadata_view": "owner",
          "is_public": true,
          "is_system": true,
          "alias": "No",
          "hide_metadata_if_alias_used": true,
          "can_add_comment": true,
          "can_add_corporate_location": true,
          "can_add_image": true,
          "can_add_image_url": true,
          "can_add_more_info": true,
          "can_add_open_corporates_url": true,
          "can_add_physical_location": true,
          "can_add_private_alias": true,
          "can_add_public_alias": true,
          "can_add_tag": true,
          "can_add_url": true,
          "can_add_where_tag": true,
          "can_delete_comment": true,
          "can_add_counterparty": true,
          "can_delete_corporate_location": true,
          "can_delete_image": true,
          "can_delete_physical_location": true,
          "can_delete_tag": true,
          "can_delete_where_tag": true,
          "can_edit_owner_comment": true,
          "can_see_bank_account_balance": true,
          "can_query_available_funds": true,
          "can_see_bank_account_bank_name": true,
          "can_see_bank_account_currency": true,
          "can_see_bank_account_iban": true,
          "can_see_bank_account_label": true,
          "can_see_bank_account_national_identifier": true,
          "can_see_bank_account_number": true,
          "can_see_bank_account_owners": true,
          "can_see_bank_account_swift_bic": true,
          "can_see_bank_account_type": true,
          "can_see_comments": true,
          "can_see_corporate_location": true,
          "can_see_image_url": true,
          "can_see_images": true,
          "can_see_more_info": true,
          "can_see_open_corporates_url": true,
          "can_see_other_account_bank_name": true,
          "can_see_other_account_iban": true,
          "can_see_other_account_kind": true,
          "can_see_other_account_metadata": true,
          "can_see_other_account_national_identifier": true,
          "can_see_other_account_number": true,
          "can_see_other_account_swift_bic": true,
          "can_see_owner_comment": true,
          "can_see_physical_location": true,
          "can_see_private_alias": true,
          "can_see_public_alias": true,
          "can_see_tags": true,
          "can_see_transaction_amount": true,
          "can_see_transaction_balance": true,
          "can_see_transaction_currency": true,
          "can_see_transaction_description": true,
          "can_see_transaction_finish_date": true,
          "can_see_transaction_metadata": true,
          "can_see_transaction_other_bank_account": true,
          "can_see_transaction_start_date": true,
          "can_see_transaction_this_bank_account": true,
          "can_see_transaction_type": true,
          "can_see_url": true,
          "can_see_where_tag": true,
          "can_see_bank_routing_scheme": true,
          "can_see_bank_routing_address": true,
          "can_see_bank_account_routing_scheme": true,
          "can_see_bank_account_routing_address": true,
          "can_see_other_bank_routing_scheme": true,
          "can_see_other_bank_routing_address": true,
          "can_see_other_account_routing_scheme": true,
          "can_see_other_account_routing_address": true,
          "can_add_transaction_request_to_own_account": true,
          "can_add_transaction_request_to_any_account": true,
          "can_see_bank_account_credit_limit": true,
          "can_create_direct_debit": true,
          "can_create_standing_order": true
        }
      ],
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20047: User must have access to the owner view or must be an account holder.",
        "OBP-10001: Incorrect json format.",
        "OBP-30252: System view not found. Please specify a valid value for VIEW_ID",
        "OBP-30005: View not found for Account. Please specify a valid value for VIEW_ID",
        "OBP-30063: Cannot grant account access.",
        "OBP-50000: Unknown Error."
      ],
      "tags": [
        "Account-Access",
        "View-Custom",
        "Account",
        "User",
        "OwnerViewRequired",
        "DAuth",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "views": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "is_system": {
                  "type": "boolean"
                },
                "view_id": {
                  "type": "string"
                }
              }
            }
          },
          "provider": {
            "type": "string"
          },
          "username": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "head": {
            "type": "object",
            "properties": {
              "can_see_other_account_swift_bic": {
                "type": "boolean"
              },
              "can_see_where_tag": {
                "type": "boolean"
              },
              "can_see_url": {
                "type": "boolean"
              },
              "can_create_direct_debit": {
                "type": "boolean"
              },
              "can_see_bank_account_swift_bic": {
                "type": "boolean"
              },
              "can_see_bank_account_routing_address": {
                "type": "boolean"
              },
              "can_see_tags": {
                "type": "boolean"
              },
              "can_see_transaction_balance": {
                "type": "boolean"
              },
              "can_delete_corporate_location": {
                "type": "boolean"
              },
              "can_add_image_url": {
                "type": "boolean"
              },
              "can_see_public_alias": {
                "type": "boolean"
              },
              "can_add_transaction_request_to_own_account": {
                "type": "boolean"
              },
              "can_add_comment": {
                "type": "boolean"
              },
              "can_see_other_bank_routing_scheme": {
                "type": "boolean"
              },
              "description": {
                "type": "string"
              },
              "can_see_corporate_location": {
                "type": "boolean"
              },
              "can_see_other_account_bank_name": {
                "type": "boolean"
              },
              "can_see_more_info": {
                "type": "boolean"
              },
              "can_add_counterparty": {
                "type": "boolean"
              },
              "is_system": {
                "type": "boolean"
              },
              "can_see_physical_location": {
                "type": "boolean"
              },
              "can_query_available_funds": {
                "type": "boolean"
              },
              "can_edit_owner_comment": {
                "type": "boolean"
              },
              "can_see_private_alias": {
                "type": "boolean"
              },
              "can_see_bank_account_credit_limit": {
                "type": "boolean"
              },
              "can_see_other_account_routing_address": {
                "type": "boolean"
              },
              "can_see_bank_account_balance": {
                "type": "boolean"
              },
              "can_add_public_alias": {
                "type": "boolean"
              },
              "can_see_bank_routing_scheme": {
                "type": "boolean"
              },
              "can_see_bank_account_owners": {
                "type": "boolean"
              },
              "can_see_other_account_metadata": {
                "type": "boolean"
              },
              "can_delete_physical_location": {
                "type": "boolean"
              },
              "hide_metadata_if_alias_used": {
                "type": "boolean"
              },
              "can_see_transaction_this_bank_account": {
                "type": "boolean"
              },
              "can_see_image_url": {
                "type": "boolean"
              },
              "can_see_transaction_type": {
                "type": "boolean"
              },
              "can_see_images": {
                "type": "boolean"
              },
              "can_see_transaction_amount": {
                "type": "boolean"
              },
              "metadata_view": {
                "type": "string"
              },
              "can_see_transaction_metadata": {
                "type": "boolean"
              },
              "can_see_comments": {
                "type": "boolean"
              },
              "can_see_other_account_iban": {
                "type": "boolean"
              },
              "can_add_image": {
                "type": "boolean"
              },
              "can_see_bank_account_routing_scheme": {
                "type": "boolean"
              },
              "can_see_bank_account_type": {
                "type": "boolean"
              },
              "can_see_other_account_kind": {
                "type": "boolean"
              },
              "can_see_bank_account_currency": {
                "type": "boolean"
              },
              "can_add_where_tag": {
                "type": "boolean"
              },
              "can_see_transaction_start_date": {
                "type": "boolean"
              },
              "can_see_bank_account_label": {
                "type": "boolean"
              },
              "can_add_private_alias": {
                "type": "boolean"
              },
              "can_see_transaction_currency": {
                "type": "boolean"
              },
              "can_add_more_info": {
                "type": "boolean"
              },
              "can_delete_comment": {
                "type": "boolean"
              },
              "can_create_standing_order": {
                "type": "boolean"
              },
              "can_see_other_bank_routing_address": {
                "type": "boolean"
              },
              "can_see_transaction_other_bank_account": {
                "type": "boolean"
              },
              "can_see_bank_account_number": {
                "type": "boolean"
              },
              "can_add_corporate_location": {
                "type": "boolean"
              },
              "alias": {
                "type": "string"
              },
              "can_add_url": {
                "type": "boolean"
              },
              "short_name": {
                "type": "string"
              },
              "can_delete_where_tag": {
                "type": "boolean"
              },
              "is_public": {
                "type": "boolean"
              },
              "can_see_owner_comment": {
                "type": "boolean"
              },
              "can_see_transaction_finish_date": {
                "type": "boolean"
              },
              "can_see_open_corporates_url": {
                "type": "boolean"
              },
              "can_add_physical_location": {
                "type": "boolean"
              },
              "can_see_bank_account_iban": {
                "type": "boolean"
              },
              "can_see_other_account_national_identifier": {
                "type": "boolean"
              },
              "can_see_bank_routing_address": {
                "type": "boolean"
              },
              "can_delete_image": {
                "type": "boolean"
              },
              "can_add_transaction_request_to_any_account": {
                "type": "boolean"
              },
              "can_add_tag": {
                "type": "boolean"
              },
              "id": {
                "type": "string"
              },
              "can_see_other_account_routing_scheme": {
                "type": "boolean"
              },
              "can_add_open_corporates_url": {
                "type": "boolean"
              },
              "can_delete_tag": {
                "type": "boolean"
              },
              "can_see_transaction_description": {
                "type": "boolean"
              },
              "can_see_bank_account_national_identifier": {
                "type": "boolean"
              },
              "can_see_other_account_number": {
                "type": "boolean"
              },
              "can_see_bank_account_bank_name": {
                "type": "boolean"
              }
            }
          },
          "tl": {
            "type": "object",
            "properties": {}
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/user-account-access",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv5.1.0-customViewNamesCheck",
      "implemented_by": {
        "version": "OBPv5.1.0",
        "function": "customViewNamesCheck"
      },
      "request_verb": "GET",
      "request_url": "/obp/v5.1.0/management/system/integrity/custom-view-names-check",
      "summary": "Check Custom View Names",
      "description": "<p>Check custom view names.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#success\"><strong>success</strong></a>:</p>\n<p><a href=\"/glossary#\">debug_info</a>: debug_info</p>\n",
      "description_markdown": "Check custom view names.\n\nAuthentication is Mandatory\n\n\n**JSON response body fields:**\n\n\n\n[**success**](/glossary#success): \n\n\n\n[debug_info](/glossary#): debug_info\n\n\n",
      "success_response_body": {
        "success": true
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["System-Integrity", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          }
        }
      },
      "roles": [
        {
          "role": "CanGetSystemIntegrity",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/system/integrity/custom-view-names-check",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv4.0.0-getEntitlementsForBank",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getEntitlementsForBank"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/entitlements",
      "summary": "Get Entitlements for One Bank",
      "description": "<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#entitlement_id\"><strong>entitlement_id</strong></a>:</p>\n<p><a href=\"/glossary#list\"><strong>list</strong></a>:</p>\n<p><a href=\"/glossary#role_name\"><strong>role_name</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p>\n",
      "description_markdown": "Authentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**entitlement_id**](/glossary#entitlement_id): \n\n\n\n[**list**](/glossary#list): \n\n\n\n[**role_name**](/glossary#role_name): \n\n\n\n[**user_id**](/glossary#): 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\n\n\n",
      "success_response_body": {
        "list": [
          {
            "entitlement_id": "",
            "role_name": "",
            "bank_id": "gh.29.uk",
            "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Role", "Entitlement", "User", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "entitlement_id": {
                  "type": "string"
                },
                "bank_id": {
                  "type": "string"
                },
                "role_name": {
                  "type": "string"
                },
                "user_id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetEntitlementsForOneBank",
          "requires_bank_id": true
        },
        {
          "role": "CanGetEntitlementsForAnyBank",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/entitlements",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv3.1.0-getAccountApplication",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "getAccountApplication"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/account-applications/ACCOUNT_APPLICATION_ID",
      "summary": "Get Account Application by Id",
      "description": "<p>Get the Account Application.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#account_application_id\">ACCOUNT_APPLICATION_ID</a>:</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#account_application_id\"><strong>account_application_id</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#\"><strong>branch_id</strong></a>: DERBY6</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#Customer\"><strong>customer</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>customer_number</strong></a>: 5987953</p>\n<p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#date_of_application\"><strong>date_of_application</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#\"><strong>date_of_birth</strong></a>: 2018-03-09</p>\n<p><a href=\"/glossary#\"><strong>dependants</strong></a>: 1</p>\n<p><a href=\"/glossary#dob_of_dependants\"><strong>dob_of_dependants</strong></a>: [2019-09-08, 2017-07-12]</p>\n<p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"&#109;&#97;&#105;l&#116;&#x6f;&#x3a;&#102;&#x65;&#x6c;&#105;&#120;&#x73;&#x6d;&#105;&#116;&#x68;&#x40;&#101;&#120;&#x61;&#109;&#x70;&#x6c;e.&#x63;&#x6f;m\">&#x66;el&#105;&#x78;&#x73;&#x6d;&#105;&#x74;&#104;@&#x65;&#120;&#97;m&#112;&#108;e&#x2e;c&#x6f;&#109;</a></p>\n<p><a href=\"/glossary#\"><strong>employment_status</strong></a>: worker</p>\n<p><a href=\"/glossary#face_image\"><strong>face_image</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>highest_education_attained</strong></a>: Master</p>\n<p><a href=\"/glossary#\"><strong>kyc_status</strong></a>: true</p>\n<p><a href=\"/glossary#last_ok_date\"><strong>last_ok_date</strong></a>: 2022-04-13T04:30:07.985Z</p>\n<p><a href=\"/glossary#\"><strong>legal_name</strong></a>: Eveline Tripman</p>\n<p><a href=\"/glossary#mobile_phone_number\"><strong>mobile_phone_number</strong></a>: +49 30 901820</p>\n<p><a href=\"/glossary#\"><strong>name_suffix</strong></a>: Sr</p>\n<p><a href=\"/glossary#product_code\"><strong>product_code</strong></a>: 1234BW</p>\n<p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p>\n<p><a href=\"/glossary#provider_id\"><strong>provider_id</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>rating</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>relationship_status</strong></a>: single</p>\n<p><a href=\"/glossary#\"><strong>source</strong></a>:</p>\n<p><a href=\"/glossary#status\"><strong>status</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>title</strong></a>: Dr.</p>\n<p><a href=\"/glossary#\"><strong>url</strong></a>: <a href=\"http://www.example.com/id-docs/123/image.png\">http://www.example.com/id-docs/123/image.png</a></p>\n<p><a href=\"/glossary#User\"><strong>user</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p>\n<p><a href=\"/glossary#\"><strong>username</strong></a>: felixsmith</p>\n<p><a href=\"/glossary#credit_limit\">credit_limit</a>:</p>\n<p><a href=\"/glossary#credit_rating\">credit_rating</a>:</p>\n",
      "description_markdown": "Get the Account Application.\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ACCOUNT_APPLICATION_ID](/glossary#account_application_id): \n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**account_application_id**](/glossary#account_application_id): \n\n\n\n[**amount**](/glossary#): 10.12\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**branch_id**](/glossary#): DERBY6\n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**customer**](/glossary#Customer): \n\n\n\n[**customer_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**customer_number**](/glossary#): 5987953\n\n\n\n[**date**](/glossary#): 2020-01-27\n\n\n\n[**date_of_application**](/glossary#date_of_application): 2020-01-27\n\n\n\n[**date_of_birth**](/glossary#): 2018-03-09\n\n\n\n[**dependants**](/glossary#): 1\n\n\n\n[**dob_of_dependants**](/glossary#dob_of_dependants): [2019-09-08, 2017-07-12]\n\n\n\n[**email**](/glossary#): felixsmith@example.com\n\n\n\n[**employment_status**](/glossary#): worker\n\n\n\n[**face_image**](/glossary#face_image): \n\n\n\n[**highest_education_attained**](/glossary#): Master\n\n\n\n[**kyc_status**](/glossary#): true\n\n\n\n[**last_ok_date**](/glossary#last_ok_date): 2022-04-13T04:30:07.985Z\n\n\n\n[**legal_name**](/glossary#): Eveline Tripman\n\n\n\n[**mobile_phone_number**](/glossary#mobile_phone_number): +49 30 901820\n\n\n\n[**name_suffix**](/glossary#): Sr\n\n\n\n[**product_code**](/glossary#product_code): 1234BW\n\n\n\n[**provider**](/glossary#provider): ETHEREUM\n\n\n\n[**provider_id**](/glossary#provider_id): \n\n\n\n[**rating**](/glossary#): \n\n\n\n[**relationship_status**](/glossary#): single\n\n\n\n[**source**](/glossary#): \n\n\n\n[**status**](/glossary#status): \n\n\n\n[**title**](/glossary#): Dr.\n\n\n\n[**url**](/glossary#): http://www.example.com/id-docs/123/image.png\n\n\n\n[**user**](/glossary#User): \n\n\n\n[**user_id**](/glossary#): 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\n\n\n\n[**username**](/glossary#): felixsmith\n\n\n\n[credit_limit](/glossary#credit_limit): \n\n\n\n[credit_rating](/glossary#credit_rating): \n\n\n",
      "success_response_body": {
        "account_application_id": "gc23a7e2-7dd2-4bdf-a0b4-ae31232a4763",
        "product_code": "1234BW",
        "user": {
          "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
          "email": "felixsmith@example.com",
          "provider_id": "Chris",
          "provider": "http://127.0.0.1:8080",
          "username": "felixsmith"
        },
        "customer": {
          "bank_id": "gh.29.uk",
          "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
          "customer_number": "5987953",
          "legal_name": "Eveline Tripman",
          "mobile_phone_number": "+44 07972 444 876",
          "email": "felixsmith@example.com",
          "face_image": {
            "url": "www.openbankproject",
            "date": "1100-01-01T00:00:00Z"
          },
          "date_of_birth": "1100-01-01T00:00:00Z",
          "relationship_status": "single",
          "dependants": 1,
          "dob_of_dependants": ["1100-01-01T00:00:00Z"],
          "credit_rating": {
            "rating": "OBP",
            "source": "OBP"
          },
          "credit_limit": {
            "currency": "EUR",
            "amount": "0"
          },
          "highest_education_attained": "Master",
          "employment_status": "worker",
          "kyc_status": true,
          "last_ok_date": "2022-04-13T04:30:08Z",
          "title": "Dr.",
          "branch_id": "DERBY6",
          "name_suffix": "Sr"
        },
        "date_of_application": "1100-01-01T00:00:00Z",
        "status": "REQUESTED"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Account-Application", "Account", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "provider": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "provider_id": {
                "type": "string"
              },
              "username": {
                "type": "string"
              },
              "user_id": {
                "type": "string"
              }
            }
          },
          "product_code": {
            "type": "string"
          },
          "customer": {
            "type": "object",
            "properties": {
              "dependants": {
                "type": "integer"
              },
              "dob_of_dependants": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "face_image": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string"
                  },
                  "date": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              },
              "credit_limit": {
                "type": "object",
                "properties": {
                  "currency": {
                    "type": "string"
                  },
                  "amount": {
                    "type": "string"
                  }
                }
              },
              "employment_status": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "customer_id": {
                "type": "string"
              },
              "relationship_status": {
                "type": "string"
              },
              "bank_id": {
                "type": "string"
              },
              "highest_education_attained": {
                "type": "string"
              },
              "customer_number": {
                "type": "string"
              },
              "credit_rating": {
                "type": "object",
                "properties": {
                  "rating": {
                    "type": "string"
                  },
                  "source": {
                    "type": "string"
                  }
                }
              },
              "name_suffix": {
                "type": "string"
              },
              "last_ok_date": {
                "type": "string",
                "format": "date-time"
              },
              "legal_name": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "branch_id": {
                "type": "string"
              },
              "date_of_birth": {
                "type": "string",
                "format": "date-time"
              },
              "mobile_phone_number": {
                "type": "string"
              },
              "kyc_status": {
                "type": "boolean"
              }
            }
          },
          "status": {
            "type": "string"
          },
          "date_of_application": {
            "type": "string",
            "format": "date-time"
          },
          "account_application_id": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/account-applications/ACCOUNT_APPLICATION_ID",
      "connector_methods": [
        "obp.getCustomerByCustomerId",
        "obp.getAccountApplicationById",
        "obp.getBank",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv4.0.0-updateCurrentUserAttribute",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "updateCurrentUserAttribute"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v4.0.0/my/user/attributes/USER_ATTRIBUTE_ID",
      "summary": "Update User Attribute for current user",
      "description": "<p>Update User Attribute for current user by USER_ATTRIBUTE_ID</p>\n<p>The type field must be one of &quot;STRING&quot;, &quot;INTEGER&quot;, &quot;DOUBLE&quot; or DATE_WITH_DAY&quot;</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#\">USER_ATTRIBUTE_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>insert_date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>user_attribute_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n",
      "description_markdown": "Update User Attribute for current user by USER_ATTRIBUTE_ID\n\nThe type field must be one of \"STRING\", \"INTEGER\", \"DOUBLE\" or DATE_WITH_DAY\"\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[USER_ATTRIBUTE_ID](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**insert_date**](/glossary#): 2020-01-27\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**type**](/glossary#type): \n\n\n\n[**user_attribute_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**value**](/glossary#): 5987953\n\n\n",
      "example_request_body": {
        "name": "BATTERY_LEVEL",
        "type": "STRING",
        "value": "90"
      },
      "success_response_body": {
        "user_attribute_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "name": "BATTERY_LEVEL",
        "type": "STRING",
        "value": "90",
        "insert_date": "2023-04-13T04:30:08Z"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["User", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "user_attribute_id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "insert_date": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "roles": [],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/my/user/attributes/USER_ATTRIBUTE_ID",
      "connector_methods": ["obp.createOrUpdateUserAttribute", "obp.getUserAttributes"]
    },
    {
      "operation_id": "OBPv5.0.0-addCardForBank",
      "implemented_by": {
        "version": "OBPv5.0.0",
        "function": "addCardForBank"
      },
      "request_verb": "POST",
      "request_url": "/obp/v5.0.0/management/banks/BANK_ID/cards",
      "summary": "Create Card",
      "description": "<p>Create Card at bank specified by BANK_ID .</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>account_id</strong></a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#allows\"><strong>allows</strong></a>: [credit,debit,cash_withdrawal]</p>\n<p><a href=\"/glossary#\"><strong>brand</strong></a>: Visa</p>\n<p><a href=\"/glossary#\"><strong>card_number</strong></a>: 364435172576215</p>\n<p><a href=\"/glossary#\"><strong>card_type</strong></a>: Credit</p>\n<p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#enabled\"><strong>enabled</strong></a>: true</p>\n<p><a href=\"/glossary#\"><strong>expires_date</strong></a>: 2021-01-27</p>\n<p><a href=\"/glossary#\"><strong>issue_number</strong></a>: 1</p>\n<p><a href=\"/glossary#\"><strong>name_on_card</strong></a>: SusanSmith</p>\n<p><a href=\"/glossary#networks\"><strong>networks</strong></a>:</p>\n<p><a href=\"/glossary#pin_reset\"><strong>pin_reset</strong></a>:</p>\n<p><a href=\"/glossary#reason_requested\"><strong>reason_requested</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>requested_date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#\"><strong>serial_number</strong></a>: 1324234</p>\n<p><a href=\"/glossary#technology\"><strong>technology</strong></a>: technology1</p>\n<p><a href=\"/glossary#\"><strong>valid_from_date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#collected\">collected</a>: 2020-01-27</p>\n<p><a href=\"/glossary#posted\">posted</a>: 2020-01-27</p>\n<p><a href=\"/glossary#replacement\">replacement</a>:</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#Account\"><strong>account</strong></a>:</p>\n<p><a href=\"/glossary#alias\"><strong>alias</strong></a>:</p>\n<p><a href=\"/glossary#allows\"><strong>allows</strong></a>: [credit,debit,cash_withdrawal]</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#\"><strong>brand</strong></a>: Visa</p>\n<p><a href=\"/glossary#can_add_comment\"><strong>can_add_comment</strong></a>:</p>\n<p><a href=\"/glossary#can_add_corporate_location\"><strong>can_add_corporate_location</strong></a>:</p>\n<p><a href=\"/glossary#can_add_image\"><strong>can_add_image</strong></a>:</p>\n<p><a href=\"/glossary#can_add_image_url\"><strong>can_add_image_url</strong></a>: true</p>\n<p><a href=\"/glossary#can_add_more_info\"><strong>can_add_more_info</strong></a>: true</p>\n<p><a href=\"/glossary#can_add_open_corporates_url\"><strong>can_add_open_corporates_url</strong></a>:</p>\n<p><a href=\"/glossary#can_add_physical_location\"><strong>can_add_physical_location</strong></a>:</p>\n<p><a href=\"/glossary#can_add_private_alias\"><strong>can_add_private_alias</strong></a>:</p>\n<p><a href=\"/glossary#can_add_public_alias\"><strong>can_add_public_alias</strong></a>:</p>\n<p><a href=\"/glossary#can_add_tag\"><strong>can_add_tag</strong></a>: true</p>\n<p><a href=\"/glossary#can_add_url\"><strong>can_add_url</strong></a>:</p>\n<p><a href=\"/glossary#can_add_where_tag\"><strong>can_add_where_tag</strong></a>:</p>\n<p><a href=\"/glossary#can_delete_comment\"><strong>can_delete_comment</strong></a>:</p>\n<p><a href=\"/glossary#can_delete_corporate_location\"><strong>can_delete_corporate_location</strong></a>: true</p>\n<p><a href=\"/glossary#can_delete_image\"><strong>can_delete_image</strong></a>: true</p>\n<p><a href=\"/glossary#can_delete_physical_location\"><strong>can_delete_physical_location</strong></a>:</p>\n<p><a href=\"/glossary#can_delete_tag\"><strong>can_delete_tag</strong></a>:</p>\n<p><a href=\"/glossary#can_delete_where_tag\"><strong>can_delete_where_tag</strong></a>: true</p>\n<p><a href=\"/glossary#can_edit_owner_comment\"><strong>can_edit_owner_comment</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_balance\"><strong>can_see_bank_account_balance</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_bank_name\"><strong>can_see_bank_account_bank_name</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_currency\"><strong>can_see_bank_account_currency</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_iban\"><strong>can_see_bank_account_iban</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_label\"><strong>can_see_bank_account_label</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_national_identifier\"><strong>can_see_bank_account_national_identifier</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_number\"><strong>can_see_bank_account_number</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_owners\"><strong>can_see_bank_account_owners</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_swift_bic\"><strong>can_see_bank_account_swift_bic</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_type\"><strong>can_see_bank_account_type</strong></a>:</p>\n<p><a href=\"/glossary#can_see_comments\"><strong>can_see_comments</strong></a>:</p>\n<p><a href=\"/glossary#can_see_corporate_location\"><strong>can_see_corporate_location</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_image_url\"><strong>can_see_image_url</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_images\"><strong>can_see_images</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_more_info\"><strong>can_see_more_info</strong></a>:</p>\n<p><a href=\"/glossary#can_see_open_corporates_url\"><strong>can_see_open_corporates_url</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_bank_name\"><strong>can_see_other_account_bank_name</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_iban\"><strong>can_see_other_account_iban</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_kind\"><strong>can_see_other_account_kind</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_metadata\"><strong>can_see_other_account_metadata</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_national_identifier\"><strong>can_see_other_account_national_identifier</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_other_account_number\"><strong>can_see_other_account_number</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_other_account_swift_bic\"><strong>can_see_other_account_swift_bic</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_owner_comment\"><strong>can_see_owner_comment</strong></a>:</p>\n<p><a href=\"/glossary#can_see_physical_location\"><strong>can_see_physical_location</strong></a>:</p>\n<p><a href=\"/glossary#can_see_private_alias\"><strong>can_see_private_alias</strong></a>:</p>\n<p><a href=\"/glossary#can_see_public_alias\"><strong>can_see_public_alias</strong></a>:</p>\n<p><a href=\"/glossary#can_see_tags\"><strong>can_see_tags</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_amount\"><strong>can_see_transaction_amount</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_transaction_balance\"><strong>can_see_transaction_balance</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_currency\"><strong>can_see_transaction_currency</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_description\"><strong>can_see_transaction_description</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_transaction_finish_date\"><strong>can_see_transaction_finish_date</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_metadata\"><strong>can_see_transaction_metadata</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_other_bank_account\"><strong>can_see_transaction_other_bank_account</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_start_date\"><strong>can_see_transaction_start_date</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_this_bank_account\"><strong>can_see_transaction_this_bank_account</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_type\"><strong>can_see_transaction_type</strong></a>:</p>\n<p><a href=\"/glossary#can_see_url\"><strong>can_see_url</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_where_tag\"><strong>can_see_where_tag</strong></a>: true</p>\n<p><a href=\"/glossary#cancelled\"><strong>cancelled</strong></a>: true</p>\n<p><a href=\"/glossary#\"><strong>card_id</strong></a>: 36f8a9e6-c2b1-407a-8bd0-421b7119307e</p>\n<p><a href=\"/glossary#\"><strong>card_number</strong></a>: 364435172576215</p>\n<p><a href=\"/glossary#\"><strong>card_type</strong></a>: Credit</p>\n<p><a href=\"/glossary#collected\"><strong>collected</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>cvv</strong></a>: 123</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#enabled\"><strong>enabled</strong></a>: true</p>\n<p><a href=\"/glossary#\"><strong>expires_date</strong></a>: 2021-01-27</p>\n<p><a href=\"/glossary#hide_metadata_if_alias_used\"><strong>hide_metadata_if_alias_used</strong></a>:</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#is_public\"><strong>is_public</strong></a>: true</p>\n<p><a href=\"/glossary#\"><strong>issue_number</strong></a>: 1</p>\n<p><a href=\"/glossary#\"><strong>label</strong></a>: My Account</p>\n<p><a href=\"/glossary#\"><strong>name_on_card</strong></a>: SusanSmith</p>\n<p><a href=\"/glossary#networks\"><strong>networks</strong></a>:</p>\n<p><a href=\"/glossary#on_hot_list\"><strong>on_hot_list</strong></a>: false</p>\n<p><a href=\"/glossary#pin_reset\"><strong>pin_reset</strong></a>:</p>\n<p><a href=\"/glossary#posted\"><strong>posted</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#reason_requested\"><strong>reason_requested</strong></a>:</p>\n<p><a href=\"/glossary#replacement\"><strong>replacement</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>requested_date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#\"><strong>serial_number</strong></a>: 1324234</p>\n<p><a href=\"/glossary#short_name\"><strong>short_name</strong></a>:</p>\n<p><a href=\"/glossary#technology\"><strong>technology</strong></a>: technology1</p>\n<p><a href=\"/glossary#\"><strong>valid_from_date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#views_available\"><strong>views_available</strong></a>:</p>\n",
      "description_markdown": "Create Card at bank specified by BANK_ID .\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON request body fields:**\n\n\n\n[**account_id**](/glossary#): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[**allows**](/glossary#allows): [credit,debit,cash_withdrawal]\n\n\n\n[**brand**](/glossary#): Visa\n\n\n\n[**card_number**](/glossary#): 364435172576215\n\n\n\n[**card_type**](/glossary#): Credit\n\n\n\n[**customer_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**enabled**](/glossary#enabled): true\n\n\n\n[**expires_date**](/glossary#): 2021-01-27\n\n\n\n[**issue_number**](/glossary#): 1\n\n\n\n[**name_on_card**](/glossary#): SusanSmith\n\n\n\n[**networks**](/glossary#networks): \n\n\n\n[**pin_reset**](/glossary#pin_reset): \n\n\n\n[**reason_requested**](/glossary#reason_requested): \n\n\n\n[**requested_date**](/glossary#): 2020-01-27\n\n\n\n[**serial_number**](/glossary#): 1324234\n\n\n\n[**technology**](/glossary#technology): technology1\n\n\n\n[**valid_from_date**](/glossary#): 2020-01-27\n\n\n\n[collected](/glossary#collected): 2020-01-27\n\n\n\n[posted](/glossary#posted): 2020-01-27\n\n\n\n[replacement](/glossary#replacement): \n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**account**](/glossary#Account): \n\n\n\n[**alias**](/glossary#alias): \n\n\n\n[**allows**](/glossary#allows): [credit,debit,cash_withdrawal]\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**brand**](/glossary#): Visa\n\n\n\n[**can_add_comment**](/glossary#can_add_comment): \n\n\n\n[**can_add_corporate_location**](/glossary#can_add_corporate_location): \n\n\n\n[**can_add_image**](/glossary#can_add_image): \n\n\n\n[**can_add_image_url**](/glossary#can_add_image_url): true\n\n\n\n[**can_add_more_info**](/glossary#can_add_more_info): true\n\n\n\n[**can_add_open_corporates_url**](/glossary#can_add_open_corporates_url): \n\n\n\n[**can_add_physical_location**](/glossary#can_add_physical_location): \n\n\n\n[**can_add_private_alias**](/glossary#can_add_private_alias): \n\n\n\n[**can_add_public_alias**](/glossary#can_add_public_alias): \n\n\n\n[**can_add_tag**](/glossary#can_add_tag): true\n\n\n\n[**can_add_url**](/glossary#can_add_url): \n\n\n\n[**can_add_where_tag**](/glossary#can_add_where_tag): \n\n\n\n[**can_delete_comment**](/glossary#can_delete_comment): \n\n\n\n[**can_delete_corporate_location**](/glossary#can_delete_corporate_location): true\n\n\n\n[**can_delete_image**](/glossary#can_delete_image): true\n\n\n\n[**can_delete_physical_location**](/glossary#can_delete_physical_location): \n\n\n\n[**can_delete_tag**](/glossary#can_delete_tag): \n\n\n\n[**can_delete_where_tag**](/glossary#can_delete_where_tag): true\n\n\n\n[**can_edit_owner_comment**](/glossary#can_edit_owner_comment): true\n\n\n\n[**can_see_bank_account_balance**](/glossary#can_see_bank_account_balance): \n\n\n\n[**can_see_bank_account_bank_name**](/glossary#can_see_bank_account_bank_name): true\n\n\n\n[**can_see_bank_account_currency**](/glossary#can_see_bank_account_currency): \n\n\n\n[**can_see_bank_account_iban**](/glossary#can_see_bank_account_iban): \n\n\n\n[**can_see_bank_account_label**](/glossary#can_see_bank_account_label): true\n\n\n\n[**can_see_bank_account_national_identifier**](/glossary#can_see_bank_account_national_identifier): \n\n\n\n[**can_see_bank_account_number**](/glossary#can_see_bank_account_number): true\n\n\n\n[**can_see_bank_account_owners**](/glossary#can_see_bank_account_owners): true\n\n\n\n[**can_see_bank_account_swift_bic**](/glossary#can_see_bank_account_swift_bic): \n\n\n\n[**can_see_bank_account_type**](/glossary#can_see_bank_account_type): \n\n\n\n[**can_see_comments**](/glossary#can_see_comments): \n\n\n\n[**can_see_corporate_location**](/glossary#can_see_corporate_location): true\n\n\n\n[**can_see_image_url**](/glossary#can_see_image_url): true\n\n\n\n[**can_see_images**](/glossary#can_see_images): true\n\n\n\n[**can_see_more_info**](/glossary#can_see_more_info): \n\n\n\n[**can_see_open_corporates_url**](/glossary#can_see_open_corporates_url): \n\n\n\n[**can_see_other_account_bank_name**](/glossary#can_see_other_account_bank_name): \n\n\n\n[**can_see_other_account_iban**](/glossary#can_see_other_account_iban): \n\n\n\n[**can_see_other_account_kind**](/glossary#can_see_other_account_kind): \n\n\n\n[**can_see_other_account_metadata**](/glossary#can_see_other_account_metadata): \n\n\n\n[**can_see_other_account_national_identifier**](/glossary#can_see_other_account_national_identifier): true\n\n\n\n[**can_see_other_account_number**](/glossary#can_see_other_account_number): true\n\n\n\n[**can_see_other_account_swift_bic**](/glossary#can_see_other_account_swift_bic): true\n\n\n\n[**can_see_owner_comment**](/glossary#can_see_owner_comment): \n\n\n\n[**can_see_physical_location**](/glossary#can_see_physical_location): \n\n\n\n[**can_see_private_alias**](/glossary#can_see_private_alias): \n\n\n\n[**can_see_public_alias**](/glossary#can_see_public_alias): \n\n\n\n[**can_see_tags**](/glossary#can_see_tags): \n\n\n\n[**can_see_transaction_amount**](/glossary#can_see_transaction_amount): true\n\n\n\n[**can_see_transaction_balance**](/glossary#can_see_transaction_balance): \n\n\n\n[**can_see_transaction_currency**](/glossary#can_see_transaction_currency): \n\n\n\n[**can_see_transaction_description**](/glossary#can_see_transaction_description): true\n\n\n\n[**can_see_transaction_finish_date**](/glossary#can_see_transaction_finish_date): \n\n\n\n[**can_see_transaction_metadata**](/glossary#can_see_transaction_metadata): \n\n\n\n[**can_see_transaction_other_bank_account**](/glossary#can_see_transaction_other_bank_account): \n\n\n\n[**can_see_transaction_start_date**](/glossary#can_see_transaction_start_date): \n\n\n\n[**can_see_transaction_this_bank_account**](/glossary#can_see_transaction_this_bank_account): \n\n\n\n[**can_see_transaction_type**](/glossary#can_see_transaction_type): \n\n\n\n[**can_see_url**](/glossary#can_see_url): true\n\n\n\n[**can_see_where_tag**](/glossary#can_see_where_tag): true\n\n\n\n[**cancelled**](/glossary#cancelled): true\n\n\n\n[**card_id**](/glossary#): 36f8a9e6-c2b1-407a-8bd0-421b7119307e \n\n\n\n[**card_number**](/glossary#): 364435172576215\n\n\n\n[**card_type**](/glossary#): Credit\n\n\n\n[**collected**](/glossary#collected): 2020-01-27\n\n\n\n[**customer_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**cvv**](/glossary#): 123\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**enabled**](/glossary#enabled): true\n\n\n\n[**expires_date**](/glossary#): 2021-01-27\n\n\n\n[**hide_metadata_if_alias_used**](/glossary#hide_metadata_if_alias_used): \n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**is_public**](/glossary#is_public): true\n\n\n\n[**issue_number**](/glossary#): 1\n\n\n\n[**label**](/glossary#): My Account\n\n\n\n[**name_on_card**](/glossary#): SusanSmith\n\n\n\n[**networks**](/glossary#networks): \n\n\n\n[**on_hot_list**](/glossary#on_hot_list): false\n\n\n\n[**pin_reset**](/glossary#pin_reset): \n\n\n\n[**posted**](/glossary#posted): 2020-01-27\n\n\n\n[**reason_requested**](/glossary#reason_requested): \n\n\n\n[**replacement**](/glossary#replacement): \n\n\n\n[**requested_date**](/glossary#): 2020-01-27\n\n\n\n[**serial_number**](/glossary#): 1324234\n\n\n\n[**short_name**](/glossary#short_name): \n\n\n\n[**technology**](/glossary#technology): technology1\n\n\n\n[**valid_from_date**](/glossary#): 2020-01-27\n\n\n\n[**views_available**](/glossary#views_available): \n\n\n",
      "example_request_body": {
        "card_number": "364435172576215",
        "card_type": "Credit",
        "name_on_card": "SusanSmith",
        "issue_number": "1",
        "serial_number": "1324234",
        "valid_from_date": "1100-01-01T00:00:00Z",
        "expires_date": "1100-01-01T00:00:00Z",
        "enabled": true,
        "technology": "technology1",
        "networks": [""],
        "allows": ["credit", "debit"],
        "account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0",
        "replacement": {
          "requested_date": "1100-01-01T00:00:00Z",
          "reason_requested": "RENEW"
        },
        "pin_reset": [
          {
            "requested_date": "1100-01-01T00:00:00Z",
            "reason_requested": "FORGOT"
          },
          {
            "requested_date": "2023-04-13T04:30:08Z",
            "reason_requested": "GOOD_SECURITY_PRACTICE"
          }
        ],
        "collected": "1100-01-01T00:00:00Z",
        "posted": "1100-01-01T00:00:00Z",
        "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "brand": "Visa"
      },
      "success_response_body": {
        "card_id": "36f8a9e6-c2b1-407a-8bd0-421b7119307e ",
        "bank_id": "gh.29.uk",
        "card_number": "364435172576215",
        "card_type": "Credit",
        "name_on_card": "SusanSmith",
        "issue_number": "1",
        "serial_number": "1324234",
        "valid_from_date": "1100-01-01T00:00:00Z",
        "expires_date": "1100-01-01T00:00:00Z",
        "enabled": true,
        "cancelled": true,
        "on_hot_list": true,
        "technology": "technology1",
        "networks": [""],
        "allows": ["credit", "debit"],
        "account": {
          "id": "123",
          "label": "OBP",
          "views_available": [
            {
              "id": "123",
              "short_name": "short_name",
              "description": "description",
              "is_public": true,
              "alias": "None",
              "hide_metadata_if_alias_used": true,
              "can_add_comment": true,
              "can_add_corporate_location": true,
              "can_add_image": true,
              "can_add_image_url": true,
              "can_add_more_info": true,
              "can_add_open_corporates_url": true,
              "can_add_physical_location": true,
              "can_add_private_alias": true,
              "can_add_public_alias": true,
              "can_add_tag": true,
              "can_add_url": true,
              "can_add_where_tag": true,
              "can_delete_comment": true,
              "can_delete_corporate_location": true,
              "can_delete_image": true,
              "can_delete_physical_location": true,
              "can_delete_tag": true,
              "can_delete_where_tag": true,
              "can_edit_owner_comment": true,
              "can_see_bank_account_balance": true,
              "can_see_bank_account_bank_name": true,
              "can_see_bank_account_currency": true,
              "can_see_bank_account_iban": true,
              "can_see_bank_account_label": true,
              "can_see_bank_account_national_identifier": true,
              "can_see_bank_account_number": true,
              "can_see_bank_account_owners": true,
              "can_see_bank_account_swift_bic": true,
              "can_see_bank_account_type": true,
              "can_see_comments": true,
              "can_see_corporate_location": true,
              "can_see_image_url": true,
              "can_see_images": true,
              "can_see_more_info": true,
              "can_see_open_corporates_url": true,
              "can_see_other_account_bank_name": true,
              "can_see_other_account_iban": true,
              "can_see_other_account_kind": true,
              "can_see_other_account_metadata": true,
              "can_see_other_account_national_identifier": true,
              "can_see_other_account_number": true,
              "can_see_other_account_swift_bic": true,
              "can_see_owner_comment": true,
              "can_see_physical_location": true,
              "can_see_private_alias": true,
              "can_see_public_alias": true,
              "can_see_tags": true,
              "can_see_transaction_amount": true,
              "can_see_transaction_balance": true,
              "can_see_transaction_currency": true,
              "can_see_transaction_description": true,
              "can_see_transaction_finish_date": true,
              "can_see_transaction_metadata": true,
              "can_see_transaction_other_bank_account": true,
              "can_see_transaction_start_date": true,
              "can_see_transaction_this_bank_account": true,
              "can_see_transaction_type": true,
              "can_see_url": true,
              "can_see_where_tag": true
            }
          ],
          "bank_id": "gh.29.uk"
        },
        "replacement": {
          "requested_date": "1100-01-01T00:00:00Z",
          "reason_requested": "RENEW"
        },
        "pin_reset": [
          {
            "requested_date": "1100-01-01T00:00:00Z",
            "reason_requested": "FORGOT"
          }
        ],
        "collected": "1100-01-01T00:00:00Z",
        "posted": "1100-01-01T00:00:00Z",
        "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "cvv": "123",
        "brand": "Visa"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-10015: Allowed values are:",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Card", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "posted": {
            "type": "string",
            "format": "date-time"
          },
          "card_number": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "pin_reset": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "reason_requested": {
                  "type": "string"
                },
                "requested_date": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          "allows": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "technology": {
            "type": "string"
          },
          "card_type": {
            "type": "string"
          },
          "name_on_card": {
            "type": "string"
          },
          "expires_date": {
            "type": "string",
            "format": "date-time"
          },
          "customer_id": {
            "type": "string"
          },
          "collected": {
            "type": "string",
            "format": "date-time"
          },
          "replacement": {
            "type": "object",
            "properties": {
              "reason_requested": {
                "type": "string"
              },
              "requested_date": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          "brand": {
            "type": "string"
          },
          "issue_number": {
            "type": "string"
          },
          "serial_number": {
            "type": "string"
          },
          "networks": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "account_id": {
            "type": "string"
          },
          "valid_from_date": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "card_number": {
            "type": "string"
          },
          "cvv": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "pin_reset": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "reason_requested": {
                  "type": "string"
                },
                "requested_date": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          "allows": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "technology": {
            "type": "string"
          },
          "collected": {
            "type": "string",
            "format": "date-time"
          },
          "on_hot_list": {
            "type": "boolean"
          },
          "card_type": {
            "type": "string"
          },
          "replacement": {
            "type": "object",
            "properties": {
              "reason_requested": {
                "type": "string"
              },
              "requested_date": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          "name_on_card": {
            "type": "string"
          },
          "account": {
            "type": "object",
            "properties": {
              "bank_id": {
                "type": "string"
              },
              "label": {
                "type": "string"
              },
              "views_available": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "can_see_other_account_swift_bic": {
                      "type": "boolean"
                    },
                    "can_see_where_tag": {
                      "type": "boolean"
                    },
                    "can_see_url": {
                      "type": "boolean"
                    },
                    "can_see_bank_account_swift_bic": {
                      "type": "boolean"
                    },
                    "can_see_tags": {
                      "type": "boolean"
                    },
                    "can_see_transaction_balance": {
                      "type": "boolean"
                    },
                    "can_delete_corporate_location": {
                      "type": "boolean"
                    },
                    "can_add_image_url": {
                      "type": "boolean"
                    },
                    "can_see_public_alias": {
                      "type": "boolean"
                    },
                    "can_add_comment": {
                      "type": "boolean"
                    },
                    "description": {
                      "type": "string"
                    },
                    "can_see_corporate_location": {
                      "type": "boolean"
                    },
                    "can_see_other_account_bank_name": {
                      "type": "boolean"
                    },
                    "can_see_more_info": {
                      "type": "boolean"
                    },
                    "can_see_physical_location": {
                      "type": "boolean"
                    },
                    "can_edit_owner_comment": {
                      "type": "boolean"
                    },
                    "can_see_private_alias": {
                      "type": "boolean"
                    },
                    "can_see_bank_account_balance": {
                      "type": "boolean"
                    },
                    "can_add_public_alias": {
                      "type": "boolean"
                    },
                    "can_see_bank_account_owners": {
                      "type": "boolean"
                    },
                    "can_see_other_account_metadata": {
                      "type": "boolean"
                    },
                    "can_delete_physical_location": {
                      "type": "boolean"
                    },
                    "hide_metadata_if_alias_used": {
                      "type": "boolean"
                    },
                    "can_see_transaction_this_bank_account": {
                      "type": "boolean"
                    },
                    "can_see_image_url": {
                      "type": "boolean"
                    },
                    "can_see_transaction_type": {
                      "type": "boolean"
                    },
                    "can_see_images": {
                      "type": "boolean"
                    },
                    "can_see_transaction_amount": {
                      "type": "boolean"
                    },
                    "can_see_transaction_metadata": {
                      "type": "boolean"
                    },
                    "id": {
                      "type": "string"
                    },
                    "can_see_comments": {
                      "type": "boolean"
                    },
                    "can_see_other_account_iban": {
                      "type": "boolean"
                    },
                    "can_add_image": {
                      "type": "boolean"
                    },
                    "can_see_bank_account_type": {
                      "type": "boolean"
                    },
                    "can_see_other_account_kind": {
                      "type": "boolean"
                    },
                    "can_see_bank_account_currency": {
                      "type": "boolean"
                    },
                    "can_add_where_tag": {
                      "type": "boolean"
                    },
                    "can_see_transaction_start_date": {
                      "type": "boolean"
                    },
                    "can_see_bank_account_label": {
                      "type": "boolean"
                    },
                    "can_add_private_alias": {
                      "type": "boolean"
                    },
                    "can_see_transaction_currency": {
                      "type": "boolean"
                    },
                    "can_add_more_info": {
                      "type": "boolean"
                    },
                    "can_delete_comment": {
                      "type": "boolean"
                    },
                    "can_see_transaction_other_bank_account": {
                      "type": "boolean"
                    },
                    "can_see_bank_account_number": {
                      "type": "boolean"
                    },
                    "can_add_corporate_location": {
                      "type": "boolean"
                    },
                    "can_add_url": {
                      "type": "boolean"
                    },
                    "short_name": {
                      "type": "string"
                    },
                    "can_delete_where_tag": {
                      "type": "boolean"
                    },
                    "is_public": {
                      "type": "boolean"
                    },
                    "can_see_owner_comment": {
                      "type": "boolean"
                    },
                    "can_see_transaction_finish_date": {
                      "type": "boolean"
                    },
                    "can_see_open_corporates_url": {
                      "type": "boolean"
                    },
                    "can_add_physical_location": {
                      "type": "boolean"
                    },
                    "can_see_bank_account_iban": {
                      "type": "boolean"
                    },
                    "can_see_other_account_national_identifier": {
                      "type": "boolean"
                    },
                    "can_delete_image": {
                      "type": "boolean"
                    },
                    "can_add_tag": {
                      "type": "boolean"
                    },
                    "can_add_open_corporates_url": {
                      "type": "boolean"
                    },
                    "can_delete_tag": {
                      "type": "boolean"
                    },
                    "can_see_transaction_description": {
                      "type": "boolean"
                    },
                    "can_see_bank_account_national_identifier": {
                      "type": "boolean"
                    },
                    "can_see_other_account_number": {
                      "type": "boolean"
                    },
                    "can_see_bank_account_bank_name": {
                      "type": "boolean"
                    },
                    "alias": {
                      "type": "string"
                    }
                  }
                }
              },
              "id": {
                "type": "string"
              }
            }
          },
          "expires_date": {
            "type": "string",
            "format": "date-time"
          },
          "posted": {
            "type": "string",
            "format": "date-time"
          },
          "customer_id": {
            "type": "string"
          },
          "bank_id": {
            "type": "string"
          },
          "brand": {
            "type": "string"
          },
          "card_id": {
            "type": "string"
          },
          "issue_number": {
            "type": "string"
          },
          "serial_number": {
            "type": "string"
          },
          "networks": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "cancelled": {
            "type": "boolean"
          },
          "valid_from_date": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateCardsForBank",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/banks/BANK_ID/cards",
      "connector_methods": [
        "obp.createPhysicalCard",
        "obp.getCustomerByCustomerId",
        "obp.checkBankAccountExists"
      ]
    },
    {
      "operation_id": "OBPv4.0.0-getCustomerAttributeById",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getCustomerAttributeById"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/customers/CUSTOMER_ID/attributes/ATTRIBUTE_ID",
      "summary": "Get Customer Attribute By Id",
      "description": "<p>Get Customer Attribute By Id</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Adapter.card_attribute_id\">ATTRIBUTE_ID</a>:</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#Customer.customer_id\">CUSTOMER_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>customer_attribute_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n",
      "description_markdown": "Get Customer Attribute By Id\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ATTRIBUTE_ID](/glossary#Adapter.card_attribute_id): \n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[CUSTOMER_ID](/glossary#Customer.customer_id): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**customer_attribute_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**type**](/glossary#type): \n\n\n\n[**value**](/glossary#): 5987953\n\n\n",
      "success_response_body": {
        "customer_attribute_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "name": "SPECIAL_TAX_NUMBER",
        "type": "STRING",
        "value": "123456789"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["Customer", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "customer_attribute_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanGetCustomerAttributeAtOneBank",
          "requires_bank_id": true
        },
        {
          "role": "CanGetCustomerAttributeAtAnyBank",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/customers/CUSTOMER_ID/attributes/ATTRIBUTE_ID",
      "connector_methods": ["obp.getCustomerAttributeById", "obp.getCustomerByCustomerId"]
    },
    {
      "operation_id": "OBPv4.0.0-deleteAuthenticationTypeValidation",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "deleteAuthenticationTypeValidation"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v4.0.0/management/authentication-type-validations/OPERATION_ID",
      "summary": "Delete an Authentication Type Validation",
      "description": "<p>Delete an Authentication Type Validation by operation_id.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#\">OPERATION_ID</a>: OBPv4.0.0-getBanks</p>\n<p><strong>JSON response body fields:</strong></p>\n",
      "description_markdown": "Delete an Authentication Type Validation by operation_id.\n\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[OPERATION_ID](/glossary#): OBPv4.0.0-getBanks\n\n\n\n\n\n**JSON response body fields:**\n\n\n",
      "success_response_body": true,
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Authentication-Type-Validation", "New-Style"],
      "roles": [
        {
          "role": "CanDeleteAuthenticationValidation",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/authentication-type-validations/OPERATION_ID",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv3.0.0-createViewForBankAccount",
      "implemented_by": {
        "version": "OBPv3.0.0",
        "function": "createViewForBankAccount"
      },
      "request_verb": "POST",
      "request_url": "/obp/v3.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/views",
      "summary": "Create View",
      "description": "<p>Create a view on bank account</p>\n<p>Authentication is Mandatory and the user needs to have access to the owner view.<br />\nThe 'alias' field in the JSON can take one of three values:</p>\n<ul>\n<li><em>public</em>: to use the public alias if there is one specified for the other account.</li>\n<li><em>private</em>: to use the public alias if there is one specified for the other account.</li>\n<li>\n<p><em>''(empty string)</em>: to use no alias; the view shows the real name of the other account.</p>\n</li>\n</ul>\n<p>The 'hide_metadata_if_alias_used' field in the JSON can take boolean values. If it is set to <code>true</code> and there is an alias on the other account then the other accounts' metadata (like more_info, url, image_url, open_corporates_url, etc.) will be hidden. Otherwise the metadata will be shown.</p>\n<p>The 'allowed_actions' field is a list containing the name of the actions allowed on this view, all the actions contained will be set to <code>true</code> on the view creation, the rest will be set to <code>false</code>.</p>\n<p>You MUST use a leading _ (underscore) in the view name because other view names are reserved for OBP <a href=\"/index#group-View-System\">system views</a>.</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#allowed_actions\"><strong>allowed_actions</strong></a>:</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#hide_metadata_if_alias_used\"><strong>hide_metadata_if_alias_used</strong></a>:</p>\n<p><a href=\"/glossary#is_public\"><strong>is_public</strong></a>: true</p>\n<p><a href=\"/glossary#metadata_view\"><strong>metadata_view</strong></a>:</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#which_alias_to_use\"><strong>which_alias_to_use</strong></a>:</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#alias\"><strong>alias</strong></a>:</p>\n<p><a href=\"/glossary#can_add_comment\"><strong>can_add_comment</strong></a>:</p>\n<p><a href=\"/glossary#can_add_corporate_location\"><strong>can_add_corporate_location</strong></a>:</p>\n<p><a href=\"/glossary#can_add_counterparty\"><strong>can_add_counterparty</strong></a>: true</p>\n<p><a href=\"/glossary#can_add_image\"><strong>can_add_image</strong></a>:</p>\n<p><a href=\"/glossary#can_add_image_url\"><strong>can_add_image_url</strong></a>: true</p>\n<p><a href=\"/glossary#can_add_more_info\"><strong>can_add_more_info</strong></a>: true</p>\n<p><a href=\"/glossary#can_add_open_corporates_url\"><strong>can_add_open_corporates_url</strong></a>:</p>\n<p><a href=\"/glossary#can_add_physical_location\"><strong>can_add_physical_location</strong></a>:</p>\n<p><a href=\"/glossary#can_add_private_alias\"><strong>can_add_private_alias</strong></a>:</p>\n<p><a href=\"/glossary#can_add_public_alias\"><strong>can_add_public_alias</strong></a>:</p>\n<p><a href=\"/glossary#can_add_tag\"><strong>can_add_tag</strong></a>: true</p>\n<p><a href=\"/glossary#can_add_transaction_request_to_any_account\"><strong>can_add_transaction_request_to_any_account</strong></a>:</p>\n<p><a href=\"/glossary#can_add_transaction_request_to_own_account\"><strong>can_add_transaction_request_to_own_account</strong></a>:</p>\n<p><a href=\"/glossary#can_add_url\"><strong>can_add_url</strong></a>:</p>\n<p><a href=\"/glossary#can_add_where_tag\"><strong>can_add_where_tag</strong></a>:</p>\n<p><a href=\"/glossary#can_create_direct_debit\"><strong>can_create_direct_debit</strong></a>: true</p>\n<p><a href=\"/glossary#can_create_standing_order\"><strong>can_create_standing_order</strong></a>:</p>\n<p><a href=\"/glossary#can_delete_comment\"><strong>can_delete_comment</strong></a>:</p>\n<p><a href=\"/glossary#can_delete_corporate_location\"><strong>can_delete_corporate_location</strong></a>: true</p>\n<p><a href=\"/glossary#can_delete_image\"><strong>can_delete_image</strong></a>: true</p>\n<p><a href=\"/glossary#can_delete_physical_location\"><strong>can_delete_physical_location</strong></a>:</p>\n<p><a href=\"/glossary#can_delete_tag\"><strong>can_delete_tag</strong></a>:</p>\n<p><a href=\"/glossary#can_delete_where_tag\"><strong>can_delete_where_tag</strong></a>: true</p>\n<p><a href=\"/glossary#can_edit_owner_comment\"><strong>can_edit_owner_comment</strong></a>: true</p>\n<p><a href=\"/glossary#can_query_available_funds\"><strong>can_query_available_funds</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_balance\"><strong>can_see_bank_account_balance</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_bank_name\"><strong>can_see_bank_account_bank_name</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_credit_limit\"><strong>can_see_bank_account_credit_limit</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_currency\"><strong>can_see_bank_account_currency</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_iban\"><strong>can_see_bank_account_iban</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_label\"><strong>can_see_bank_account_label</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_national_identifier\"><strong>can_see_bank_account_national_identifier</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_number\"><strong>can_see_bank_account_number</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_owners\"><strong>can_see_bank_account_owners</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_routing_address\"><strong>can_see_bank_account_routing_address</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_routing_scheme\"><strong>can_see_bank_account_routing_scheme</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_swift_bic\"><strong>can_see_bank_account_swift_bic</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_type\"><strong>can_see_bank_account_type</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_routing_address\"><strong>can_see_bank_routing_address</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_routing_scheme\"><strong>can_see_bank_routing_scheme</strong></a>:</p>\n<p><a href=\"/glossary#can_see_comments\"><strong>can_see_comments</strong></a>:</p>\n<p><a href=\"/glossary#can_see_corporate_location\"><strong>can_see_corporate_location</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_image_url\"><strong>can_see_image_url</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_images\"><strong>can_see_images</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_more_info\"><strong>can_see_more_info</strong></a>:</p>\n<p><a href=\"/glossary#can_see_open_corporates_url\"><strong>can_see_open_corporates_url</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_bank_name\"><strong>can_see_other_account_bank_name</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_iban\"><strong>can_see_other_account_iban</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_kind\"><strong>can_see_other_account_kind</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_metadata\"><strong>can_see_other_account_metadata</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_national_identifier\"><strong>can_see_other_account_national_identifier</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_other_account_number\"><strong>can_see_other_account_number</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_other_account_routing_address\"><strong>can_see_other_account_routing_address</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_other_account_routing_scheme\"><strong>can_see_other_account_routing_scheme</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_swift_bic\"><strong>can_see_other_account_swift_bic</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_other_bank_routing_address\"><strong>can_see_other_bank_routing_address</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_bank_routing_scheme\"><strong>can_see_other_bank_routing_scheme</strong></a>:</p>\n<p><a href=\"/glossary#can_see_owner_comment\"><strong>can_see_owner_comment</strong></a>:</p>\n<p><a href=\"/glossary#can_see_physical_location\"><strong>can_see_physical_location</strong></a>:</p>\n<p><a href=\"/glossary#can_see_private_alias\"><strong>can_see_private_alias</strong></a>:</p>\n<p><a href=\"/glossary#can_see_public_alias\"><strong>can_see_public_alias</strong></a>:</p>\n<p><a href=\"/glossary#can_see_tags\"><strong>can_see_tags</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_amount\"><strong>can_see_transaction_amount</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_transaction_balance\"><strong>can_see_transaction_balance</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_currency\"><strong>can_see_transaction_currency</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_description\"><strong>can_see_transaction_description</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_transaction_finish_date\"><strong>can_see_transaction_finish_date</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_metadata\"><strong>can_see_transaction_metadata</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_other_bank_account\"><strong>can_see_transaction_other_bank_account</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_start_date\"><strong>can_see_transaction_start_date</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_this_bank_account\"><strong>can_see_transaction_this_bank_account</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_type\"><strong>can_see_transaction_type</strong></a>:</p>\n<p><a href=\"/glossary#can_see_url\"><strong>can_see_url</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_where_tag\"><strong>can_see_where_tag</strong></a>: true</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#hide_metadata_if_alias_used\"><strong>hide_metadata_if_alias_used</strong></a>:</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#is_public\"><strong>is_public</strong></a>: true</p>\n<p><a href=\"/glossary#\"><strong>is_system</strong></a>: true</p>\n<p><a href=\"/glossary#metadata_view\"><strong>metadata_view</strong></a>:</p>\n<p><a href=\"/glossary#short_name\"><strong>short_name</strong></a>:</p>\n<p><a href=\"/glossary#is_firehose\">is_firehose</a>:</p>\n",
      "description_markdown": "Create a view on bank account\n\n Authentication is Mandatory and the user needs to have access to the owner view.\n The 'alias' field in the JSON can take one of three values:\n\n * _public_: to use the public alias if there is one specified for the other account.\n * _private_: to use the public alias if there is one specified for the other account.\n\n * _''(empty string)_: to use no alias; the view shows the real name of the other account.\n\n The 'hide_metadata_if_alias_used' field in the JSON can take boolean values. If it is set to `true` and there is an alias on the other account then the other accounts' metadata (like more_info, url, image_url, open_corporates_url, etc.) will be hidden. Otherwise the metadata will be shown.\n\n The 'allowed_actions' field is a list containing the name of the actions allowed on this view, all the actions contained will be set to `true` on the view creation, the rest will be set to `false`.\n\n You MUST use a leading _ (underscore) in the view name because other view names are reserved for OBP [system views](/index#group-View-System).\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON request body fields:**\n\n\n\n[**allowed_actions**](/glossary#allowed_actions): \n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**hide_metadata_if_alias_used**](/glossary#hide_metadata_if_alias_used): \n\n\n\n[**is_public**](/glossary#is_public): true\n\n\n\n[**metadata_view**](/glossary#metadata_view): \n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**which_alias_to_use**](/glossary#which_alias_to_use): \n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**alias**](/glossary#alias): \n\n\n\n[**can_add_comment**](/glossary#can_add_comment): \n\n\n\n[**can_add_corporate_location**](/glossary#can_add_corporate_location): \n\n\n\n[**can_add_counterparty**](/glossary#can_add_counterparty): true\n\n\n\n[**can_add_image**](/glossary#can_add_image): \n\n\n\n[**can_add_image_url**](/glossary#can_add_image_url): true\n\n\n\n[**can_add_more_info**](/glossary#can_add_more_info): true\n\n\n\n[**can_add_open_corporates_url**](/glossary#can_add_open_corporates_url): \n\n\n\n[**can_add_physical_location**](/glossary#can_add_physical_location): \n\n\n\n[**can_add_private_alias**](/glossary#can_add_private_alias): \n\n\n\n[**can_add_public_alias**](/glossary#can_add_public_alias): \n\n\n\n[**can_add_tag**](/glossary#can_add_tag): true\n\n\n\n[**can_add_transaction_request_to_any_account**](/glossary#can_add_transaction_request_to_any_account): \n\n\n\n[**can_add_transaction_request_to_own_account**](/glossary#can_add_transaction_request_to_own_account): \n\n\n\n[**can_add_url**](/glossary#can_add_url): \n\n\n\n[**can_add_where_tag**](/glossary#can_add_where_tag): \n\n\n\n[**can_create_direct_debit**](/glossary#can_create_direct_debit): true\n\n\n\n[**can_create_standing_order**](/glossary#can_create_standing_order): \n\n\n\n[**can_delete_comment**](/glossary#can_delete_comment): \n\n\n\n[**can_delete_corporate_location**](/glossary#can_delete_corporate_location): true\n\n\n\n[**can_delete_image**](/glossary#can_delete_image): true\n\n\n\n[**can_delete_physical_location**](/glossary#can_delete_physical_location): \n\n\n\n[**can_delete_tag**](/glossary#can_delete_tag): \n\n\n\n[**can_delete_where_tag**](/glossary#can_delete_where_tag): true\n\n\n\n[**can_edit_owner_comment**](/glossary#can_edit_owner_comment): true\n\n\n\n[**can_query_available_funds**](/glossary#can_query_available_funds): true\n\n\n\n[**can_see_bank_account_balance**](/glossary#can_see_bank_account_balance): \n\n\n\n[**can_see_bank_account_bank_name**](/glossary#can_see_bank_account_bank_name): true\n\n\n\n[**can_see_bank_account_credit_limit**](/glossary#can_see_bank_account_credit_limit): true\n\n\n\n[**can_see_bank_account_currency**](/glossary#can_see_bank_account_currency): \n\n\n\n[**can_see_bank_account_iban**](/glossary#can_see_bank_account_iban): \n\n\n\n[**can_see_bank_account_label**](/glossary#can_see_bank_account_label): true\n\n\n\n[**can_see_bank_account_national_identifier**](/glossary#can_see_bank_account_national_identifier): \n\n\n\n[**can_see_bank_account_number**](/glossary#can_see_bank_account_number): true\n\n\n\n[**can_see_bank_account_owners**](/glossary#can_see_bank_account_owners): true\n\n\n\n[**can_see_bank_account_routing_address**](/glossary#can_see_bank_account_routing_address): \n\n\n\n[**can_see_bank_account_routing_scheme**](/glossary#can_see_bank_account_routing_scheme): \n\n\n\n[**can_see_bank_account_swift_bic**](/glossary#can_see_bank_account_swift_bic): \n\n\n\n[**can_see_bank_account_type**](/glossary#can_see_bank_account_type): \n\n\n\n[**can_see_bank_routing_address**](/glossary#can_see_bank_routing_address): true\n\n\n\n[**can_see_bank_routing_scheme**](/glossary#can_see_bank_routing_scheme): \n\n\n\n[**can_see_comments**](/glossary#can_see_comments): \n\n\n\n[**can_see_corporate_location**](/glossary#can_see_corporate_location): true\n\n\n\n[**can_see_image_url**](/glossary#can_see_image_url): true\n\n\n\n[**can_see_images**](/glossary#can_see_images): true\n\n\n\n[**can_see_more_info**](/glossary#can_see_more_info): \n\n\n\n[**can_see_open_corporates_url**](/glossary#can_see_open_corporates_url): \n\n\n\n[**can_see_other_account_bank_name**](/glossary#can_see_other_account_bank_name): \n\n\n\n[**can_see_other_account_iban**](/glossary#can_see_other_account_iban): \n\n\n\n[**can_see_other_account_kind**](/glossary#can_see_other_account_kind): \n\n\n\n[**can_see_other_account_metadata**](/glossary#can_see_other_account_metadata): \n\n\n\n[**can_see_other_account_national_identifier**](/glossary#can_see_other_account_national_identifier): true\n\n\n\n[**can_see_other_account_number**](/glossary#can_see_other_account_number): true\n\n\n\n[**can_see_other_account_routing_address**](/glossary#can_see_other_account_routing_address): true\n\n\n\n[**can_see_other_account_routing_scheme**](/glossary#can_see_other_account_routing_scheme): \n\n\n\n[**can_see_other_account_swift_bic**](/glossary#can_see_other_account_swift_bic): true\n\n\n\n[**can_see_other_bank_routing_address**](/glossary#can_see_other_bank_routing_address): \n\n\n\n[**can_see_other_bank_routing_scheme**](/glossary#can_see_other_bank_routing_scheme): \n\n\n\n[**can_see_owner_comment**](/glossary#can_see_owner_comment): \n\n\n\n[**can_see_physical_location**](/glossary#can_see_physical_location): \n\n\n\n[**can_see_private_alias**](/glossary#can_see_private_alias): \n\n\n\n[**can_see_public_alias**](/glossary#can_see_public_alias): \n\n\n\n[**can_see_tags**](/glossary#can_see_tags): \n\n\n\n[**can_see_transaction_amount**](/glossary#can_see_transaction_amount): true\n\n\n\n[**can_see_transaction_balance**](/glossary#can_see_transaction_balance): \n\n\n\n[**can_see_transaction_currency**](/glossary#can_see_transaction_currency): \n\n\n\n[**can_see_transaction_description**](/glossary#can_see_transaction_description): true\n\n\n\n[**can_see_transaction_finish_date**](/glossary#can_see_transaction_finish_date): \n\n\n\n[**can_see_transaction_metadata**](/glossary#can_see_transaction_metadata): \n\n\n\n[**can_see_transaction_other_bank_account**](/glossary#can_see_transaction_other_bank_account): \n\n\n\n[**can_see_transaction_start_date**](/glossary#can_see_transaction_start_date): \n\n\n\n[**can_see_transaction_this_bank_account**](/glossary#can_see_transaction_this_bank_account): \n\n\n\n[**can_see_transaction_type**](/glossary#can_see_transaction_type): \n\n\n\n[**can_see_url**](/glossary#can_see_url): true\n\n\n\n[**can_see_where_tag**](/glossary#can_see_where_tag): true\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**hide_metadata_if_alias_used**](/glossary#hide_metadata_if_alias_used): \n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**is_public**](/glossary#is_public): true\n\n\n\n[**is_system**](/glossary#): true\n\n\n\n[**metadata_view**](/glossary#metadata_view): \n\n\n\n[**short_name**](/glossary#short_name): \n\n\n\n[is_firehose](/glossary#is_firehose): \n\n\n",
      "example_request_body": {
        "name": "_test",
        "description": "This view is for family",
        "metadata_view": "_test",
        "is_public": true,
        "which_alias_to_use": "family",
        "hide_metadata_if_alias_used": false,
        "allowed_actions": [
          "can_see_transaction_this_bank_account",
          "can_see_transaction_other_bank_account",
          "can_see_transaction_metadata",
          "can_see_transaction_label",
          "can_see_transaction_amount",
          "can_see_transaction_type",
          "can_see_transaction_currency",
          "can_see_transaction_start_date",
          "can_see_transaction_finish_date",
          "can_see_transaction_balance",
          "can_see_comments",
          "can_see_narrative",
          "can_see_tags",
          "can_see_images",
          "can_see_bank_account_owners",
          "can_see_bank_account_type",
          "can_see_bank_account_balance",
          "can_see_bank_account_currency",
          "can_see_bank_account_label",
          "can_see_bank_account_national_identifier",
          "can_see_bank_account_swift_bic",
          "can_see_bank_account_iban",
          "can_see_bank_account_number",
          "can_see_bank_account_bank_name",
          "can_see_other_account_national_identifier",
          "can_see_other_account_swift_bic",
          "can_see_other_account_iban",
          "can_see_other_account_bank_name",
          "can_see_other_account_number",
          "can_see_other_account_metadata",
          "can_see_other_account_kind",
          "can_see_more_info",
          "can_see_url",
          "can_see_image_url",
          "can_see_open_corporates_url",
          "can_see_corporate_location",
          "can_see_physical_location",
          "can_see_public_alias",
          "can_see_private_alias",
          "can_add_more_info",
          "can_add_url",
          "can_add_image_url",
          "can_add_open_corporates_url",
          "can_add_corporate_location",
          "can_add_physical_location",
          "can_add_public_alias",
          "can_add_private_alias",
          "can_delete_corporate_location",
          "can_delete_physical_location",
          "can_edit_narrative",
          "can_add_comment",
          "can_delete_comment",
          "can_add_tag",
          "can_delete_tag",
          "can_add_image",
          "can_delete_image",
          "can_add_where_tag",
          "can_see_where_tag",
          "can_delete_where_tag",
          "can_create_counterparty",
          "can_see_bank_routing_scheme",
          "can_see_bank_routing_address",
          "can_see_bank_account_routing_scheme",
          "can_see_bank_account_routing_address",
          "can_see_other_bank_routing_scheme",
          "can_see_other_bank_routing_address",
          "can_see_other_account_routing_scheme",
          "can_see_other_account_routing_address",
          "can_query_available_funds",
          "can_add_transaction_request_to_own_account",
          "can_add_transaction_request_to_any_account",
          "can_see_bank_account_credit_limit",
          "can_create_direct_debit",
          "can_create_standing_order",
          "can_add_transaction_request_to_any_account"
        ]
      },
      "success_response_body": {
        "id": "1234",
        "short_name": "short_name",
        "description": "description",
        "metadata_view": "owner",
        "is_public": true,
        "is_system": true,
        "alias": "No",
        "hide_metadata_if_alias_used": true,
        "can_add_comment": true,
        "can_add_corporate_location": true,
        "can_add_image": true,
        "can_add_image_url": true,
        "can_add_more_info": true,
        "can_add_open_corporates_url": true,
        "can_add_physical_location": true,
        "can_add_private_alias": true,
        "can_add_public_alias": true,
        "can_add_tag": true,
        "can_add_url": true,
        "can_add_where_tag": true,
        "can_delete_comment": true,
        "can_add_counterparty": true,
        "can_delete_corporate_location": true,
        "can_delete_image": true,
        "can_delete_physical_location": true,
        "can_delete_tag": true,
        "can_delete_where_tag": true,
        "can_edit_owner_comment": true,
        "can_see_bank_account_balance": true,
        "can_query_available_funds": true,
        "can_see_bank_account_bank_name": true,
        "can_see_bank_account_currency": true,
        "can_see_bank_account_iban": true,
        "can_see_bank_account_label": true,
        "can_see_bank_account_national_identifier": true,
        "can_see_bank_account_number": true,
        "can_see_bank_account_owners": true,
        "can_see_bank_account_swift_bic": true,
        "can_see_bank_account_type": true,
        "can_see_comments": true,
        "can_see_corporate_location": true,
        "can_see_image_url": true,
        "can_see_images": true,
        "can_see_more_info": true,
        "can_see_open_corporates_url": true,
        "can_see_other_account_bank_name": true,
        "can_see_other_account_iban": true,
        "can_see_other_account_kind": true,
        "can_see_other_account_metadata": true,
        "can_see_other_account_national_identifier": true,
        "can_see_other_account_number": true,
        "can_see_other_account_swift_bic": true,
        "can_see_owner_comment": true,
        "can_see_physical_location": true,
        "can_see_private_alias": true,
        "can_see_public_alias": true,
        "can_see_tags": true,
        "can_see_transaction_amount": true,
        "can_see_transaction_balance": true,
        "can_see_transaction_currency": true,
        "can_see_transaction_description": true,
        "can_see_transaction_finish_date": true,
        "can_see_transaction_metadata": true,
        "can_see_transaction_other_bank_account": true,
        "can_see_transaction_start_date": true,
        "can_see_transaction_this_bank_account": true,
        "can_see_transaction_type": true,
        "can_see_url": true,
        "can_see_where_tag": true,
        "can_see_bank_routing_scheme": true,
        "can_see_bank_routing_address": true,
        "can_see_bank_account_routing_scheme": true,
        "can_see_bank_account_routing_address": true,
        "can_see_other_bank_routing_scheme": true,
        "can_see_other_bank_routing_address": true,
        "can_see_other_account_routing_scheme": true,
        "can_see_other_account_routing_address": true,
        "can_add_transaction_request_to_own_account": true,
        "can_add_transaction_request_to_any_account": true,
        "can_see_bank_account_credit_limit": true,
        "can_create_direct_debit": true,
        "can_create_standing_order": true
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-10001: Incorrect json format.",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["View-Custom", "Account", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "hide_metadata_if_alias_used": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "allowed_actions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "description": {
            "type": "string"
          },
          "is_public": {
            "type": "boolean"
          },
          "metadata_view": {
            "type": "string"
          },
          "which_alias_to_use": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "can_see_other_account_swift_bic": {
            "type": "boolean"
          },
          "can_see_where_tag": {
            "type": "boolean"
          },
          "can_see_url": {
            "type": "boolean"
          },
          "can_create_direct_debit": {
            "type": "boolean"
          },
          "can_see_bank_account_swift_bic": {
            "type": "boolean"
          },
          "can_see_bank_account_routing_address": {
            "type": "boolean"
          },
          "can_see_tags": {
            "type": "boolean"
          },
          "can_see_transaction_balance": {
            "type": "boolean"
          },
          "can_delete_corporate_location": {
            "type": "boolean"
          },
          "can_add_image_url": {
            "type": "boolean"
          },
          "can_see_public_alias": {
            "type": "boolean"
          },
          "can_add_transaction_request_to_own_account": {
            "type": "boolean"
          },
          "can_add_comment": {
            "type": "boolean"
          },
          "can_see_other_bank_routing_scheme": {
            "type": "boolean"
          },
          "description": {
            "type": "string"
          },
          "can_see_corporate_location": {
            "type": "boolean"
          },
          "can_see_other_account_bank_name": {
            "type": "boolean"
          },
          "can_see_more_info": {
            "type": "boolean"
          },
          "can_add_counterparty": {
            "type": "boolean"
          },
          "is_system": {
            "type": "boolean"
          },
          "can_see_physical_location": {
            "type": "boolean"
          },
          "can_query_available_funds": {
            "type": "boolean"
          },
          "can_edit_owner_comment": {
            "type": "boolean"
          },
          "can_see_private_alias": {
            "type": "boolean"
          },
          "can_see_bank_account_credit_limit": {
            "type": "boolean"
          },
          "can_see_other_account_routing_address": {
            "type": "boolean"
          },
          "can_see_bank_account_balance": {
            "type": "boolean"
          },
          "can_add_public_alias": {
            "type": "boolean"
          },
          "can_see_bank_routing_scheme": {
            "type": "boolean"
          },
          "can_see_bank_account_owners": {
            "type": "boolean"
          },
          "can_see_other_account_metadata": {
            "type": "boolean"
          },
          "can_delete_physical_location": {
            "type": "boolean"
          },
          "hide_metadata_if_alias_used": {
            "type": "boolean"
          },
          "can_see_transaction_this_bank_account": {
            "type": "boolean"
          },
          "can_see_image_url": {
            "type": "boolean"
          },
          "can_see_transaction_type": {
            "type": "boolean"
          },
          "can_see_images": {
            "type": "boolean"
          },
          "can_see_transaction_amount": {
            "type": "boolean"
          },
          "metadata_view": {
            "type": "string"
          },
          "can_see_transaction_metadata": {
            "type": "boolean"
          },
          "can_see_comments": {
            "type": "boolean"
          },
          "can_see_other_account_iban": {
            "type": "boolean"
          },
          "can_add_image": {
            "type": "boolean"
          },
          "can_see_bank_account_routing_scheme": {
            "type": "boolean"
          },
          "can_see_bank_account_type": {
            "type": "boolean"
          },
          "can_see_other_account_kind": {
            "type": "boolean"
          },
          "can_see_bank_account_currency": {
            "type": "boolean"
          },
          "can_add_where_tag": {
            "type": "boolean"
          },
          "can_see_transaction_start_date": {
            "type": "boolean"
          },
          "can_see_bank_account_label": {
            "type": "boolean"
          },
          "can_add_private_alias": {
            "type": "boolean"
          },
          "can_see_transaction_currency": {
            "type": "boolean"
          },
          "can_add_more_info": {
            "type": "boolean"
          },
          "can_delete_comment": {
            "type": "boolean"
          },
          "can_create_standing_order": {
            "type": "boolean"
          },
          "can_see_other_bank_routing_address": {
            "type": "boolean"
          },
          "can_see_transaction_other_bank_account": {
            "type": "boolean"
          },
          "can_see_bank_account_number": {
            "type": "boolean"
          },
          "can_add_corporate_location": {
            "type": "boolean"
          },
          "alias": {
            "type": "string"
          },
          "can_add_url": {
            "type": "boolean"
          },
          "short_name": {
            "type": "string"
          },
          "can_delete_where_tag": {
            "type": "boolean"
          },
          "is_public": {
            "type": "boolean"
          },
          "can_see_owner_comment": {
            "type": "boolean"
          },
          "can_see_transaction_finish_date": {
            "type": "boolean"
          },
          "can_see_open_corporates_url": {
            "type": "boolean"
          },
          "can_add_physical_location": {
            "type": "boolean"
          },
          "can_see_bank_account_iban": {
            "type": "boolean"
          },
          "can_see_other_account_national_identifier": {
            "type": "boolean"
          },
          "can_see_bank_routing_address": {
            "type": "boolean"
          },
          "can_delete_image": {
            "type": "boolean"
          },
          "can_add_transaction_request_to_any_account": {
            "type": "boolean"
          },
          "can_add_tag": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "can_see_other_account_routing_scheme": {
            "type": "boolean"
          },
          "can_add_open_corporates_url": {
            "type": "boolean"
          },
          "can_delete_tag": {
            "type": "boolean"
          },
          "can_see_transaction_description": {
            "type": "boolean"
          },
          "can_see_bank_account_national_identifier": {
            "type": "boolean"
          },
          "can_see_other_account_number": {
            "type": "boolean"
          },
          "can_see_bank_account_bank_name": {
            "type": "boolean"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/views",
      "connector_methods": ["obp.checkBankAccountExists", "obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv4.0.0-deleteMyApiCollection",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "deleteMyApiCollection"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v4.0.0/my/api-collections/API_COLLECTION_ID",
      "summary": "Delete My Api Collection",
      "description": "<p>Delete Api Collection By API_COLLECTION_ID</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#\">API_COLLECTION_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n",
      "description_markdown": "Delete Api Collection By API_COLLECTION_ID\n\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[API_COLLECTION_ID](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**value**](/glossary#): 5987953\n\n\n",
      "success_response_body": {
        "value": true
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20057: User not found by userId.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Api-Collection", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "value": {
            "type": "boolean"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/my/api-collections/API_COLLECTION_ID",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv3.1.0-createCustomerAddress",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "createCustomerAddress"
      },
      "request_verb": "POST",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/customers/CUSTOMER_ID/address",
      "summary": "Create Address",
      "description": "<p>Create an Address for a Customer specified by CUSTOMER_ID.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#Customer.customer_id\">CUSTOMER_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#city\"><strong>city</strong></a>:</p>\n<p><a href=\"/glossary#country_code\"><strong>country_code</strong></a>: 1254</p>\n<p><a href=\"/glossary#county\"><strong>county</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>line_1</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>line_2</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>line_3</strong></a>:</p>\n<p><a href=\"/glossary#postcode\"><strong>postcode</strong></a>:</p>\n<p><a href=\"/glossary#state\"><strong>state</strong></a>:</p>\n<p><a href=\"/glossary#status\"><strong>status</strong></a>:</p>\n<p><a href=\"/glossary#tags\"><strong>tags</strong></a>: Create-My-User</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#city\"><strong>city</strong></a>:</p>\n<p><a href=\"/glossary#country_code\"><strong>country_code</strong></a>: 1254</p>\n<p><a href=\"/glossary#county\"><strong>county</strong></a>:</p>\n<p><a href=\"/glossary#customer_address_id\"><strong>customer_address_id</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>insert_date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#\"><strong>line_1</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>line_2</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>line_3</strong></a>:</p>\n<p><a href=\"/glossary#postcode\"><strong>postcode</strong></a>:</p>\n<p><a href=\"/glossary#state\"><strong>state</strong></a>:</p>\n<p><a href=\"/glossary#status\"><strong>status</strong></a>:</p>\n<p><a href=\"/glossary#tags\"><strong>tags</strong></a>: Create-My-User</p>\n",
      "description_markdown": "Create an Address for a Customer specified by CUSTOMER_ID.\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[CUSTOMER_ID](/glossary#Customer.customer_id): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n\n\n**JSON request body fields:**\n\n\n\n[**city**](/glossary#city): \n\n\n\n[**country_code**](/glossary#country_code): 1254\n\n\n\n[**county**](/glossary#county): \n\n\n\n[**line_1**](/glossary#): \n\n\n\n[**line_2**](/glossary#): \n\n\n\n[**line_3**](/glossary#): \n\n\n\n[**postcode**](/glossary#postcode): \n\n\n\n[**state**](/glossary#state): \n\n\n\n[**status**](/glossary#status): \n\n\n\n[**tags**](/glossary#tags): Create-My-User\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**city**](/glossary#city): \n\n\n\n[**country_code**](/glossary#country_code): 1254\n\n\n\n[**county**](/glossary#county): \n\n\n\n[**customer_address_id**](/glossary#customer_address_id): \n\n\n\n[**customer_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**insert_date**](/glossary#): 2020-01-27\n\n\n\n[**line_1**](/glossary#): \n\n\n\n[**line_2**](/glossary#): \n\n\n\n[**line_3**](/glossary#): \n\n\n\n[**postcode**](/glossary#postcode): \n\n\n\n[**state**](/glossary#state): \n\n\n\n[**status**](/glossary#status): \n\n\n\n[**tags**](/glossary#tags): Create-My-User\n\n\n",
      "example_request_body": {
        "line_1": "No 1 the Road",
        "line_2": "The Place",
        "line_3": "The Hill",
        "city": "Berlin",
        "county": "",
        "state": "Brandenburg",
        "postcode": "13359",
        "country_code": "DE",
        "tags": ["mailing", "home"],
        "status": "OK"
      },
      "success_response_body": {
        "customer_address_id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
        "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "line_1": "No 1 the Road",
        "line_2": "The Place",
        "line_3": "The Hill",
        "city": "Berlin",
        "county": "",
        "state": "Brandenburg",
        "postcode": "13359",
        "country_code": "DE",
        "tags": ["mailing", "home"],
        "status": "OK",
        "insert_date": "1100-01-01T00:00:00Z"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Customer", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "city": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "postcode": {
            "type": "string"
          },
          "line_1": {
            "type": "string"
          },
          "line_2": {
            "type": "string"
          },
          "line_3": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "country_code": {
            "type": "string"
          },
          "county": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "city": {
            "type": "string"
          },
          "customer_id": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "postcode": {
            "type": "string"
          },
          "line_1": {
            "type": "string"
          },
          "line_2": {
            "type": "string"
          },
          "line_3": {
            "type": "string"
          },
          "customer_address_id": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "insert_date": {
            "type": "string",
            "format": "date-time"
          },
          "country_code": {
            "type": "string"
          },
          "county": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateCustomerAddress",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/customers/CUSTOMER_ID/address",
      "connector_methods": [
        "obp.createCustomerAddress",
        "obp.getCustomerByCustomerId",
        "obp.getBank",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv3.1.0-checkFundsAvailable",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "checkFundsAvailable"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/funds-available",
      "summary": "Check Available Funds",
      "description": "<p>Check Available Funds<br />\nMandatory URL parameters:</p>\n<ul>\n<li>amount=NUMBER</li>\n<li>currency=STRING</li>\n</ul>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#answer\"><strong>answer</strong></a>:</p>\n<p><a href=\"/glossary#available_funds_request_id\"><strong>available_funds_request_id</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p>\n",
      "description_markdown": "Check Available Funds\nMandatory URL parameters:\n\n* amount=NUMBER\n* currency=STRING\n\n      \n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[VIEW_ID](/glossary#this_view_id): owner\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**answer**](/glossary#answer): \n\n\n\n[**available_funds_request_id**](/glossary#available_funds_request_id): \n\n\n\n[**date**](/glossary#): 2020-01-27\n\n\n",
      "success_response_body": {
        "answer": "yes",
        "date": "2023-04-13T04:30:08Z",
        "available_funds_request_id": "c4ykz59svsr9b7fmdxk8ezs7"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-20054: Invalid amount. Please specify a valid value for amount.",
        "OBP-10003: Invalid Currency Value. It should be three letters ISO Currency Code. ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Account", "Confirmation of Funds Service (PIIS)", "PSD2", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "available_funds_request_id": {
            "type": "string"
          },
          "answer": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/funds-available",
      "connector_methods": [
        "obp.checkBankAccountExists",
        "obp.getBank",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv4.0.0-deleteCustomerAttribute",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "deleteCustomerAttribute"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/CUSTOMER_ID/attributes/CUSTOMER_ATTRIBUTE_ID",
      "summary": "Delete Customer Attribute",
      "description": "<p>Delete Customer Attribute</p>\n<p>CustomerAttributes are used to enhance the OBP Customer object with Bank specific entities.</p>\n<p>Delete a Customer Attribute by its id.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#\">CUSTOMER_ATTRIBUTE_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#Customer.customer_id\">CUSTOMER_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><strong>JSON response body fields:</strong></p>\n",
      "description_markdown": "Delete Customer Attribute\n\n\nCustomerAttributes are used to enhance the OBP Customer object with Bank specific entities.\n\n       \n\nDelete a Customer Attribute by its id.\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[CUSTOMER_ATTRIBUTE_ID](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[CUSTOMER_ID](/glossary#Customer.customer_id): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n\n\n**JSON response body fields:**\n\n\n",
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Customer", "New-Style"],
      "roles": [
        {
          "role": "CanDeleteCustomerAttributeAtOneBank",
          "requires_bank_id": true
        },
        {
          "role": "CanDeleteCustomerAttributeAtAnyBank",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/CUSTOMER_ID/attributes/CUSTOMER_ATTRIBUTE_ID",
      "connector_methods": ["obp.deleteCustomerAttribute"]
    },
    {
      "operation_id": "OBPv4.0.0-updateDynamicResourceDoc",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "updateDynamicResourceDoc"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v4.0.0/management/dynamic-resource-docs/DYNAMIC-RESOURCE-DOC-ID",
      "summary": "Update Dynamic Resource Doc",
      "description": "<p>Update a Dynamic Resource Doc.</p>\n<p>The connector_method_body is URL-encoded format String</p>\n<p>Authentication is Mandatory</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#roles\"><strong>roles</strong></a>: CanCreateMyUser</p>\n<p><a href=\"/glossary#summary\"><strong>summary</strong></a>:</p>\n<p><a href=\"/glossary#tags\"><strong>tags</strong></a>: Create-My-User</p>\n",
      "description_markdown": "Update a Dynamic Resource Doc.\n\nThe connector_method_body is URL-encoded format String\n\n\nAuthentication is Mandatory\n\n\n**JSON response body fields:**\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**roles**](/glossary#roles): CanCreateMyUser\n\n\n\n[**summary**](/glossary#summary): \n\n\n\n[**tags**](/glossary#tags): Create-My-User\n\n\n",
      "example_request_body": {
        "error_response_bodies": "OBP-50000: Unknown Error.,OBP-20001: User not logged in. Authentication is required!,OBP-20006: User is missing one or more roles: ,OBP-10001: Incorrect json format.",
        "description": "Create one User",
        "tags": "Create-My-User",
        "request_verb": "POST",
        "method_body": "%20%20%20%20val%20Some(resourceDoc)%20%3D%20callContext.resourceDocument%0A%20%20%20%20val%20hasRequestBody%20%3D%20request.body.isDefined%0A%0A%20%20%20%20%2F%2F%20get%20Path%20Parameters%2C%20example%3A%0A%20%20%20%20%2F%2F%20if%20the%20requestUrl%20of%20resourceDoc%20is%20%2Fhello%2Fbanks%2FBANK_ID%2Fworld%0A%20%20%20%20%2F%2F%20the%20request%20path%20is%20%2Fhello%2Fbanks%2Fbank_x%2Fworld%0A%20%20%20%20%2F%2FpathParams.get(%22BANK_ID%22)%20will%20get%20Option(%22bank_x%22)%20value%0A%0A%20%20%20%20val%20myUserId%20%3D%20pathParams(%22MY_USER_ID%22)%0A%0A%0A%20%20%20%20val%20requestEntity%20%3D%20request.json%20match%20%7B%0A%20%20%20%20%20%20case%20Full(zson)%20%3D%3E%0A%20%20%20%20%20%20%20%20try%20%7B%0A%20%20%20%20%20%20%20%20%20%20zson.extract%5BRequestRootJsonClass%5D%0A%20%20%20%20%20%20%20%20%7D%20catch%20%7B%0A%20%20%20%20%20%20%20%20%20%20case%20e%3A%20MappingException%20%3D%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20return%20Full(errorJsonResponse(s%22%24InvalidJsonFormat%20%24%7Be.msg%7D%22))%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20case%20_%3A%20EmptyBox%20%3D%3E%0A%20%20%20%20%20%20%20%20return%20Full(errorJsonResponse(s%22%24InvalidRequestPayload%20Current%20request%20has%20no%20payload%22))%0A%20%20%20%20%7D%0A%0A%0A%20%20%20%20%2F%2F%20please%20add%20business%20logic%20here%0A%20%20%20%20val%20responseBody%3AResponseRootJsonClass%20%3D%20ResponseRootJsonClass(s%22%24%7BmyUserId%7D_from_path%22%2C%20requestEntity.name%2C%20requestEntity.age%2C%20requestEntity.hobby)%0A%20%20%20%20Future.successful%20%7B%0A%20%20%20%20%20%20(responseBody%2C%20HttpCode.%60200%60(callContext.callContext))%0A%20%20%20%20%7D",
        "roles": "CanCreateMyUser",
        "example_request_body": {
          "name": "Jhon",
          "age": 12,
          "hobby": ["coding"],
          "_optional_fields_": ["hobby"]
        },
        "request_url": "/my_user/MY_USER_ID",
        "bank_id": "gh.29.uk",
        "partial_function_name": "createUser",
        "summary": "Create My User",
        "success_response_body": {
          "my_user_id": "some_id_value",
          "name": "Jhon",
          "age": 12,
          "hobby": ["coding"],
          "_optional_fields_": ["hobby"]
        }
      },
      "success_response_body": {
        "error_response_bodies": "OBP-50000: Unknown Error.,OBP-20001: User not logged in. Authentication is required!,OBP-20006: User is missing one or more roles: ,OBP-10001: Incorrect json format.",
        "description": "Create one User",
        "tags": "Create-My-User",
        "dynamic_resource_doc_id": "vce035ca-9a0f-4bfa-b30b-9003aa467f51",
        "request_verb": "POST",
        "method_body": "%20%20%20%20val%20Some(resourceDoc)%20%3D%20callContext.resourceDocument%0A%20%20%20%20val%20hasRequestBody%20%3D%20request.body.isDefined%0A%0A%20%20%20%20%2F%2F%20get%20Path%20Parameters%2C%20example%3A%0A%20%20%20%20%2F%2F%20if%20the%20requestUrl%20of%20resourceDoc%20is%20%2Fhello%2Fbanks%2FBANK_ID%2Fworld%0A%20%20%20%20%2F%2F%20the%20request%20path%20is%20%2Fhello%2Fbanks%2Fbank_x%2Fworld%0A%20%20%20%20%2F%2FpathParams.get(%22BANK_ID%22)%20will%20get%20Option(%22bank_x%22)%20value%0A%0A%20%20%20%20val%20myUserId%20%3D%20pathParams(%22MY_USER_ID%22)%0A%0A%0A%20%20%20%20val%20requestEntity%20%3D%20request.json%20match%20%7B%0A%20%20%20%20%20%20case%20Full(zson)%20%3D%3E%0A%20%20%20%20%20%20%20%20try%20%7B%0A%20%20%20%20%20%20%20%20%20%20zson.extract%5BRequestRootJsonClass%5D%0A%20%20%20%20%20%20%20%20%7D%20catch%20%7B%0A%20%20%20%20%20%20%20%20%20%20case%20e%3A%20MappingException%20%3D%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20return%20Full(errorJsonResponse(s%22%24InvalidJsonFormat%20%24%7Be.msg%7D%22))%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20case%20_%3A%20EmptyBox%20%3D%3E%0A%20%20%20%20%20%20%20%20return%20Full(errorJsonResponse(s%22%24InvalidRequestPayload%20Current%20request%20has%20no%20payload%22))%0A%20%20%20%20%7D%0A%0A%0A%20%20%20%20%2F%2F%20please%20add%20business%20logic%20here%0A%20%20%20%20val%20responseBody%3AResponseRootJsonClass%20%3D%20ResponseRootJsonClass(s%22%24%7BmyUserId%7D_from_path%22%2C%20requestEntity.name%2C%20requestEntity.age%2C%20requestEntity.hobby)%0A%20%20%20%20Future.successful%20%7B%0A%20%20%20%20%20%20(responseBody%2C%20HttpCode.%60200%60(callContext.callContext))%0A%20%20%20%20%7D",
        "roles": "CanCreateMyUser",
        "example_request_body": {
          "name": "Jhon",
          "age": 12,
          "hobby": ["coding"],
          "_optional_fields_": ["hobby"]
        },
        "request_url": "/my_user/MY_USER_ID",
        "bank_id": "gh.29.uk",
        "partial_function_name": "createUser",
        "summary": "Create My User",
        "success_response_body": {
          "my_user_id": "some_id_value",
          "name": "Jhon",
          "age": 12,
          "hobby": ["coding"],
          "_optional_fields_": ["hobby"]
        }
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Dynamic-Resource-Doc", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "tags": {
            "type": "string"
          },
          "request_verb": {
            "type": "string"
          },
          "example_request_body": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "age": {
                "type": "integer"
              },
              "hobby": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "s": {
                      "type": "string"
                    }
                  }
                }
              },
              "_optional_fields_": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "s": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "bank_id": {
            "type": "string"
          },
          "partial_function_name": {
            "type": "string"
          },
          "success_response_body": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "hobby": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "s": {
                      "type": "string"
                    }
                  }
                }
              },
              "my_user_id": {
                "type": "string"
              },
              "age": {
                "type": "integer"
              },
              "_optional_fields_": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "s": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "roles": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          },
          "request_url": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "method_body": {
            "type": "string"
          },
          "error_response_bodies": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "tags": {
            "type": "string"
          },
          "request_verb": {
            "type": "string"
          },
          "example_request_body": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "age": {
                "type": "integer"
              },
              "hobby": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "s": {
                      "type": "string"
                    }
                  }
                }
              },
              "_optional_fields_": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "s": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "bank_id": {
            "type": "string"
          },
          "partial_function_name": {
            "type": "string"
          },
          "success_response_body": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "hobby": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "s": {
                      "type": "string"
                    }
                  }
                }
              },
              "my_user_id": {
                "type": "string"
              },
              "age": {
                "type": "integer"
              },
              "_optional_fields_": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "s": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "roles": {
            "type": "string"
          },
          "dynamic_resource_doc_id": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          },
          "request_url": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "method_body": {
            "type": "string"
          },
          "error_response_bodies": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanUpdateDynamicResourceDoc",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/dynamic-resource-docs/DYNAMIC-RESOURCE-DOC-ID",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv4.0.0-deleteEndpointMapping",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "deleteEndpointMapping"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v4.0.0/management/endpoint-mappings/ENDPOINT_MAPPING_ID",
      "summary": "Delete Endpoint Mapping",
      "description": "<p>Delete a Endpoint Mapping.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#\">ENDPOINT_MAPPING_ID</a>: ENDPOINT_MAPPING_ID</p>\n<p><strong>JSON response body fields:</strong></p>\n",
      "description_markdown": "Delete a Endpoint Mapping.\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ENDPOINT_MAPPING_ID](/glossary#): ENDPOINT_MAPPING_ID\n\n\n\n\n\n**JSON response body fields:**\n\n\n",
      "success_response_body": true,
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Endpoint-Mapping", "New-Style"],
      "roles": [
        {
          "role": "CanDeleteEndpointMapping",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/endpoint-mappings/ENDPOINT_MAPPING_ID",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv5.1.0-systemViewNamesCheck",
      "implemented_by": {
        "version": "OBPv5.1.0",
        "function": "systemViewNamesCheck"
      },
      "request_verb": "GET",
      "request_url": "/obp/v5.1.0/management/system/integrity/system-view-names-check",
      "summary": "Check System View Names",
      "description": "<p>Check system view names.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#success\"><strong>success</strong></a>:</p>\n<p><a href=\"/glossary#\">debug_info</a>: debug_info</p>\n",
      "description_markdown": "Check system view names.\n\nAuthentication is Mandatory\n\n\n**JSON response body fields:**\n\n\n\n[**success**](/glossary#success): \n\n\n\n[debug_info](/glossary#): debug_info\n\n\n",
      "success_response_body": {
        "success": true
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["System-Integrity", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          }
        }
      },
      "roles": [
        {
          "role": "CanGetSystemIntegrity",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/system/integrity/system-view-names-check",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv4.0.0-getTransactionAttributeDefinition",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getTransactionAttributeDefinition"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/attribute-definitions/transaction",
      "summary": "Get Transaction Attribute Definition",
      "description": "<p>Get Transaction Attribute Definition</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#alias\"><strong>alias</strong></a>:</p>\n<p><a href=\"/glossary#attribute_definition_id\"><strong>attribute_definition_id</strong></a>:</p>\n<p><a href=\"/glossary#attributes\"><strong>attributes</strong></a>: attribute value in form of (name, value)</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#can_be_seen_on_views\"><strong>can_be_seen_on_views</strong></a>: true</p>\n<p><a href=\"/glossary#category\"><strong>category</strong></a>:</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#is_active\"><strong>is_active</strong></a>: true</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n",
      "description_markdown": "Get Transaction Attribute Definition\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**alias**](/glossary#alias): \n\n\n\n[**attribute_definition_id**](/glossary#attribute_definition_id): \n\n\n\n[**attributes**](/glossary#attributes): attribute value in form of (name, value)\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**can_be_seen_on_views**](/glossary#can_be_seen_on_views): true\n\n\n\n[**category**](/glossary#category): \n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**is_active**](/glossary#is_active): true\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**type**](/glossary#type): \n\n\n",
      "success_response_body": {
        "attributes": [
          {
            "attribute_definition_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
            "bank_id": "gh.29.uk",
            "name": "SPECIAL_TAX_NUMBER",
            "category": "Transaction",
            "type": "STRING",
            "description": "description",
            "alias": "STRING",
            "can_be_seen_on_views": ["bank"],
            "is_active": true
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["Transaction", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "attributes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "can_be_seen_on_views": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "attribute_definition_id": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "is_active": {
                  "type": "boolean"
                },
                "bank_id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "category": {
                  "type": "string"
                },
                "alias": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetTransactionAttributeDefinitionAtOneBank",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/attribute-definitions/transaction",
      "connector_methods": ["obp.getAttributeDefinition"]
    },
    {
      "operation_id": "OBPv1.4.0-getResourceDocsObp",
      "implemented_by": {
        "version": "OBPv1.4.0",
        "function": "getResourceDocsObp"
      },
      "request_verb": "GET",
      "request_url": "/obp/v1.4.0/resource-docs/API_VERSION/obp",
      "summary": "Get Resource Docs",
      "description": "<p>Get documentation about the RESTful resources on this server including example bodies for POST and PUT requests.</p>\n<p>This is the native data format used to document OBP endpoints. Each endpoint has a Resource Doc (a Scala case class) defined in the source code.</p>\n<p>This endpoint is used by OBP API Explorer to display and work with the API documentation.</p>\n<p>Most (but not all) fields are also available in swagger format. (The Swagger endpoint is built from Resource Docs.)</p>\n<p>API_VERSION is the version you want documentation about e.g. v3.0.0</p>\n<p>You may filter this endpoint with tags parameter e.g. ?tags=Account,Bank</p>\n<p>You may filter this endpoint with functions parameter e.g. ?functions=enableDisableConsumers,getConnectorMetrics</p>\n<p>For possible function values, see implemented_by.function in the JSON returned by this endpoint or the OBP source code or the footer of the API Explorer which produces a comma separated list of functions that reflect the server or filtering by API Explorer based on tags etc.</p>\n<p>You may filter this endpoint using the 'content' url parameter, e.g. ?content=dynamic<br />\nif set content=dynamic, only show dynamic endpoints, if content=static, only show the static endpoints. if omit this parameter, we will show all the endpoints.</p>\n<p>You may need some other language resource docs, now we support i18n language tag , e.g. ?locale=zh_CN</p>\n<p>You can filter with api-collection-id, but api-collection-id can not be used with others together. If api-collection-id is used in URL, it will ignore all other parameters.</p>\n<p>You can easily pass the cache, use different value for cache-modifier, eg: ?cache-modifier= 123</p>\n<p>See the Resource Doc endpoint for more information.</p>\n<p>Following are more examples:<br />\n<a href=\"https://obp-apisandbox.joinfincubator.com/obp/v4.0.0/resource-docs/v4.0.0/obp\">https://obp-apisandbox.joinfincubator.com/obp/v4.0.0/resource-docs/v4.0.0/obp</a><br />\n<a href=\"https://obp-apisandbox.joinfincubator.com/obp/v4.0.0/resource-docs/v4.0.0/obp?tags=Account,Bank\">https://obp-apisandbox.joinfincubator.com/obp/v4.0.0/resource-docs/v4.0.0/obp?tags=Account,Bank</a><br />\n<a href=\"https://obp-apisandbox.joinfincubator.com/obp/v4.0.0/resource-docs/v4.0.0/obp?functions=getBanks,bankById\">https://obp-apisandbox.joinfincubator.com/obp/v4.0.0/resource-docs/v4.0.0/obp?functions=getBanks,bankById</a><br />\n<a href=\"https://obp-apisandbox.joinfincubator.com/obp/v4.0.0/resource-docs/v4.0.0/obp?locale=zh_CN\">https://obp-apisandbox.joinfincubator.com/obp/v4.0.0/resource-docs/v4.0.0/obp?locale=zh_CN</a><br />\n<a href=\"https://obp-apisandbox.joinfincubator.com/obp/v4.0.0/resource-docs/v4.0.0/obp?content=static,dynamic,all\">https://obp-apisandbox.joinfincubator.com/obp/v4.0.0/resource-docs/v4.0.0/obp?content=static,dynamic,all</a><br />\n<a href=\"https://obp-apisandbox.joinfincubator.com/obp/v4.0.0/resource-docs/v4.0.0/obp?api-collection-id=4e866c86-60c3-4268-a221-cb0bbf1ad221\">https://obp-apisandbox.joinfincubator.com/obp/v4.0.0/resource-docs/v4.0.0/obp?api-collection-id=4e866c86-60c3-4268-a221-cb0bbf1ad221</a><br />\n<a href=\"https://obp-apisandbox.joinfincubator.com/obp/v4.0.0/resource-docs/v4.0.0/obp?cache-modifier=3141592653\">https://obp-apisandbox.joinfincubator.com/obp/v4.0.0/resource-docs/v4.0.0/obp?cache-modifier=3141592653</a></p>\n<ul>\n<li> operation_id is concatenation of \"v\", version and function and should be unique (used for DOM element IDs etc. maybe used to link to source code) </li>\n<li> version references the version that the API call is defined in.</li>\n<li> function is the (scala) partial function that implements this endpoint. It is unique per version of the API.</li>\n<li> request_url is empty for the root call, else the path. It contains the standard prefix (e.g. /obp) and the implemented version (the version where this endpoint was defined) e.g. /obp/v1.2.0/resource</li>\n<li> specified_url (recommended to use) is empty for the root call, else the path. It contains the standard prefix (e.g. /obp) and the version specified in the call e.g. /obp/v3.1.0/resource. In OBP, endpoints are first made available at the request_url, but the same resource (function call) is often made available under later versions (specified_url). To access the latest version of all endpoints use the latest version available on your OBP instance e.g. /obp/v3.1.0 - To get the original version use the request_url. We recommend to use the specified_url since non semantic improvements are more likely to be applied to later implementations of the call.</li>\n<li> summary is a short description inline with the swagger terminology. </li>\n<li> description may contain html markup (generated from markdown on the server).</li>\n</ul>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#api_version\">API_VERSION</a>:</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>connector_methods</strong></a>: connector_methods</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#\"><strong>description_markdown</strong></a>: description_markdown</p>\n<p><a href=\"/glossary#\"><strong>error_response_bodies</strong></a>: OBP-50000: Unknown Error.,OBP-20001: User not logged in. Authentication is required!,OBP-20006: User is missing one or more roles: ,OBP-10001: Incorrect json format.</p>\n<p><a href=\"/glossary#\"><strong>example_request_body</strong></a>: {&quot;name&quot;: &quot;Jhon&quot;, &quot;age&quot;: 12, &quot;hobby&quot;: [&quot;coding&quot;],&quot;<em>optional_fields</em>&quot;: [&quot;hobby&quot;]}</p>\n<p><a href=\"/glossary#\"><strong>function</strong></a>: function</p>\n<p><a href=\"/glossary#\"><strong>implemented_by</strong></a>: implemented_by</p>\n<p><a href=\"/glossary#\"><strong>is_featured</strong></a>: false</p>\n<p><a href=\"/glossary#\"><strong>operation_id</strong></a>: OBPv4.0.0-getBanks</p>\n<p><a href=\"/glossary#\"><strong>request_url</strong></a>: /my_user/MY_USER_ID</p>\n<p><a href=\"/glossary#\"><strong>request_verb</strong></a>: POST</p>\n<p><a href=\"/glossary#\"><strong>resource_docs</strong></a>: resource_docs</p>\n<p><a href=\"/glossary#\"><strong>special_instructions</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>specified_url</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>success_response_body</strong></a>: {&quot;my_user_id&quot;: &quot;some_id_value&quot;, &quot;name&quot;: &quot;Jhon&quot;, &quot;age&quot;: 12, &quot;hobby&quot;: [&quot;coding&quot;],&quot;<em>optional_fields</em>&quot;: [&quot;hobby&quot;]}</p>\n<p><a href=\"/glossary#summary\"><strong>summary</strong></a>:</p>\n<p><a href=\"/glossary#tags\"><strong>tags</strong></a>: Create-My-User</p>\n<p><a href=\"/glossary#\"><strong>typed_request_body</strong></a>: typed_request_body</p>\n<p><a href=\"/glossary#\"><strong>typed_success_response_body</strong></a>: typed_success_response_body</p>\n<p><a href=\"/glossary#version\"><strong>version</strong></a>:</p>\n<p><a href=\"/glossary#\">created_by_bank_id</a>: created_by_bank_id</p>\n<p><a href=\"/glossary#meta\">meta</a>:</p>\n<p><a href=\"/glossary#roles\">roles</a>: CanCreateMyUser</p>\n",
      "description_markdown": "Get documentation about the RESTful resources on this server including example bodies for POST and PUT requests.\n\nThis is the native data format used to document OBP endpoints. Each endpoint has a Resource Doc (a Scala case class) defined in the source code.\n\n This endpoint is used by OBP API Explorer to display and work with the API documentation.\n\n Most (but not all) fields are also available in swagger format. (The Swagger endpoint is built from Resource Docs.)\n\n API_VERSION is the version you want documentation about e.g. v3.0.0\n\n You may filter this endpoint with tags parameter e.g. ?tags=Account,Bank\n\n You may filter this endpoint with functions parameter e.g. ?functions=enableDisableConsumers,getConnectorMetrics\n\n For possible function values, see implemented_by.function in the JSON returned by this endpoint or the OBP source code or the footer of the API Explorer which produces a comma separated list of functions that reflect the server or filtering by API Explorer based on tags etc.\n\n You may filter this endpoint using the 'content' url parameter, e.g. ?content=dynamic\n if set content=dynamic, only show dynamic endpoints, if content=static, only show the static endpoints. if omit this parameter, we will show all the endpoints.\n\n You may need some other language resource docs, now we support i18n language tag , e.g. ?locale=zh_CN\n \n You can filter with api-collection-id, but api-collection-id can not be used with others together. If api-collection-id is used in URL, it will ignore all other parameters. \n\n You can easily pass the cache, use different value for cache-modifier, eg: ?cache-modifier= 123\n\nSee the Resource Doc endpoint for more information.\n\nFollowing are more examples:\nhttps://obp-apisandbox.joinfincubator.com/obp/v4.0.0/resource-docs/v4.0.0/obp\nhttps://obp-apisandbox.joinfincubator.com/obp/v4.0.0/resource-docs/v4.0.0/obp?tags=Account,Bank\nhttps://obp-apisandbox.joinfincubator.com/obp/v4.0.0/resource-docs/v4.0.0/obp?functions=getBanks,bankById\nhttps://obp-apisandbox.joinfincubator.com/obp/v4.0.0/resource-docs/v4.0.0/obp?locale=zh_CN\nhttps://obp-apisandbox.joinfincubator.com/obp/v4.0.0/resource-docs/v4.0.0/obp?content=static,dynamic,all\nhttps://obp-apisandbox.joinfincubator.com/obp/v4.0.0/resource-docs/v4.0.0/obp?api-collection-id=4e866c86-60c3-4268-a221-cb0bbf1ad221\nhttps://obp-apisandbox.joinfincubator.com/obp/v4.0.0/resource-docs/v4.0.0/obp?cache-modifier=3141592653\n\n<ul>\n<li> operation_id is concatenation of \"v\", version and function and should be unique (used for DOM element IDs etc. maybe used to link to source code) </li>\n<li> version references the version that the API call is defined in.</li>\n<li> function is the (scala) partial function that implements this endpoint. It is unique per version of the API.</li>\n<li> request_url is empty for the root call, else the path. It contains the standard prefix (e.g. /obp) and the implemented version (the version where this endpoint was defined) e.g. /obp/v1.2.0/resource</li>\n<li> specified_url (recommended to use) is empty for the root call, else the path. It contains the standard prefix (e.g. /obp) and the version specified in the call e.g. /obp/v3.1.0/resource. In OBP, endpoints are first made available at the request_url, but the same resource (function call) is often made available under later versions (specified_url). To access the latest version of all endpoints use the latest version available on your OBP instance e.g. /obp/v3.1.0 - To get the original version use the request_url. We recommend to use the specified_url since non semantic improvements are more likely to be applied to later implementations of the call.</li>\n<li> summary is a short description inline with the swagger terminology. </li>\n<li> description may contain html markup (generated from markdown on the server).</li>\n</ul>\n      \n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[API_VERSION](/glossary#api_version): \n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**connector_methods**](/glossary#): connector_methods\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**description_markdown**](/glossary#): description_markdown\n\n\n\n[**error_response_bodies**](/glossary#): OBP-50000: Unknown Error.,OBP-20001: User not logged in. Authentication is required!,OBP-20006: User is missing one or more roles: ,OBP-10001: Incorrect json format.\n\n\n\n[**example_request_body**](/glossary#): {\"name\": \"Jhon\", \"age\": 12, \"hobby\": [\"coding\"],\"_optional_fields_\": [\"hobby\"]}\n\n\n\n[**function**](/glossary#): function\n\n\n\n[**implemented_by**](/glossary#): implemented_by\n\n\n\n[**is_featured**](/glossary#): false\n\n\n\n[**operation_id**](/glossary#): OBPv4.0.0-getBanks\n\n\n\n[**request_url**](/glossary#): /my_user/MY_USER_ID\n\n\n\n[**request_verb**](/glossary#): POST\n\n\n\n[**resource_docs**](/glossary#): resource_docs\n\n\n\n[**special_instructions**](/glossary#): \n\n\n\n[**specified_url**](/glossary#): \n\n\n\n[**success_response_body**](/glossary#): {\"my_user_id\": \"some_id_value\", \"name\": \"Jhon\", \"age\": 12, \"hobby\": [\"coding\"],\"_optional_fields_\": [\"hobby\"]}\n\n\n\n[**summary**](/glossary#summary): \n\n\n\n[**tags**](/glossary#tags): Create-My-User\n\n\n\n[**typed_request_body**](/glossary#): typed_request_body\n\n\n\n[**typed_success_response_body**](/glossary#): typed_success_response_body\n\n\n\n[**version**](/glossary#version): \n\n\n\n[created_by_bank_id](/glossary#): created_by_bank_id\n\n\n\n[meta](/glossary#meta): \n\n\n\n[roles](/glossary#roles): CanCreateMyUser\n\n\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "resource_docs": [
          {
            "operation_id": "OBPv1.4.0-testResourceDoc",
            "implemented_by": {
              "version": "OBPv1.4.0",
              "function": "testResourceDoc"
            },
            "request_verb": "GET",
            "request_url": "/dummy",
            "summary": "Test Resource Doc",
            "description": "<p>I am only a test Resource Doc</p>\n<p>Authentication is Optional</p>\n<p><strong>JSON response body fields:</strong></p>\n",
            "description_markdown": "I am only a test Resource Doc\n\nAuthentication is Optional\n\n\n**JSON response body fields:**\n\n\n",
            "example_request_body": {
              "jsonString": "{}"
            },
            "success_response_body": {
              "jsonString": "{}"
            },
            "error_response_bodies": ["OBP-50000: Unknown Error."],
            "tags": ["Documentation"],
            "typed_request_body": {
              "type": "object",
              "properties": {
                "jsonString": {
                  "type": "string"
                }
              }
            },
            "typed_success_response_body": {
              "type": "object",
              "properties": {
                "jsonString": {
                  "type": "string"
                }
              }
            },
            "is_featured": false,
            "special_instructions": "",
            "specified_url": "",
            "connector_methods": []
          }
        ]
      },
      "error_response_bodies": [
        "OBP-50000: Unknown Error.",
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["Documentation", "API"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "resource_docs": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "summary": {
                  "type": "string"
                },
                "tags": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "request_url": {
                  "type": "string"
                },
                "specified_url": {
                  "type": "string"
                },
                "implemented_by": {
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "function": {
                      "type": "string"
                    }
                  }
                },
                "operation_id": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "is_featured": {
                  "type": "boolean"
                },
                "description_markdown": {
                  "type": "string"
                },
                "typed_request_body": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "properties": {
                      "type": "object",
                      "properties": {
                        "jsonString": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "success_response_body": {
                  "type": "object",
                  "properties": {
                    "jsonString": {
                      "type": "string"
                    }
                  }
                },
                "request_verb": {
                  "type": "string"
                },
                "error_response_bodies": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "connector_methods": {
                  "type": "object",
                  "properties": {}
                },
                "typed_success_response_body": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "properties": {
                      "type": "object",
                      "properties": {
                        "jsonString": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "special_instructions": {
                  "type": "string"
                },
                "example_request_body": {
                  "type": "object",
                  "properties": {
                    "jsonString": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanReadResourceDoc",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/resource-docs/API_VERSION/obp",
      "connector_methods": ["obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv5.0.0-createConsentByConsentRequestIdSms",
      "implemented_by": {
        "version": "OBPv5.0.0",
        "function": "createConsentByConsentRequestIdSms"
      },
      "request_verb": "POST",
      "request_url": "/obp/v5.0.0/consumer/consent-requests/CONSENT_REQUEST_ID/SMS/consents",
      "summary": "Create Consent By CONSENT_REQUEST_ID (SMS)",
      "description": "<p>This endpoint continues the process of creating a Consent. It starts the SCA flow which changes the status of the consent from INITIATED to ACCEPTED or REJECTED.<br />\nPlease note that the Consent cannot elevate the privileges logged in user already have.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#consent_request_id\">CONSENT_REQUEST_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#sms\">SMS</a>:</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#consent_id\"><strong>consent_id</strong></a>:</p>\n<p><a href=\"/glossary#jwt\"><strong>jwt</strong></a>:</p>\n<p><a href=\"/glossary#status\"><strong>status</strong></a>:</p>\n<p><a href=\"/glossary#consent_request_id\">consent_request_id</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n",
      "description_markdown": "This endpoint continues the process of creating a Consent. It starts the SCA flow which changes the status of the consent from INITIATED to ACCEPTED or REJECTED.\nPlease note that the Consent cannot elevate the privileges logged in user already have. \n\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[CONSENT_REQUEST_ID](/glossary#consent_request_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[SMS](/glossary#sms): \n\n\n\n\n\n**JSON request body fields:**\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**consent_id**](/glossary#consent_id): \n\n\n\n[**jwt**](/glossary#jwt): \n\n\n\n[**status**](/glossary#status): \n\n\n\n[consent_request_id](/glossary#consent_request_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n",
      "success_response_body": {
        "consent_id": "9d429899-24f5-42c8-8565-943ffa6a7945",
        "jwt": "eyJhbGciOiJIUzI1NiJ9.eyJlbnRpdGxlbWVudHMiOltdLCJjcmVhdGVkQnlVc2VySWQiOiJhYjY1MzlhOS1iMTA1LTQ0ODktYTg4My0wYWQ4ZDZjNjE2NTciLCJzdWIiOiIyMWUxYzhjYy1mOTE4LTRlYWMtYjhlMy01ZTVlZWM2YjNiNGIiLCJhdWQiOiJlanpuazUwNWQxMzJyeW9tbmhieDFxbXRvaHVyYnNiYjBraWphanNrIiwibmJmIjoxNTUzNTU0ODk5LCJpc3MiOiJodHRwczpcL1wvd3d3Lm9wZW5iYW5rcHJvamVjdC5jb20iLCJleHAiOjE1NTM1NTg0OTksImlhdCI6MTU1MzU1NDg5OSwianRpIjoiMDlmODhkNWYtZWNlNi00Mzk4LThlOTktNjYxMWZhMWNkYmQ1Iiwidmlld3MiOlt7ImFjY291bnRfaWQiOiJtYXJrb19wcml2aXRlXzAxIiwiYmFua19pZCI6ImdoLjI5LnVrLngiLCJ2aWV3X2lkIjoib3duZXIifSx7ImFjY291bnRfaWQiOiJtYXJrb19wcml2aXRlXzAyIiwiYmFua19pZCI6ImdoLjI5LnVrLngiLCJ2aWV3X2lkIjoib3duZXIifV19.8cc7cBEf2NyQvJoukBCmDLT7LXYcuzTcSYLqSpbxLp4",
        "status": "INITIATED",
        "consent_request_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-10001: Incorrect json format.",
        "OBP-35029: The CONSENT_REQUEST_ID is invalid. ",
        "OBP-35009: Only SMS and EMAIL are supported as SCA methods. ",
        "OBP-35013: Consents can only contain Roles that you already have access to.",
        "OBP-35014: Consents can only contain Views that you already have access to.",
        "OBP-30019: Consumer not found. Please specify a valid value for CONSUMER_ID.",
        "OBP-20058: Consumer is disabled.",
        "OBP-00010: Missing props value at this API instance - ",
        "OBP-35010: SMS server is not working or SMS server can not send the message to the phone number:",
        "OBP-50200: Connector cannot return the data we requested.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Consent", "Account Information Service (AIS)", "PSD2", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "consent_request_id": {
            "type": "string"
          },
          "consent_id": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "jwt": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/consumer/consent-requests/CONSENT_REQUEST_ID/SMS/consents",
      "connector_methods": ["obp.sendCustomerNotification", "obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv4.0.0-updateAtmNotes",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "updateAtmNotes"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/atms/ATM_ID/notes",
      "summary": "Update ATM Notes",
      "description": "<p>Update ATM Notes.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#atm_id\">ATM_ID</a>: atme0352a-9a0f-4bfa-b30b-9003aa467f51</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#atm_id\"><strong>atm_id</strong></a>: atme0352a-9a0f-4bfa-b30b-9003aa467f51</p>\n<p><a href=\"/glossary#\"><strong>notes</strong></a>: notes</p>\n",
      "description_markdown": "Update ATM Notes.\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ATM_ID](/glossary#atm_id): atme0352a-9a0f-4bfa-b30b-9003aa467f51\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**atm_id**](/glossary#atm_id): atme0352a-9a0f-4bfa-b30b-9003aa467f51\n\n\n\n[**notes**](/glossary#): notes\n\n\n",
      "example_request_body": {
        "notes": ["String1", "String2"]
      },
      "success_response_body": {
        "atm_id": "atme0352a-9a0f-4bfa-b30b-9003aa467f51",
        "notes": ["String1", "String2"]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["ATM", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "notes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "atm_id": {
            "type": "string"
          },
          "notes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/atms/ATM_ID/notes",
      "connector_methods": ["obp.updateAtmNotes", "obp.getAtm"]
    },
    {
      "operation_id": "OBPv4.0.0-updateProductFee",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "updateProductFee"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/products/PRODUCT_CODE/fees/PRODUCT_FEE_ID",
      "summary": "Update Product Fee",
      "description": "<p>Update Product Fee.</p>\n<p>Update one Product Fee by its id.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#product_code\">PRODUCT_CODE</a>: 1234BW</p>\n<p><a href=\"/glossary#product_fee_id\">PRODUCT_FEE_ID</a>: 696hlAHLFKUHE37469287634</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#frequency\"><strong>frequency</strong></a>: DAILY</p>\n<p><a href=\"/glossary#is_active\"><strong>is_active</strong></a>: true</p>\n<p><a href=\"/glossary#more_info\"><strong>more_info</strong></a>: More information about this fee</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#product_code\"><strong>product_code</strong></a>: 1234BW</p>\n<p><a href=\"/glossary#product_fee_id\"><strong>product_fee_id</strong></a>: 696hlAHLFKUHE37469287634</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n",
      "description_markdown": "Update Product Fee. \n\nUpdate one Product Fee by its id.\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[PRODUCT_CODE](/glossary#product_code): 1234BW\n\n\n\n[PRODUCT_FEE_ID](/glossary#product_fee_id): 696hlAHLFKUHE37469287634\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**amount**](/glossary#): 10.12\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**frequency**](/glossary#frequency): DAILY\n\n\n\n[**is_active**](/glossary#is_active): true\n\n\n\n[**more_info**](/glossary#more_info): More information about this fee\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**product_code**](/glossary#product_code): 1234BW\n\n\n\n[**product_fee_id**](/glossary#product_fee_id): 696hlAHLFKUHE37469287634\n\n\n\n[**type**](/glossary#type): \n\n\n\n[**value**](/glossary#): 5987953\n\n\n",
      "example_request_body": {
        "name": "ACCOUNT_MANAGEMENT_FEE",
        "is_active": true,
        "more_info": "More information about this fee",
        "value": {
          "currency": "EUR",
          "amount": "10.12",
          "frequency": "DAILY",
          "type": ""
        }
      },
      "success_response_body": {
        "bank_id": "gh.29.uk",
        "product_code": "1234BW",
        "product_fee_id": "696hlAHLFKUHE37469287634",
        "name": "ACCOUNT_MANAGEMENT_FEE",
        "is_active": true,
        "more_info": "More information about this fee",
        "value": {
          "currency": "EUR",
          "amount": "10.12",
          "frequency": "DAILY",
          "type": ""
        }
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Product", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "is_active": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "more_info": {
            "type": "string"
          },
          "value": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "currency": {
                "type": "string"
              },
              "frequency": {
                "type": "string"
              },
              "amount": {
                "type": "number"
              }
            }
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "product_code": {
            "type": "string"
          },
          "is_active": {
            "type": "boolean"
          },
          "bank_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "more_info": {
            "type": "string"
          },
          "value": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "currency": {
                "type": "string"
              },
              "frequency": {
                "type": "string"
              },
              "amount": {
                "type": "number"
              }
            }
          },
          "product_fee_id": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanUpdateProductFee",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/products/PRODUCT_CODE/fees/PRODUCT_FEE_ID",
      "connector_methods": ["obp.createOrUpdateProductFee", "obp.getProductFeeById"]
    },
    {
      "operation_id": "OBPv1.2.1-getCounterpartyPublicAlias",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "getCounterpartyPublicAlias"
      },
      "request_verb": "GET",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/public_alias",
      "summary": "Get public alias of other bank account",
      "description": "<p>Returns the public alias of the other account OTHER_ACCOUNT_ID.<br />\nAuthentication is Optional<br />\nAuthentication is Mandatory if the view is not public.</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#other_account_id\">OTHER_ACCOUNT_ID</a>:</p>\n<p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#alias\"><strong>alias</strong></a>:</p>\n",
      "description_markdown": "Returns the public alias of the other account OTHER_ACCOUNT_ID.\nAuthentication is Optional\nAuthentication is Mandatory if the view is not public.\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[OTHER_ACCOUNT_ID](/glossary#other_account_id): \n\n\n\n[VIEW_ID](/glossary#this_view_id): owner\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**alias**](/glossary#alias): \n\n\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "alias": "String"
      },
      "error_response_bodies": [
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-50000: Unknown Error.",
        "the view does not allow metadata access",
        "the view does not allow public alias access",
        "OBP-20001: User not logged in. Authentication is required!"
      ],
      "tags": ["Counterparty-Metadata", "Counterparty", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "alias": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/public_alias",
      "connector_methods": ["obp.checkBankAccountExists", "obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv4.0.0-createCustomerAttribute",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "createCustomerAttribute"
      },
      "request_verb": "POST",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/customers/CUSTOMER_ID/attribute",
      "summary": "Create Customer Attribute",
      "description": "<p>Create Customer Attribute</p>\n<p>The type field must be one of &quot;STRING&quot;, &quot;INTEGER&quot;, &quot;DOUBLE&quot; or DATE_WITH_DAY&quot;</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#Customer.customer_id\">CUSTOMER_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>customer_attribute_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n",
      "description_markdown": "Create Customer Attribute\n\n\nThe type field must be one of \"STRING\", \"INTEGER\", \"DOUBLE\" or DATE_WITH_DAY\"\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[CUSTOMER_ID](/glossary#Customer.customer_id): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n\n\n**JSON request body fields:**\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**type**](/glossary#type): \n\n\n\n[**value**](/glossary#): 5987953\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**customer_attribute_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**type**](/glossary#type): \n\n\n\n[**value**](/glossary#): 5987953\n\n\n",
      "example_request_body": {
        "name": "SPECIAL_TAX_NUMBER",
        "type": "STRING",
        "value": "123456789"
      },
      "success_response_body": {
        "customer_attribute_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "name": "SPECIAL_TAX_NUMBER",
        "type": "STRING",
        "value": "123456789"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["Customer", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "customer_attribute_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateCustomerAttributeAtOneBank",
          "requires_bank_id": true
        },
        {
          "role": "CanCreateCustomerAttributeAtAnyBank",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/customers/CUSTOMER_ID/attribute",
      "connector_methods": ["obp.createOrUpdateCustomerAttribute", "obp.getCustomerByCustomerId"]
    },
    {
      "operation_id": "OBPv3.1.0-getCustomerAddresses",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "getCustomerAddresses"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/customers/CUSTOMER_ID/addresses",
      "summary": "Get Customer Addresses",
      "description": "<p>Get the Addresses of the Customer specified by CUSTOMER_ID.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#Customer.customer_id\">CUSTOMER_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#addresses\"><strong>addresses</strong></a>:</p>\n<p><a href=\"/glossary#city\"><strong>city</strong></a>:</p>\n<p><a href=\"/glossary#country_code\"><strong>country_code</strong></a>: 1254</p>\n<p><a href=\"/glossary#county\"><strong>county</strong></a>:</p>\n<p><a href=\"/glossary#customer_address_id\"><strong>customer_address_id</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>insert_date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#\"><strong>line_1</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>line_2</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>line_3</strong></a>:</p>\n<p><a href=\"/glossary#postcode\"><strong>postcode</strong></a>:</p>\n<p><a href=\"/glossary#state\"><strong>state</strong></a>:</p>\n<p><a href=\"/glossary#status\"><strong>status</strong></a>:</p>\n<p><a href=\"/glossary#tags\"><strong>tags</strong></a>: Create-My-User</p>\n",
      "description_markdown": "Get the Addresses of the Customer specified by CUSTOMER_ID.\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[CUSTOMER_ID](/glossary#Customer.customer_id): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**addresses**](/glossary#addresses): \n\n\n\n[**city**](/glossary#city): \n\n\n\n[**country_code**](/glossary#country_code): 1254\n\n\n\n[**county**](/glossary#county): \n\n\n\n[**customer_address_id**](/glossary#customer_address_id): \n\n\n\n[**customer_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**insert_date**](/glossary#): 2020-01-27\n\n\n\n[**line_1**](/glossary#): \n\n\n\n[**line_2**](/glossary#): \n\n\n\n[**line_3**](/glossary#): \n\n\n\n[**postcode**](/glossary#postcode): \n\n\n\n[**state**](/glossary#state): \n\n\n\n[**status**](/glossary#status): \n\n\n\n[**tags**](/glossary#tags): Create-My-User\n\n\n",
      "success_response_body": {
        "addresses": [
          {
            "customer_address_id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
            "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
            "line_1": "No 1 the Road",
            "line_2": "The Place",
            "line_3": "The Hill",
            "city": "Berlin",
            "county": "",
            "state": "Brandenburg",
            "postcode": "13359",
            "country_code": "DE",
            "tags": ["mailing", "home"],
            "status": "OK",
            "insert_date": "1100-01-01T00:00:00Z"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Customer", "KYC", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "addresses": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "city": {
                  "type": "string"
                },
                "customer_id": {
                  "type": "string"
                },
                "tags": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "postcode": {
                  "type": "string"
                },
                "line_1": {
                  "type": "string"
                },
                "line_2": {
                  "type": "string"
                },
                "line_3": {
                  "type": "string"
                },
                "customer_address_id": {
                  "type": "string"
                },
                "state": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                },
                "insert_date": {
                  "type": "string",
                  "format": "date-time"
                },
                "country_code": {
                  "type": "string"
                },
                "county": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetCustomerAddress",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/customers/CUSTOMER_ID/addresses",
      "connector_methods": [
        "obp.getCustomerAddress",
        "obp.getCustomerByCustomerId",
        "obp.getBank",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv1.2.1-addCounterpartyImageUrl",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "addCounterpartyImageUrl"
      },
      "request_verb": "POST",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/metadata/image_url",
      "summary": "Add image url to other bank account",
      "description": "<p>Add a url that points to the logo of the counterparty</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#other_account_id\">OTHER_ACCOUNT_ID</a>:</p>\n<p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#image_url\"><strong>image_URL</strong></a>:</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#success\"><strong>success</strong></a>:</p>\n",
      "description_markdown": "Add a url that points to the logo of the counterparty\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[OTHER_ACCOUNT_ID](/glossary#other_account_id): \n\n\n\n[VIEW_ID](/glossary#this_view_id): owner\n\n\n\n\n\n**JSON request body fields:**\n\n\n\n[**image_URL**](/glossary#image_url): \n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**success**](/glossary#success): \n\n\n",
      "example_request_body": {
        "image_URL": "String"
      },
      "success_response_body": {
        "success": "Success"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-10001: Incorrect json format.",
        "the view does not allow metadata access",
        "the view does not allow adding an image url",
        "URL cannot be added",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Counterparty-Metadata", "Counterparty", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "image_URL": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "success": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/metadata/image_url",
      "connector_methods": [
        "obp.checkBankAccountExists",
        "obp.getBank",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv4.0.0-getCustomersMinimalAtAnyBank",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getCustomersMinimalAtAnyBank"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/customers-minimal",
      "summary": "Get Customers Minimal at Any Bank",
      "description": "<p>Get Customers Minimal at Any Bank.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#customers\"><strong>customers</strong></a>:</p>\n",
      "description_markdown": "Get Customers Minimal at Any Bank.\n\n\nAuthentication is Mandatory\n\n\n**JSON response body fields:**\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**customer_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**customers**](/glossary#customers): \n\n\n",
      "success_response_body": {
        "customers": [
          {
            "bank_id": "gh.29.uk",
            "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30008: User Customer Link not found by USER_ID",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["Customer", "User", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "customers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "customer_id": {
                  "type": "string"
                },
                "bank_id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetCustomersMinimalAtAnyBank",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/customers-minimal",
      "connector_methods": ["obp.getCustomersAtAllBanks"]
    },
    {
      "operation_id": "OBPv4.0.0-deleteCardAttributeDefinition",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "deleteCardAttributeDefinition"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/attribute-definitions/ATTRIBUTE_DEFINITION_ID/card",
      "summary": "Delete Card Attribute Definition",
      "description": "<p>Delete Card Attribute Definition by ATTRIBUTE_DEFINITION_ID</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#attribute_definition_id\">ATTRIBUTE_DEFINITION_ID</a>:</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON response body fields:</strong></p>\n",
      "description_markdown": "Delete Card Attribute Definition by ATTRIBUTE_DEFINITION_ID\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ATTRIBUTE_DEFINITION_ID](/glossary#attribute_definition_id): \n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON response body fields:**\n\n\n",
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["Card", "New-Style"],
      "roles": [
        {
          "role": "CanDeleteCardAttributeDefinitionAtOneBank",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/attribute-definitions/ATTRIBUTE_DEFINITION_ID/card",
      "connector_methods": ["obp.deleteAttributeDefinition"]
    },
    {
      "operation_id": "OBPv3.1.0-updateCustomerMobileNumber",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "updateCustomerMobileNumber"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/customers/CUSTOMER_ID/mobile-number",
      "summary": "Update the mobile number of a Customer",
      "description": "<p>Update the mobile number of the Customer specified by CUSTOMER_ID.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#Customer.customer_id\">CUSTOMER_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#\"><strong>branch_id</strong></a>: DERBY6</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>customer_number</strong></a>: 5987953</p>\n<p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#\"><strong>date_of_birth</strong></a>: 2018-03-09</p>\n<p><a href=\"/glossary#\"><strong>dependants</strong></a>: 1</p>\n<p><a href=\"/glossary#dob_of_dependants\"><strong>dob_of_dependants</strong></a>: [2019-09-08, 2017-07-12]</p>\n<p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"&#x6d;&#x61;&#105;&#x6c;&#116;o:&#102;&#101;&#108;&#x69;&#120;&#x73;&#x6d;&#x69;&#116;&#x68;&#64;e&#120;&#97;&#109;&#112;&#x6c;e&#x2e;&#x63;&#x6f;&#109;\">&#102;&#101;&#x6c;&#x69;x&#x73;m&#105;&#x74;&#x68;&#x40;e&#120;&#x61;&#x6d;&#x70;&#x6c;&#101;&#46;c&#x6f;&#x6d;</a></p>\n<p><a href=\"/glossary#\"><strong>employment_status</strong></a>: worker</p>\n<p><a href=\"/glossary#face_image\"><strong>face_image</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>highest_education_attained</strong></a>: Master</p>\n<p><a href=\"/glossary#\"><strong>kyc_status</strong></a>: true</p>\n<p><a href=\"/glossary#last_ok_date\"><strong>last_ok_date</strong></a>: 2022-04-13T04:30:07.985Z</p>\n<p><a href=\"/glossary#\"><strong>legal_name</strong></a>: Eveline Tripman</p>\n<p><a href=\"/glossary#mobile_phone_number\"><strong>mobile_phone_number</strong></a>: +49 30 901820</p>\n<p><a href=\"/glossary#\"><strong>name_suffix</strong></a>: Sr</p>\n<p><a href=\"/glossary#\"><strong>rating</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>relationship_status</strong></a>: single</p>\n<p><a href=\"/glossary#\"><strong>source</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>title</strong></a>: Dr.</p>\n<p><a href=\"/glossary#\"><strong>url</strong></a>: <a href=\"http://www.example.com/id-docs/123/image.png\">http://www.example.com/id-docs/123/image.png</a></p>\n<p><a href=\"/glossary#credit_limit\">credit_limit</a>:</p>\n<p><a href=\"/glossary#credit_rating\">credit_rating</a>:</p>\n",
      "description_markdown": "Update the mobile number of the Customer specified by CUSTOMER_ID.\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[CUSTOMER_ID](/glossary#Customer.customer_id): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**amount**](/glossary#): 10.12\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**branch_id**](/glossary#): DERBY6\n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**customer_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**customer_number**](/glossary#): 5987953\n\n\n\n[**date**](/glossary#): 2020-01-27\n\n\n\n[**date_of_birth**](/glossary#): 2018-03-09\n\n\n\n[**dependants**](/glossary#): 1\n\n\n\n[**dob_of_dependants**](/glossary#dob_of_dependants): [2019-09-08, 2017-07-12]\n\n\n\n[**email**](/glossary#): felixsmith@example.com\n\n\n\n[**employment_status**](/glossary#): worker\n\n\n\n[**face_image**](/glossary#face_image): \n\n\n\n[**highest_education_attained**](/glossary#): Master\n\n\n\n[**kyc_status**](/glossary#): true\n\n\n\n[**last_ok_date**](/glossary#last_ok_date): 2022-04-13T04:30:07.985Z\n\n\n\n[**legal_name**](/glossary#): Eveline Tripman\n\n\n\n[**mobile_phone_number**](/glossary#mobile_phone_number): +49 30 901820\n\n\n\n[**name_suffix**](/glossary#): Sr\n\n\n\n[**rating**](/glossary#): \n\n\n\n[**relationship_status**](/glossary#): single\n\n\n\n[**source**](/glossary#): \n\n\n\n[**title**](/glossary#): Dr.\n\n\n\n[**url**](/glossary#): http://www.example.com/id-docs/123/image.png\n\n\n\n[credit_limit](/glossary#credit_limit): \n\n\n\n[credit_rating](/glossary#credit_rating): \n\n\n",
      "example_request_body": {
        "mobile_phone_number": "+381631954907"
      },
      "success_response_body": {
        "bank_id": "gh.29.uk",
        "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "customer_number": "5987953",
        "legal_name": "Eveline Tripman",
        "mobile_phone_number": "+44 07972 444 876",
        "email": "felixsmith@example.com",
        "face_image": {
          "url": "www.openbankproject",
          "date": "1100-01-01T00:00:00Z"
        },
        "date_of_birth": "1100-01-01T00:00:00Z",
        "relationship_status": "single",
        "dependants": 1,
        "dob_of_dependants": ["1100-01-01T00:00:00Z"],
        "credit_rating": {
          "rating": "OBP",
          "source": "OBP"
        },
        "credit_limit": {
          "currency": "EUR",
          "amount": "0"
        },
        "highest_education_attained": "Master",
        "employment_status": "worker",
        "kyc_status": true,
        "last_ok_date": "2022-04-13T04:30:08Z",
        "title": "Dr.",
        "branch_id": "DERBY6",
        "name_suffix": "Sr"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Customer", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "mobile_phone_number": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "dependants": {
            "type": "integer"
          },
          "dob_of_dependants": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            }
          },
          "face_image": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string"
              },
              "date": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          "credit_limit": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string"
              },
              "amount": {
                "type": "string"
              }
            }
          },
          "employment_status": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "customer_id": {
            "type": "string"
          },
          "relationship_status": {
            "type": "string"
          },
          "bank_id": {
            "type": "string"
          },
          "highest_education_attained": {
            "type": "string"
          },
          "customer_number": {
            "type": "string"
          },
          "credit_rating": {
            "type": "object",
            "properties": {
              "rating": {
                "type": "string"
              },
              "source": {
                "type": "string"
              }
            }
          },
          "name_suffix": {
            "type": "string"
          },
          "last_ok_date": {
            "type": "string",
            "format": "date-time"
          },
          "legal_name": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "branch_id": {
            "type": "string"
          },
          "date_of_birth": {
            "type": "string",
            "format": "date-time"
          },
          "mobile_phone_number": {
            "type": "string"
          },
          "kyc_status": {
            "type": "boolean"
          }
        }
      },
      "roles": [
        {
          "role": "CanUpdateCustomerMobilePhoneNumber",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/customers/CUSTOMER_ID/mobile-number",
      "connector_methods": [
        "obp.updateCustomerScaData",
        "obp.getCustomerByCustomerId",
        "obp.getBank",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv3.1.0-getCardsForBank",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "getCardsForBank"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.1.0/management/banks/BANK_ID/cards",
      "summary": "Get Cards for the specified bank",
      "description": "<p>Should be able to filter on the following fields</p>\n<p>eg:/management/banks/BANK_ID/cards?customer_id=66214b8e-259e-44ad-8868-3eb47be70646&amp;account_id=8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0</p>\n<p>1 customer_id should be valid customer_id, otherwise, it will return an empty card list.</p>\n<p>2 account_id should be valid account_id , otherwise, it will return an empty card list.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#Account\"><strong>account</strong></a>:</p>\n<p><a href=\"/glossary#alias\"><strong>alias</strong></a>:</p>\n<p><a href=\"/glossary#allows\"><strong>allows</strong></a>: [credit,debit,cash_withdrawal]</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#can_add_comment\"><strong>can_add_comment</strong></a>:</p>\n<p><a href=\"/glossary#can_add_corporate_location\"><strong>can_add_corporate_location</strong></a>:</p>\n<p><a href=\"/glossary#can_add_image\"><strong>can_add_image</strong></a>:</p>\n<p><a href=\"/glossary#can_add_image_url\"><strong>can_add_image_url</strong></a>: true</p>\n<p><a href=\"/glossary#can_add_more_info\"><strong>can_add_more_info</strong></a>: true</p>\n<p><a href=\"/glossary#can_add_open_corporates_url\"><strong>can_add_open_corporates_url</strong></a>:</p>\n<p><a href=\"/glossary#can_add_physical_location\"><strong>can_add_physical_location</strong></a>:</p>\n<p><a href=\"/glossary#can_add_private_alias\"><strong>can_add_private_alias</strong></a>:</p>\n<p><a href=\"/glossary#can_add_public_alias\"><strong>can_add_public_alias</strong></a>:</p>\n<p><a href=\"/glossary#can_add_tag\"><strong>can_add_tag</strong></a>: true</p>\n<p><a href=\"/glossary#can_add_url\"><strong>can_add_url</strong></a>:</p>\n<p><a href=\"/glossary#can_add_where_tag\"><strong>can_add_where_tag</strong></a>:</p>\n<p><a href=\"/glossary#can_delete_comment\"><strong>can_delete_comment</strong></a>:</p>\n<p><a href=\"/glossary#can_delete_corporate_location\"><strong>can_delete_corporate_location</strong></a>: true</p>\n<p><a href=\"/glossary#can_delete_image\"><strong>can_delete_image</strong></a>: true</p>\n<p><a href=\"/glossary#can_delete_physical_location\"><strong>can_delete_physical_location</strong></a>:</p>\n<p><a href=\"/glossary#can_delete_tag\"><strong>can_delete_tag</strong></a>:</p>\n<p><a href=\"/glossary#can_delete_where_tag\"><strong>can_delete_where_tag</strong></a>: true</p>\n<p><a href=\"/glossary#can_edit_owner_comment\"><strong>can_edit_owner_comment</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_balance\"><strong>can_see_bank_account_balance</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_bank_name\"><strong>can_see_bank_account_bank_name</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_currency\"><strong>can_see_bank_account_currency</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_iban\"><strong>can_see_bank_account_iban</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_label\"><strong>can_see_bank_account_label</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_national_identifier\"><strong>can_see_bank_account_national_identifier</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_number\"><strong>can_see_bank_account_number</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_owners\"><strong>can_see_bank_account_owners</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_swift_bic\"><strong>can_see_bank_account_swift_bic</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_type\"><strong>can_see_bank_account_type</strong></a>:</p>\n<p><a href=\"/glossary#can_see_comments\"><strong>can_see_comments</strong></a>:</p>\n<p><a href=\"/glossary#can_see_corporate_location\"><strong>can_see_corporate_location</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_image_url\"><strong>can_see_image_url</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_images\"><strong>can_see_images</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_more_info\"><strong>can_see_more_info</strong></a>:</p>\n<p><a href=\"/glossary#can_see_open_corporates_url\"><strong>can_see_open_corporates_url</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_bank_name\"><strong>can_see_other_account_bank_name</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_iban\"><strong>can_see_other_account_iban</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_kind\"><strong>can_see_other_account_kind</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_metadata\"><strong>can_see_other_account_metadata</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_national_identifier\"><strong>can_see_other_account_national_identifier</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_other_account_number\"><strong>can_see_other_account_number</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_other_account_swift_bic\"><strong>can_see_other_account_swift_bic</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_owner_comment\"><strong>can_see_owner_comment</strong></a>:</p>\n<p><a href=\"/glossary#can_see_physical_location\"><strong>can_see_physical_location</strong></a>:</p>\n<p><a href=\"/glossary#can_see_private_alias\"><strong>can_see_private_alias</strong></a>:</p>\n<p><a href=\"/glossary#can_see_public_alias\"><strong>can_see_public_alias</strong></a>:</p>\n<p><a href=\"/glossary#can_see_tags\"><strong>can_see_tags</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_amount\"><strong>can_see_transaction_amount</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_transaction_balance\"><strong>can_see_transaction_balance</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_currency\"><strong>can_see_transaction_currency</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_description\"><strong>can_see_transaction_description</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_transaction_finish_date\"><strong>can_see_transaction_finish_date</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_metadata\"><strong>can_see_transaction_metadata</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_other_bank_account\"><strong>can_see_transaction_other_bank_account</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_start_date\"><strong>can_see_transaction_start_date</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_this_bank_account\"><strong>can_see_transaction_this_bank_account</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_type\"><strong>can_see_transaction_type</strong></a>:</p>\n<p><a href=\"/glossary#can_see_url\"><strong>can_see_url</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_where_tag\"><strong>can_see_where_tag</strong></a>: true</p>\n<p><a href=\"/glossary#cancelled\"><strong>cancelled</strong></a>: true</p>\n<p><a href=\"/glossary#\"><strong>card_id</strong></a>: 36f8a9e6-c2b1-407a-8bd0-421b7119307e</p>\n<p><a href=\"/glossary#\"><strong>card_number</strong></a>: 364435172576215</p>\n<p><a href=\"/glossary#\"><strong>card_type</strong></a>: Credit</p>\n<p><a href=\"/glossary#cards\"><strong>cards</strong></a>:</p>\n<p><a href=\"/glossary#collected\"><strong>collected</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#enabled\"><strong>enabled</strong></a>: true</p>\n<p><a href=\"/glossary#\"><strong>expires_date</strong></a>: 2021-01-27</p>\n<p><a href=\"/glossary#hide_metadata_if_alias_used\"><strong>hide_metadata_if_alias_used</strong></a>:</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#is_public\"><strong>is_public</strong></a>: true</p>\n<p><a href=\"/glossary#\"><strong>issue_number</strong></a>: 1</p>\n<p><a href=\"/glossary#\"><strong>label</strong></a>: My Account</p>\n<p><a href=\"/glossary#\"><strong>name_on_card</strong></a>: SusanSmith</p>\n<p><a href=\"/glossary#networks\"><strong>networks</strong></a>:</p>\n<p><a href=\"/glossary#on_hot_list\"><strong>on_hot_list</strong></a>: false</p>\n<p><a href=\"/glossary#pin_reset\"><strong>pin_reset</strong></a>:</p>\n<p><a href=\"/glossary#posted\"><strong>posted</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#reason_requested\"><strong>reason_requested</strong></a>:</p>\n<p><a href=\"/glossary#replacement\"><strong>replacement</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>requested_date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#\"><strong>serial_number</strong></a>: 1324234</p>\n<p><a href=\"/glossary#short_name\"><strong>short_name</strong></a>:</p>\n<p><a href=\"/glossary#technology\"><strong>technology</strong></a>: technology1</p>\n<p><a href=\"/glossary#\"><strong>valid_from_date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#views_available\"><strong>views_available</strong></a>:</p>\n",
      "description_markdown": "Should be able to filter on the following fields\n\neg:/management/banks/BANK_ID/cards?customer_id=66214b8e-259e-44ad-8868-3eb47be70646&account_id=8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0\n\n1 customer_id should be valid customer_id, otherwise, it will return an empty card list.  \n\n2 account_id should be valid account_id , otherwise, it will return an empty card list.  \n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**account**](/glossary#Account): \n\n\n\n[**alias**](/glossary#alias): \n\n\n\n[**allows**](/glossary#allows): [credit,debit,cash_withdrawal]\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**can_add_comment**](/glossary#can_add_comment): \n\n\n\n[**can_add_corporate_location**](/glossary#can_add_corporate_location): \n\n\n\n[**can_add_image**](/glossary#can_add_image): \n\n\n\n[**can_add_image_url**](/glossary#can_add_image_url): true\n\n\n\n[**can_add_more_info**](/glossary#can_add_more_info): true\n\n\n\n[**can_add_open_corporates_url**](/glossary#can_add_open_corporates_url): \n\n\n\n[**can_add_physical_location**](/glossary#can_add_physical_location): \n\n\n\n[**can_add_private_alias**](/glossary#can_add_private_alias): \n\n\n\n[**can_add_public_alias**](/glossary#can_add_public_alias): \n\n\n\n[**can_add_tag**](/glossary#can_add_tag): true\n\n\n\n[**can_add_url**](/glossary#can_add_url): \n\n\n\n[**can_add_where_tag**](/glossary#can_add_where_tag): \n\n\n\n[**can_delete_comment**](/glossary#can_delete_comment): \n\n\n\n[**can_delete_corporate_location**](/glossary#can_delete_corporate_location): true\n\n\n\n[**can_delete_image**](/glossary#can_delete_image): true\n\n\n\n[**can_delete_physical_location**](/glossary#can_delete_physical_location): \n\n\n\n[**can_delete_tag**](/glossary#can_delete_tag): \n\n\n\n[**can_delete_where_tag**](/glossary#can_delete_where_tag): true\n\n\n\n[**can_edit_owner_comment**](/glossary#can_edit_owner_comment): true\n\n\n\n[**can_see_bank_account_balance**](/glossary#can_see_bank_account_balance): \n\n\n\n[**can_see_bank_account_bank_name**](/glossary#can_see_bank_account_bank_name): true\n\n\n\n[**can_see_bank_account_currency**](/glossary#can_see_bank_account_currency): \n\n\n\n[**can_see_bank_account_iban**](/glossary#can_see_bank_account_iban): \n\n\n\n[**can_see_bank_account_label**](/glossary#can_see_bank_account_label): true\n\n\n\n[**can_see_bank_account_national_identifier**](/glossary#can_see_bank_account_national_identifier): \n\n\n\n[**can_see_bank_account_number**](/glossary#can_see_bank_account_number): true\n\n\n\n[**can_see_bank_account_owners**](/glossary#can_see_bank_account_owners): true\n\n\n\n[**can_see_bank_account_swift_bic**](/glossary#can_see_bank_account_swift_bic): \n\n\n\n[**can_see_bank_account_type**](/glossary#can_see_bank_account_type): \n\n\n\n[**can_see_comments**](/glossary#can_see_comments): \n\n\n\n[**can_see_corporate_location**](/glossary#can_see_corporate_location): true\n\n\n\n[**can_see_image_url**](/glossary#can_see_image_url): true\n\n\n\n[**can_see_images**](/glossary#can_see_images): true\n\n\n\n[**can_see_more_info**](/glossary#can_see_more_info): \n\n\n\n[**can_see_open_corporates_url**](/glossary#can_see_open_corporates_url): \n\n\n\n[**can_see_other_account_bank_name**](/glossary#can_see_other_account_bank_name): \n\n\n\n[**can_see_other_account_iban**](/glossary#can_see_other_account_iban): \n\n\n\n[**can_see_other_account_kind**](/glossary#can_see_other_account_kind): \n\n\n\n[**can_see_other_account_metadata**](/glossary#can_see_other_account_metadata): \n\n\n\n[**can_see_other_account_national_identifier**](/glossary#can_see_other_account_national_identifier): true\n\n\n\n[**can_see_other_account_number**](/glossary#can_see_other_account_number): true\n\n\n\n[**can_see_other_account_swift_bic**](/glossary#can_see_other_account_swift_bic): true\n\n\n\n[**can_see_owner_comment**](/glossary#can_see_owner_comment): \n\n\n\n[**can_see_physical_location**](/glossary#can_see_physical_location): \n\n\n\n[**can_see_private_alias**](/glossary#can_see_private_alias): \n\n\n\n[**can_see_public_alias**](/glossary#can_see_public_alias): \n\n\n\n[**can_see_tags**](/glossary#can_see_tags): \n\n\n\n[**can_see_transaction_amount**](/glossary#can_see_transaction_amount): true\n\n\n\n[**can_see_transaction_balance**](/glossary#can_see_transaction_balance): \n\n\n\n[**can_see_transaction_currency**](/glossary#can_see_transaction_currency): \n\n\n\n[**can_see_transaction_description**](/glossary#can_see_transaction_description): true\n\n\n\n[**can_see_transaction_finish_date**](/glossary#can_see_transaction_finish_date): \n\n\n\n[**can_see_transaction_metadata**](/glossary#can_see_transaction_metadata): \n\n\n\n[**can_see_transaction_other_bank_account**](/glossary#can_see_transaction_other_bank_account): \n\n\n\n[**can_see_transaction_start_date**](/glossary#can_see_transaction_start_date): \n\n\n\n[**can_see_transaction_this_bank_account**](/glossary#can_see_transaction_this_bank_account): \n\n\n\n[**can_see_transaction_type**](/glossary#can_see_transaction_type): \n\n\n\n[**can_see_url**](/glossary#can_see_url): true\n\n\n\n[**can_see_where_tag**](/glossary#can_see_where_tag): true\n\n\n\n[**cancelled**](/glossary#cancelled): true\n\n\n\n[**card_id**](/glossary#): 36f8a9e6-c2b1-407a-8bd0-421b7119307e \n\n\n\n[**card_number**](/glossary#): 364435172576215\n\n\n\n[**card_type**](/glossary#): Credit\n\n\n\n[**cards**](/glossary#cards): \n\n\n\n[**collected**](/glossary#collected): 2020-01-27\n\n\n\n[**customer_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**enabled**](/glossary#enabled): true\n\n\n\n[**expires_date**](/glossary#): 2021-01-27\n\n\n\n[**hide_metadata_if_alias_used**](/glossary#hide_metadata_if_alias_used): \n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**is_public**](/glossary#is_public): true\n\n\n\n[**issue_number**](/glossary#): 1\n\n\n\n[**label**](/glossary#): My Account\n\n\n\n[**name_on_card**](/glossary#): SusanSmith\n\n\n\n[**networks**](/glossary#networks): \n\n\n\n[**on_hot_list**](/glossary#on_hot_list): false\n\n\n\n[**pin_reset**](/glossary#pin_reset): \n\n\n\n[**posted**](/glossary#posted): 2020-01-27\n\n\n\n[**reason_requested**](/glossary#reason_requested): \n\n\n\n[**replacement**](/glossary#replacement): \n\n\n\n[**requested_date**](/glossary#): 2020-01-27\n\n\n\n[**serial_number**](/glossary#): 1324234\n\n\n\n[**short_name**](/glossary#short_name): \n\n\n\n[**technology**](/glossary#technology): technology1\n\n\n\n[**valid_from_date**](/glossary#): 2020-01-27\n\n\n\n[**views_available**](/glossary#views_available): \n\n\n",
      "success_response_body": {
        "cards": [
          {
            "card_id": "36f8a9e6-c2b1-407a-8bd0-421b7119307e ",
            "bank_id": "gh.29.uk",
            "card_number": "364435172576215",
            "card_type": "Credit",
            "name_on_card": "SusanSmith",
            "issue_number": "1",
            "serial_number": "1324234",
            "valid_from_date": "1100-01-01T00:00:00Z",
            "expires_date": "1100-01-01T00:00:00Z",
            "enabled": true,
            "cancelled": true,
            "on_hot_list": true,
            "technology": "technologyString1",
            "networks": ["networks1"],
            "allows": ["credit", "debit"],
            "account": {
              "id": "123",
              "label": "OBP",
              "views_available": [
                {
                  "id": "123",
                  "short_name": "short_name",
                  "description": "description",
                  "is_public": true,
                  "alias": "None",
                  "hide_metadata_if_alias_used": true,
                  "can_add_comment": true,
                  "can_add_corporate_location": true,
                  "can_add_image": true,
                  "can_add_image_url": true,
                  "can_add_more_info": true,
                  "can_add_open_corporates_url": true,
                  "can_add_physical_location": true,
                  "can_add_private_alias": true,
                  "can_add_public_alias": true,
                  "can_add_tag": true,
                  "can_add_url": true,
                  "can_add_where_tag": true,
                  "can_delete_comment": true,
                  "can_delete_corporate_location": true,
                  "can_delete_image": true,
                  "can_delete_physical_location": true,
                  "can_delete_tag": true,
                  "can_delete_where_tag": true,
                  "can_edit_owner_comment": true,
                  "can_see_bank_account_balance": true,
                  "can_see_bank_account_bank_name": true,
                  "can_see_bank_account_currency": true,
                  "can_see_bank_account_iban": true,
                  "can_see_bank_account_label": true,
                  "can_see_bank_account_national_identifier": true,
                  "can_see_bank_account_number": true,
                  "can_see_bank_account_owners": true,
                  "can_see_bank_account_swift_bic": true,
                  "can_see_bank_account_type": true,
                  "can_see_comments": true,
                  "can_see_corporate_location": true,
                  "can_see_image_url": true,
                  "can_see_images": true,
                  "can_see_more_info": true,
                  "can_see_open_corporates_url": true,
                  "can_see_other_account_bank_name": true,
                  "can_see_other_account_iban": true,
                  "can_see_other_account_kind": true,
                  "can_see_other_account_metadata": true,
                  "can_see_other_account_national_identifier": true,
                  "can_see_other_account_number": true,
                  "can_see_other_account_swift_bic": true,
                  "can_see_owner_comment": true,
                  "can_see_physical_location": true,
                  "can_see_private_alias": true,
                  "can_see_public_alias": true,
                  "can_see_tags": true,
                  "can_see_transaction_amount": true,
                  "can_see_transaction_balance": true,
                  "can_see_transaction_currency": true,
                  "can_see_transaction_description": true,
                  "can_see_transaction_finish_date": true,
                  "can_see_transaction_metadata": true,
                  "can_see_transaction_other_bank_account": true,
                  "can_see_transaction_start_date": true,
                  "can_see_transaction_this_bank_account": true,
                  "can_see_transaction_type": true,
                  "can_see_url": true,
                  "can_see_where_tag": true
                }
              ],
              "bank_id": "gh.29.uk"
            },
            "replacement": {
              "requested_date": "1100-01-01T00:00:00Z",
              "reason_requested": "RENEW"
            },
            "pin_reset": [
              {
                "requested_date": "1100-01-01T00:00:00Z",
                "reason_requested": "FORGOT"
              }
            ],
            "collected": "1100-01-01T00:00:00Z",
            "posted": "1100-01-01T00:00:00Z",
            "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Card", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "cards": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "card_number": {
                  "type": "string"
                },
                "enabled": {
                  "type": "boolean"
                },
                "pin_reset": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "reason_requested": {
                        "type": "string"
                      },
                      "requested_date": {
                        "type": "string",
                        "format": "date-time"
                      }
                    }
                  }
                },
                "allows": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "collected": {
                  "type": "string",
                  "format": "date-time"
                },
                "on_hot_list": {
                  "type": "boolean"
                },
                "card_type": {
                  "type": "string"
                },
                "replacement": {
                  "type": "object",
                  "properties": {
                    "reason_requested": {
                      "type": "string"
                    },
                    "requested_date": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                },
                "name_on_card": {
                  "type": "string"
                },
                "account": {
                  "type": "object",
                  "properties": {
                    "bank_id": {
                      "type": "string"
                    },
                    "label": {
                      "type": "string"
                    },
                    "views_available": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "can_see_other_account_swift_bic": {
                            "type": "boolean"
                          },
                          "can_see_where_tag": {
                            "type": "boolean"
                          },
                          "can_see_url": {
                            "type": "boolean"
                          },
                          "can_see_bank_account_swift_bic": {
                            "type": "boolean"
                          },
                          "can_see_tags": {
                            "type": "boolean"
                          },
                          "can_see_transaction_balance": {
                            "type": "boolean"
                          },
                          "can_delete_corporate_location": {
                            "type": "boolean"
                          },
                          "can_add_image_url": {
                            "type": "boolean"
                          },
                          "can_see_public_alias": {
                            "type": "boolean"
                          },
                          "can_add_comment": {
                            "type": "boolean"
                          },
                          "description": {
                            "type": "string"
                          },
                          "can_see_corporate_location": {
                            "type": "boolean"
                          },
                          "can_see_other_account_bank_name": {
                            "type": "boolean"
                          },
                          "can_see_more_info": {
                            "type": "boolean"
                          },
                          "can_see_physical_location": {
                            "type": "boolean"
                          },
                          "can_edit_owner_comment": {
                            "type": "boolean"
                          },
                          "can_see_private_alias": {
                            "type": "boolean"
                          },
                          "can_see_bank_account_balance": {
                            "type": "boolean"
                          },
                          "can_add_public_alias": {
                            "type": "boolean"
                          },
                          "can_see_bank_account_owners": {
                            "type": "boolean"
                          },
                          "can_see_other_account_metadata": {
                            "type": "boolean"
                          },
                          "can_delete_physical_location": {
                            "type": "boolean"
                          },
                          "hide_metadata_if_alias_used": {
                            "type": "boolean"
                          },
                          "can_see_transaction_this_bank_account": {
                            "type": "boolean"
                          },
                          "can_see_image_url": {
                            "type": "boolean"
                          },
                          "can_see_transaction_type": {
                            "type": "boolean"
                          },
                          "can_see_images": {
                            "type": "boolean"
                          },
                          "can_see_transaction_amount": {
                            "type": "boolean"
                          },
                          "can_see_transaction_metadata": {
                            "type": "boolean"
                          },
                          "id": {
                            "type": "string"
                          },
                          "can_see_comments": {
                            "type": "boolean"
                          },
                          "can_see_other_account_iban": {
                            "type": "boolean"
                          },
                          "can_add_image": {
                            "type": "boolean"
                          },
                          "can_see_bank_account_type": {
                            "type": "boolean"
                          },
                          "can_see_other_account_kind": {
                            "type": "boolean"
                          },
                          "can_see_bank_account_currency": {
                            "type": "boolean"
                          },
                          "can_add_where_tag": {
                            "type": "boolean"
                          },
                          "can_see_transaction_start_date": {
                            "type": "boolean"
                          },
                          "can_see_bank_account_label": {
                            "type": "boolean"
                          },
                          "can_add_private_alias": {
                            "type": "boolean"
                          },
                          "can_see_transaction_currency": {
                            "type": "boolean"
                          },
                          "can_add_more_info": {
                            "type": "boolean"
                          },
                          "can_delete_comment": {
                            "type": "boolean"
                          },
                          "can_see_transaction_other_bank_account": {
                            "type": "boolean"
                          },
                          "can_see_bank_account_number": {
                            "type": "boolean"
                          },
                          "can_add_corporate_location": {
                            "type": "boolean"
                          },
                          "can_add_url": {
                            "type": "boolean"
                          },
                          "short_name": {
                            "type": "string"
                          },
                          "can_delete_where_tag": {
                            "type": "boolean"
                          },
                          "is_public": {
                            "type": "boolean"
                          },
                          "can_see_owner_comment": {
                            "type": "boolean"
                          },
                          "can_see_transaction_finish_date": {
                            "type": "boolean"
                          },
                          "can_see_open_corporates_url": {
                            "type": "boolean"
                          },
                          "can_add_physical_location": {
                            "type": "boolean"
                          },
                          "can_see_bank_account_iban": {
                            "type": "boolean"
                          },
                          "can_see_other_account_national_identifier": {
                            "type": "boolean"
                          },
                          "can_delete_image": {
                            "type": "boolean"
                          },
                          "can_add_tag": {
                            "type": "boolean"
                          },
                          "can_add_open_corporates_url": {
                            "type": "boolean"
                          },
                          "can_delete_tag": {
                            "type": "boolean"
                          },
                          "can_see_transaction_description": {
                            "type": "boolean"
                          },
                          "can_see_bank_account_national_identifier": {
                            "type": "boolean"
                          },
                          "can_see_other_account_number": {
                            "type": "boolean"
                          },
                          "can_see_bank_account_bank_name": {
                            "type": "boolean"
                          },
                          "alias": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                },
                "expires_date": {
                  "type": "string",
                  "format": "date-time"
                },
                "technology": {
                  "type": "string"
                },
                "posted": {
                  "type": "string",
                  "format": "date-time"
                },
                "customer_id": {
                  "type": "string"
                },
                "bank_id": {
                  "type": "string"
                },
                "card_id": {
                  "type": "string"
                },
                "issue_number": {
                  "type": "string"
                },
                "serial_number": {
                  "type": "string"
                },
                "cancelled": {
                  "type": "boolean"
                },
                "valid_from_date": {
                  "type": "string",
                  "format": "date-time"
                },
                "networks": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/banks/BANK_ID/cards",
      "connector_methods": [
        "obp.getPhysicalCardsForBank",
        "obp.getBank",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv4.0.0-addAccount",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "addAccount"
      },
      "request_verb": "POST",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/accounts",
      "summary": "Create Account (POST)",
      "description": "<p>Create Account at bank specified by BANK_ID.</p>\n<p>The User can create an Account for himself  - or -  the User that has the USER_ID specified in the POST body.</p>\n<p>If the POST body USER_ID <em>is</em> specified, the logged in user must have the Role CanCreateAccount. Once created, the Account will be owned by the User specified by USER_ID.</p>\n<p>If the POST body USER_ID is <em>not</em> specified, the account will be owned by the logged in User.</p>\n<p>The 'product_code' field SHOULD be a product_code from Product.<br />\nIf the product_code matches a product_code from Product, account attributes will be created that match the Product Attributes.</p>\n<p>Note: The Amount MUST be zero.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#account_routings\"><strong>account_routings</strong></a>:</p>\n<p><a href=\"/glossary#address\"><strong>address</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p>\n<p><a href=\"/glossary#balance\"><strong>balance</strong></a>: 10</p>\n<p><a href=\"/glossary#\"><strong>branch_id</strong></a>: DERBY6</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#\"><strong>label</strong></a>: My Account</p>\n<p><a href=\"/glossary#product_code\"><strong>product_code</strong></a>: 1234BW</p>\n<p><a href=\"/glossary#scheme\"><strong>scheme</strong></a>: scheme value</p>\n<p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#account_attribute_id\"><strong>account_attribute_id</strong></a>:</p>\n<p><a href=\"/glossary#account_attributes\"><strong>account_attributes</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>account_id</strong></a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#account_routings\"><strong>account_routings</strong></a>:</p>\n<p><a href=\"/glossary#address\"><strong>address</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p>\n<p><a href=\"/glossary#balance\"><strong>balance</strong></a>: 10</p>\n<p><a href=\"/glossary#\"><strong>branch_id</strong></a>: DERBY6</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#\"><strong>label</strong></a>: My Account</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#product_code\"><strong>product_code</strong></a>: 1234BW</p>\n<p><a href=\"/glossary#scheme\"><strong>scheme</strong></a>: scheme value</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n<p><a href=\"/glossary#\">product_instance_code</a>: product_instance_code</p>\n",
      "description_markdown": "Create Account at bank specified by BANK_ID.\n\nThe User can create an Account for himself  - or -  the User that has the USER_ID specified in the POST body.\n\nIf the POST body USER_ID *is* specified, the logged in user must have the Role CanCreateAccount. Once created, the Account will be owned by the User specified by USER_ID.\n\nIf the POST body USER_ID is *not* specified, the account will be owned by the logged in User.\n\nThe 'product_code' field SHOULD be a product_code from Product.\nIf the product_code matches a product_code from Product, account attributes will be created that match the Product Attributes.\n\nNote: The Amount MUST be zero.\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON request body fields:**\n\n\n\n[**account_routings**](/glossary#account_routings): \n\n\n\n[**address**](/glossary#address): \n\n\n\n[**amount**](/glossary#): 10.12\n\n\n\n[**balance**](/glossary#balance): 10\n\n\n\n[**branch_id**](/glossary#): DERBY6\n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**label**](/glossary#): My Account\n\n\n\n[**product_code**](/glossary#product_code): 1234BW\n\n\n\n[**scheme**](/glossary#scheme): scheme value\n\n\n\n[**user_id**](/glossary#): 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**account_attribute_id**](/glossary#account_attribute_id): \n\n\n\n[**account_attributes**](/glossary#account_attributes): \n\n\n\n[**account_id**](/glossary#): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[**account_routings**](/glossary#account_routings): \n\n\n\n[**address**](/glossary#address): \n\n\n\n[**amount**](/glossary#): 10.12\n\n\n\n[**balance**](/glossary#balance): 10\n\n\n\n[**branch_id**](/glossary#): DERBY6\n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**label**](/glossary#): My Account\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**product_code**](/glossary#product_code): 1234BW\n\n\n\n[**scheme**](/glossary#scheme): scheme value\n\n\n\n[**type**](/glossary#type): \n\n\n\n[**user_id**](/glossary#): 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\n\n\n\n[**value**](/glossary#): 5987953\n\n\n\n[product_instance_code](/glossary#): product_instance_code\n\n\n",
      "example_request_body": {
        "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
        "label": "My Account",
        "product_code": "1234BW",
        "balance": {
          "currency": "EUR",
          "amount": "0"
        },
        "branch_id": "DERBY6",
        "account_routings": [
          {
            "scheme": "AccountNumber",
            "address": "4930396"
          }
        ]
      },
      "success_response_body": {
        "account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0",
        "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
        "label": "My Account",
        "product_code": "1234BW",
        "balance": {
          "currency": "EUR",
          "amount": "0"
        },
        "branch_id": "DERBY6",
        "account_routings": [
          {
            "scheme": "AccountNumber",
            "address": "4930396"
          }
        ],
        "account_attributes": [
          {
            "product_code": "1234BW",
            "account_attribute_id": "613c83ea-80f9-4560-8404-b9cd4ec42a7f",
            "name": "OVERDRAFT_START_DATE",
            "type": "DATE_WITH_DAY",
            "value": "2012-04-23",
            "product_instance_code": "LKJL98769F"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-10001: Incorrect json format.",
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-30106: Invalid Balance Amount.",
        "OBP-30112: Invalid Number. Initial balance must be a number, e.g 1000.00",
        "OBP-30109: Initial Balance of Account must be Zero (0).",
        "OBP-30105: Invalid Balance Currency.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Account", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "product_code": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "balance": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string"
              },
              "amount": {
                "type": "string"
              }
            }
          },
          "account_routings": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "scheme": {
                  "type": "string"
                },
                "address": {
                  "type": "string"
                }
              }
            }
          },
          "branch_id": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "product_code": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "balance": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string"
              },
              "amount": {
                "type": "string"
              }
            }
          },
          "account_attributes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string"
                },
                "product_code": {
                  "type": "string"
                },
                "account_attribute_id": {
                  "type": "string"
                },
                "product_instance_code": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              }
            }
          },
          "account_routings": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "scheme": {
                  "type": "string"
                },
                "address": {
                  "type": "string"
                }
              }
            }
          },
          "branch_id": {
            "type": "string"
          },
          "account_id": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateAccount",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts",
      "connector_methods": [
        "obp.getBankAccountsForUser",
        "obp.createAccountAttributes",
        "obp.getProductAttributesByBankAndCode",
        "obp.addBankAccount",
        "obp.getBank"
      ]
    },
    {
      "operation_id": "OBPv4.0.0-getBankLevelDynamicEndpoint",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getBankLevelDynamicEndpoint"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/management/banks/BANK_ID/dynamic-endpoints/DYNAMIC_ENDPOINT_ID",
      "summary": " Get Bank Level Dynamic Endpoint",
      "description": "<p>Get a Bank Level Dynamic Endpoint.</p>\n<p>Authentication is Mandatory</p>\n",
      "description_markdown": "Get a Bank Level Dynamic Endpoint.\n\n\nAuthentication is Mandatory",
      "success_response_body": {
        "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
        "dynamic_endpoint_id": "dynamic-endpoint-id",
        "swagger_string": {
          "swagger": "2.0",
          "info": {
            "title": "Bank Accounts (Dynamic Endpoint)",
            "version": "1.0.0"
          },
          "definitions": {
            "AccountName": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "family account"
                },
                "balance": {
                  "type": "integer",
                  "format": "int64",
                  "example": 1000.123
                }
              }
            }
          },
          "paths": {
            "/accounts": {
              "post": {
                "operationId": "POST_account",
                "produces": ["application/json"],
                "responses": {
                  "201": {
                    "description": "Success Response",
                    "schema": {
                      "$ref": "#/definitions/AccountName"
                    }
                  }
                },
                "consumes": ["application/json"],
                "description": "POST Accounts",
                "summary": "POST Accounts"
              }
            },
            "/accounts/{account_id}": {
              "get": {
                "operationId": "GET_account",
                "produces": ["application/json"],
                "responses": {
                  "200": {
                    "description": "Success Response",
                    "schema": {
                      "$ref": "#/definitions/AccountName"
                    }
                  }
                },
                "consumes": ["application/json"],
                "description": "Get Bank Account",
                "summary": "Get Bank Account by Id"
              }
            }
          },
          "host": "obp_mock",
          "schemes": ["http", "https"]
        }
      },
      "error_response_bodies": [
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-09009: DynamicEndpoint not found. Please specify a valid value for DYNAMIC_ENDPOINT_ID.",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Dynamic-Endpoint-Manage", "API", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "string"
          },
          "dynamic_endpoint_id": {
            "type": "string"
          },
          "swagger_string": {
            "type": "object",
            "properties": {
              "swagger": {
                "type": "string"
              },
              "paths": {
                "type": "object",
                "properties": {
                  "/accounts": {
                    "type": "object",
                    "properties": {
                      "post": {
                        "type": "object",
                        "properties": {
                          "responses": {
                            "type": "object",
                            "properties": {
                              "201": {
                                "type": "object",
                                "properties": {
                                  "description": {
                                    "type": "string"
                                  },
                                  "schema": {
                                    "type": "object",
                                    "properties": {
                                      "$ref": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "consumes": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "s": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "operationId": {
                            "type": "string"
                          },
                          "summary": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "produces": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "s": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "/accounts/{account_id}": {
                    "type": "object",
                    "properties": {
                      "get": {
                        "type": "object",
                        "properties": {
                          "description": {
                            "type": "string"
                          },
                          "consumes": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "s": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "operationId": {
                            "type": "string"
                          },
                          "responses": {
                            "type": "object",
                            "properties": {
                              "200": {
                                "type": "object",
                                "properties": {
                                  "description": {
                                    "type": "string"
                                  },
                                  "schema": {
                                    "type": "object",
                                    "properties": {
                                      "$ref": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "summary": {
                            "type": "string"
                          },
                          "produces": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "s": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "info": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "version": {
                    "type": "string"
                  }
                }
              },
              "definitions": {
                "type": "object",
                "properties": {
                  "AccountName": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string"
                      },
                      "properties": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string"
                              },
                              "example": {
                                "type": "string"
                              }
                            }
                          },
                          "balance": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string"
                              },
                              "format": {
                                "type": "string"
                              },
                              "example": {
                                "type": "number"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "schemes": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "s": {
                      "type": "string"
                    }
                  }
                }
              },
              "host": {
                "type": "string"
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetBankLevelDynamicEndpoint",
          "requires_bank_id": true
        },
        {
          "role": "CanGetDynamicEndpoint",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/banks/BANK_ID/dynamic-endpoints/DYNAMIC_ENDPOINT_ID",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv5.1.0-getAggregateMetrics",
      "implemented_by": {
        "version": "OBPv5.1.0",
        "function": "getAggregateMetrics"
      },
      "request_verb": "GET",
      "request_url": "/obp/v5.1.0/management/aggregate-metrics",
      "summary": "Get Aggregate Metrics",
      "description": "<p>Returns aggregate metrics on api usage eg. total count, response time (in ms), etc.</p>\n<p>Should be able to filter on the following fields</p>\n<p>eg: /management/aggregate-metrics?from_date=1100-01-01T01:01:01.000Z&amp;to_date=1100-01-01T01:01:01.000Z&amp;consumer_id=5<br />\n&amp;user_id=66214b8e-259e-44ad-8868-3eb47be70646&amp;implemented_by_partial_function=getTransactionsForBankAccount<br />\n&amp;implemented_in_version=v3.0.0&amp;url=/obp/v3.0.0/banks/gh.29.uk/accounts/8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0/owner/transactions<br />\n&amp;verb=GET&amp;anon=false&amp;app_name=MapperPostman<br />\n&amp;exclude_app_names=API-EXPLORER,API-Manager,SOFI,null</p>\n<p>1 from_date (defaults to the day before the current date): eg:from_date=1100-01-01T01:01:01.000Z</p>\n<p>2 to_date (defaults to the current date) eg:to_date=1100-01-01T01:01:01.000Z</p>\n<p>3 consumer_id  (if null ignore)</p>\n<p>4 user_id (if null ignore)</p>\n<p>5 anon (if null ignore) only support two value : true (return where user_id is null.) or false (return where user_id is not null.)</p>\n<p>6 url (if null ignore), note: can not contain '&amp;'.</p>\n<p>7 app_name (if null ignore)</p>\n<p>8 implemented_by_partial_function (if null ignore),</p>\n<p>9 implemented_in_version (if null ignore)</p>\n<p>10 verb (if null ignore)</p>\n<p>11 correlation_id (if null ignore)</p>\n<p>12 include_app_names (if null ignore).eg: &amp;include_app_names=API-EXPLORER,API-Manager,SOFI,null</p>\n<p>13 include_url_patterns (if null ignore).you can design you own SQL LIKE pattern. eg: &amp;include_url_patterns=%management/metrics%,%management/aggregate-metrics%</p>\n<p>14 include_implemented_by_partial_functions (if null ignore).eg: &amp;include_implemented_by_partial_functions=getMetrics,getConnectorMetrics,getAggregateMetrics</p>\n<p>Authentication is Mandatory</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#average_response_time\"><strong>average_response_time</strong></a>:</p>\n<p><a href=\"/glossary#count\"><strong>count</strong></a>:</p>\n<p><a href=\"/glossary#maximum_response_time\"><strong>maximum_response_time</strong></a>: 60</p>\n<p><a href=\"/glossary#minimum_response_time\"><strong>minimum_response_time</strong></a>:</p>\n",
      "description_markdown": "Returns aggregate metrics on api usage eg. total count, response time (in ms), etc.\n\nShould be able to filter on the following fields\n\neg: /management/aggregate-metrics?from_date=1100-01-01T01:01:01.000Z&to_date=1100-01-01T01:01:01.000Z&consumer_id=5\n&user_id=66214b8e-259e-44ad-8868-3eb47be70646&implemented_by_partial_function=getTransactionsForBankAccount\n&implemented_in_version=v3.0.0&url=/obp/v3.0.0/banks/gh.29.uk/accounts/8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0/owner/transactions\n&verb=GET&anon=false&app_name=MapperPostman\n&exclude_app_names=API-EXPLORER,API-Manager,SOFI,null\n\n1 from_date (defaults to the day before the current date): eg:from_date=1100-01-01T01:01:01.000Z\n\n2 to_date (defaults to the current date) eg:to_date=1100-01-01T01:01:01.000Z\n\n3 consumer_id  (if null ignore)\n\n4 user_id (if null ignore)\n\n5 anon (if null ignore) only support two value : true (return where user_id is null.) or false (return where user_id is not null.)\n\n6 url (if null ignore), note: can not contain '&'.\n\n7 app_name (if null ignore)\n\n8 implemented_by_partial_function (if null ignore),\n\n9 implemented_in_version (if null ignore)\n\n10 verb (if null ignore)\n\n11 correlation_id (if null ignore)\n\n12 include_app_names (if null ignore).eg: &include_app_names=API-EXPLORER,API-Manager,SOFI,null\n\n13 include_url_patterns (if null ignore).you can design you own SQL LIKE pattern. eg: &include_url_patterns=%management/metrics%,%management/aggregate-metrics%\n\n14 include_implemented_by_partial_functions (if null ignore).eg: &include_implemented_by_partial_functions=getMetrics,getConnectorMetrics,getAggregateMetrics\n\nAuthentication is Mandatory\n\n\n**JSON response body fields:**\n\n\n\n[**average_response_time**](/glossary#average_response_time): \n\n\n\n[**count**](/glossary#count): \n\n\n\n[**maximum_response_time**](/glossary#maximum_response_time): 60\n\n\n\n[**minimum_response_time**](/glossary#minimum_response_time): \n\n\n",
      "success_response_body": {
        "count": 7076,
        "average_response_time": 65.21,
        "minimum_response_time": 1.0,
        "maximum_response_time": 9039.0
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Metric", "Aggregate-Metrics", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer"
          },
          "average_response_time": {
            "type": "number"
          },
          "maximum_response_time": {
            "type": "number"
          },
          "minimum_response_time": {
            "type": "number"
          }
        }
      },
      "roles": [
        {
          "role": "CanReadAggregateMetrics",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/aggregate-metrics",
      "connector_methods": ["obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv4.0.0-getDynamicEndpoint",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getDynamicEndpoint"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/management/dynamic-endpoints/DYNAMIC_ENDPOINT_ID",
      "summary": "Get Dynamic Endpoint",
      "description": "<p>Get a Dynamic Endpoint.</p>\n<p>Get one DynamicEndpoint,</p>\n<p>Authentication is Mandatory</p>\n",
      "description_markdown": "Get a Dynamic Endpoint.\n\n\nGet one DynamicEndpoint,\n\n\n\nAuthentication is Mandatory",
      "success_response_body": {
        "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
        "dynamic_endpoint_id": "dynamic-endpoint-id",
        "swagger_string": {
          "swagger": "2.0",
          "info": {
            "title": "Bank Accounts (Dynamic Endpoint)",
            "version": "1.0.0"
          },
          "definitions": {
            "AccountName": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "family account"
                },
                "balance": {
                  "type": "integer",
                  "format": "int64",
                  "example": 1000.123
                }
              }
            }
          },
          "paths": {
            "/accounts": {
              "post": {
                "operationId": "POST_account",
                "produces": ["application/json"],
                "responses": {
                  "201": {
                    "description": "Success Response",
                    "schema": {
                      "$ref": "#/definitions/AccountName"
                    }
                  }
                },
                "consumes": ["application/json"],
                "description": "POST Accounts",
                "summary": "POST Accounts"
              }
            },
            "/accounts/{account_id}": {
              "get": {
                "operationId": "GET_account",
                "produces": ["application/json"],
                "responses": {
                  "200": {
                    "description": "Success Response",
                    "schema": {
                      "$ref": "#/definitions/AccountName"
                    }
                  }
                },
                "consumes": ["application/json"],
                "description": "Get Bank Account",
                "summary": "Get Bank Account by Id"
              }
            }
          },
          "host": "obp_mock",
          "schemes": ["http", "https"]
        }
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-09009: DynamicEndpoint not found. Please specify a valid value for DYNAMIC_ENDPOINT_ID.",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Dynamic-Endpoint-Manage", "API", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "string"
          },
          "dynamic_endpoint_id": {
            "type": "string"
          },
          "swagger_string": {
            "type": "object",
            "properties": {
              "swagger": {
                "type": "string"
              },
              "paths": {
                "type": "object",
                "properties": {
                  "/accounts": {
                    "type": "object",
                    "properties": {
                      "post": {
                        "type": "object",
                        "properties": {
                          "responses": {
                            "type": "object",
                            "properties": {
                              "201": {
                                "type": "object",
                                "properties": {
                                  "description": {
                                    "type": "string"
                                  },
                                  "schema": {
                                    "type": "object",
                                    "properties": {
                                      "$ref": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "consumes": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "s": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "operationId": {
                            "type": "string"
                          },
                          "summary": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "produces": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "s": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "/accounts/{account_id}": {
                    "type": "object",
                    "properties": {
                      "get": {
                        "type": "object",
                        "properties": {
                          "description": {
                            "type": "string"
                          },
                          "consumes": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "s": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "operationId": {
                            "type": "string"
                          },
                          "responses": {
                            "type": "object",
                            "properties": {
                              "200": {
                                "type": "object",
                                "properties": {
                                  "description": {
                                    "type": "string"
                                  },
                                  "schema": {
                                    "type": "object",
                                    "properties": {
                                      "$ref": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "summary": {
                            "type": "string"
                          },
                          "produces": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "s": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "info": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "version": {
                    "type": "string"
                  }
                }
              },
              "definitions": {
                "type": "object",
                "properties": {
                  "AccountName": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string"
                      },
                      "properties": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string"
                              },
                              "example": {
                                "type": "string"
                              }
                            }
                          },
                          "balance": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string"
                              },
                              "format": {
                                "type": "string"
                              },
                              "example": {
                                "type": "number"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "schemes": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "s": {
                      "type": "string"
                    }
                  }
                }
              },
              "host": {
                "type": "string"
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetDynamicEndpoint",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/dynamic-endpoints/DYNAMIC_ENDPOINT_ID",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv4.0.0-getScannedApiVersions",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getScannedApiVersions"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/api/versions",
      "summary": "Get scanned API Versions",
      "description": "<p>Get all the scanned API Versions.</p>\n<p>Authentication is Optional</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>apiShortVersion</strong></a>: apiShortVersion</p>\n<p><a href=\"/glossary#\"><strong>apiStandard</strong></a>: apiStandard</p>\n<p><a href=\"/glossary#\"><strong>urlPrefix</strong></a>: urlPrefix</p>\n",
      "description_markdown": "Get all the scanned API Versions.\n\nAuthentication is Optional\n\n\n**JSON response body fields:**\n\n\n\n[**apiShortVersion**](/glossary#): apiShortVersion\n\n\n\n[**apiStandard**](/glossary#): apiStandard\n\n\n\n[**urlPrefix**](/glossary#): urlPrefix\n\n\n",
      "success_response_body": {
        "scanned_api_versions": [
          {
            "urlPrefix": "obp",
            "apiStandard": "obp",
            "apiShortVersion": "v3.1.0",
            "API_VERSION": "v3.1.0"
          }
        ]
      },
      "error_response_bodies": ["OBP-50000: Unknown Error."],
      "tags": ["Documentation", "API"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "scanned_api_versions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "urlPrefix": {
                  "type": "string"
                },
                "vDottedApiVersion": {
                  "type": "string"
                },
                "fullyQualifiedVersion": {
                  "type": "string"
                },
                "apiShortVersion": {
                  "type": "string"
                },
                "noV": {
                  "type": "string"
                },
                "dottedApiVersion": {
                  "type": "string"
                },
                "apiStandard": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "roles": [],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/api/versions",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv2.0.0-publicAccountsAllBanks",
      "implemented_by": {
        "version": "OBPv2.0.0",
        "function": "publicAccountsAllBanks"
      },
      "request_verb": "GET",
      "request_url": "/obp/v2.0.0/accounts/public",
      "summary": "Get Public Accounts at all Banks",
      "description": "<p>Get public accounts at all banks (Anonymous access).<br />\nReturns accounts that contain at least one public view (a view where is_public is true)<br />\nFor each account the API returns the ID and the available views.</p>\n<p>Authentication is Optional</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#accounts\"><strong>accounts</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#is_public\"><strong>is_public</strong></a>: true</p>\n<p><a href=\"/glossary#\"><strong>label</strong></a>: My Account</p>\n<p><a href=\"/glossary#short_name\"><strong>short_name</strong></a>:</p>\n<p><a href=\"/glossary#views_available\"><strong>views_available</strong></a>:</p>\n",
      "description_markdown": "Get public accounts at all banks (Anonymous access).\nReturns accounts that contain at least one public view (a view where is_public is true)\nFor each account the API returns the ID and the available views.\n\nAuthentication is Optional\n\n\n**JSON response body fields:**\n\n\n\n[**accounts**](/glossary#accounts): \n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**is_public**](/glossary#is_public): true\n\n\n\n[**label**](/glossary#): My Account\n\n\n\n[**short_name**](/glossary#short_name): \n\n\n\n[**views_available**](/glossary#views_available): \n\n\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "accounts": [
          {
            "id": "8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0",
            "label": "NoneLabel",
            "bank_id": "gh.29.uk",
            "views_available": [
              {
                "id": "1",
                "short_name": "HHH",
                "is_public": true
              }
            ]
          }
        ]
      },
      "error_response_bodies": ["OBP-30066: Could not get accounts.", "OBP-50000: Unknown Error."],
      "tags": ["Account-Public", "Account", "PublicData"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "accounts": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "label": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "bank_id": {
                  "type": "string"
                },
                "views_available": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "short_name": {
                        "type": "string"
                      },
                      "id": {
                        "type": "string"
                      },
                      "is_public": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/accounts/public",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv5.0.0-updateSystemView",
      "implemented_by": {
        "version": "OBPv5.0.0",
        "function": "updateSystemView"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v5.0.0/system-views/VIEW_ID",
      "summary": "Update System View",
      "description": "<p>Update an existing view on a bank account</p>\n<p>Authentication is Mandatory and the user needs to have access to the owner view.</p>\n<p>The json sent is the same as during view creation (above), with one difference: the 'name' field<br />\nof a view is not editable (it is only set when a view is created)</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#alias\"><strong>alias</strong></a>:</p>\n<p><a href=\"/glossary#can_add_comment\"><strong>can_add_comment</strong></a>:</p>\n<p><a href=\"/glossary#can_add_corporate_location\"><strong>can_add_corporate_location</strong></a>:</p>\n<p><a href=\"/glossary#can_add_counterparty\"><strong>can_add_counterparty</strong></a>: true</p>\n<p><a href=\"/glossary#can_add_image\"><strong>can_add_image</strong></a>:</p>\n<p><a href=\"/glossary#can_add_image_url\"><strong>can_add_image_url</strong></a>: true</p>\n<p><a href=\"/glossary#can_add_more_info\"><strong>can_add_more_info</strong></a>: true</p>\n<p><a href=\"/glossary#can_add_open_corporates_url\"><strong>can_add_open_corporates_url</strong></a>:</p>\n<p><a href=\"/glossary#can_add_physical_location\"><strong>can_add_physical_location</strong></a>:</p>\n<p><a href=\"/glossary#can_add_private_alias\"><strong>can_add_private_alias</strong></a>:</p>\n<p><a href=\"/glossary#can_add_public_alias\"><strong>can_add_public_alias</strong></a>:</p>\n<p><a href=\"/glossary#can_add_tag\"><strong>can_add_tag</strong></a>: true</p>\n<p><a href=\"/glossary#can_add_transaction_request_to_any_account\"><strong>can_add_transaction_request_to_any_account</strong></a>:</p>\n<p><a href=\"/glossary#can_add_transaction_request_to_own_account\"><strong>can_add_transaction_request_to_own_account</strong></a>:</p>\n<p><a href=\"/glossary#can_add_url\"><strong>can_add_url</strong></a>:</p>\n<p><a href=\"/glossary#can_add_where_tag\"><strong>can_add_where_tag</strong></a>:</p>\n<p><a href=\"/glossary#can_create_direct_debit\"><strong>can_create_direct_debit</strong></a>: true</p>\n<p><a href=\"/glossary#can_create_standing_order\"><strong>can_create_standing_order</strong></a>:</p>\n<p><a href=\"/glossary#can_delete_comment\"><strong>can_delete_comment</strong></a>:</p>\n<p><a href=\"/glossary#can_delete_corporate_location\"><strong>can_delete_corporate_location</strong></a>: true</p>\n<p><a href=\"/glossary#can_delete_image\"><strong>can_delete_image</strong></a>: true</p>\n<p><a href=\"/glossary#can_delete_physical_location\"><strong>can_delete_physical_location</strong></a>:</p>\n<p><a href=\"/glossary#can_delete_tag\"><strong>can_delete_tag</strong></a>:</p>\n<p><a href=\"/glossary#can_delete_where_tag\"><strong>can_delete_where_tag</strong></a>: true</p>\n<p><a href=\"/glossary#can_edit_owner_comment\"><strong>can_edit_owner_comment</strong></a>: true</p>\n<p><a href=\"/glossary#\"><strong>can_grant_access_to_views</strong></a>: can_grant_access_to_views</p>\n<p><a href=\"/glossary#can_query_available_funds\"><strong>can_query_available_funds</strong></a>: true</p>\n<p><a href=\"/glossary#\"><strong>can_revoke_access_to_views</strong></a>: can_revoke_access_to_views</p>\n<p><a href=\"/glossary#can_see_bank_account_balance\"><strong>can_see_bank_account_balance</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_bank_name\"><strong>can_see_bank_account_bank_name</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_credit_limit\"><strong>can_see_bank_account_credit_limit</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_currency\"><strong>can_see_bank_account_currency</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_iban\"><strong>can_see_bank_account_iban</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_label\"><strong>can_see_bank_account_label</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_national_identifier\"><strong>can_see_bank_account_national_identifier</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_number\"><strong>can_see_bank_account_number</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_owners\"><strong>can_see_bank_account_owners</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_routing_address\"><strong>can_see_bank_account_routing_address</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_routing_scheme\"><strong>can_see_bank_account_routing_scheme</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_swift_bic\"><strong>can_see_bank_account_swift_bic</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_type\"><strong>can_see_bank_account_type</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_routing_address\"><strong>can_see_bank_routing_address</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_routing_scheme\"><strong>can_see_bank_routing_scheme</strong></a>:</p>\n<p><a href=\"/glossary#can_see_comments\"><strong>can_see_comments</strong></a>:</p>\n<p><a href=\"/glossary#can_see_corporate_location\"><strong>can_see_corporate_location</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_image_url\"><strong>can_see_image_url</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_images\"><strong>can_see_images</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_more_info\"><strong>can_see_more_info</strong></a>:</p>\n<p><a href=\"/glossary#can_see_open_corporates_url\"><strong>can_see_open_corporates_url</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_bank_name\"><strong>can_see_other_account_bank_name</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_iban\"><strong>can_see_other_account_iban</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_kind\"><strong>can_see_other_account_kind</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_metadata\"><strong>can_see_other_account_metadata</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_national_identifier\"><strong>can_see_other_account_national_identifier</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_other_account_number\"><strong>can_see_other_account_number</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_other_account_routing_address\"><strong>can_see_other_account_routing_address</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_other_account_routing_scheme\"><strong>can_see_other_account_routing_scheme</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_swift_bic\"><strong>can_see_other_account_swift_bic</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_other_bank_routing_address\"><strong>can_see_other_bank_routing_address</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_bank_routing_scheme\"><strong>can_see_other_bank_routing_scheme</strong></a>:</p>\n<p><a href=\"/glossary#can_see_owner_comment\"><strong>can_see_owner_comment</strong></a>:</p>\n<p><a href=\"/glossary#can_see_physical_location\"><strong>can_see_physical_location</strong></a>:</p>\n<p><a href=\"/glossary#can_see_private_alias\"><strong>can_see_private_alias</strong></a>:</p>\n<p><a href=\"/glossary#can_see_public_alias\"><strong>can_see_public_alias</strong></a>:</p>\n<p><a href=\"/glossary#can_see_tags\"><strong>can_see_tags</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_amount\"><strong>can_see_transaction_amount</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_transaction_balance\"><strong>can_see_transaction_balance</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_currency\"><strong>can_see_transaction_currency</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_description\"><strong>can_see_transaction_description</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_transaction_finish_date\"><strong>can_see_transaction_finish_date</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_metadata\"><strong>can_see_transaction_metadata</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_other_bank_account\"><strong>can_see_transaction_other_bank_account</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_start_date\"><strong>can_see_transaction_start_date</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_this_bank_account\"><strong>can_see_transaction_this_bank_account</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_type\"><strong>can_see_transaction_type</strong></a>:</p>\n<p><a href=\"/glossary#can_see_url\"><strong>can_see_url</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_where_tag\"><strong>can_see_where_tag</strong></a>: true</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#hide_metadata_if_alias_used\"><strong>hide_metadata_if_alias_used</strong></a>:</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#is_public\"><strong>is_public</strong></a>: true</p>\n<p><a href=\"/glossary#\"><strong>is_system</strong></a>: true</p>\n<p><a href=\"/glossary#metadata_view\"><strong>metadata_view</strong></a>:</p>\n<p><a href=\"/glossary#short_name\"><strong>short_name</strong></a>:</p>\n<p><a href=\"/glossary#is_firehose\">is_firehose</a>:</p>\n",
      "description_markdown": "Update an existing view on a bank account\n\nAuthentication is Mandatory and the user needs to have access to the owner view.\n\nThe json sent is the same as during view creation (above), with one difference: the 'name' field\nof a view is not editable (it is only set when a view is created)\n\n\n**URL Parameters:**\n\n[VIEW_ID](/glossary#this_view_id): owner\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**alias**](/glossary#alias): \n\n\n\n[**can_add_comment**](/glossary#can_add_comment): \n\n\n\n[**can_add_corporate_location**](/glossary#can_add_corporate_location): \n\n\n\n[**can_add_counterparty**](/glossary#can_add_counterparty): true\n\n\n\n[**can_add_image**](/glossary#can_add_image): \n\n\n\n[**can_add_image_url**](/glossary#can_add_image_url): true\n\n\n\n[**can_add_more_info**](/glossary#can_add_more_info): true\n\n\n\n[**can_add_open_corporates_url**](/glossary#can_add_open_corporates_url): \n\n\n\n[**can_add_physical_location**](/glossary#can_add_physical_location): \n\n\n\n[**can_add_private_alias**](/glossary#can_add_private_alias): \n\n\n\n[**can_add_public_alias**](/glossary#can_add_public_alias): \n\n\n\n[**can_add_tag**](/glossary#can_add_tag): true\n\n\n\n[**can_add_transaction_request_to_any_account**](/glossary#can_add_transaction_request_to_any_account): \n\n\n\n[**can_add_transaction_request_to_own_account**](/glossary#can_add_transaction_request_to_own_account): \n\n\n\n[**can_add_url**](/glossary#can_add_url): \n\n\n\n[**can_add_where_tag**](/glossary#can_add_where_tag): \n\n\n\n[**can_create_direct_debit**](/glossary#can_create_direct_debit): true\n\n\n\n[**can_create_standing_order**](/glossary#can_create_standing_order): \n\n\n\n[**can_delete_comment**](/glossary#can_delete_comment): \n\n\n\n[**can_delete_corporate_location**](/glossary#can_delete_corporate_location): true\n\n\n\n[**can_delete_image**](/glossary#can_delete_image): true\n\n\n\n[**can_delete_physical_location**](/glossary#can_delete_physical_location): \n\n\n\n[**can_delete_tag**](/glossary#can_delete_tag): \n\n\n\n[**can_delete_where_tag**](/glossary#can_delete_where_tag): true\n\n\n\n[**can_edit_owner_comment**](/glossary#can_edit_owner_comment): true\n\n\n\n[**can_grant_access_to_views**](/glossary#): can_grant_access_to_views\n\n\n\n[**can_query_available_funds**](/glossary#can_query_available_funds): true\n\n\n\n[**can_revoke_access_to_views**](/glossary#): can_revoke_access_to_views\n\n\n\n[**can_see_bank_account_balance**](/glossary#can_see_bank_account_balance): \n\n\n\n[**can_see_bank_account_bank_name**](/glossary#can_see_bank_account_bank_name): true\n\n\n\n[**can_see_bank_account_credit_limit**](/glossary#can_see_bank_account_credit_limit): true\n\n\n\n[**can_see_bank_account_currency**](/glossary#can_see_bank_account_currency): \n\n\n\n[**can_see_bank_account_iban**](/glossary#can_see_bank_account_iban): \n\n\n\n[**can_see_bank_account_label**](/glossary#can_see_bank_account_label): true\n\n\n\n[**can_see_bank_account_national_identifier**](/glossary#can_see_bank_account_national_identifier): \n\n\n\n[**can_see_bank_account_number**](/glossary#can_see_bank_account_number): true\n\n\n\n[**can_see_bank_account_owners**](/glossary#can_see_bank_account_owners): true\n\n\n\n[**can_see_bank_account_routing_address**](/glossary#can_see_bank_account_routing_address): \n\n\n\n[**can_see_bank_account_routing_scheme**](/glossary#can_see_bank_account_routing_scheme): \n\n\n\n[**can_see_bank_account_swift_bic**](/glossary#can_see_bank_account_swift_bic): \n\n\n\n[**can_see_bank_account_type**](/glossary#can_see_bank_account_type): \n\n\n\n[**can_see_bank_routing_address**](/glossary#can_see_bank_routing_address): true\n\n\n\n[**can_see_bank_routing_scheme**](/glossary#can_see_bank_routing_scheme): \n\n\n\n[**can_see_comments**](/glossary#can_see_comments): \n\n\n\n[**can_see_corporate_location**](/glossary#can_see_corporate_location): true\n\n\n\n[**can_see_image_url**](/glossary#can_see_image_url): true\n\n\n\n[**can_see_images**](/glossary#can_see_images): true\n\n\n\n[**can_see_more_info**](/glossary#can_see_more_info): \n\n\n\n[**can_see_open_corporates_url**](/glossary#can_see_open_corporates_url): \n\n\n\n[**can_see_other_account_bank_name**](/glossary#can_see_other_account_bank_name): \n\n\n\n[**can_see_other_account_iban**](/glossary#can_see_other_account_iban): \n\n\n\n[**can_see_other_account_kind**](/glossary#can_see_other_account_kind): \n\n\n\n[**can_see_other_account_metadata**](/glossary#can_see_other_account_metadata): \n\n\n\n[**can_see_other_account_national_identifier**](/glossary#can_see_other_account_national_identifier): true\n\n\n\n[**can_see_other_account_number**](/glossary#can_see_other_account_number): true\n\n\n\n[**can_see_other_account_routing_address**](/glossary#can_see_other_account_routing_address): true\n\n\n\n[**can_see_other_account_routing_scheme**](/glossary#can_see_other_account_routing_scheme): \n\n\n\n[**can_see_other_account_swift_bic**](/glossary#can_see_other_account_swift_bic): true\n\n\n\n[**can_see_other_bank_routing_address**](/glossary#can_see_other_bank_routing_address): \n\n\n\n[**can_see_other_bank_routing_scheme**](/glossary#can_see_other_bank_routing_scheme): \n\n\n\n[**can_see_owner_comment**](/glossary#can_see_owner_comment): \n\n\n\n[**can_see_physical_location**](/glossary#can_see_physical_location): \n\n\n\n[**can_see_private_alias**](/glossary#can_see_private_alias): \n\n\n\n[**can_see_public_alias**](/glossary#can_see_public_alias): \n\n\n\n[**can_see_tags**](/glossary#can_see_tags): \n\n\n\n[**can_see_transaction_amount**](/glossary#can_see_transaction_amount): true\n\n\n\n[**can_see_transaction_balance**](/glossary#can_see_transaction_balance): \n\n\n\n[**can_see_transaction_currency**](/glossary#can_see_transaction_currency): \n\n\n\n[**can_see_transaction_description**](/glossary#can_see_transaction_description): true\n\n\n\n[**can_see_transaction_finish_date**](/glossary#can_see_transaction_finish_date): \n\n\n\n[**can_see_transaction_metadata**](/glossary#can_see_transaction_metadata): \n\n\n\n[**can_see_transaction_other_bank_account**](/glossary#can_see_transaction_other_bank_account): \n\n\n\n[**can_see_transaction_start_date**](/glossary#can_see_transaction_start_date): \n\n\n\n[**can_see_transaction_this_bank_account**](/glossary#can_see_transaction_this_bank_account): \n\n\n\n[**can_see_transaction_type**](/glossary#can_see_transaction_type): \n\n\n\n[**can_see_url**](/glossary#can_see_url): true\n\n\n\n[**can_see_where_tag**](/glossary#can_see_where_tag): true\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**hide_metadata_if_alias_used**](/glossary#hide_metadata_if_alias_used): \n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**is_public**](/glossary#is_public): true\n\n\n\n[**is_system**](/glossary#): true\n\n\n\n[**metadata_view**](/glossary#metadata_view): \n\n\n\n[**short_name**](/glossary#short_name): \n\n\n\n[is_firehose](/glossary#is_firehose): \n\n\n",
      "example_request_body": {
        "description": "this is for family",
        "metadata_view": "owner",
        "is_public": false,
        "is_firehose": false,
        "which_alias_to_use": "family",
        "hide_metadata_if_alias_used": true,
        "allowed_actions": [
          "can_see_transaction_this_bank_account",
          "can_see_transaction_other_bank_account",
          "can_see_transaction_metadata",
          "can_see_transaction_label",
          "can_see_transaction_amount",
          "can_see_transaction_type",
          "can_see_transaction_currency",
          "can_see_transaction_start_date",
          "can_see_transaction_finish_date",
          "can_see_transaction_balance",
          "can_see_comments",
          "can_see_narrative",
          "can_see_tags",
          "can_see_images",
          "can_see_bank_account_owners",
          "can_see_bank_account_type",
          "can_see_bank_account_balance",
          "can_see_bank_account_currency",
          "can_see_bank_account_label",
          "can_see_bank_account_national_identifier",
          "can_see_bank_account_swift_bic",
          "can_see_bank_account_iban",
          "can_see_bank_account_number",
          "can_see_bank_account_bank_name",
          "can_see_other_account_national_identifier",
          "can_see_other_account_swift_bic",
          "can_see_other_account_iban",
          "can_see_other_account_bank_name",
          "can_see_other_account_number",
          "can_see_other_account_metadata",
          "can_see_other_account_kind",
          "can_see_more_info",
          "can_see_url",
          "can_see_image_url",
          "can_see_open_corporates_url",
          "can_see_corporate_location",
          "can_see_physical_location",
          "can_see_public_alias",
          "can_see_private_alias",
          "can_add_more_info",
          "can_add_url",
          "can_add_image_url",
          "can_add_open_corporates_url",
          "can_add_corporate_location",
          "can_add_physical_location",
          "can_add_public_alias",
          "can_add_private_alias",
          "can_delete_corporate_location",
          "can_delete_physical_location",
          "can_edit_narrative",
          "can_add_comment",
          "can_delete_comment",
          "can_add_tag",
          "can_delete_tag",
          "can_add_image",
          "can_delete_image",
          "can_add_where_tag",
          "can_see_where_tag",
          "can_delete_where_tag",
          "can_create_counterparty",
          "can_see_bank_routing_scheme",
          "can_see_bank_routing_address",
          "can_see_bank_account_routing_scheme",
          "can_see_bank_account_routing_address",
          "can_see_other_bank_routing_scheme",
          "can_see_other_bank_routing_address",
          "can_see_other_account_routing_scheme",
          "can_see_other_account_routing_address",
          "can_query_available_funds"
        ],
        "can_grant_access_to_views": ["owner"],
        "can_revoke_access_to_views": ["owner"]
      },
      "success_response_body": {
        "id": "1234",
        "short_name": "short_name",
        "description": "description",
        "metadata_view": "owner",
        "is_public": true,
        "is_system": true,
        "alias": "No",
        "hide_metadata_if_alias_used": true,
        "can_grant_access_to_views": ["Owner"],
        "can_revoke_access_to_views": ["Owner"],
        "can_add_comment": true,
        "can_add_corporate_location": true,
        "can_add_image": true,
        "can_add_image_url": true,
        "can_add_more_info": true,
        "can_add_open_corporates_url": true,
        "can_add_physical_location": true,
        "can_add_private_alias": true,
        "can_add_public_alias": true,
        "can_add_tag": true,
        "can_add_url": true,
        "can_add_where_tag": true,
        "can_delete_comment": true,
        "can_add_counterparty": true,
        "can_delete_corporate_location": true,
        "can_delete_image": true,
        "can_delete_physical_location": true,
        "can_delete_tag": true,
        "can_delete_where_tag": true,
        "can_edit_owner_comment": true,
        "can_see_bank_account_balance": true,
        "can_query_available_funds": true,
        "can_see_bank_account_bank_name": true,
        "can_see_bank_account_currency": true,
        "can_see_bank_account_iban": true,
        "can_see_bank_account_label": true,
        "can_see_bank_account_national_identifier": true,
        "can_see_bank_account_number": true,
        "can_see_bank_account_owners": true,
        "can_see_bank_account_swift_bic": true,
        "can_see_bank_account_type": true,
        "can_see_comments": true,
        "can_see_corporate_location": true,
        "can_see_image_url": true,
        "can_see_images": true,
        "can_see_more_info": true,
        "can_see_open_corporates_url": true,
        "can_see_other_account_bank_name": true,
        "can_see_other_account_iban": true,
        "can_see_other_account_kind": true,
        "can_see_other_account_metadata": true,
        "can_see_other_account_national_identifier": true,
        "can_see_other_account_number": true,
        "can_see_other_account_swift_bic": true,
        "can_see_owner_comment": true,
        "can_see_physical_location": true,
        "can_see_private_alias": true,
        "can_see_public_alias": true,
        "can_see_tags": true,
        "can_see_transaction_amount": true,
        "can_see_transaction_balance": true,
        "can_see_transaction_currency": true,
        "can_see_transaction_description": true,
        "can_see_transaction_finish_date": true,
        "can_see_transaction_metadata": true,
        "can_see_transaction_other_bank_account": true,
        "can_see_transaction_start_date": true,
        "can_see_transaction_this_bank_account": true,
        "can_see_transaction_type": true,
        "can_see_url": true,
        "can_see_where_tag": true,
        "can_see_bank_routing_scheme": true,
        "can_see_bank_routing_address": true,
        "can_see_bank_account_routing_scheme": true,
        "can_see_bank_account_routing_address": true,
        "can_see_other_bank_routing_scheme": true,
        "can_see_other_bank_routing_address": true,
        "can_see_other_account_routing_scheme": true,
        "can_see_other_account_routing_address": true,
        "can_add_transaction_request_to_own_account": true,
        "can_add_transaction_request_to_any_account": true,
        "can_see_bank_account_credit_limit": true,
        "can_create_direct_debit": true,
        "can_create_standing_order": true
      },
      "error_response_bodies": [
        "OBP-10001: Incorrect json format.",
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["View-System", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "allowed_actions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "is_firehose": {
            "type": "boolean"
          },
          "description": {
            "type": "string"
          },
          "is_public": {
            "type": "boolean"
          },
          "hide_metadata_if_alias_used": {
            "type": "boolean"
          },
          "metadata_view": {
            "type": "string"
          },
          "can_revoke_access_to_views": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "can_grant_access_to_views": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "which_alias_to_use": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "can_see_other_account_swift_bic": {
            "type": "boolean"
          },
          "can_see_where_tag": {
            "type": "boolean"
          },
          "can_see_url": {
            "type": "boolean"
          },
          "can_create_direct_debit": {
            "type": "boolean"
          },
          "can_see_bank_account_swift_bic": {
            "type": "boolean"
          },
          "can_see_bank_account_routing_address": {
            "type": "boolean"
          },
          "can_see_tags": {
            "type": "boolean"
          },
          "can_see_transaction_balance": {
            "type": "boolean"
          },
          "can_delete_corporate_location": {
            "type": "boolean"
          },
          "can_add_image_url": {
            "type": "boolean"
          },
          "can_see_public_alias": {
            "type": "boolean"
          },
          "can_add_transaction_request_to_own_account": {
            "type": "boolean"
          },
          "can_add_comment": {
            "type": "boolean"
          },
          "can_see_other_bank_routing_scheme": {
            "type": "boolean"
          },
          "description": {
            "type": "string"
          },
          "can_see_corporate_location": {
            "type": "boolean"
          },
          "can_see_other_account_bank_name": {
            "type": "boolean"
          },
          "can_see_more_info": {
            "type": "boolean"
          },
          "can_add_counterparty": {
            "type": "boolean"
          },
          "is_system": {
            "type": "boolean"
          },
          "can_revoke_access_to_views": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "can_see_physical_location": {
            "type": "boolean"
          },
          "can_query_available_funds": {
            "type": "boolean"
          },
          "can_edit_owner_comment": {
            "type": "boolean"
          },
          "can_see_private_alias": {
            "type": "boolean"
          },
          "can_see_bank_account_credit_limit": {
            "type": "boolean"
          },
          "can_see_other_account_routing_address": {
            "type": "boolean"
          },
          "can_see_bank_account_balance": {
            "type": "boolean"
          },
          "can_add_public_alias": {
            "type": "boolean"
          },
          "can_see_bank_routing_scheme": {
            "type": "boolean"
          },
          "can_see_bank_account_owners": {
            "type": "boolean"
          },
          "can_see_other_account_metadata": {
            "type": "boolean"
          },
          "can_delete_physical_location": {
            "type": "boolean"
          },
          "hide_metadata_if_alias_used": {
            "type": "boolean"
          },
          "can_see_transaction_this_bank_account": {
            "type": "boolean"
          },
          "can_see_image_url": {
            "type": "boolean"
          },
          "can_see_transaction_type": {
            "type": "boolean"
          },
          "can_see_images": {
            "type": "boolean"
          },
          "can_see_transaction_amount": {
            "type": "boolean"
          },
          "metadata_view": {
            "type": "string"
          },
          "can_see_transaction_metadata": {
            "type": "boolean"
          },
          "can_see_comments": {
            "type": "boolean"
          },
          "can_grant_access_to_views": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "can_see_other_account_iban": {
            "type": "boolean"
          },
          "can_add_image": {
            "type": "boolean"
          },
          "can_see_bank_account_routing_scheme": {
            "type": "boolean"
          },
          "can_see_bank_account_type": {
            "type": "boolean"
          },
          "can_see_other_account_kind": {
            "type": "boolean"
          },
          "can_see_bank_account_currency": {
            "type": "boolean"
          },
          "can_add_where_tag": {
            "type": "boolean"
          },
          "can_see_transaction_start_date": {
            "type": "boolean"
          },
          "can_see_bank_account_label": {
            "type": "boolean"
          },
          "can_add_private_alias": {
            "type": "boolean"
          },
          "can_see_transaction_currency": {
            "type": "boolean"
          },
          "can_add_more_info": {
            "type": "boolean"
          },
          "can_delete_comment": {
            "type": "boolean"
          },
          "can_create_standing_order": {
            "type": "boolean"
          },
          "can_see_other_bank_routing_address": {
            "type": "boolean"
          },
          "can_see_transaction_other_bank_account": {
            "type": "boolean"
          },
          "can_see_bank_account_number": {
            "type": "boolean"
          },
          "can_add_corporate_location": {
            "type": "boolean"
          },
          "alias": {
            "type": "string"
          },
          "can_add_url": {
            "type": "boolean"
          },
          "short_name": {
            "type": "string"
          },
          "can_delete_where_tag": {
            "type": "boolean"
          },
          "is_public": {
            "type": "boolean"
          },
          "can_see_owner_comment": {
            "type": "boolean"
          },
          "can_see_transaction_finish_date": {
            "type": "boolean"
          },
          "can_see_open_corporates_url": {
            "type": "boolean"
          },
          "can_add_physical_location": {
            "type": "boolean"
          },
          "can_see_bank_account_iban": {
            "type": "boolean"
          },
          "can_see_other_account_national_identifier": {
            "type": "boolean"
          },
          "can_see_bank_routing_address": {
            "type": "boolean"
          },
          "can_delete_image": {
            "type": "boolean"
          },
          "can_add_transaction_request_to_any_account": {
            "type": "boolean"
          },
          "can_add_tag": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "can_see_other_account_routing_scheme": {
            "type": "boolean"
          },
          "can_add_open_corporates_url": {
            "type": "boolean"
          },
          "can_delete_tag": {
            "type": "boolean"
          },
          "can_see_transaction_description": {
            "type": "boolean"
          },
          "can_see_bank_account_national_identifier": {
            "type": "boolean"
          },
          "can_see_other_account_number": {
            "type": "boolean"
          },
          "can_see_bank_account_bank_name": {
            "type": "boolean"
          }
        }
      },
      "roles": [
        {
          "role": "CanUpdateSystemView",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/system-views/VIEW_ID",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv4.0.0-deleteCustomerCascade",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "deleteCustomerCascade"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v4.0.0/management/cascading/banks/BANK_ID/customers/CUSTOMER_ID",
      "summary": "Delete Customer Cascade",
      "description": "<p>Delete a Customer Cascade specified by CUSTOMER_ID.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#Customer.customer_id\">CUSTOMER_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><strong>JSON response body fields:</strong></p>\n",
      "description_markdown": "Delete a Customer Cascade specified by CUSTOMER_ID.\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[CUSTOMER_ID](/glossary#Customer.customer_id): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n\n\n**JSON response body fields:**\n\n\n",
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30046: Customer not found. Please specify a valid value for CUSTOMER_ID.",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Customer", "New-Style"],
      "roles": [
        {
          "role": "CanDeleteCustomerCascade",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/cascading/banks/BANK_ID/customers/CUSTOMER_ID",
      "connector_methods": ["obp.getCustomerByCustomerId"]
    },
    {
      "operation_id": "OBPv4.0.0-getCustomerMessages",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getCustomerMessages"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/customers/CUSTOMER_ID/messages",
      "summary": "Get Customer Messages for a Customer",
      "description": "<p>Get messages for the customer specified by CUSTOMER_ID<br />\nAuthentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#Customer.customer_id\">CUSTOMER_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#from_department\"><strong>from_department</strong></a>: Open Bank</p>\n<p><a href=\"/glossary#from_person\"><strong>from_person</strong></a>: Tom</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#message\"><strong>message</strong></a>: 123456</p>\n<p><a href=\"/glossary#messages\"><strong>messages</strong></a>:</p>\n<p><a href=\"/glossary#transport\"><strong>transport</strong></a>: SMS</p>\n",
      "description_markdown": "Get messages for the customer specified by CUSTOMER_ID\n         Authentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[CUSTOMER_ID](/glossary#Customer.customer_id): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**date**](/glossary#): 2020-01-27\n\n\n\n[**from_department**](/glossary#from_department): Open Bank\n\n\n\n[**from_person**](/glossary#from_person): Tom\n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**message**](/glossary#message): 123456\n\n\n\n[**messages**](/glossary#messages): \n\n\n\n[**transport**](/glossary#transport): SMS\n\n\n",
      "success_response_body": {
        "messages": [
          {
            "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
            "date": "1100-01-01T00:00:00Z",
            "transport": "SMS",
            "message": "123456",
            "from_department": "Open Bank",
            "from_person": "Tom"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["Customer-Message", "Customer"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "messages": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                },
                "transport": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "date": {
                  "type": "string",
                  "format": "date-time"
                },
                "from_person": {
                  "type": "string"
                },
                "from_department": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetCustomerMessages",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/customers/CUSTOMER_ID/messages",
      "connector_methods": ["obp.getCustomerMessages", "obp.getCustomerByCustomerId"]
    },
    {
      "operation_id": "OBPv4.0.0-getAllJsonSchemaValidations",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getAllJsonSchemaValidations"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/management/json-schema-validations",
      "summary": "Get all JSON Schema Validations",
      "description": "<p>Get all JSON Schema Validations.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>$schema</strong></a>: $schema</p>\n<p><a href=\"/glossary#\"><strong>additionalProperties</strong></a>: additionalProperties</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#\"><strong>examples</strong></a>: examples</p>\n<p><a href=\"/glossary#\"><strong>json_schema</strong></a>: json_schema</p>\n<p><a href=\"/glossary#\"><strong>maxLength</strong></a>: maxLength</p>\n<p><a href=\"/glossary#\"><strong>minLength</strong></a>: minLength</p>\n<p><a href=\"/glossary#\"><strong>operation_id</strong></a>: OBPv4.0.0-getBanks</p>\n<p><a href=\"/glossary#\"><strong>properties</strong></a>: properties</p>\n<p><a href=\"/glossary#\"><strong>required</strong></a>: required</p>\n<p><a href=\"/glossary#\"><strong>title</strong></a>: Dr.</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>xxx_id</strong></a>: xxx_id</p>\n",
      "description_markdown": "Get all JSON Schema Validations.\n\n\n\nAuthentication is Mandatory\n\n\n**JSON response body fields:**\n\n\n\n[**$schema**](/glossary#): $schema\n\n\n\n[**additionalProperties**](/glossary#): additionalProperties\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**examples**](/glossary#): examples\n\n\n\n[**json_schema**](/glossary#): json_schema\n\n\n\n[**maxLength**](/glossary#): maxLength\n\n\n\n[**minLength**](/glossary#): minLength\n\n\n\n[**operation_id**](/glossary#): OBPv4.0.0-getBanks\n\n\n\n[**properties**](/glossary#): properties\n\n\n\n[**required**](/glossary#): required\n\n\n\n[**title**](/glossary#): Dr.\n\n\n\n[**type**](/glossary#type): \n\n\n\n[**xxx_id**](/glossary#): xxx_id\n\n\n",
      "success_response_body": {
        "json_schema_validations": [
          {
            "operation_id": "OBPv4.0.0-createXxx",
            "json_schema": {
              "$schema": "http://json-schema.org/draft-07/schema",
              "description": "The demo json-schema",
              "title": "The demo schema",
              "required": ["xxx_id"],
              "type": "object",
              "properties": {
                "xxx_id": {
                  "type": "string",
                  "minLength": 2,
                  "maxLength": 50,
                  "examples": ["xxx_id_demo_value"]
                }
              },
              "additionalProperties": true
            }
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["JSON-Schema-Validation", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "json_schema_validations": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "json_schema": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string"
                    },
                    "required": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "$schema": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "properties": {
                      "type": "object",
                      "properties": {
                        "xxx_id": {
                          "type": "object",
                          "properties": {
                            "minLength": {
                              "type": "integer"
                            },
                            "maxLength": {
                              "type": "integer"
                            },
                            "type": {
                              "type": "string"
                            },
                            "examples": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "additionalProperties": {
                      "type": "boolean"
                    }
                  }
                },
                "operation_id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetJsonSchemaValidation",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/json-schema-validations",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv4.0.0-getBankLevelEndpointTags",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getBankLevelEndpointTags"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/management/banks/BANK_ID/endpoints/OPERATION_ID/tags",
      "summary": "Get Bank Level Endpoint Tags",
      "description": "<p>Get Bank Level Endpoint Tags.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#\">OPERATION_ID</a>: OBPv4.0.0-getBanks</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#\"><strong>endpoint_tag_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>operation_id</strong></a>: OBPv4.0.0-getBanks</p>\n<p><a href=\"/glossary#\"><strong>tag_name</strong></a>: BankAccountTag1</p>\n",
      "description_markdown": "Get Bank Level Endpoint Tags.\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[OPERATION_ID](/glossary#): OBPv4.0.0-getBanks\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**endpoint_tag_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**operation_id**](/glossary#): OBPv4.0.0-getBanks\n\n\n\n[**tag_name**](/glossary#): BankAccountTag1\n\n\n",
      "success_response_body": [
        {
          "bank_id": "gh.29.uk",
          "endpoint_tag_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
          "operation_id": "OBPv4.0.0-getBanks",
          "tag_name": "BankAccountTag1"
        }
      ],
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["API", "API", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "tl": {
            "type": "object",
            "properties": {}
          },
          "head": {
            "type": "object",
            "properties": {
              "operation_id": {
                "type": "string"
              },
              "tag_name": {
                "type": "string"
              },
              "bank_id": {
                "type": "string"
              },
              "endpoint_tag_id": {
                "type": "string"
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetBankLevelEndpointTag",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/banks/BANK_ID/endpoints/OPERATION_ID/tags",
      "connector_methods": ["obp.getBankLevelEndpointTags"]
    },
    {
      "operation_id": "OBPv4.0.0-getCoreAccountById",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getCoreAccountById"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/my/banks/BANK_ID/accounts/ACCOUNT_ID/account",
      "summary": "Get Account by Id (Core)",
      "description": "<p>Information returned about the account specified by ACCOUNT_ID:</p>\n<ul>\n<li>Number - The human readable account number given by the bank that identifies the account.</li>\n<li>Label - A label given by the owner of the account</li>\n<li>Owners - Users that own this account</li>\n<li>Type - The type of account</li>\n<li>Balance - Currency and Value</li>\n<li>Account Routings - A list that might include IBAN or national account identifiers</li>\n<li>Account Rules - A list that might include Overdraft and other bank specific rules</li>\n<li>Tags - A list of Tags assigned to this account</li>\n</ul>\n<p>This call returns the owner view and requires access to that view.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#account_routings\"><strong>account_routings</strong></a>:</p>\n<p><a href=\"/glossary#address\"><strong>address</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p>\n<p><a href=\"/glossary#balance\"><strong>balance</strong></a>: 10</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#\"><strong>label</strong></a>: My Account</p>\n<p><a href=\"/glossary#number\"><strong>number</strong></a>:</p>\n<p><a href=\"/glossary#product_code\"><strong>product_code</strong></a>: 1234BW</p>\n<p><a href=\"/glossary#scheme\"><strong>scheme</strong></a>: scheme value</p>\n<p><a href=\"/glossary#views_basic\"><strong>views_basic</strong></a>:</p>\n",
      "description_markdown": "Information returned about the account specified by ACCOUNT_ID:\n\n* Number - The human readable account number given by the bank that identifies the account.\n* Label - A label given by the owner of the account\n* Owners - Users that own this account\n* Type - The type of account\n* Balance - Currency and Value\n* Account Routings - A list that might include IBAN or national account identifiers\n* Account Rules - A list that might include Overdraft and other bank specific rules\n* Tags - A list of Tags assigned to this account\n\nThis call returns the owner view and requires access to that view.\n\n\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**account_routings**](/glossary#account_routings): \n\n\n\n[**address**](/glossary#address): \n\n\n\n[**amount**](/glossary#): 10.12\n\n\n\n[**balance**](/glossary#balance): 10\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**label**](/glossary#): My Account\n\n\n\n[**number**](/glossary#number): \n\n\n\n[**product_code**](/glossary#product_code): 1234BW\n\n\n\n[**scheme**](/glossary#scheme): scheme value\n\n\n\n[**views_basic**](/glossary#views_basic): \n\n\n",
      "success_response_body": {
        "id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0",
        "bank_id": "gh.29.uk",
        "label": "My Account",
        "number": "546387432",
        "product_code": "AC",
        "balance": {
          "currency": "EUR",
          "amount": "0"
        },
        "account_routings": [
          {
            "scheme": "AccountNumber",
            "address": "4930396"
          }
        ],
        "views_basic": ["owner"]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Account", "Account Information Service (AIS)", "PSD2", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "views_basic": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "bank_id": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "balance": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string"
              },
              "amount": {
                "type": "string"
              }
            }
          },
          "product_code": {
            "type": "string"
          },
          "account_routings": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "scheme": {
                  "type": "string"
                },
                "address": {
                  "type": "string"
                }
              }
            }
          },
          "id": {
            "type": "string"
          },
          "number": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/my/banks/BANK_ID/accounts/ACCOUNT_ID/account",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv4.0.0-createUserInvitation",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "createUserInvitation"
      },
      "request_verb": "POST",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/user-invitation",
      "summary": "Create User Invitation",
      "description": "<p>Create User Invitation.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>company</strong></a>: company</p>\n<p><a href=\"/glossary#\"><strong>country</strong></a>: country</p>\n<p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"m&#97;i&#108;t&#111;:&#x66;&#x65;&#108;i&#x78;&#115;&#x6d;&#x69;t&#x68;&#x40;&#101;&#x78;&#97;&#x6d;&#x70;&#x6c;&#x65;&#x2e;&#x63;&#111;m\">&#x66;e&#108;&#x69;&#x78;&#x73;&#109;&#105;th&#x40;&#x65;&#120;&#97;&#x6d;&#112;&#108;e&#x2e;&#99;&#111;&#x6d;</a></p>\n<p><a href=\"/glossary#first_name\"><strong>first_name</strong></a>:</p>\n<p><a href=\"/glossary#last_name\"><strong>last_name</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>purpose</strong></a>: purpose</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>company</strong></a>: company</p>\n<p><a href=\"/glossary#\"><strong>country</strong></a>: country</p>\n<p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"&#109;&#x61;&#x69;&#x6c;t&#111;&#58;&#x66;&#101;l&#x69;&#120;s&#109;&#x69;&#116;&#104;&#x40;&#x65;&#120;am&#x70;l&#x65;&#x2e;&#99;&#x6f;&#109;\">&#x66;e&#x6c;&#x69;&#120;s&#x6d;&#x69;&#116;&#x68;&#x40;&#101;&#120;&#x61;&#109;p&#x6c;e&#46;co&#x6d;</a></p>\n<p><a href=\"/glossary#first_name\"><strong>first_name</strong></a>:</p>\n<p><a href=\"/glossary#last_name\"><strong>last_name</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>purpose</strong></a>: purpose</p>\n<p><a href=\"/glossary#status\"><strong>status</strong></a>:</p>\n",
      "description_markdown": "Create User Invitation.\n\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON request body fields:**\n\n\n\n[**company**](/glossary#): company\n\n\n\n[**country**](/glossary#): country\n\n\n\n[**email**](/glossary#): felixsmith@example.com\n\n\n\n[**first_name**](/glossary#first_name): \n\n\n\n[**last_name**](/glossary#last_name): \n\n\n\n[**purpose**](/glossary#): purpose\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**company**](/glossary#): company\n\n\n\n[**country**](/glossary#): country\n\n\n\n[**email**](/glossary#): felixsmith@example.com\n\n\n\n[**first_name**](/glossary#first_name): \n\n\n\n[**last_name**](/glossary#last_name): \n\n\n\n[**purpose**](/glossary#): purpose\n\n\n\n[**status**](/glossary#status): \n\n\n",
      "example_request_body": {
        "first_name": "ACCOUNT_MANAGEMENT_FEE",
        "last_name": "ACCOUNT_MANAGEMENT_FEE",
        "email": "felixsmith@example.com",
        "company": "Tesobe",
        "country": "Germany",
        "purpose": "Developer"
      },
      "success_response_body": {
        "first_name": "ACCOUNT_MANAGEMENT_FEE",
        "last_name": "ACCOUNT_MANAGEMENT_FEE",
        "email": "felixsmith@example.com",
        "company": "TESOBE",
        "country": "Germany",
        "purpose": "Developer",
        "status": "CREATED"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30008: User Customer Link not found by USER_ID",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["User-Invitation", "KYC", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "company": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "purpose": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "company": {
            "type": "string"
          },
          "purpose": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateUserInvitation",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/user-invitation",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv1.2.1-getCommentsForViewOnTransaction",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "getCommentsForViewOnTransaction"
      },
      "request_verb": "GET",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transactions/TRANSACTION_ID/metadata/comments",
      "summary": "Get Transaction Comments",
      "description": "<p>Returns the transaction TRANSACTION_ID comments made on a <a href=\"#1_2_1-getViewsForBankAccount\">view</a> (VIEW_ID).</p>\n<p>Authentication via OAuth is required if the view is not public.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#transaction_ids\">TRANSACTION_ID</a>: 2fg8a7e4-6d02-40e3-a129-0b2bf89de8ub</p>\n<p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#comments\"><strong>comments</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#display_name\"><strong>display_name</strong></a>:</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p>\n<p><a href=\"/glossary#User\"><strong>user</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n",
      "description_markdown": "Returns the transaction TRANSACTION_ID comments made on a [view](#1_2_1-getViewsForBankAccount) (VIEW_ID).\n\nAuthentication via OAuth is required if the view is not public.\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[TRANSACTION_ID](/glossary#transaction_ids): 2fg8a7e4-6d02-40e3-a129-0b2bf89de8ub\n\n\n\n[VIEW_ID](/glossary#this_view_id): owner\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**comments**](/glossary#comments): \n\n\n\n[**date**](/glossary#): 2020-01-27\n\n\n\n[**display_name**](/glossary#display_name): \n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**provider**](/glossary#provider): ETHEREUM\n\n\n\n[**user**](/glossary#User): \n\n\n\n[**value**](/glossary#): 5987953\n\n\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "comments": [
          {
            "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
            "value": "OBP",
            "date": "1100-01-01T00:00:00Z",
            "user": {
              "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
              "provider": "http://127.0.0.1:8080",
              "display_name": "OBP"
            }
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-30022: The current view does not have the permission:",
        "OBP-30005: View not found for Account. Please specify a valid value for VIEW_ID",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Transaction-Metadata", "Transaction", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "comments": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                },
                "date": {
                  "type": "string",
                  "format": "date-time"
                },
                "user": {
                  "type": "object",
                  "properties": {
                    "provider": {
                      "type": "string"
                    },
                    "display_name": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transactions/TRANSACTION_ID/metadata/comments",
      "connector_methods": ["obp.checkBankAccountExists", "obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv4.0.0-getCustomerAttributes",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getCustomerAttributes"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/customers/CUSTOMER_ID/attributes",
      "summary": "Get Customer Attributes",
      "description": "<p>Get Customer Attributes</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#Customer.customer_id\">CUSTOMER_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>customer_attribute_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#customer_attributes\"><strong>customer_attributes</strong></a>:</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#type\"><strong>type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>value</strong></a>: 5987953</p>\n",
      "description_markdown": "Get Customer Attributes\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[CUSTOMER_ID](/glossary#Customer.customer_id): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**customer_attribute_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**customer_attributes**](/glossary#customer_attributes): \n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**type**](/glossary#type): \n\n\n\n[**value**](/glossary#): 5987953\n\n\n",
      "success_response_body": {
        "customer_attributes": [
          {
            "customer_attribute_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
            "name": "SPECIAL_TAX_NUMBER",
            "type": "STRING",
            "value": "123456789"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error.",
        "OBP-20006: User is missing one or more roles: "
      ],
      "tags": ["Customer", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "customer_attributes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "customer_attribute_id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetCustomerAttributesAtOneBank",
          "requires_bank_id": true
        },
        {
          "role": "CanGetCustomerAttributesAtAnyBank",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/customers/CUSTOMER_ID/attributes",
      "connector_methods": ["obp.getCustomerAttributes", "obp.getCustomerByCustomerId"]
    },
    {
      "operation_id": "OBPv1.2.1-deleteWhereTagForViewOnTransaction",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "deleteWhereTagForViewOnTransaction"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transactions/TRANSACTION_ID/metadata/where",
      "summary": "Delete a Transaction Tag",
      "description": "<p>Deletes the where tag of the transaction TRANSACTION_ID made on <a href=\"#1_2_1-getViewsForBankAccount\">view</a>.</p>\n<p>Authentication is Mandatory</p>\n<p>The user must either have owner privileges for this account, or must be the user that posted the geo tag.</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#transaction_ids\">TRANSACTION_ID</a>: 2fg8a7e4-6d02-40e3-a129-0b2bf89de8ub</p>\n<p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p>\n<p><strong>JSON response body fields:</strong></p>\n",
      "description_markdown": "Deletes the where tag of the transaction TRANSACTION_ID made on [view](#1_2_1-getViewsForBankAccount).\n\nAuthentication is Mandatory\n\nThe user must either have owner privileges for this account, or must be the user that posted the geo tag.\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[TRANSACTION_ID](/glossary#transaction_ids): 2fg8a7e4-6d02-40e3-a129-0b2bf89de8ub\n\n\n\n[VIEW_ID](/glossary#this_view_id): owner\n\n\n\n\n\n**JSON response body fields:**\n\n\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "jsonString": "{}"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-30022: The current view does not have the permission:",
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30005: View not found for Account. Please specify a valid value for VIEW_ID",
        "there is no tag to delete",
        "Delete not completed",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Transaction-Metadata", "Transaction", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transactions/TRANSACTION_ID/metadata/where",
      "connector_methods": ["obp.checkBankAccountExists", "obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv1.2.1-deleteCounterpartyPublicAlias",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "deleteCounterpartyPublicAlias"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/public_alias",
      "summary": "Delete Counterparty Public Alias",
      "description": "<p>Deletes the public alias of the other account OTHER_ACCOUNT_ID.</p>\n<p>Authentication is Optional<br />\nAuthentication is required if the view is not public.</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#other_account_id\">OTHER_ACCOUNT_ID</a>:</p>\n<p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p>\n<p><strong>JSON response body fields:</strong></p>\n",
      "description_markdown": "Deletes the public alias of the other account OTHER_ACCOUNT_ID.\n\nAuthentication is Optional\nAuthentication is required if the view is not public.\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[OTHER_ACCOUNT_ID](/glossary#other_account_id): \n\n\n\n[VIEW_ID](/glossary#this_view_id): owner\n\n\n\n\n\n**JSON response body fields:**\n\n\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "jsonString": "{}"
      },
      "error_response_bodies": [
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "the view does not allow metadata access",
        "the view does not allow deleting the public alias",
        "Alias cannot be deleted",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Counterparty-Metadata", "Counterparty", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/public_alias",
      "connector_methods": [
        "obp.checkBankAccountExists",
        "obp.getBank",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv4.0.0-deleteAccountCascade",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "deleteAccountCascade"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v4.0.0/management/cascading/banks/BANK_ID/accounts/ACCOUNT_ID",
      "summary": "Delete Account Cascade",
      "description": "<p>Delete an Account Cascade specified by ACCOUNT_ID.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON response body fields:</strong></p>\n",
      "description_markdown": "Delete an Account Cascade specified by ACCOUNT_ID.\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON response body fields:**\n\n\n",
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Account", "New-Style"],
      "roles": [
        {
          "role": "CanDeleteAccountCascade",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/cascading/banks/BANK_ID/accounts/ACCOUNT_ID",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv4.0.0-getDynamicEndpoints",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getDynamicEndpoints"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/management/dynamic-endpoints",
      "summary": " Get Dynamic Endpoints",
      "description": "<p>Get Dynamic Endpoints.</p>\n<p>Authentication is Mandatory</p>\n",
      "description_markdown": "Get Dynamic Endpoints.\n\n\n\nAuthentication is Mandatory",
      "success_response_body": {
        "dynamic_endpoints": [
          {
            "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
            "dynamic_endpoint_id": "dynamic-endpoint-id",
            "swagger_string": {
              "swagger": "2.0",
              "info": {
                "title": "Bank Accounts (Dynamic Endpoint)",
                "version": "1.0.0"
              },
              "definitions": {
                "AccountName": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "family account"
                    },
                    "balance": {
                      "type": "integer",
                      "format": "int64",
                      "example": 1000.123
                    }
                  }
                }
              },
              "paths": {
                "/accounts": {
                  "post": {
                    "operationId": "POST_account",
                    "produces": ["application/json"],
                    "responses": {
                      "201": {
                        "description": "Success Response",
                        "schema": {
                          "$ref": "#/definitions/AccountName"
                        }
                      }
                    },
                    "consumes": ["application/json"],
                    "description": "POST Accounts",
                    "summary": "POST Accounts"
                  }
                },
                "/accounts/{account_id}": {
                  "get": {
                    "operationId": "GET_account",
                    "produces": ["application/json"],
                    "responses": {
                      "200": {
                        "description": "Success Response",
                        "schema": {
                          "$ref": "#/definitions/AccountName"
                        }
                      }
                    },
                    "consumes": ["application/json"],
                    "description": "Get Bank Account",
                    "summary": "Get Bank Account by Id"
                  }
                }
              },
              "host": "obp_mock",
              "schemes": ["http", "https"]
            }
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Dynamic-Endpoint-Manage", "API", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "dynamic_endpoints": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "user_id": {
                  "type": "string"
                },
                "dynamic_endpoint_id": {
                  "type": "string"
                },
                "swagger_string": {
                  "type": "object",
                  "properties": {
                    "swagger": {
                      "type": "string"
                    },
                    "paths": {
                      "type": "object",
                      "properties": {
                        "/accounts": {
                          "type": "object",
                          "properties": {
                            "post": {
                              "type": "object",
                              "properties": {
                                "responses": {
                                  "type": "object",
                                  "properties": {
                                    "201": {
                                      "type": "object",
                                      "properties": {
                                        "description": {
                                          "type": "string"
                                        },
                                        "schema": {
                                          "type": "object",
                                          "properties": {
                                            "$ref": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "consumes": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "s": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "operationId": {
                                  "type": "string"
                                },
                                "summary": {
                                  "type": "string"
                                },
                                "description": {
                                  "type": "string"
                                },
                                "produces": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "s": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "/accounts/{account_id}": {
                          "type": "object",
                          "properties": {
                            "get": {
                              "type": "object",
                              "properties": {
                                "description": {
                                  "type": "string"
                                },
                                "consumes": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "s": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "operationId": {
                                  "type": "string"
                                },
                                "responses": {
                                  "type": "object",
                                  "properties": {
                                    "200": {
                                      "type": "object",
                                      "properties": {
                                        "description": {
                                          "type": "string"
                                        },
                                        "schema": {
                                          "type": "object",
                                          "properties": {
                                            "$ref": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "summary": {
                                  "type": "string"
                                },
                                "produces": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "s": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "info": {
                      "type": "object",
                      "properties": {
                        "title": {
                          "type": "string"
                        },
                        "version": {
                          "type": "string"
                        }
                      }
                    },
                    "definitions": {
                      "type": "object",
                      "properties": {
                        "AccountName": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string"
                            },
                            "properties": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string"
                                    },
                                    "example": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "balance": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string"
                                    },
                                    "format": {
                                      "type": "string"
                                    },
                                    "example": {
                                      "type": "number"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "schemes": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "s": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "host": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetDynamicEndpoints",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/dynamic-endpoints",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv3.0.0-getPermissionForUserForBankAccount",
      "implemented_by": {
        "version": "OBPv3.0.0",
        "function": "getPermissionForUserForBankAccount"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/permissions/PROVIDER/PROVIDER_ID",
      "summary": "Get Account access for User",
      "description": "<p>Returns the list of the views at BANK_ID for account ACCOUNT_ID that a user identified by PROVIDER_ID at their provider PROVIDER has access to.<br />\nAll url parameters must be <a href=\"http://en.wikipedia.org/wiki/Percent-encoding\">%-encoded</a>, which is often especially relevant for USER_ID and PROVIDER.</p>\n<p>Authentication is Mandatory</p>\n<p>The user needs to have access to the owner view.</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#provider\">PROVIDER</a>: ETHEREUM</p>\n<p><a href=\"/glossary#provider_id\">PROVIDER_ID</a>:</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#alias\"><strong>alias</strong></a>:</p>\n<p><a href=\"/glossary#can_add_comment\"><strong>can_add_comment</strong></a>:</p>\n<p><a href=\"/glossary#can_add_corporate_location\"><strong>can_add_corporate_location</strong></a>:</p>\n<p><a href=\"/glossary#can_add_counterparty\"><strong>can_add_counterparty</strong></a>: true</p>\n<p><a href=\"/glossary#can_add_image\"><strong>can_add_image</strong></a>:</p>\n<p><a href=\"/glossary#can_add_image_url\"><strong>can_add_image_url</strong></a>: true</p>\n<p><a href=\"/glossary#can_add_more_info\"><strong>can_add_more_info</strong></a>: true</p>\n<p><a href=\"/glossary#can_add_open_corporates_url\"><strong>can_add_open_corporates_url</strong></a>:</p>\n<p><a href=\"/glossary#can_add_physical_location\"><strong>can_add_physical_location</strong></a>:</p>\n<p><a href=\"/glossary#can_add_private_alias\"><strong>can_add_private_alias</strong></a>:</p>\n<p><a href=\"/glossary#can_add_public_alias\"><strong>can_add_public_alias</strong></a>:</p>\n<p><a href=\"/glossary#can_add_tag\"><strong>can_add_tag</strong></a>: true</p>\n<p><a href=\"/glossary#can_add_transaction_request_to_any_account\"><strong>can_add_transaction_request_to_any_account</strong></a>:</p>\n<p><a href=\"/glossary#can_add_transaction_request_to_own_account\"><strong>can_add_transaction_request_to_own_account</strong></a>:</p>\n<p><a href=\"/glossary#can_add_url\"><strong>can_add_url</strong></a>:</p>\n<p><a href=\"/glossary#can_add_where_tag\"><strong>can_add_where_tag</strong></a>:</p>\n<p><a href=\"/glossary#can_create_direct_debit\"><strong>can_create_direct_debit</strong></a>: true</p>\n<p><a href=\"/glossary#can_create_standing_order\"><strong>can_create_standing_order</strong></a>:</p>\n<p><a href=\"/glossary#can_delete_comment\"><strong>can_delete_comment</strong></a>:</p>\n<p><a href=\"/glossary#can_delete_corporate_location\"><strong>can_delete_corporate_location</strong></a>: true</p>\n<p><a href=\"/glossary#can_delete_image\"><strong>can_delete_image</strong></a>: true</p>\n<p><a href=\"/glossary#can_delete_physical_location\"><strong>can_delete_physical_location</strong></a>:</p>\n<p><a href=\"/glossary#can_delete_tag\"><strong>can_delete_tag</strong></a>:</p>\n<p><a href=\"/glossary#can_delete_where_tag\"><strong>can_delete_where_tag</strong></a>: true</p>\n<p><a href=\"/glossary#can_edit_owner_comment\"><strong>can_edit_owner_comment</strong></a>: true</p>\n<p><a href=\"/glossary#can_query_available_funds\"><strong>can_query_available_funds</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_balance\"><strong>can_see_bank_account_balance</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_bank_name\"><strong>can_see_bank_account_bank_name</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_credit_limit\"><strong>can_see_bank_account_credit_limit</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_currency\"><strong>can_see_bank_account_currency</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_iban\"><strong>can_see_bank_account_iban</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_label\"><strong>can_see_bank_account_label</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_national_identifier\"><strong>can_see_bank_account_national_identifier</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_number\"><strong>can_see_bank_account_number</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_owners\"><strong>can_see_bank_account_owners</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_account_routing_address\"><strong>can_see_bank_account_routing_address</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_routing_scheme\"><strong>can_see_bank_account_routing_scheme</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_swift_bic\"><strong>can_see_bank_account_swift_bic</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_account_type\"><strong>can_see_bank_account_type</strong></a>:</p>\n<p><a href=\"/glossary#can_see_bank_routing_address\"><strong>can_see_bank_routing_address</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_bank_routing_scheme\"><strong>can_see_bank_routing_scheme</strong></a>:</p>\n<p><a href=\"/glossary#can_see_comments\"><strong>can_see_comments</strong></a>:</p>\n<p><a href=\"/glossary#can_see_corporate_location\"><strong>can_see_corporate_location</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_image_url\"><strong>can_see_image_url</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_images\"><strong>can_see_images</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_more_info\"><strong>can_see_more_info</strong></a>:</p>\n<p><a href=\"/glossary#can_see_open_corporates_url\"><strong>can_see_open_corporates_url</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_bank_name\"><strong>can_see_other_account_bank_name</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_iban\"><strong>can_see_other_account_iban</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_kind\"><strong>can_see_other_account_kind</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_metadata\"><strong>can_see_other_account_metadata</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_national_identifier\"><strong>can_see_other_account_national_identifier</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_other_account_number\"><strong>can_see_other_account_number</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_other_account_routing_address\"><strong>can_see_other_account_routing_address</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_other_account_routing_scheme\"><strong>can_see_other_account_routing_scheme</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_account_swift_bic\"><strong>can_see_other_account_swift_bic</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_other_bank_routing_address\"><strong>can_see_other_bank_routing_address</strong></a>:</p>\n<p><a href=\"/glossary#can_see_other_bank_routing_scheme\"><strong>can_see_other_bank_routing_scheme</strong></a>:</p>\n<p><a href=\"/glossary#can_see_owner_comment\"><strong>can_see_owner_comment</strong></a>:</p>\n<p><a href=\"/glossary#can_see_physical_location\"><strong>can_see_physical_location</strong></a>:</p>\n<p><a href=\"/glossary#can_see_private_alias\"><strong>can_see_private_alias</strong></a>:</p>\n<p><a href=\"/glossary#can_see_public_alias\"><strong>can_see_public_alias</strong></a>:</p>\n<p><a href=\"/glossary#can_see_tags\"><strong>can_see_tags</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_amount\"><strong>can_see_transaction_amount</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_transaction_balance\"><strong>can_see_transaction_balance</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_currency\"><strong>can_see_transaction_currency</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_description\"><strong>can_see_transaction_description</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_transaction_finish_date\"><strong>can_see_transaction_finish_date</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_metadata\"><strong>can_see_transaction_metadata</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_other_bank_account\"><strong>can_see_transaction_other_bank_account</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_start_date\"><strong>can_see_transaction_start_date</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_this_bank_account\"><strong>can_see_transaction_this_bank_account</strong></a>:</p>\n<p><a href=\"/glossary#can_see_transaction_type\"><strong>can_see_transaction_type</strong></a>:</p>\n<p><a href=\"/glossary#can_see_url\"><strong>can_see_url</strong></a>: true</p>\n<p><a href=\"/glossary#can_see_where_tag\"><strong>can_see_where_tag</strong></a>: true</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#hide_metadata_if_alias_used\"><strong>hide_metadata_if_alias_used</strong></a>:</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#is_public\"><strong>is_public</strong></a>: true</p>\n<p><a href=\"/glossary#\"><strong>is_system</strong></a>: true</p>\n<p><a href=\"/glossary#metadata_view\"><strong>metadata_view</strong></a>:</p>\n<p><a href=\"/glossary#short_name\"><strong>short_name</strong></a>:</p>\n<p><a href=\"/glossary#views\"><strong>views</strong></a>:</p>\n<p><a href=\"/glossary#is_firehose\">is_firehose</a>:</p>\n",
      "description_markdown": "Returns the list of the views at BANK_ID for account ACCOUNT_ID that a user identified by PROVIDER_ID at their provider PROVIDER has access to.\nAll url parameters must be [%-encoded](http://en.wikipedia.org/wiki/Percent-encoding), which is often especially relevant for USER_ID and PROVIDER.\n\nAuthentication is Mandatory\n\nThe user needs to have access to the owner view.\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[PROVIDER](/glossary#provider): ETHEREUM\n\n\n\n[PROVIDER_ID](/glossary#provider_id): \n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**alias**](/glossary#alias): \n\n\n\n[**can_add_comment**](/glossary#can_add_comment): \n\n\n\n[**can_add_corporate_location**](/glossary#can_add_corporate_location): \n\n\n\n[**can_add_counterparty**](/glossary#can_add_counterparty): true\n\n\n\n[**can_add_image**](/glossary#can_add_image): \n\n\n\n[**can_add_image_url**](/glossary#can_add_image_url): true\n\n\n\n[**can_add_more_info**](/glossary#can_add_more_info): true\n\n\n\n[**can_add_open_corporates_url**](/glossary#can_add_open_corporates_url): \n\n\n\n[**can_add_physical_location**](/glossary#can_add_physical_location): \n\n\n\n[**can_add_private_alias**](/glossary#can_add_private_alias): \n\n\n\n[**can_add_public_alias**](/glossary#can_add_public_alias): \n\n\n\n[**can_add_tag**](/glossary#can_add_tag): true\n\n\n\n[**can_add_transaction_request_to_any_account**](/glossary#can_add_transaction_request_to_any_account): \n\n\n\n[**can_add_transaction_request_to_own_account**](/glossary#can_add_transaction_request_to_own_account): \n\n\n\n[**can_add_url**](/glossary#can_add_url): \n\n\n\n[**can_add_where_tag**](/glossary#can_add_where_tag): \n\n\n\n[**can_create_direct_debit**](/glossary#can_create_direct_debit): true\n\n\n\n[**can_create_standing_order**](/glossary#can_create_standing_order): \n\n\n\n[**can_delete_comment**](/glossary#can_delete_comment): \n\n\n\n[**can_delete_corporate_location**](/glossary#can_delete_corporate_location): true\n\n\n\n[**can_delete_image**](/glossary#can_delete_image): true\n\n\n\n[**can_delete_physical_location**](/glossary#can_delete_physical_location): \n\n\n\n[**can_delete_tag**](/glossary#can_delete_tag): \n\n\n\n[**can_delete_where_tag**](/glossary#can_delete_where_tag): true\n\n\n\n[**can_edit_owner_comment**](/glossary#can_edit_owner_comment): true\n\n\n\n[**can_query_available_funds**](/glossary#can_query_available_funds): true\n\n\n\n[**can_see_bank_account_balance**](/glossary#can_see_bank_account_balance): \n\n\n\n[**can_see_bank_account_bank_name**](/glossary#can_see_bank_account_bank_name): true\n\n\n\n[**can_see_bank_account_credit_limit**](/glossary#can_see_bank_account_credit_limit): true\n\n\n\n[**can_see_bank_account_currency**](/glossary#can_see_bank_account_currency): \n\n\n\n[**can_see_bank_account_iban**](/glossary#can_see_bank_account_iban): \n\n\n\n[**can_see_bank_account_label**](/glossary#can_see_bank_account_label): true\n\n\n\n[**can_see_bank_account_national_identifier**](/glossary#can_see_bank_account_national_identifier): \n\n\n\n[**can_see_bank_account_number**](/glossary#can_see_bank_account_number): true\n\n\n\n[**can_see_bank_account_owners**](/glossary#can_see_bank_account_owners): true\n\n\n\n[**can_see_bank_account_routing_address**](/glossary#can_see_bank_account_routing_address): \n\n\n\n[**can_see_bank_account_routing_scheme**](/glossary#can_see_bank_account_routing_scheme): \n\n\n\n[**can_see_bank_account_swift_bic**](/glossary#can_see_bank_account_swift_bic): \n\n\n\n[**can_see_bank_account_type**](/glossary#can_see_bank_account_type): \n\n\n\n[**can_see_bank_routing_address**](/glossary#can_see_bank_routing_address): true\n\n\n\n[**can_see_bank_routing_scheme**](/glossary#can_see_bank_routing_scheme): \n\n\n\n[**can_see_comments**](/glossary#can_see_comments): \n\n\n\n[**can_see_corporate_location**](/glossary#can_see_corporate_location): true\n\n\n\n[**can_see_image_url**](/glossary#can_see_image_url): true\n\n\n\n[**can_see_images**](/glossary#can_see_images): true\n\n\n\n[**can_see_more_info**](/glossary#can_see_more_info): \n\n\n\n[**can_see_open_corporates_url**](/glossary#can_see_open_corporates_url): \n\n\n\n[**can_see_other_account_bank_name**](/glossary#can_see_other_account_bank_name): \n\n\n\n[**can_see_other_account_iban**](/glossary#can_see_other_account_iban): \n\n\n\n[**can_see_other_account_kind**](/glossary#can_see_other_account_kind): \n\n\n\n[**can_see_other_account_metadata**](/glossary#can_see_other_account_metadata): \n\n\n\n[**can_see_other_account_national_identifier**](/glossary#can_see_other_account_national_identifier): true\n\n\n\n[**can_see_other_account_number**](/glossary#can_see_other_account_number): true\n\n\n\n[**can_see_other_account_routing_address**](/glossary#can_see_other_account_routing_address): true\n\n\n\n[**can_see_other_account_routing_scheme**](/glossary#can_see_other_account_routing_scheme): \n\n\n\n[**can_see_other_account_swift_bic**](/glossary#can_see_other_account_swift_bic): true\n\n\n\n[**can_see_other_bank_routing_address**](/glossary#can_see_other_bank_routing_address): \n\n\n\n[**can_see_other_bank_routing_scheme**](/glossary#can_see_other_bank_routing_scheme): \n\n\n\n[**can_see_owner_comment**](/glossary#can_see_owner_comment): \n\n\n\n[**can_see_physical_location**](/glossary#can_see_physical_location): \n\n\n\n[**can_see_private_alias**](/glossary#can_see_private_alias): \n\n\n\n[**can_see_public_alias**](/glossary#can_see_public_alias): \n\n\n\n[**can_see_tags**](/glossary#can_see_tags): \n\n\n\n[**can_see_transaction_amount**](/glossary#can_see_transaction_amount): true\n\n\n\n[**can_see_transaction_balance**](/glossary#can_see_transaction_balance): \n\n\n\n[**can_see_transaction_currency**](/glossary#can_see_transaction_currency): \n\n\n\n[**can_see_transaction_description**](/glossary#can_see_transaction_description): true\n\n\n\n[**can_see_transaction_finish_date**](/glossary#can_see_transaction_finish_date): \n\n\n\n[**can_see_transaction_metadata**](/glossary#can_see_transaction_metadata): \n\n\n\n[**can_see_transaction_other_bank_account**](/glossary#can_see_transaction_other_bank_account): \n\n\n\n[**can_see_transaction_start_date**](/glossary#can_see_transaction_start_date): \n\n\n\n[**can_see_transaction_this_bank_account**](/glossary#can_see_transaction_this_bank_account): \n\n\n\n[**can_see_transaction_type**](/glossary#can_see_transaction_type): \n\n\n\n[**can_see_url**](/glossary#can_see_url): true\n\n\n\n[**can_see_where_tag**](/glossary#can_see_where_tag): true\n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**hide_metadata_if_alias_used**](/glossary#hide_metadata_if_alias_used): \n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**is_public**](/glossary#is_public): true\n\n\n\n[**is_system**](/glossary#): true\n\n\n\n[**metadata_view**](/glossary#metadata_view): \n\n\n\n[**short_name**](/glossary#short_name): \n\n\n\n[**views**](/glossary#views): \n\n\n\n[is_firehose](/glossary#is_firehose): \n\n\n",
      "success_response_body": {
        "views": [
          {
            "id": "1234",
            "short_name": "short_name",
            "description": "description",
            "metadata_view": "owner",
            "is_public": true,
            "is_system": true,
            "alias": "No",
            "hide_metadata_if_alias_used": true,
            "can_add_comment": true,
            "can_add_corporate_location": true,
            "can_add_image": true,
            "can_add_image_url": true,
            "can_add_more_info": true,
            "can_add_open_corporates_url": true,
            "can_add_physical_location": true,
            "can_add_private_alias": true,
            "can_add_public_alias": true,
            "can_add_tag": true,
            "can_add_url": true,
            "can_add_where_tag": true,
            "can_delete_comment": true,
            "can_add_counterparty": true,
            "can_delete_corporate_location": true,
            "can_delete_image": true,
            "can_delete_physical_location": true,
            "can_delete_tag": true,
            "can_delete_where_tag": true,
            "can_edit_owner_comment": true,
            "can_see_bank_account_balance": true,
            "can_query_available_funds": true,
            "can_see_bank_account_bank_name": true,
            "can_see_bank_account_currency": true,
            "can_see_bank_account_iban": true,
            "can_see_bank_account_label": true,
            "can_see_bank_account_national_identifier": true,
            "can_see_bank_account_number": true,
            "can_see_bank_account_owners": true,
            "can_see_bank_account_swift_bic": true,
            "can_see_bank_account_type": true,
            "can_see_comments": true,
            "can_see_corporate_location": true,
            "can_see_image_url": true,
            "can_see_images": true,
            "can_see_more_info": true,
            "can_see_open_corporates_url": true,
            "can_see_other_account_bank_name": true,
            "can_see_other_account_iban": true,
            "can_see_other_account_kind": true,
            "can_see_other_account_metadata": true,
            "can_see_other_account_national_identifier": true,
            "can_see_other_account_number": true,
            "can_see_other_account_swift_bic": true,
            "can_see_owner_comment": true,
            "can_see_physical_location": true,
            "can_see_private_alias": true,
            "can_see_public_alias": true,
            "can_see_tags": true,
            "can_see_transaction_amount": true,
            "can_see_transaction_balance": true,
            "can_see_transaction_currency": true,
            "can_see_transaction_description": true,
            "can_see_transaction_finish_date": true,
            "can_see_transaction_metadata": true,
            "can_see_transaction_other_bank_account": true,
            "can_see_transaction_start_date": true,
            "can_see_transaction_this_bank_account": true,
            "can_see_transaction_type": true,
            "can_see_url": true,
            "can_see_where_tag": true,
            "can_see_bank_routing_scheme": true,
            "can_see_bank_routing_address": true,
            "can_see_bank_account_routing_scheme": true,
            "can_see_bank_account_routing_address": true,
            "can_see_other_bank_routing_scheme": true,
            "can_see_other_bank_routing_address": true,
            "can_see_other_account_routing_scheme": true,
            "can_see_other_account_routing_address": true,
            "can_add_transaction_request_to_own_account": true,
            "can_add_transaction_request_to_any_account": true,
            "can_see_bank_account_credit_limit": true,
            "can_create_direct_debit": true,
            "can_create_standing_order": true
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30003: Account not found. Please specify a valid value for ACCOUNT_ID.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["View-Custom", "Account", "User", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "views": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "can_see_other_account_swift_bic": {
                  "type": "boolean"
                },
                "can_see_where_tag": {
                  "type": "boolean"
                },
                "can_see_url": {
                  "type": "boolean"
                },
                "can_create_direct_debit": {
                  "type": "boolean"
                },
                "can_see_bank_account_swift_bic": {
                  "type": "boolean"
                },
                "can_see_bank_account_routing_address": {
                  "type": "boolean"
                },
                "can_see_tags": {
                  "type": "boolean"
                },
                "can_see_transaction_balance": {
                  "type": "boolean"
                },
                "can_delete_corporate_location": {
                  "type": "boolean"
                },
                "can_add_image_url": {
                  "type": "boolean"
                },
                "can_see_public_alias": {
                  "type": "boolean"
                },
                "can_add_transaction_request_to_own_account": {
                  "type": "boolean"
                },
                "can_add_comment": {
                  "type": "boolean"
                },
                "can_see_other_bank_routing_scheme": {
                  "type": "boolean"
                },
                "description": {
                  "type": "string"
                },
                "can_see_corporate_location": {
                  "type": "boolean"
                },
                "can_see_other_account_bank_name": {
                  "type": "boolean"
                },
                "can_see_more_info": {
                  "type": "boolean"
                },
                "can_add_counterparty": {
                  "type": "boolean"
                },
                "is_system": {
                  "type": "boolean"
                },
                "can_see_physical_location": {
                  "type": "boolean"
                },
                "can_query_available_funds": {
                  "type": "boolean"
                },
                "can_edit_owner_comment": {
                  "type": "boolean"
                },
                "can_see_private_alias": {
                  "type": "boolean"
                },
                "can_see_bank_account_credit_limit": {
                  "type": "boolean"
                },
                "can_see_other_account_routing_address": {
                  "type": "boolean"
                },
                "can_see_bank_account_balance": {
                  "type": "boolean"
                },
                "can_add_public_alias": {
                  "type": "boolean"
                },
                "can_see_bank_routing_scheme": {
                  "type": "boolean"
                },
                "can_see_bank_account_owners": {
                  "type": "boolean"
                },
                "can_see_other_account_metadata": {
                  "type": "boolean"
                },
                "can_delete_physical_location": {
                  "type": "boolean"
                },
                "hide_metadata_if_alias_used": {
                  "type": "boolean"
                },
                "can_see_transaction_this_bank_account": {
                  "type": "boolean"
                },
                "can_see_image_url": {
                  "type": "boolean"
                },
                "can_see_transaction_type": {
                  "type": "boolean"
                },
                "can_see_images": {
                  "type": "boolean"
                },
                "can_see_transaction_amount": {
                  "type": "boolean"
                },
                "metadata_view": {
                  "type": "string"
                },
                "can_see_transaction_metadata": {
                  "type": "boolean"
                },
                "can_see_comments": {
                  "type": "boolean"
                },
                "can_see_other_account_iban": {
                  "type": "boolean"
                },
                "can_add_image": {
                  "type": "boolean"
                },
                "can_see_bank_account_routing_scheme": {
                  "type": "boolean"
                },
                "can_see_bank_account_type": {
                  "type": "boolean"
                },
                "can_see_other_account_kind": {
                  "type": "boolean"
                },
                "can_see_bank_account_currency": {
                  "type": "boolean"
                },
                "can_add_where_tag": {
                  "type": "boolean"
                },
                "can_see_transaction_start_date": {
                  "type": "boolean"
                },
                "can_see_bank_account_label": {
                  "type": "boolean"
                },
                "can_add_private_alias": {
                  "type": "boolean"
                },
                "can_see_transaction_currency": {
                  "type": "boolean"
                },
                "can_add_more_info": {
                  "type": "boolean"
                },
                "can_delete_comment": {
                  "type": "boolean"
                },
                "can_create_standing_order": {
                  "type": "boolean"
                },
                "can_see_other_bank_routing_address": {
                  "type": "boolean"
                },
                "can_see_transaction_other_bank_account": {
                  "type": "boolean"
                },
                "can_see_bank_account_number": {
                  "type": "boolean"
                },
                "can_add_corporate_location": {
                  "type": "boolean"
                },
                "alias": {
                  "type": "string"
                },
                "can_add_url": {
                  "type": "boolean"
                },
                "short_name": {
                  "type": "string"
                },
                "can_delete_where_tag": {
                  "type": "boolean"
                },
                "is_public": {
                  "type": "boolean"
                },
                "can_see_owner_comment": {
                  "type": "boolean"
                },
                "can_see_transaction_finish_date": {
                  "type": "boolean"
                },
                "can_see_open_corporates_url": {
                  "type": "boolean"
                },
                "can_add_physical_location": {
                  "type": "boolean"
                },
                "can_see_bank_account_iban": {
                  "type": "boolean"
                },
                "can_see_other_account_national_identifier": {
                  "type": "boolean"
                },
                "can_see_bank_routing_address": {
                  "type": "boolean"
                },
                "can_delete_image": {
                  "type": "boolean"
                },
                "can_add_transaction_request_to_any_account": {
                  "type": "boolean"
                },
                "can_add_tag": {
                  "type": "boolean"
                },
                "id": {
                  "type": "string"
                },
                "can_see_other_account_routing_scheme": {
                  "type": "boolean"
                },
                "can_add_open_corporates_url": {
                  "type": "boolean"
                },
                "can_delete_tag": {
                  "type": "boolean"
                },
                "can_see_transaction_description": {
                  "type": "boolean"
                },
                "can_see_bank_account_national_identifier": {
                  "type": "boolean"
                },
                "can_see_other_account_number": {
                  "type": "boolean"
                },
                "can_see_bank_account_bank_name": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/permissions/PROVIDER/PROVIDER_ID",
      "connector_methods": [
        "obp.checkBankAccountExists",
        "obp.getBank",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv4.0.0-getAllEndpointMappings",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getAllEndpointMappings"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/management/endpoint-mappings",
      "summary": "Get all Endpoint Mappings",
      "description": "<p>Get all Endpoint Mappings.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n",
      "description_markdown": "Get all Endpoint Mappings.\n\n\n\nAuthentication is Mandatory\n\n\n**JSON response body fields:**\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n",
      "success_response_body": {
        "endpoint-mappings": [
          {
            "operation_id": "OBPv4.0.0-dynamicEndpoint_POST_account",
            "request_mapping": {},
            "response_mapping": {
              "name": {
                "entity": "FooBar",
                "field": "name",
                "query": "number"
              },
              "balance": {
                "entity": "FashionBrand",
                "field": "number",
                "query": "number"
              }
            },
            "endpoint_mapping_id": "b4e0352a-9a0f-4bfa-b30b-9003aa467f50"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Endpoint-Mapping", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "endpoint-mappings": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "operation_id": {
                  "type": "string"
                },
                "request_mapping": {
                  "type": "object",
                  "properties": {}
                },
                "response_mapping": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "object",
                      "properties": {
                        "entity": {
                          "type": "string"
                        },
                        "field": {
                          "type": "string"
                        },
                        "query": {
                          "type": "string"
                        }
                      }
                    },
                    "balance": {
                      "type": "object",
                      "properties": {
                        "entity": {
                          "type": "string"
                        },
                        "field": {
                          "type": "string"
                        },
                        "query": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "endpoint_mapping_id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetAllEndpointMappings",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/endpoint-mappings",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv2.1.0-updateConsumerRedirectUrl",
      "implemented_by": {
        "version": "OBPv2.1.0",
        "function": "updateConsumerRedirectUrl"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v2.1.0/management/consumers/CONSUMER_ID/consumer/redirect_url",
      "summary": "Update Consumer RedirectUrl",
      "description": "<p>Update an existing redirectUrl for a Consumer specified by CONSUMER_ID.</p>\n<p>CONSUMER_ID can be obtained after you register the application.</p>\n<p>Or use the endpoint 'Get Consumers' to get it</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#\">CONSUMER_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#app_name\"><strong>app_name</strong></a>:</p>\n<p><a href=\"/glossary#app_type\"><strong>app_type</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>consumer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#created\"><strong>created</strong></a>:</p>\n<p><a href=\"/glossary#created_by_user\"><strong>created_by_user</strong></a>:</p>\n<p><a href=\"/glossary#created_by_user_id\"><strong>created_by_user_id</strong></a>:</p>\n<p><a href=\"/glossary#description\"><strong>description</strong></a>: This an optional field. Maximum length is 2000. It can be any characters here.</p>\n<p><a href=\"/glossary#developer_email\"><strong>developer_email</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"m&#x61;&#105;&#x6c;&#116;&#x6f;&#x3a;&#x66;&#101;&#108;&#x69;&#x78;&#x73;&#109;&#x69;&#116;&#x68;&#64;&#x65;&#120;&#97;&#109;&#x70;&#x6c;&#101;&#46;c&#111;&#x6d;\">&#x66;&#101;&#x6c;&#105;&#x78;&#115;&#x6d;&#105;&#x74;&#x68;&#x40;&#101;x&#97;&#109;&#112;&#x6c;&#x65;&#x2e;&#x63;&#111;&#109;</a></p>\n<p><a href=\"/glossary#enabled\"><strong>enabled</strong></a>: true</p>\n<p><a href=\"/glossary#provider\"><strong>provider</strong></a>: ETHEREUM</p>\n<p><a href=\"/glossary#provider_id\"><strong>provider_id</strong></a>:</p>\n<p><a href=\"/glossary#redirect_url\"><strong>redirect_url</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>user_id</strong></a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p>\n<p><a href=\"/glossary#\"><strong>username</strong></a>: felixsmith</p>\n",
      "description_markdown": "Update an existing redirectUrl for a Consumer specified by CONSUMER_ID.\n\n CONSUMER_ID can be obtained after you register the application. \n \n Or use the endpoint 'Get Consumers' to get it  \n \n       \n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[CONSUMER_ID](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**app_name**](/glossary#app_name): \n\n\n\n[**app_type**](/glossary#app_type): \n\n\n\n[**consumer_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**created**](/glossary#created): \n\n\n\n[**created_by_user**](/glossary#created_by_user): \n\n\n\n[**created_by_user_id**](/glossary#created_by_user_id): \n\n\n\n[**description**](/glossary#description): This an optional field. Maximum length is 2000. It can be any characters here.\n\n\n\n[**developer_email**](/glossary#developer_email): \n\n\n\n[**email**](/glossary#): felixsmith@example.com\n\n\n\n[**enabled**](/glossary#enabled): true\n\n\n\n[**provider**](/glossary#provider): ETHEREUM\n\n\n\n[**provider_id**](/glossary#provider_id): \n\n\n\n[**redirect_url**](/glossary#redirect_url): \n\n\n\n[**user_id**](/glossary#): 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\n\n\n\n[**username**](/glossary#): felixsmith\n\n\n",
      "example_request_body": {
        "redirect_url": "http://localhost:8888"
      },
      "success_response_body": {
        "consumer_id": 1213,
        "app_name": "SOFI",
        "app_type": "Web",
        "description": "Account Management",
        "developer_email": "felixsmith@example.com",
        "redirect_url": "www.openbankproject.com",
        "created_by_user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
        "created_by_user": {
          "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
          "email": "felixsmith@example.com",
          "provider_id": "Chris",
          "provider": "http://127.0.0.1:8080",
          "username": "felixsmith"
        },
        "enabled": true,
        "created": "1100-01-01T00:00:00Z"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Consumer"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "redirect_url": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "app_name": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "created_by_user_id": {
            "type": "string"
          },
          "created_by_user": {
            "type": "object",
            "properties": {
              "provider": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "provider_id": {
                "type": "string"
              },
              "username": {
                "type": "string"
              },
              "user_id": {
                "type": "string"
              }
            }
          },
          "description": {
            "type": "string"
          },
          "developer_email": {
            "type": "string"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "consumer_id": {
            "type": "integer"
          },
          "redirect_url": {
            "type": "string"
          },
          "app_type": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanUpdateConsumerRedirectUrl",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/management/consumers/CONSUMER_ID/consumer/redirect_url",
      "connector_methods": []
    },
    {
      "operation_id": "OBPv3.1.0-updateCustomerNumber",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "updateCustomerNumber"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/customers/CUSTOMER_ID/number",
      "summary": "Update the number of a Customer",
      "description": "<p>Update the number of the Customer specified by CUSTOMER_ID.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#Customer.customer_id\">CUSTOMER_ID</a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#\"><strong>amount</strong></a>: 10.12</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#\"><strong>branch_id</strong></a>: DERBY6</p>\n<p><a href=\"/glossary#\"><strong>currency</strong></a>: EUR</p>\n<p><a href=\"/glossary#\"><strong>customer_id</strong></a>: 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh</p>\n<p><a href=\"/glossary#\"><strong>customer_number</strong></a>: 5987953</p>\n<p><a href=\"/glossary#\"><strong>date</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#\"><strong>date_of_birth</strong></a>: 2018-03-09</p>\n<p><a href=\"/glossary#\"><strong>dependants</strong></a>: 1</p>\n<p><a href=\"/glossary#dob_of_dependants\"><strong>dob_of_dependants</strong></a>: [2019-09-08, 2017-07-12]</p>\n<p><a href=\"/glossary#\"><strong>email</strong></a>: <a href=\"m&#97;&#x69;&#x6c;&#116;&#111;:&#102;&#x65;&#108;&#105;&#120;&#115;&#109;&#105;&#x74;&#104;@&#101;&#x78;&#97;&#109;&#112;l&#x65;.&#99;&#x6f;&#x6d;\">&#102;&#x65;&#x6c;&#x69;&#x78;&#115;&#x6d;&#105;&#x74;&#x68;@&#x65;&#120;&#x61;m&#x70;&#x6c;e&#46;&#x63;&#111;&#x6d;</a></p>\n<p><a href=\"/glossary#\"><strong>employment_status</strong></a>: worker</p>\n<p><a href=\"/glossary#face_image\"><strong>face_image</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>highest_education_attained</strong></a>: Master</p>\n<p><a href=\"/glossary#\"><strong>kyc_status</strong></a>: true</p>\n<p><a href=\"/glossary#last_ok_date\"><strong>last_ok_date</strong></a>: 2022-04-13T04:30:07.985Z</p>\n<p><a href=\"/glossary#\"><strong>legal_name</strong></a>: Eveline Tripman</p>\n<p><a href=\"/glossary#mobile_phone_number\"><strong>mobile_phone_number</strong></a>: +49 30 901820</p>\n<p><a href=\"/glossary#\"><strong>name_suffix</strong></a>: Sr</p>\n<p><a href=\"/glossary#\"><strong>rating</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>relationship_status</strong></a>: single</p>\n<p><a href=\"/glossary#\"><strong>source</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>title</strong></a>: Dr.</p>\n<p><a href=\"/glossary#\"><strong>url</strong></a>: <a href=\"http://www.example.com/id-docs/123/image.png\">http://www.example.com/id-docs/123/image.png</a></p>\n<p><a href=\"/glossary#credit_limit\">credit_limit</a>:</p>\n<p><a href=\"/glossary#credit_rating\">credit_rating</a>:</p>\n",
      "description_markdown": "Update the number of the Customer specified by CUSTOMER_ID.\n\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[CUSTOMER_ID](/glossary#Customer.customer_id): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**amount**](/glossary#): 10.12\n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**branch_id**](/glossary#): DERBY6\n\n\n\n[**currency**](/glossary#): EUR\n\n\n\n[**customer_id**](/glossary#): 7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh\n\n\n\n[**customer_number**](/glossary#): 5987953\n\n\n\n[**date**](/glossary#): 2020-01-27\n\n\n\n[**date_of_birth**](/glossary#): 2018-03-09\n\n\n\n[**dependants**](/glossary#): 1\n\n\n\n[**dob_of_dependants**](/glossary#dob_of_dependants): [2019-09-08, 2017-07-12]\n\n\n\n[**email**](/glossary#): felixsmith@example.com\n\n\n\n[**employment_status**](/glossary#): worker\n\n\n\n[**face_image**](/glossary#face_image): \n\n\n\n[**highest_education_attained**](/glossary#): Master\n\n\n\n[**kyc_status**](/glossary#): true\n\n\n\n[**last_ok_date**](/glossary#last_ok_date): 2022-04-13T04:30:07.985Z\n\n\n\n[**legal_name**](/glossary#): Eveline Tripman\n\n\n\n[**mobile_phone_number**](/glossary#mobile_phone_number): +49 30 901820\n\n\n\n[**name_suffix**](/glossary#): Sr\n\n\n\n[**rating**](/glossary#): \n\n\n\n[**relationship_status**](/glossary#): single\n\n\n\n[**source**](/glossary#): \n\n\n\n[**title**](/glossary#): Dr.\n\n\n\n[**url**](/glossary#): http://www.example.com/id-docs/123/image.png\n\n\n\n[credit_limit](/glossary#credit_limit): \n\n\n\n[credit_rating](/glossary#credit_rating): \n\n\n",
      "example_request_body": {
        "customer_number": "5987953"
      },
      "success_response_body": {
        "bank_id": "gh.29.uk",
        "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "customer_number": "5987953",
        "legal_name": "Eveline Tripman",
        "mobile_phone_number": "+44 07972 444 876",
        "email": "felixsmith@example.com",
        "face_image": {
          "url": "www.openbankproject",
          "date": "1100-01-01T00:00:00Z"
        },
        "date_of_birth": "1100-01-01T00:00:00Z",
        "relationship_status": "single",
        "dependants": 1,
        "dob_of_dependants": ["1100-01-01T00:00:00Z"],
        "credit_rating": {
          "rating": "OBP",
          "source": "OBP"
        },
        "credit_limit": {
          "currency": "EUR",
          "amount": "0"
        },
        "highest_education_attained": "Master",
        "employment_status": "worker",
        "kyc_status": true,
        "last_ok_date": "2022-04-13T04:30:08Z",
        "title": "Dr.",
        "branch_id": "DERBY6",
        "name_suffix": "Sr"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Customer", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "customer_number": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "dependants": {
            "type": "integer"
          },
          "dob_of_dependants": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            }
          },
          "face_image": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string"
              },
              "date": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          "credit_limit": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string"
              },
              "amount": {
                "type": "string"
              }
            }
          },
          "employment_status": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "customer_id": {
            "type": "string"
          },
          "relationship_status": {
            "type": "string"
          },
          "bank_id": {
            "type": "string"
          },
          "highest_education_attained": {
            "type": "string"
          },
          "customer_number": {
            "type": "string"
          },
          "credit_rating": {
            "type": "object",
            "properties": {
              "rating": {
                "type": "string"
              },
              "source": {
                "type": "string"
              }
            }
          },
          "name_suffix": {
            "type": "string"
          },
          "last_ok_date": {
            "type": "string",
            "format": "date-time"
          },
          "legal_name": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "branch_id": {
            "type": "string"
          },
          "date_of_birth": {
            "type": "string",
            "format": "date-time"
          },
          "mobile_phone_number": {
            "type": "string"
          },
          "kyc_status": {
            "type": "boolean"
          }
        }
      },
      "roles": [
        {
          "role": "CanUpdateCustomerNumber",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/customers/CUSTOMER_ID/number",
      "connector_methods": [
        "obp.updateCustomerScaData",
        "obp.checkCustomerNumberAvailable",
        "obp.getCustomerByCustomerId",
        "obp.getBank",
        "obp.getBankAccountsForUser"
      ]
    },
    {
      "operation_id": "OBPv2.0.0-publicAccountsAtOneBank",
      "implemented_by": {
        "version": "OBPv2.0.0",
        "function": "publicAccountsAtOneBank"
      },
      "request_verb": "GET",
      "request_url": "/obp/v2.0.0/banks/BANK_ID/accounts/public",
      "summary": "Get Public Accounts at Bank",
      "description": "<p>Returns a list of the public accounts (Anonymous access) at BANK_ID. For each account the API returns the ID and the available views.</p>\n<p>Authentication is Optional</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#accounts\"><strong>accounts</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#is_public\"><strong>is_public</strong></a>: true</p>\n<p><a href=\"/glossary#\"><strong>label</strong></a>: My Account</p>\n<p><a href=\"/glossary#short_name\"><strong>short_name</strong></a>:</p>\n<p><a href=\"/glossary#views_available\"><strong>views_available</strong></a>:</p>\n",
      "description_markdown": "Returns a list of the public accounts (Anonymous access) at BANK_ID. For each account the API returns the ID and the available views.\n\nAuthentication is Optional\n\n\n**URL Parameters:**\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**accounts**](/glossary#accounts): \n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**is_public**](/glossary#is_public): true\n\n\n\n[**label**](/glossary#): My Account\n\n\n\n[**short_name**](/glossary#short_name): \n\n\n\n[**views_available**](/glossary#views_available): \n\n\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "accounts": [
          {
            "id": "8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0",
            "label": "NoneLabel",
            "bank_id": "gh.29.uk",
            "views_available": [
              {
                "id": "1",
                "short_name": "HHH",
                "is_public": true
              }
            ]
          }
        ]
      },
      "error_response_bodies": ["OBP-50000: Unknown Error."],
      "tags": ["Account-Public", "Account", "PublicData", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "accounts": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "label": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "bank_id": {
                  "type": "string"
                },
                "views_available": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "short_name": {
                        "type": "string"
                      },
                      "id": {
                        "type": "string"
                      },
                      "is_public": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/public",
      "connector_methods": ["obp.getBank", "obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv1.2.1-updateCounterpartyCorporateLocation",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "updateCounterpartyCorporateLocation"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/metadata/corporate_location",
      "summary": "Update Counterparty Corporate Location",
      "description": "<p>Update the geolocation of the counterparty's registered address</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#other_account_id\">OTHER_ACCOUNT_ID</a>:</p>\n<p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#success\"><strong>success</strong></a>:</p>\n",
      "description_markdown": "Update the geolocation of the counterparty's registered address\n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[OTHER_ACCOUNT_ID](/glossary#other_account_id): \n\n\n\n[VIEW_ID](/glossary#this_view_id): owner\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**success**](/glossary#success): \n\n\n",
      "example_request_body": {
        "corporate_location": {
          "latitude": 1.532,
          "longitude": 1.535
        }
      },
      "success_response_body": {
        "success": "Success"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-10001: Incorrect json format.",
        "the view does not allow metadata access",
        "the view does not allow updating a corporate location",
        "Coordinates not possible",
        "Corporate Location cannot be updated",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Counterparty-Metadata", "Counterparty"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "corporate_location": {
            "type": "object",
            "properties": {
              "longitude": {
                "type": "number"
              },
              "latitude": {
                "type": "number"
              }
            }
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "success": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/metadata/corporate_location",
      "connector_methods": [
        "obp.getCounterpartyByCounterpartyIdLegacy",
        "obp.getCounterpartyFromTransaction",
        "obp.getBankAccountOld"
      ]
    },
    {
      "operation_id": "OBPv1.2.1-addTransactionNarrative",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "addTransactionNarrative"
      },
      "request_verb": "POST",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transactions/TRANSACTION_ID/metadata/narrative",
      "summary": "Add a Transaction Narrative",
      "description": "<p>Creates a description of the transaction TRANSACTION_ID.</p>\n<p>Note: Unlike other items of metadata, there is only one &quot;narrative&quot; per transaction accross all views.<br />\nIf you set narrative via a view e.g. view-x it will be seen via view-y (as long as view-y has permission to see the narrative).</p>\n<p>Authentication is Optional<br />\nAuthentication is required if the view is not public.</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#Account.account_id\">ACCOUNT_ID</a>: 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><a href=\"/glossary#transaction_ids\">TRANSACTION_ID</a>: 2fg8a7e4-6d02-40e3-a129-0b2bf89de8ub</p>\n<p><a href=\"/glossary#this_view_id\">VIEW_ID</a>: owner</p>\n<p><strong>JSON request body fields:</strong></p>\n<p><a href=\"/glossary#narrative\"><strong>narrative</strong></a>:</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#success\"><strong>success</strong></a>:</p>\n",
      "description_markdown": "Creates a description of the transaction TRANSACTION_ID.\n\nNote: Unlike other items of metadata, there is only one \"narrative\" per transaction accross all views.\nIf you set narrative via a view e.g. view-x it will be seen via view-y (as long as view-y has permission to see the narrative).\n\nAuthentication is Optional\nAuthentication is required if the view is not public.\n\n\n**URL Parameters:**\n\n[ACCOUNT_ID](/glossary#Account.account_id): 8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n[TRANSACTION_ID](/glossary#transaction_ids): 2fg8a7e4-6d02-40e3-a129-0b2bf89de8ub\n\n\n\n[VIEW_ID](/glossary#this_view_id): owner\n\n\n\n\n\n**JSON request body fields:**\n\n\n\n[**narrative**](/glossary#narrative): \n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**success**](/glossary#success): \n\n\n",
      "example_request_body": {
        "narrative": "narative"
      },
      "success_response_body": {
        "success": "Success"
      },
      "error_response_bodies": [
        "OBP-10001: Incorrect json format.",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-30022: The current view does not have the permission:",
        "OBP-30005: View not found for Account. Please specify a valid value for VIEW_ID",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Transaction-Metadata", "Transaction", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "narrative": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "success": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transactions/TRANSACTION_ID/metadata/narrative",
      "connector_methods": ["obp.checkBankAccountExists", "obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv2.0.0-deleteEntitlement",
      "implemented_by": {
        "version": "OBPv2.0.0",
        "function": "deleteEntitlement"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v2.0.0/users/USER_ID/entitlement/ENTITLEMENT_ID",
      "summary": "Delete Entitlement",
      "description": "<p>Delete Entitlement specified by ENTITLEMENT_ID for an user specified by USER_ID</p>\n<p>Authentication is required and the user needs to be a Super Admin.<br />\nSuper Admins are listed in the Props file.</p>\n<p>Authentication is Mandatory</p>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#entitlement_id\">ENTITLEMENT_ID</a>:</p>\n<p><a href=\"/glossary#User.user_id\">USER_ID</a>: 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1</p>\n<p><strong>JSON response body fields:</strong></p>\n",
      "description_markdown": "Delete Entitlement specified by ENTITLEMENT_ID for an user specified by USER_ID\n\nAuthentication is required and the user needs to be a Super Admin.\nSuper Admins are listed in the Props file.\n\n\n      \n\nAuthentication is Mandatory\n\n\n**URL Parameters:**\n\n[ENTITLEMENT_ID](/glossary#entitlement_id): \n\n\n\n[USER_ID](/glossary#User.user_id): 9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1\n\n\n\n\n\n**JSON response body fields:**\n\n\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "jsonString": "{}"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30212: EntitlementId not found",
        "OBP-50000: Unknown Error."
      ],
      "tags": ["Role", "User", "Entitlement", "New-Style"],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/users/USER_ID/entitlement/ENTITLEMENT_ID",
      "connector_methods": ["obp.getBankAccountsForUser"]
    },
    {
      "operation_id": "OBPv4.0.0-getAtm",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getAtm"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/atms/ATM_ID",
      "summary": "Get Bank ATM",
      "description": "<p>Returns information about ATM for a single bank specified by BANK_ID and ATM_ID including:</p>\n<ul>\n<li>Address</li>\n<li>Geo Location</li>\n<li>License the data under this endpoint is released under<br />\nAuthentication is Optional</li>\n</ul>\n<p><strong>URL Parameters:</strong></p>\n<p><a href=\"/glossary#atm_id\">ATM_ID</a>: atme0352a-9a0f-4bfa-b30b-9003aa467f51</p>\n<p><a href=\"/glossary#Bank.bank_id\">BANK_ID</a>: gh.29.uk</p>\n<p><strong>JSON response body fields:</strong></p>\n<p><a href=\"/glossary#accessibility_features\"><strong>accessibility_features</strong></a>: [&quot;ATAC&quot;,&quot;ATAD&quot;]</p>\n<p><a href=\"/glossary#address\"><strong>address</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>balance_inquiry_fee</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>bank_id</strong></a>: gh.29.uk</p>\n<p><a href=\"/glossary#\"><strong>branch_identification</strong></a>: branch_identification</p>\n<p><a href=\"/glossary#\"><strong>cash_withdrawal_international_fee</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>cash_withdrawal_national_fee</strong></a>:</p>\n<p><a href=\"/glossary#city\"><strong>city</strong></a>:</p>\n<p><a href=\"/glossary#closing_time\"><strong>closing_time</strong></a>: 2020-01-27</p>\n<p><a href=\"/glossary#country_code\"><strong>country_code</strong></a>: 1254</p>\n<p><a href=\"/glossary#county\"><strong>county</strong></a>:</p>\n<p><a href=\"/glossary#friday\"><strong>friday</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>has_deposit_capability</strong></a>: true</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n<p><a href=\"/glossary#\"><strong>is_accessible</strong></a>: true</p>\n<p><a href=\"/glossary#latitude\"><strong>latitude</strong></a>: 38.8951</p>\n<p><a href=\"/glossary#license\"><strong>license</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>line_1</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>line_2</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>line_3</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>located_at</strong></a>:</p>\n<p><a href=\"/glossary#location\"><strong>location</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>location_categories</strong></a>: location_categories</p>\n<p><a href=\"/glossary#longitude\"><strong>longitude</strong></a>: -77.0364</p>\n<p><a href=\"/glossary#meta\"><strong>meta</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>minimum_withdrawal</strong></a>: minimum_withdrawal</p>\n<p><a href=\"/glossary#monday\"><strong>monday</strong></a>:</p>\n<p><a href=\"/glossary#more_info\"><strong>more_info</strong></a>: More information about this fee</p>\n<p><a href=\"/glossary#name\"><strong>name</strong></a>: ACCOUNT_MANAGEMENT_FEE</p>\n<p><a href=\"/glossary#\"><strong>notes</strong></a>: notes</p>\n<p><a href=\"/glossary#opening_time\"><strong>opening_time</strong></a>:</p>\n<p><a href=\"/glossary#postcode\"><strong>postcode</strong></a>:</p>\n<p><a href=\"/glossary#saturday\"><strong>saturday</strong></a>:</p>\n<p><a href=\"/glossary#\"><strong>services</strong></a>: services</p>\n<p><a href=\"/glossary#\"><strong>site_identification</strong></a>: site_identification</p>\n<p><a href=\"/glossary#\"><strong>site_name</strong></a>: site_name</p>\n<p><a href=\"/glossary#state\"><strong>state</strong></a>:</p>\n<p><a href=\"/glossary#sunday\"><strong>sunday</strong></a>:</p>\n<p><a href=\"/glossary#supported_currencies\"><strong>supported_currencies</strong></a>: [&quot;EUR&quot;,&quot;MXN&quot;,&quot;USD&quot;]</p>\n<p><a href=\"/glossary#supported_languages\"><strong>supported_languages</strong></a>: [&quot;es&quot;,&quot;fr&quot;,&quot;de&quot;]</p>\n<p><a href=\"/glossary#thursday\"><strong>thursday</strong></a>:</p>\n<p><a href=\"/glossary#tuesday\"><strong>tuesday</strong></a>:</p>\n<p><a href=\"/glossary#wednesday\"><strong>wednesday</strong></a>:</p>\n<p><a href=\"/glossary#id\"><strong>id</strong></a>: d8839721-ad8f-45dd-9f78-2080414b93f9</p>\n",
      "description_markdown": "Returns information about ATM for a single bank specified by BANK_ID and ATM_ID including:\n\n* Address\n* Geo Location\n* License the data under this endpoint is released under\nAuthentication is Optional\n\n\n**URL Parameters:**\n\n[ATM_ID](/glossary#atm_id): atme0352a-9a0f-4bfa-b30b-9003aa467f51\n\n\n\n[BANK_ID](/glossary#Bank.bank_id): gh.29.uk\n\n\n\n\n\n**JSON response body fields:**\n\n\n\n[**accessibility_features**](/glossary#accessibility_features): [\"ATAC\",\"ATAD\"]\n\n\n\n[**address**](/glossary#address): \n\n\n\n[**balance_inquiry_fee**](/glossary#): \n\n\n\n[**bank_id**](/glossary#): gh.29.uk\n\n\n\n[**branch_identification**](/glossary#): branch_identification\n\n\n\n[**cash_withdrawal_international_fee**](/glossary#): \n\n\n\n[**cash_withdrawal_national_fee**](/glossary#): \n\n\n\n[**city**](/glossary#city): \n\n\n\n[**closing_time**](/glossary#closing_time): 2020-01-27\n\n\n\n[**country_code**](/glossary#country_code): 1254\n\n\n\n[**county**](/glossary#county): \n\n\n\n[**friday**](/glossary#friday): \n\n\n\n[**has_deposit_capability**](/glossary#): true\n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n\n[**is_accessible**](/glossary#): true\n\n\n\n[**latitude**](/glossary#latitude): 38.8951\n\n\n\n[**license**](/glossary#license): \n\n\n\n[**line_1**](/glossary#): \n\n\n\n[**line_2**](/glossary#): \n\n\n\n[**line_3**](/glossary#): \n\n\n\n[**located_at**](/glossary#): \n\n\n\n[**location**](/glossary#location): \n\n\n\n[**location_categories**](/glossary#): location_categories\n\n\n\n[**longitude**](/glossary#longitude): -77.0364\n\n\n\n[**meta**](/glossary#meta): \n\n\n\n[**minimum_withdrawal**](/glossary#): minimum_withdrawal\n\n\n\n[**monday**](/glossary#monday): \n\n\n\n[**more_info**](/glossary#more_info): More information about this fee\n\n\n\n[**name**](/glossary#name): ACCOUNT_MANAGEMENT_FEE\n\n\n\n[**notes**](/glossary#): notes\n\n\n\n[**opening_time**](/glossary#opening_time): \n\n\n\n[**postcode**](/glossary#postcode): \n\n\n\n[**saturday**](/glossary#saturday): \n\n\n\n[**services**](/glossary#): services\n\n\n\n[**site_identification**](/glossary#): site_identification\n\n\n\n[**site_name**](/glossary#): site_name\n\n\n\n[**state**](/glossary#state): \n\n\n\n[**sunday**](/glossary#sunday): \n\n\n\n[**supported_currencies**](/glossary#supported_currencies): [\"EUR\",\"MXN\",\"USD\"]\n\n\n\n[**supported_languages**](/glossary#supported_languages): [\"es\",\"fr\",\"de\"]\n\n\n\n[**thursday**](/glossary#thursday): \n\n\n\n[**tuesday**](/glossary#tuesday): \n\n\n\n[**wednesday**](/glossary#wednesday): \n\n\n\n[**id**](/glossary#id): d8839721-ad8f-45dd-9f78-2080414b93f9\n\n\n",
      "success_response_body": {
        "id": "atme0352a-9a0f-4bfa-b30b-9003aa467f51",
        "bank_id": "gh.29.uk",
        "name": "Atm by the Lake",
        "address": {
          "line_1": "No 1 the Road",
          "line_2": "The Place",
          "line_3": "The Hill",
          "city": "Berlin",
          "county": "",
          "state": "Brandenburg",
          "postcode": "13359",
          "country_code": "DE"
        },
        "location": {
          "latitude": 11.45,
          "longitude": 11.45
        },
        "meta": {
          "license": {
            "id": "ODbL-1.0",
            "name": "Open Database License"
          }
        },
        "monday": {
          "opening_time": "10:00",
          "closing_time": "18:00"
        },
        "tuesday": {
          "opening_time": "10:00",
          "closing_time": "18:00"
        },
        "wednesday": {
          "opening_time": "10:00",
          "closing_time": "18:00"
        },
        "thursday": {
          "opening_time": "10:00",
          "closing_time": "18:00"
        },
        "friday": {
          "opening_time": "10:00",
          "closing_time": "18:00"
        },
        "saturday": {
          "opening_time": "10:00",
          "closing_time": "18:00"
        },
        "sunday": {
          "opening_time": "10:00",
          "closing_time": "18:00"
        },
        "is_accessible": "true",
        "located_at": "",
        "more_info": "More information about this fee",
        "has_deposit_capability": "true",
        "supported_languages": ["es", "fr", "de"],
        "services": ["ATBP", "ATBA"],
        "accessibility_features": ["ATAC", "ATAD"],
        "supported_currencies": ["EUR", "MXN", "USD"],
        "notes": ["String1", "String2"],
        "location_categories": ["ATBI", "ATBE"],
        "minimum_withdrawal": "5",
        "branch_identification": "",
        "site_identification": "",
        "site_name": "",
        "cash_withdrawal_national_fee": "",
        "cash_withdrawal_international_fee": "",
        "balance_inquiry_fee": ""
      },
      "error_response_bodies": ["OBP-10001: Incorrect json format.", "OBP-50000: Unknown Error."],
      "tags": ["ATM", "New-Style"],
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "has_deposit_capability": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "site_name": {
            "type": "string"
          },
          "friday": {
            "type": "object",
            "properties": {
              "closing_time": {
                "type": "string"
              },
              "opening_time": {
                "type": "string"
              }
            }
          },
          "id": {
            "type": "string"
          },
          "site_identification": {
            "type": "string"
          },
          "is_accessible": {
            "type": "string"
          },
          "accessibility_features": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "supported_currencies": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "bank_id": {
            "type": "string"
          },
          "monday": {
            "type": "object",
            "properties": {
              "closing_time": {
                "type": "string"
              },
              "opening_time": {
                "type": "string"
              }
            }
          },
          "cash_withdrawal_international_fee": {
            "type": "string"
          },
          "supported_languages": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "balance_inquiry_fee": {
            "type": "string"
          },
          "meta": {
            "type": "object",
            "properties": {
              "license": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "notes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "saturday": {
            "type": "object",
            "properties": {
              "closing_time": {
                "type": "string"
              },
              "opening_time": {
                "type": "string"
              }
            }
          },
          "thursday": {
            "type": "object",
            "properties": {
              "closing_time": {
                "type": "string"
              },
              "opening_time": {
                "type": "string"
              }
            }
          },
          "tuesday": {
            "type": "object",
            "properties": {
              "closing_time": {
                "type": "string"
              },
              "opening_time": {
                "type": "string"
              }
            }
          },
          "wednesday": {
            "type": "object",
            "properties": {
              "closing_time": {
                "type": "string"
              },
              "opening_time": {
                "type": "string"
              }
            }
          },
          "sunday": {
            "type": "object",
            "properties": {
              "closing_time": {
                "type": "string"
              },
              "opening_time": {
                "type": "string"
              }
            }
          },
          "located_at": {
            "type": "string"
          },
          "more_info": {
            "type": "string"
          },
          "address": {
            "type": "object",
            "properties": {
              "city": {
                "type": "string"
              },
              "postcode": {
                "type": "string"
              },
              "line_1": {
                "type": "string"
              },
              "line_2": {
                "type": "string"
              },
              "line_3": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "country_code": {
                "type": "string"
              },
              "county": {
                "type": "string"
              }
            }
          },
          "minimum_withdrawal": {
            "type": "string"
          },
          "branch_identification": {
            "type": "string"
          },
          "location": {
            "type": "object",
            "properties": {
              "longitude": {
                "type": "number"
              },
              "latitude": {
                "type": "number"
              }
            }
          },
          "services": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "cash_withdrawal_national_fee": {
            "type": "string"
          },
          "location_categories": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v5.1.0/banks/BANK_ID/atms/ATM_ID",
      "connector_methods": ["obp.getAtm", "obp.getBankAccountsForUser"]
    }
  ],
  "meta": {
    "response_date": "2023-04-14T08:31:40Z",
    "count": 494
  }
}
